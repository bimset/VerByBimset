/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@firebase/app/dist/index.esm.js":
/*!******************************************************!*\
  !*** ./node_modules/@firebase/app/dist/index.esm.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "firebase": () => (/* binding */ firebase$1)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/util */ "./node_modules/@firebase/util/dist/index.esm.js");
/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/component */ "./node_modules/@firebase/component/dist/index.esm.js");
/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/logger */ "./node_modules/@firebase/logger/dist/index.esm.js");





/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
var ERRORS = (_a = {},
    _a["no-app" /* NO_APP */] = "No Firebase App '{$appName}' has been created - " +
        'call Firebase App.initializeApp()',
    _a["bad-app-name" /* BAD_APP_NAME */] = "Illegal App name: '{$appName}",
    _a["duplicate-app" /* DUPLICATE_APP */] = "Firebase App named '{$appName}' already exists",
    _a["app-deleted" /* APP_DELETED */] = "Firebase App named '{$appName}' already deleted",
    _a["invalid-app-argument" /* INVALID_APP_ARGUMENT */] = 'firebase.{$appName}() takes either no argument or a ' +
        'Firebase App instance.',
    _a["invalid-log-argument" /* INVALID_LOG_ARGUMENT */] = 'First argument to `onLog` must be null or a function.',
    _a);
var ERROR_FACTORY = new _firebase_util__WEBPACK_IMPORTED_MODULE_0__.ErrorFactory('app', 'Firebase', ERRORS);

var name = "@firebase/app";
var version = "0.6.24";

var name$1 = "@firebase/analytics";

var name$2 = "@firebase/app-check";

var name$3 = "@firebase/auth";

var name$4 = "@firebase/database";

var name$5 = "@firebase/functions";

var name$6 = "@firebase/installations";

var name$7 = "@firebase/messaging";

var name$8 = "@firebase/performance";

var name$9 = "@firebase/remote-config";

var name$a = "@firebase/storage";

var name$b = "@firebase/firestore";

var name$c = "firebase-wrapper";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a$1;
var DEFAULT_ENTRY_NAME = '[DEFAULT]';
var PLATFORM_LOG_STRING = (_a$1 = {},
    _a$1[name] = 'fire-core',
    _a$1[name$1] = 'fire-analytics',
    _a$1[name$2] = 'fire-app-check',
    _a$1[name$3] = 'fire-auth',
    _a$1[name$4] = 'fire-rtdb',
    _a$1[name$5] = 'fire-fn',
    _a$1[name$6] = 'fire-iid',
    _a$1[name$7] = 'fire-fcm',
    _a$1[name$8] = 'fire-perf',
    _a$1[name$9] = 'fire-rc',
    _a$1[name$a] = 'fire-gcs',
    _a$1[name$b] = 'fire-fst',
    _a$1['fire-js'] = 'fire-js',
    _a$1[name$c] = 'fire-js-all',
    _a$1);

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var logger = new _firebase_logger__WEBPACK_IMPORTED_MODULE_2__.Logger('@firebase/app');

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Global context object for a collection of services using
 * a shared authentication state.
 */
var FirebaseAppImpl = /** @class */ (function () {
    function FirebaseAppImpl(options, config, firebase_) {
        var _this = this;
        this.firebase_ = firebase_;
        this.isDeleted_ = false;
        this.name_ = config.name;
        this.automaticDataCollectionEnabled_ =
            config.automaticDataCollectionEnabled || false;
        this.options_ = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepCopy)(options);
        this.container = new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.ComponentContainer(config.name);
        // add itself to container
        this._addComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component('app', function () { return _this; }, "PUBLIC" /* PUBLIC */));
        // populate ComponentContainer with existing components
        this.firebase_.INTERNAL.components.forEach(function (component) {
            return _this._addComponent(component);
        });
    }
    Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
        get: function () {
            this.checkDestroyed_();
            return this.automaticDataCollectionEnabled_;
        },
        set: function (val) {
            this.checkDestroyed_();
            this.automaticDataCollectionEnabled_ = val;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
        get: function () {
            this.checkDestroyed_();
            return this.name_;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
        get: function () {
            this.checkDestroyed_();
            return this.options_;
        },
        enumerable: false,
        configurable: true
    });
    FirebaseAppImpl.prototype.delete = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.checkDestroyed_();
            resolve();
        })
            .then(function () {
            _this.firebase_.INTERNAL.removeApp(_this.name_);
            return Promise.all(_this.container.getProviders().map(function (provider) { return provider.delete(); }));
        })
            .then(function () {
            _this.isDeleted_ = true;
        });
    };
    /**
     * Return a service instance associated with this app (creating it
     * on demand), identified by the passed instanceIdentifier.
     *
     * NOTE: Currently storage and functions are the only ones that are leveraging this
     * functionality. They invoke it by calling:
     *
     * ```javascript
     * firebase.app().storage('STORAGE BUCKET ID')
     * ```
     *
     * The service name is passed to this already
     * @internal
     */
    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
        var _a;
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        this.checkDestroyed_();
        // Initialize instance if InstatiationMode is `EXPLICIT`.
        var provider = this.container.getProvider(name);
        if (!provider.isInitialized() &&
            ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === "EXPLICIT" /* EXPLICIT */) {
            provider.initialize();
        }
        // getImmediate will always succeed because _getService is only called for registered components.
        return provider.getImmediate({
            identifier: instanceIdentifier
        });
    };
    /**
     * Remove a service instance from the cache, so we will create a new instance for this service
     * when people try to get this service again.
     *
     * NOTE: currently only firestore is using this functionality to support firestore shutdown.
     *
     * @param name The service name
     * @param instanceIdentifier instance identifier in case multiple instances are allowed
     * @internal
     */
    FirebaseAppImpl.prototype._removeServiceInstance = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        this.container.getProvider(name).clearInstance(instanceIdentifier);
    };
    /**
     * @param component the component being added to this app's container
     */
    FirebaseAppImpl.prototype._addComponent = function (component) {
        try {
            this.container.addComponent(component);
        }
        catch (e) {
            logger.debug("Component " + component.name + " failed to register with FirebaseApp " + this.name, e);
        }
    };
    FirebaseAppImpl.prototype._addOrOverwriteComponent = function (component) {
        this.container.addOrOverwriteComponent(component);
    };
    FirebaseAppImpl.prototype.toJSON = function () {
        return {
            name: this.name,
            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,
            options: this.options
        };
    };
    /**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */
    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
        if (this.isDeleted_) {
            throw ERROR_FACTORY.create("app-deleted" /* APP_DELETED */, { appName: this.name_ });
        }
    };
    return FirebaseAppImpl;
}());
// Prevent dead-code elimination of these methods w/o invalid property
// copying.
(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||
    FirebaseAppImpl.prototype.delete ||
    console.log('dc');

var version$1 = "8.6.5";

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Because auth can't share code with other components, we attach the utility functions
 * in an internal namespace to share code.
 * This function return a firebase namespace object without
 * any utility functions, so it can be shared between the regular firebaseNamespace and
 * the lite version.
 */
function createFirebaseNamespaceCore(firebaseAppImpl) {
    var apps = {};
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    var components = new Map();
    // A namespace is a plain JavaScript Object.
    var namespace = {
        // Hack to prevent Babel from modifying the object returned
        // as the firebase namespace.
        // @ts-ignore
        __esModule: true,
        initializeApp: initializeApp,
        // @ts-ignore
        app: app,
        registerVersion: registerVersion,
        setLogLevel: _firebase_logger__WEBPACK_IMPORTED_MODULE_2__.setLogLevel,
        onLog: onLog,
        // @ts-ignore
        apps: null,
        SDK_VERSION: version$1,
        INTERNAL: {
            registerComponent: registerComponent,
            removeApp: removeApp,
            components: components,
            useAsService: useAsService
        }
    };
    // Inject a circular default export to allow Babel users who were previously
    // using:
    //
    //   import firebase from 'firebase';
    //   which becomes: var firebase = require('firebase').default;
    //
    // instead of
    //
    //   import * as firebase from 'firebase';
    //   which becomes: var firebase = require('firebase');
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    namespace['default'] = namespace;
    // firebase.apps is a read-only getter.
    Object.defineProperty(namespace, 'apps', {
        get: getApps
    });
    /**
     * Called by App.delete() - but before any services associated with the App
     * are deleted.
     */
    function removeApp(name) {
        delete apps[name];
    }
    /**
     * Get the App object for a given name (or DEFAULT).
     */
    function app(name) {
        name = name || DEFAULT_ENTRY_NAME;
        if (!(0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.contains)(apps, name)) {
            throw ERROR_FACTORY.create("no-app" /* NO_APP */, { appName: name });
        }
        return apps[name];
    }
    // @ts-ignore
    app['App'] = firebaseAppImpl;
    function initializeApp(options, rawConfig) {
        if (rawConfig === void 0) { rawConfig = {}; }
        if (typeof rawConfig !== 'object' || rawConfig === null) {
            var name_1 = rawConfig;
            rawConfig = { name: name_1 };
        }
        var config = rawConfig;
        if (config.name === undefined) {
            config.name = DEFAULT_ENTRY_NAME;
        }
        var name = config.name;
        if (typeof name !== 'string' || !name) {
            throw ERROR_FACTORY.create("bad-app-name" /* BAD_APP_NAME */, {
                appName: String(name)
            });
        }
        if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.contains)(apps, name)) {
            throw ERROR_FACTORY.create("duplicate-app" /* DUPLICATE_APP */, { appName: name });
        }
        var app = new firebaseAppImpl(options, config, namespace);
        apps[name] = app;
        return app;
    }
    /*
     * Return an array of all the non-deleted FirebaseApps.
     */
    function getApps() {
        // Make a copy so caller cannot mutate the apps list.
        return Object.keys(apps).map(function (name) { return apps[name]; });
    }
    function registerComponent(component) {
        var componentName = component.name;
        if (components.has(componentName)) {
            logger.debug("There were multiple attempts to register component " + componentName + ".");
            return component.type === "PUBLIC" /* PUBLIC */
                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
                    namespace[componentName]
                : null;
        }
        components.set(componentName, component);
        // create service namespace for public components
        if (component.type === "PUBLIC" /* PUBLIC */) {
            // The Service namespace is an accessor function ...
            var serviceNamespace = function (appArg) {
                if (appArg === void 0) { appArg = app(); }
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                if (typeof appArg[componentName] !== 'function') {
                    // Invalid argument.
                    // This happens in the following case: firebase.storage('gs:/')
                    throw ERROR_FACTORY.create("invalid-app-argument" /* INVALID_APP_ARGUMENT */, {
                        appName: componentName
                    });
                }
                // Forward service instance lookup to the FirebaseApp.
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                return appArg[componentName]();
            };
            // ... and a container for service-level properties.
            if (component.serviceProps !== undefined) {
                (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend)(serviceNamespace, component.serviceProps);
            }
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            namespace[componentName] = serviceNamespace;
            // Patch the FirebaseAppImpl prototype
            // eslint-disable-next-line @typescript-eslint/no-explicit-any
            firebaseAppImpl.prototype[componentName] =
                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'
                // option added to the no-explicit-any rule when ESlint releases it.
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    var serviceFxn = this._getService.bind(this, componentName);
                    return serviceFxn.apply(this, component.multipleInstances ? args : []);
                };
        }
        // add the component to existing app instances
        for (var _i = 0, _a = Object.keys(apps); _i < _a.length; _i++) {
            var appName = _a[_i];
            apps[appName]._addComponent(component);
        }
        return component.type === "PUBLIC" /* PUBLIC */
            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any
                namespace[componentName]
            : null;
    }
    function registerVersion(libraryKeyOrName, version, variant) {
        var _a;
        // TODO: We can use this check to whitelist strings when/if we set up
        // a good whitelist system.
        var library = (_a = PLATFORM_LOG_STRING[libraryKeyOrName]) !== null && _a !== void 0 ? _a : libraryKeyOrName;
        if (variant) {
            library += "-" + variant;
        }
        var libraryMismatch = library.match(/\s|\//);
        var versionMismatch = version.match(/\s|\//);
        if (libraryMismatch || versionMismatch) {
            var warning = [
                "Unable to register library \"" + library + "\" with version \"" + version + "\":"
            ];
            if (libraryMismatch) {
                warning.push("library name \"" + library + "\" contains illegal characters (whitespace or \"/\")");
            }
            if (libraryMismatch && versionMismatch) {
                warning.push('and');
            }
            if (versionMismatch) {
                warning.push("version name \"" + version + "\" contains illegal characters (whitespace or \"/\")");
            }
            logger.warn(warning.join(' '));
            return;
        }
        registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component(library + "-version", function () { return ({ library: library, version: version }); }, "VERSION" /* VERSION */));
    }
    function onLog(logCallback, options) {
        if (logCallback !== null && typeof logCallback !== 'function') {
            throw ERROR_FACTORY.create("invalid-log-argument" /* INVALID_LOG_ARGUMENT */);
        }
        (0,_firebase_logger__WEBPACK_IMPORTED_MODULE_2__.setUserLogHandler)(logCallback, options);
    }
    // Map the requested service to a registered service name
    // (used to map auth to serverAuth service when needed).
    function useAsService(app, name) {
        if (name === 'serverAuth') {
            return null;
        }
        var useService = name;
        return useService;
    }
    return namespace;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */
function createFirebaseNamespace() {
    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
    namespace.INTERNAL = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__assign)({}, namespace.INTERNAL), { createFirebaseNamespace: createFirebaseNamespace,
        extendNamespace: extendNamespace,
        createSubscribe: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.createSubscribe,
        ErrorFactory: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.ErrorFactory,
        deepExtend: _firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend });
    /**
     * Patch the top-level firebase namespace with additional properties.
     *
     * firebase.INTERNAL.extendNamespace()
     */
    function extendNamespace(props) {
        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.deepExtend)(namespace, props);
    }
    return namespace;
}
var firebase = createFirebaseNamespace();

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var PlatformLoggerService = /** @class */ (function () {
    function PlatformLoggerService(container) {
        this.container = container;
    }
    // In initial implementation, this will be called by installations on
    // auth token refresh, and installations will send this string.
    PlatformLoggerService.prototype.getPlatformInfoString = function () {
        var providers = this.container.getProviders();
        // Loop through providers and get library/version pairs from any that are
        // version components.
        return providers
            .map(function (provider) {
            if (isVersionServiceProvider(provider)) {
                var service = provider.getImmediate();
                return service.library + "/" + service.version;
            }
            else {
                return null;
            }
        })
            .filter(function (logString) { return logString; })
            .join(' ');
    };
    return PlatformLoggerService;
}());
/**
 *
 * @param provider check if this provider provides a VersionService
 *
 * NOTE: Using Provider<'app-version'> is a hack to indicate that the provider
 * provides VersionService. The provider is not necessarily a 'app-version'
 * provider.
 */
function isVersionServiceProvider(provider) {
    var component = provider.getComponent();
    return (component === null || component === void 0 ? void 0 : component.type) === "VERSION" /* VERSION */;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function registerCoreComponents(firebase, variant) {
    firebase.INTERNAL.registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_1__.Component('platform-logger', function (container) { return new PlatformLoggerService(container); }, "PRIVATE" /* PRIVATE */));
    // Register `app` package.
    firebase.registerVersion(name, version, variant);
    // Register platform SDK identifier (no version).
    firebase.registerVersion('fire-js', '');
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Firebase Lite detection test
// eslint-disable-next-line @typescript-eslint/no-explicit-any
if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isBrowser)() && self.firebase !== undefined) {
    logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");
    // eslint-disable-next-line
    var sdkVersion = self.firebase.SDK_VERSION;
    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
        logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
    }
}
var initializeApp = firebase.initializeApp;
// TODO: This disable can be removed and the 'ignoreRestArgs' option added to
// the no-explicit-any rule when ESlint releases it.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
firebase.initializeApp = function () {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    // Environment check before initializing app
    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
    // in @firebase/logger
    if ((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isNode)()) {
        logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the @rollup/plugin-node-resolve plugin and specify \"main\"\n      as the first item in \"mainFields\", e.g. ['main', 'module'].\n      https://github.com/rollup/@rollup/plugin-node-resolve\n      ");
    }
    return initializeApp.apply(undefined, args);
};
var firebase$1 = firebase;
registerCoreComponents(firebase$1);

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (firebase$1);

//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/component/dist/index.esm.js":
/*!************************************************************!*\
  !*** ./node_modules/@firebase/component/dist/index.esm.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Component": () => (/* binding */ Component),
/* harmony export */   "ComponentContainer": () => (/* binding */ ComponentContainer),
/* harmony export */   "Provider": () => (/* binding */ Provider)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/util */ "./node_modules/@firebase/util/dist/index.esm.js");



/**
 * Component for service name T, e.g. `auth`, `auth-internal`
 */
var Component = /** @class */ (function () {
    /**
     *
     * @param name The public service name, e.g. app, auth, firestore, database
     * @param instanceFactory Service factory responsible for creating the public interface
     * @param type whether the service provided by the component is public or private
     */
    function Component(name, instanceFactory, type) {
        this.name = name;
        this.instanceFactory = instanceFactory;
        this.type = type;
        this.multipleInstances = false;
        /**
         * Properties to be added to the service namespace
         */
        this.serviceProps = {};
        this.instantiationMode = "LAZY" /* LAZY */;
        this.onInstanceCreated = null;
    }
    Component.prototype.setInstantiationMode = function (mode) {
        this.instantiationMode = mode;
        return this;
    };
    Component.prototype.setMultipleInstances = function (multipleInstances) {
        this.multipleInstances = multipleInstances;
        return this;
    };
    Component.prototype.setServiceProps = function (props) {
        this.serviceProps = props;
        return this;
    };
    Component.prototype.setInstanceCreatedCallback = function (callback) {
        this.onInstanceCreated = callback;
        return this;
    };
    return Component;
}());

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DEFAULT_ENTRY_NAME = '[DEFAULT]';

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provider for instance for service name T, e.g. 'auth', 'auth-internal'
 * NameServiceMapping[T] is an alias for the type of the instance
 */
var Provider = /** @class */ (function () {
    function Provider(name, container) {
        this.name = name;
        this.container = container;
        this.component = null;
        this.instances = new Map();
        this.instancesDeferred = new Map();
        this.onInitCallbacks = new Set();
    }
    /**
     * @param identifier A provider can provide mulitple instances of a service
     * if this.component.multipleInstances is true.
     */
    Provider.prototype.get = function (identifier) {
        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
        // if multipleInstances is not supported, use the default name
        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
        if (!this.instancesDeferred.has(normalizedIdentifier)) {
            var deferred = new _firebase_util__WEBPACK_IMPORTED_MODULE_0__.Deferred();
            this.instancesDeferred.set(normalizedIdentifier, deferred);
            if (this.isInitialized(normalizedIdentifier) ||
                this.shouldAutoInitialize()) {
                // initialize the service if it can be auto-initialized
                try {
                    var instance = this.getOrInitializeService({
                        instanceIdentifier: normalizedIdentifier
                    });
                    if (instance) {
                        deferred.resolve(instance);
                    }
                }
                catch (e) {
                    // when the instance factory throws an exception during get(), it should not cause
                    // a fatal error. We just return the unresolved promise in this case.
                }
            }
        }
        return this.instancesDeferred.get(normalizedIdentifier).promise;
    };
    Provider.prototype.getImmediate = function (options) {
        var _a, _b;
        var identifier = (_a = options === null || options === void 0 ? void 0 : options.identifier) !== null && _a !== void 0 ? _a : DEFAULT_ENTRY_NAME;
        var optional = (_b = options === null || options === void 0 ? void 0 : options.optional) !== null && _b !== void 0 ? _b : false;
        // if multipleInstances is not supported, use the default name
        var normalizedIdentifier = this.normalizeInstanceIdentifier(identifier);
        if (this.isInitialized(normalizedIdentifier) ||
            this.shouldAutoInitialize()) {
            try {
                return this.getOrInitializeService({
                    instanceIdentifier: normalizedIdentifier
                });
            }
            catch (e) {
                if (optional) {
                    return null;
                }
                else {
                    throw e;
                }
            }
        }
        else {
            // In case a component is not initialized and should/can not be auto-initialized at the moment, return null if the optional flag is set, or throw
            if (optional) {
                return null;
            }
            else {
                throw Error("Service " + this.name + " is not available");
            }
        }
    };
    Provider.prototype.getComponent = function () {
        return this.component;
    };
    Provider.prototype.setComponent = function (component) {
        var e_1, _a;
        if (component.name !== this.name) {
            throw Error("Mismatching Component " + component.name + " for Provider " + this.name + ".");
        }
        if (this.component) {
            throw Error("Component for " + this.name + " has already been provided");
        }
        this.component = component;
        // return early without attempting to initialize the component if the component requires explicit initialization (calling `Provider.initialize()`)
        if (!this.shouldAutoInitialize()) {
            return;
        }
        // if the service is eager, initialize the default instance
        if (isComponentEager(component)) {
            try {
                this.getOrInitializeService({ instanceIdentifier: DEFAULT_ENTRY_NAME });
            }
            catch (e) {
                // when the instance factory for an eager Component throws an exception during the eager
                // initialization, it should not cause a fatal error.
                // TODO: Investigate if we need to make it configurable, because some component may want to cause
                // a fatal error in this case?
            }
        }
        try {
            // Create service instances for the pending promises and resolve them
            // NOTE: if this.multipleInstances is false, only the default instance will be created
            // and all promises with resolve with it regardless of the identifier.
            for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(this.instancesDeferred.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var _d = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_c.value, 2), instanceIdentifier = _d[0], instanceDeferred = _d[1];
                var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
                try {
                    // `getOrInitializeService()` should always return a valid instance since a component is guaranteed. use ! to make typescript happy.
                    var instance = this.getOrInitializeService({
                        instanceIdentifier: normalizedIdentifier
                    });
                    instanceDeferred.resolve(instance);
                }
                catch (e) {
                    // when the instance factory throws an exception, it should not cause
                    // a fatal error. We just leave the promise unresolved.
                }
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
    };
    Provider.prototype.clearInstance = function (identifier) {
        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
        this.instancesDeferred.delete(identifier);
        this.instances.delete(identifier);
    };
    // app.delete() will call this method on every provider to delete the services
    // TODO: should we mark the provider as deleted?
    Provider.prototype.delete = function () {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__awaiter)(this, void 0, void 0, function () {
            var services;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__generator)(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        services = Array.from(this.instances.values());
                        return [4 /*yield*/, Promise.all((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_1__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(services
                                .filter(function (service) { return 'INTERNAL' in service; }) // legacy services
                                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                                .map(function (service) { return service.INTERNAL.delete(); }))), (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(services
                                .filter(function (service) { return '_delete' in service; }) // modularized services
                                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                                .map(function (service) { return service._delete(); }))))];
                    case 1:
                        _a.sent();
                        return [2 /*return*/];
                }
            });
        });
    };
    Provider.prototype.isComponentSet = function () {
        return this.component != null;
    };
    Provider.prototype.isInitialized = function (identifier) {
        if (identifier === void 0) { identifier = DEFAULT_ENTRY_NAME; }
        return this.instances.has(identifier);
    };
    Provider.prototype.initialize = function (opts) {
        var e_2, _a;
        if (opts === void 0) { opts = {}; }
        var _b = opts.instanceIdentifier, instanceIdentifier = _b === void 0 ? DEFAULT_ENTRY_NAME : _b, _c = opts.options, options = _c === void 0 ? {} : _c;
        var normalizedIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier);
        if (this.isInitialized(normalizedIdentifier)) {
            throw Error(this.name + "(" + normalizedIdentifier + ") has already been initialized");
        }
        if (!this.isComponentSet()) {
            throw Error("Component " + this.name + " has not been registered yet");
        }
        var instance = this.getOrInitializeService({
            instanceIdentifier: normalizedIdentifier,
            options: options
        });
        try {
            // resolve any pending promise waiting for the service instance
            for (var _d = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(this.instancesDeferred.entries()), _e = _d.next(); !_e.done; _e = _d.next()) {
                var _f = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__read)(_e.value, 2), instanceIdentifier_1 = _f[0], instanceDeferred = _f[1];
                var normalizedDeferredIdentifier = this.normalizeInstanceIdentifier(instanceIdentifier_1);
                if (normalizedIdentifier === normalizedDeferredIdentifier) {
                    instanceDeferred.resolve(instance);
                }
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);
            }
            finally { if (e_2) throw e_2.error; }
        }
        this.invokeOnInitCallbacks(instance, normalizedIdentifier);
        return instance;
    };
    /**
     *
     * @param callback - a function that will be invoked  after the provider has been initialized by calling provider.initialize().
     * The function is invoked SYNCHRONOUSLY, so it should not execute any longrunning tasks in order to not block the program.
     *
     * @returns a function to unregister the callback
     */
    Provider.prototype.onInit = function (callback) {
        var _this = this;
        this.onInitCallbacks.add(callback);
        return function () {
            _this.onInitCallbacks.delete(callback);
        };
    };
    /**
     * Invoke onInit callbacks synchronously
     * @param instance the service instance`
     */
    Provider.prototype.invokeOnInitCallbacks = function (instance, identifier) {
        var e_3, _a;
        try {
            for (var _b = (0,tslib__WEBPACK_IMPORTED_MODULE_1__.__values)(this.onInitCallbacks), _c = _b.next(); !_c.done; _c = _b.next()) {
                var callback = _c.value;
                try {
                    callback(instance, identifier);
                }
                catch (_d) {
                    // ignore errors in the onInit callback
                }
            }
        }
        catch (e_3_1) { e_3 = { error: e_3_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_3) throw e_3.error; }
        }
    };
    Provider.prototype.getOrInitializeService = function (_a) {
        var instanceIdentifier = _a.instanceIdentifier, _b = _a.options, options = _b === void 0 ? {} : _b;
        var instance = this.instances.get(instanceIdentifier);
        if (!instance && this.component) {
            instance = this.component.instanceFactory(this.container, {
                instanceIdentifier: normalizeIdentifierForFactory(instanceIdentifier),
                options: options
            });
            this.instances.set(instanceIdentifier, instance);
            /**
             * Order is important
             * onInstanceCreated() should be called after this.instances.set(instanceIdentifier, instance); which
             * makes `isInitialized()` return true.
             */
            if (this.component.onInstanceCreated) {
                try {
                    this.component.onInstanceCreated(this.container, instanceIdentifier, instance);
                }
                catch (_c) {
                    // ignore errors in the onInstanceCreatedCallback
                }
            }
        }
        return instance || null;
    };
    Provider.prototype.normalizeInstanceIdentifier = function (identifier) {
        if (this.component) {
            return this.component.multipleInstances ? identifier : DEFAULT_ENTRY_NAME;
        }
        else {
            return identifier; // assume multiple instances are supported before the component is provided.
        }
    };
    Provider.prototype.shouldAutoInitialize = function () {
        return (!!this.component &&
            this.component.instantiationMode !== "EXPLICIT" /* EXPLICIT */);
    };
    return Provider;
}());
// undefined should be passed to the service factory for the default instance
function normalizeIdentifierForFactory(identifier) {
    return identifier === DEFAULT_ENTRY_NAME ? undefined : identifier;
}
function isComponentEager(component) {
    return component.instantiationMode === "EAGER" /* EAGER */;
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * ComponentContainer that provides Providers for service name T, e.g. `auth`, `auth-internal`
 */
var ComponentContainer = /** @class */ (function () {
    function ComponentContainer(name) {
        this.name = name;
        this.providers = new Map();
    }
    /**
     *
     * @param component Component being added
     * @param overwrite When a component with the same name has already been registered,
     * if overwrite is true: overwrite the existing component with the new component and create a new
     * provider with the new component. It can be useful in tests where you want to use different mocks
     * for different tests.
     * if overwrite is false: throw an exception
     */
    ComponentContainer.prototype.addComponent = function (component) {
        var provider = this.getProvider(component.name);
        if (provider.isComponentSet()) {
            throw new Error("Component " + component.name + " has already been registered with " + this.name);
        }
        provider.setComponent(component);
    };
    ComponentContainer.prototype.addOrOverwriteComponent = function (component) {
        var provider = this.getProvider(component.name);
        if (provider.isComponentSet()) {
            // delete the existing provider from the container, so we can register the new component
            this.providers.delete(component.name);
        }
        this.addComponent(component);
    };
    /**
     * getProvider provides a type safe interface where it can only be called with a field name
     * present in NameServiceMapping interface.
     *
     * Firebase SDKs providing services should extend NameServiceMapping interface to register
     * themselves.
     */
    ComponentContainer.prototype.getProvider = function (name) {
        if (this.providers.has(name)) {
            return this.providers.get(name);
        }
        // create a Provider for a service that hasn't registered with Firebase
        var provider = new Provider(name, this);
        this.providers.set(name, provider);
        return provider;
    };
    ComponentContainer.prototype.getProviders = function () {
        return Array.from(this.providers.values());
    };
    return ComponentContainer;
}());


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/firestore/dist/esm5/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/@firebase/firestore/dist/esm5/index.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "registerFirestore": () => (/* binding */ d)
/* harmony export */ });
/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ "./node_modules/@firebase/app/dist/index.esm.js");
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/util */ "./node_modules/@firebase/util/dist/index.esm.js");
/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/logger */ "./node_modules/@firebase/logger/dist/index.esm.js");
/* harmony import */ var _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @firebase/webchannel-wrapper */ "./node_modules/@firebase/webchannel-wrapper/dist/index.esm.js");
/* harmony import */ var _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./prebuilt-109c6673-0f51e182.js */ "./node_modules/@firebase/firestore/dist/esm5/prebuilt-109c6673-0f51e182.js");
/* harmony import */ var _firebase_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @firebase/component */ "./node_modules/@firebase/component/dist/index.esm.js");














var P = {
    Firestore: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.q,
    GeoPoint: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.D,
    Timestamp: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.O,
    Blob: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.a,
    Transaction: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.K,
    WriteBatch: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.j,
    DocumentReference: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.G,
    DocumentSnapshot: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.Y,
    Query: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.Z,
    QueryDocumentSnapshot: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.X,
    QuerySnapshot: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.e,
    CollectionReference: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.n,
    FieldPath: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.i,
    FieldValue: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.r,
    setLogLevel: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.Q,
    CACHE_SIZE_UNLIMITED: _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.p
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Registers the main Firestore build with the components framework.
 * Persistence can be enabled via `firebase.firestore().enablePersistence()`.
 */
function d(e) {
    !
    /**
 * Configures Firestore as part of the Firebase SDK by calling registerService.
 *
 * @param firebase - The FirebaseNamespace to register Firestore with
 * @param firestoreFactory - A factory function that returns a new Firestore
 *    instance.
 */
    function(e, r) {
        e.INTERNAL.registerComponent(new _firebase_component__WEBPACK_IMPORTED_MODULE_5__.Component("firestore", (function(e) {
            var t = e.getProvider("app").getImmediate();
            return r(t, e.getProvider("auth-internal"));
        }), "PUBLIC" /* PUBLIC */).setServiceProps(Object.assign({}, P)));
    }(e, (function(e, s) {
        return new _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.q(e, new _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.E(e, s), new _prebuilt_109c6673_0f51e182_js__WEBPACK_IMPORTED_MODULE_4__.B);
    })), e.registerVersion("@firebase/firestore", "2.3.4");
}

d(_firebase_app__WEBPACK_IMPORTED_MODULE_0__.default);


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/@firebase/firestore/dist/esm5/prebuilt-109c6673-0f51e182.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@firebase/firestore/dist/esm5/prebuilt-109c6673-0f51e182.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "B": () => (/* binding */ Tc),
/* harmony export */   "D": () => (/* binding */ pa),
/* harmony export */   "E": () => (/* binding */ sa),
/* harmony export */   "G": () => (/* binding */ kc),
/* harmony export */   "K": () => (/* binding */ Nc),
/* harmony export */   "O": () => (/* binding */ B),
/* harmony export */   "Q": () => (/* binding */ Sc),
/* harmony export */   "X": () => (/* binding */ Oc),
/* harmony export */   "Y": () => (/* binding */ Lc),
/* harmony export */   "Z": () => (/* binding */ Pc),
/* harmony export */   "a": () => (/* binding */ Ic),
/* harmony export */   "c": () => (/* binding */ Kc),
/* harmony export */   "e": () => (/* binding */ Mc),
/* harmony export */   "i": () => (/* binding */ Uc),
/* harmony export */   "j": () => (/* binding */ Dc),
/* harmony export */   "n": () => (/* binding */ Vc),
/* harmony export */   "o": () => (/* binding */ jc),
/* harmony export */   "p": () => (/* binding */ oa),
/* harmony export */   "q": () => (/* binding */ Ec),
/* harmony export */   "r": () => (/* binding */ Bc)
/* harmony export */ });
/* harmony import */ var _firebase_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/util */ "./node_modules/@firebase/util/dist/index.esm.js");
/* harmony import */ var _firebase_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @firebase/logger */ "./node_modules/@firebase/logger/dist/index.esm.js");
/* harmony import */ var _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @firebase/webchannel-wrapper */ "./node_modules/@firebase/webchannel-wrapper/dist/index.esm.js");
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");








/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * `ListenSequence` is a monotonic sequence. It is initialized with a minimum value to
 * exceed. All subsequent calls to next will return increasing values. If provided with a
 * `SequenceNumberSyncer`, it will additionally bump its next value when told of a new value, as
 * well as write out sequence numbers that it produces via `next()`.
 */ var _ = /** @class */ function() {
    function t(t, e) {
        var n = this;
        this.previousValue = t, e && (e.sequenceNumberHandler = function(t) {
            return n.t(t);
        }, this.i = function(t) {
            return e.writeSequenceNumber(t);
        });
    }
    return t.prototype.t = function(t) {
        return this.previousValue = Math.max(t, this.previousValue), this.previousValue;
    }, t.prototype.next = function() {
        var t = ++this.previousValue;
        return this.i && this.i(t), t;
    }, t;
}();

_.o = -1;

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var S = {
    // Causes are copied from:
    // https://github.com/grpc/grpc/blob/bceec94ea4fc5f0085d81235d8e1c06798dc341a/include/grpc%2B%2B/impl/codegen/status_code_enum.h
    /** Not an error; returned on success. */
    OK: "ok",
    /** The operation was cancelled (typically by the caller). */
    CANCELLED: "cancelled",
    /** Unknown error or an error from a different error domain. */
    UNKNOWN: "unknown",
    /**
     * Client specified an invalid argument. Note that this differs from
     * FAILED_PRECONDITION. INVALID_ARGUMENT indicates arguments that are
     * problematic regardless of the state of the system (e.g., a malformed file
     * name).
     */
    INVALID_ARGUMENT: "invalid-argument",
    /**
     * Deadline expired before operation could complete. For operations that
     * change the state of the system, this error may be returned even if the
     * operation has completed successfully. For example, a successful response
     * from a server could have been delayed long enough for the deadline to
     * expire.
     */
    DEADLINE_EXCEEDED: "deadline-exceeded",
    /** Some requested entity (e.g., file or directory) was not found. */
    NOT_FOUND: "not-found",
    /**
     * Some entity that we attempted to create (e.g., file or directory) already
     * exists.
     */
    ALREADY_EXISTS: "already-exists",
    /**
     * The caller does not have permission to execute the specified operation.
     * PERMISSION_DENIED must not be used for rejections caused by exhausting
     * some resource (use RESOURCE_EXHAUSTED instead for those errors).
     * PERMISSION_DENIED must not be used if the caller can not be identified
     * (use UNAUTHENTICATED instead for those errors).
     */
    PERMISSION_DENIED: "permission-denied",
    /**
     * The request does not have valid authentication credentials for the
     * operation.
     */
    UNAUTHENTICATED: "unauthenticated",
    /**
     * Some resource has been exhausted, perhaps a per-user quota, or perhaps the
     * entire file system is out of space.
     */
    RESOURCE_EXHAUSTED: "resource-exhausted",
    /**
     * Operation was rejected because the system is not in a state required for
     * the operation's execution. For example, directory to be deleted may be
     * non-empty, an rmdir operation is applied to a non-directory, etc.
     *
     * A litmus test that may help a service implementor in deciding
     * between FAILED_PRECONDITION, ABORTED, and UNAVAILABLE:
     *  (a) Use UNAVAILABLE if the client can retry just the failing call.
     *  (b) Use ABORTED if the client should retry at a higher-level
     *      (e.g., restarting a read-modify-write sequence).
     *  (c) Use FAILED_PRECONDITION if the client should not retry until
     *      the system state has been explicitly fixed. E.g., if an "rmdir"
     *      fails because the directory is non-empty, FAILED_PRECONDITION
     *      should be returned since the client should not retry unless
     *      they have first fixed up the directory by deleting files from it.
     *  (d) Use FAILED_PRECONDITION if the client performs conditional
     *      REST Get/Update/Delete on a resource and the resource on the
     *      server does not match the condition. E.g., conflicting
     *      read-modify-write on the same resource.
     */
    FAILED_PRECONDITION: "failed-precondition",
    /**
     * The operation was aborted, typically due to a concurrency issue like
     * sequencer check failures, transaction aborts, etc.
     *
     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
     * and UNAVAILABLE.
     */
    ABORTED: "aborted",
    /**
     * Operation was attempted past the valid range. E.g., seeking or reading
     * past end of file.
     *
     * Unlike INVALID_ARGUMENT, this error indicates a problem that may be fixed
     * if the system state changes. For example, a 32-bit file system will
     * generate INVALID_ARGUMENT if asked to read at an offset that is not in the
     * range [0,2^32-1], but it will generate OUT_OF_RANGE if asked to read from
     * an offset past the current file size.
     *
     * There is a fair bit of overlap between FAILED_PRECONDITION and
     * OUT_OF_RANGE. We recommend using OUT_OF_RANGE (the more specific error)
     * when it applies so that callers who are iterating through a space can
     * easily look for an OUT_OF_RANGE error to detect when they are done.
     */
    OUT_OF_RANGE: "out-of-range",
    /** Operation is not implemented or not supported/enabled in this service. */
    UNIMPLEMENTED: "unimplemented",
    /**
     * Internal errors. Means some invariants expected by underlying System has
     * been broken. If you see one of these errors, Something is very broken.
     */
    INTERNAL: "internal",
    /**
     * The service is currently unavailable. This is a most likely a transient
     * condition and may be corrected by retrying with a backoff.
     *
     * See litmus test above for deciding between FAILED_PRECONDITION, ABORTED,
     * and UNAVAILABLE.
     */
    UNAVAILABLE: "unavailable",
    /** Unrecoverable data loss or corruption. */
    DATA_LOSS: "data-loss"
}, N = /** @class */ function(t) {
    /** @hideconstructor */
    function e(
    /**
     * The backend error code associated with this error.
     */
    e, 
    /**
     * A custom error description.
     */
    n) {
        var r = this;
        return (r = t.call(this, n) || this).code = e, r.message = n, 
        /** The custom name for all FirestoreErrors. */
        r.name = "FirebaseError", 
        // HACK: We write a toString property directly because Error is not a real
        // class and so inheritance does not work correctly. We could alternatively
        // do the same "back-door inheritance" trick that FirebaseError does.
        r.toString = function() {
            return r.name + ": [code=" + r.code + "]: " + r.message;
        }, r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(Error), D = new _firebase_logger__WEBPACK_IMPORTED_MODULE_1__.Logger("@firebase/firestore");

/** An error returned by a Firestore operation. */
// Helper methods are needed because variables can't be exported as read/write
function A() {
    return D.logLevel;
}

/**
 * Sets the verbosity of Cloud Firestore logs (debug, error, or silent).
 *
 * @param logLevel - The verbosity you set for activity and error logging. Can
 *   be any of the following values:
 *
 *   <ul>
 *     <li>`debug` for the most verbose logging level, primarily for
 *     debugging.</li>
 *     <li>`error` to log errors only.</li>
 *     <li><code>`silent` to turn off logging.</li>
 *   </ul>
 */ function k(t) {
    for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
    if (D.logLevel <= _firebase_logger__WEBPACK_IMPORTED_MODULE_1__.LogLevel.DEBUG) {
        var r = e.map(R);
        D.debug.apply(D, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ "Firestore (8.6.5): " + t ], r));
    }
}

function x(t) {
    for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
    if (D.logLevel <= _firebase_logger__WEBPACK_IMPORTED_MODULE_1__.LogLevel.ERROR) {
        var r = e.map(R);
        D.error.apply(D, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ "Firestore (8.6.5): " + t ], r));
    }
}

function C(t) {
    for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
    if (D.logLevel <= _firebase_logger__WEBPACK_IMPORTED_MODULE_1__.LogLevel.WARN) {
        var r = e.map(R);
        D.warn.apply(D, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ "Firestore (8.6.5): " + t ], r));
    }
}

/**
 * Converts an additional log parameter to a string representation.
 */ function R(t) {
    if ("string" == typeof t) return t;
    try {
        return e = t, JSON.stringify(e);
    } catch (e) {
        // Converting to JSON failed, just log the object directly
        return t;
    }
    var e;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Unconditionally fails, throwing an Error with the given message.
 * Messages are stripped in production builds.
 *
 * Returns `never` and can be used in expressions:
 * @example
 * let futureVar = fail('not implemented yet');
 */ function L(t) {
    void 0 === t && (t = "Unexpected state");
    // Log the failure in addition to throw an exception, just in case the
    // exception is swallowed.
        var e = "FIRESTORE (8.6.5) INTERNAL ASSERTION FAILED: " + t;
    // NOTE: We don't use FirestoreError here because these are internal failures
    // that cannot be handled by the user. (Also it would create a circular
    // dependency between the error and assert modules which doesn't work.)
        throw x(e), new Error(e)
    /**
 * Fails if the given assertion condition is false, throwing an Error with the
 * given message if it did.
 *
 * Messages are stripped in production builds.
 */;
}

function O(t, e) {
    t || L();
}

/**
 * Casts `obj` to `T`. In non-production builds, verifies that `obj` is an
 * instance of `T` before casting.
 */ function P(t, 
// eslint-disable-next-line @typescript-eslint/no-explicit-any
e) {
    return t;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Generates `nBytes` of random bytes.
 *
 * If `nBytes < 0` , an error will be thrown.
 */ function F(t) {
    // Polyfills for IE and WebWorker by using `self` and `msCrypto` when `crypto` is not available.
    var e = 
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    "undefined" != typeof self && (self.crypto || self.msCrypto), n = new Uint8Array(t);
    if (e && "function" == typeof e.getRandomValues) e.getRandomValues(n); else 
    // Falls back to Math.random
    for (var r = 0; r < t; r++) n[r] = Math.floor(256 * Math.random());
    return n;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var M = /** @class */ function() {
    function t() {}
    return t.u = function() {
        for (
        // Alphanumeric characters
        var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", e = Math.floor(256 / t.length) * t.length, n = ""
        // The largest byte value that is a multiple of `char.length`.
        ; n.length < 20; ) for (var r = F(40), i = 0; i < r.length; ++i) 
        // Only accept values that are [0, maxMultiple), this ensures they can
        // be evenly mapped to indices of `chars` via a modulo operation.
        n.length < 20 && r[i] < e && (n += t.charAt(r[i] % t.length));
        return n;
    }, t;
}();

function V(t, e) {
    return t < e ? -1 : t > e ? 1 : 0;
}

/** Helper to compare arrays using isEqual(). */ function q(t, e, n) {
    return t.length === e.length && t.every((function(t, r) {
        return n(t, e[r]);
    }));
}

/**
 * Returns the immediate lexicographically-following string. This is useful to
 * construct an inclusive range for indexeddb iterators.
 */ function U(t) {
    // Return the input string, with an additional NUL byte appended.
    return t + "\0";
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// The earliest date supported by Firestore timestamps (0001-01-01T00:00:00Z).
/**
 * A `Timestamp` represents a point in time independent of any time zone or
 * calendar, represented as seconds and fractions of seconds at nanosecond
 * resolution in UTC Epoch time.
 *
 * It is encoded using the Proleptic Gregorian Calendar which extends the
 * Gregorian calendar backwards to year one. It is encoded assuming all minutes
 * are 60 seconds long, i.e. leap seconds are "smeared" so that no leap second
 * table is needed for interpretation. Range is from 0001-01-01T00:00:00Z to
 * 9999-12-31T23:59:59.999999999Z.
 *
 * For examples and further specifications, refer to the
 * {@link https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto | Timestamp definition}.
 */ var B = /** @class */ function() {
    /**
     * Creates a new timestamp.
     *
     * @param seconds - The number of seconds of UTC time since Unix epoch
     *     1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
     *     9999-12-31T23:59:59Z inclusive.
     * @param nanoseconds - The non-negative fractions of a second at nanosecond
     *     resolution. Negative second values with fractions must still have
     *     non-negative nanoseconds values that count forward in time. Must be
     *     from 0 to 999,999,999 inclusive.
     */
    function t(
    /**
     * The number of seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z.
     */
    t, 
    /**
     * The fractions of a second at nanosecond resolution.*
     */
    e) {
        if (this.seconds = t, this.nanoseconds = e, e < 0) throw new N(S.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + e);
        if (e >= 1e9) throw new N(S.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + e);
        if (t < -62135596800) throw new N(S.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t);
        // This will break in the year 10,000.
                if (t >= 253402300800) throw new N(S.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t);
    }
    /**
     * Creates a new timestamp with the current date, with millisecond precision.
     *
     * @returns a new timestamp representing the current date.
     */    return t.now = function() {
        return t.fromMillis(Date.now());
    }, 
    /**
     * Creates a new timestamp from the given date.
     *
     * @param date - The date to initialize the `Timestamp` from.
     * @returns A new `Timestamp` representing the same point in time as the given
     *     date.
     */
    t.fromDate = function(e) {
        return t.fromMillis(e.getTime());
    }, 
    /**
     * Creates a new timestamp from the given number of milliseconds.
     *
     * @param milliseconds - Number of milliseconds since Unix epoch
     *     1970-01-01T00:00:00Z.
     * @returns A new `Timestamp` representing the same point in time as the given
     *     number of milliseconds.
     */
    t.fromMillis = function(e) {
        var n = Math.floor(e / 1e3);
        return new t(n, Math.floor(1e6 * (e - 1e3 * n)));
    }, 
    /**
     * Converts a `Timestamp` to a JavaScript `Date` object. This conversion
     * causes a loss of precision since `Date` objects only support millisecond
     * precision.
     *
     * @returns JavaScript `Date` object representing the same point in time as
     *     this `Timestamp`, with millisecond precision.
     */
    t.prototype.toDate = function() {
        return new Date(this.toMillis());
    }, 
    /**
     * Converts a `Timestamp` to a numeric timestamp (in milliseconds since
     * epoch). This operation causes a loss of precision.
     *
     * @returns The point in time corresponding to this timestamp, represented as
     *     the number of milliseconds since Unix epoch 1970-01-01T00:00:00Z.
     */
    t.prototype.toMillis = function() {
        return 1e3 * this.seconds + this.nanoseconds / 1e6;
    }, t.prototype._compareTo = function(t) {
        return this.seconds === t.seconds ? V(this.nanoseconds, t.nanoseconds) : V(this.seconds, t.seconds);
    }, 
    /**
     * Returns true if this `Timestamp` is equal to the provided one.
     *
     * @param other - The `Timestamp` to compare against.
     * @returns true if this `Timestamp` is equal to the provided one.
     */
    t.prototype.isEqual = function(t) {
        return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;
    }, 
    /** Returns a textual representation of this Timestamp. */ t.prototype.toString = function() {
        return "Timestamp(seconds=" + this.seconds + ", nanoseconds=" + this.nanoseconds + ")";
    }, 
    /** Returns a JSON-serializable representation of this Timestamp. */ t.prototype.toJSON = function() {
        return {
            seconds: this.seconds,
            nanoseconds: this.nanoseconds
        };
    }, 
    /**
     * Converts this object to a primitive string, which allows Timestamp objects
     * to be compared using the `>`, `<=`, `>=` and `>` operators.
     */
    t.prototype.valueOf = function() {
        // This method returns a string of the form <seconds>.<nanoseconds> where
        // <seconds> is translated to have a non-negative value and both <seconds>
        // and <nanoseconds> are left-padded with zeroes to be a consistent length.
        // Strings with this format then have a lexiographical ordering that matches
        // the expected ordering. The <seconds> translation is done to avoid having
        // a leading negative sign (i.e. a leading '-' character) in its string
        // representation, which would affect its lexiographical ordering.
        var t = this.seconds - -62135596800;
        // Note: Up to 12 decimal digits are required to represent all valid
        // 'seconds' values.
                return String(t).padStart(12, "0") + "." + String(this.nanoseconds).padStart(9, "0");
    }, t;
}(), j = /** @class */ function() {
    function t(t) {
        this.timestamp = t;
    }
    return t.fromTimestamp = function(e) {
        return new t(e);
    }, t.min = function() {
        return new t(new B(0, 0));
    }, t.prototype.compareTo = function(t) {
        return this.timestamp._compareTo(t.timestamp);
    }, t.prototype.isEqual = function(t) {
        return this.timestamp.isEqual(t.timestamp);
    }, 
    /** Returns a number representation of the version for use in spec tests. */ t.prototype.toMicroseconds = function() {
        // Convert to microseconds.
        return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
    }, t.prototype.toString = function() {
        return "SnapshotVersion(" + this.timestamp.toString() + ")";
    }, t.prototype.toTimestamp = function() {
        return this.timestamp;
    }, t;
}();

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A version of a document in Firestore. This corresponds to the version
 * timestamp, such as update_time or read_time.
 */
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function K(t) {
    var e = 0;
    for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e++;
    return e;
}

function G(t, e) {
    for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);
}

function Q(t) {
    for (var e in t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;
    return !0;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Path represents an ordered sequence of string segments.
 */ var z = /** @class */ function() {
    function t(t, e, n) {
        void 0 === e ? e = 0 : e > t.length && L(), void 0 === n ? n = t.length - e : n > t.length - e && L(), 
        this.segments = t, this.offset = e, this.len = n;
    }
    return Object.defineProperty(t.prototype, "length", {
        get: function() {
            return this.len;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.isEqual = function(e) {
        return 0 === t.comparator(this, e);
    }, t.prototype.child = function(e) {
        var n = this.segments.slice(this.offset, this.limit());
        return e instanceof t ? e.forEach((function(t) {
            n.push(t);
        })) : n.push(e), this.construct(n);
    }, 
    /** The index of one past the last segment of the path. */ t.prototype.limit = function() {
        return this.offset + this.length;
    }, t.prototype.popFirst = function(t) {
        return t = void 0 === t ? 1 : t, this.construct(this.segments, this.offset + t, this.length - t);
    }, t.prototype.popLast = function() {
        return this.construct(this.segments, this.offset, this.length - 1);
    }, t.prototype.firstSegment = function() {
        return this.segments[this.offset];
    }, t.prototype.lastSegment = function() {
        return this.get(this.length - 1);
    }, t.prototype.get = function(t) {
        return this.segments[this.offset + t];
    }, t.prototype.isEmpty = function() {
        return 0 === this.length;
    }, t.prototype.isPrefixOf = function(t) {
        if (t.length < this.length) return !1;
        for (var e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;
        return !0;
    }, t.prototype.isImmediateParentOf = function(t) {
        if (this.length + 1 !== t.length) return !1;
        for (var e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;
        return !0;
    }, t.prototype.forEach = function(t) {
        for (var e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);
    }, t.prototype.toArray = function() {
        return this.segments.slice(this.offset, this.limit());
    }, t.comparator = function(t, e) {
        for (var n = Math.min(t.length, e.length), r = 0; r < n; r++) {
            var i = t.get(r), o = e.get(r);
            if (i < o) return -1;
            if (i > o) return 1;
        }
        return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;
    }, t;
}(), W = /** @class */ function(t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.construct = function(t, n, r) {
        return new e(t, n, r);
    }, e.prototype.canonicalString = function() {
        // NOTE: The client is ignorant of any path segments containing escape
        // sequences (e.g. __id123__) and just passes them through raw (they exist
        // for legacy reasons and should not be used frequently).
        return this.toArray().join("/");
    }, e.prototype.toString = function() {
        return this.canonicalString();
    }, 
    /**
     * Creates a resource path from the given slash-delimited string. If multiple
     * arguments are provided, all components are combined. Leading and trailing
     * slashes from all components are ignored.
     */
    e.fromString = function() {
        for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];
        // NOTE: The client is ignorant of any path segments containing escape
        // sequences (e.g. __id123__) and just passes them through raw (they exist
        // for legacy reasons and should not be used frequently).
                for (var r = [], i = 0, o = t; i < o.length; i++) {
            var s = o[i];
            if (s.indexOf("//") >= 0) throw new N(S.INVALID_ARGUMENT, "Invalid segment (" + s + "). Paths must not contain // in them.");
            // Strip leading and traling slashed.
                        r.push.apply(r, s.split("/").filter((function(t) {
                return t.length > 0;
            })));
        }
        return new e(r);
    }, e.emptyPath = function() {
        return new e([]);
    }, e;
}(z), H = /^[_a-zA-Z][_a-zA-Z0-9]*$/, Y = /** @class */ function(t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.construct = function(t, n, r) {
        return new e(t, n, r);
    }, 
    /**
     * Returns true if the string could be used as a segment in a field path
     * without escaping.
     */
    e.isValidIdentifier = function(t) {
        return H.test(t);
    }, e.prototype.canonicalString = function() {
        return this.toArray().map((function(t) {
            return t = t.replace(/\\/g, "\\\\").replace(/`/g, "\\`"), e.isValidIdentifier(t) || (t = "`" + t + "`"), 
            t;
        })).join(".");
    }, e.prototype.toString = function() {
        return this.canonicalString();
    }, 
    /**
     * Returns true if this field references the key of a document.
     */
    e.prototype.isKeyField = function() {
        return 1 === this.length && "__name__" === this.get(0);
    }, 
    /**
     * The field designating the key of a document.
     */
    e.keyField = function() {
        return new e([ "__name__" ]);
    }, 
    /**
     * Parses a field string from the given server-formatted string.
     *
     * - Splitting the empty string is not allowed (for now at least).
     * - Empty segments within the string (e.g. if there are two consecutive
     *   separators) are not allowed.
     *
     * TODO(b/37244157): we should make this more strict. Right now, it allows
     * non-identifier path components, even if they aren't escaped.
     */
    e.fromServerFormat = function(t) {
        for (var n = [], r = "", i = 0, o = function() {
            if (0 === r.length) throw new N(S.INVALID_ARGUMENT, "Invalid field path (" + t + "). Paths must not be empty, begin with '.', end with '.', or contain '..'");
            n.push(r), r = "";
        }, s = !1; i < t.length; ) {
            var u = t[i];
            if ("\\" === u) {
                if (i + 1 === t.length) throw new N(S.INVALID_ARGUMENT, "Path has trailing escape character: " + t);
                var a = t[i + 1];
                if ("\\" !== a && "." !== a && "`" !== a) throw new N(S.INVALID_ARGUMENT, "Path has invalid escape sequence: " + t);
                r += a, i += 2;
            } else "`" === u ? (s = !s, i++) : "." !== u || s ? (r += u, i++) : (o(), i++);
        }
        if (o(), s) throw new N(S.INVALID_ARGUMENT, "Unterminated ` in path: " + t);
        return new e(n);
    }, e.emptyPath = function() {
        return new e([]);
    }, e;
}(z), $ = /** @class */ function() {
    function t(t) {
        this.fields = t, 
        // TODO(dimond): validation of FieldMask
        // Sort the field mask to support `FieldMask.isEqual()` and assert below.
        t.sort(Y.comparator)
        /**
     * Verifies that `fieldPath` is included by at least one field in this field
     * mask.
     *
     * This is an O(n) operation, where `n` is the size of the field mask.
     */;
    }
    return t.prototype.covers = function(t) {
        for (var e = 0, n = this.fields; e < n.length; e++) {
            if (n[e].isPrefixOf(t)) return !0;
        }
        return !1;
    }, t.prototype.isEqual = function(t) {
        return q(this.fields, t.fields, (function(t, e) {
            return t.isEqual(e);
        }));
    }, t;
}(), X = /** @class */ function() {
    function t(t) {
        this.binaryString = t;
    }
    return t.fromBase64String = function(e) {
        return new t(atob(e));
    }, t.fromUint8Array = function(e) {
        return new t(
        /**
 * Helper function to convert an Uint8array to a binary string.
 */
        function(t) {
            for (var e = "", n = 0; n < t.length; ++n) e += String.fromCharCode(t[n]);
            return e;
        }(e));
    }, t.prototype.toBase64 = function() {
        return t = this.binaryString, btoa(t);
        /** Converts a binary string to a Base64 encoded string. */        var t;
        /** True if and only if the Base64 conversion functions are available. */    }, 
    t.prototype.toUint8Array = function() {
        return function(t) {
            for (var e = new Uint8Array(t.length), n = 0; n < t.length; n++) e[n] = t.charCodeAt(n);
            return e;
        }(this.binaryString);
    }, t.prototype.approximateByteSize = function() {
        return 2 * this.binaryString.length;
    }, t.prototype.compareTo = function(t) {
        return V(this.binaryString, t.binaryString);
    }, t.prototype.isEqual = function(t) {
        return this.binaryString === t.binaryString;
    }, t;
}();

/**
 * A slash-separated path for navigating resources (documents and collections)
 * within Firestore.
 */ X.EMPTY_BYTE_STRING = new X("");

var J = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);

/**
 * Converts the possible Proto values for a timestamp value into a "seconds and
 * nanos" representation.
 */ function Z(t) {
    // The json interface (for the browser) will return an iso timestamp string,
    // while the proto js library (for node) will return a
    // google.protobuf.Timestamp instance.
    if (O(!!t), "string" == typeof t) {
        // The date string can have higher precision (nanos) than the Date class
        // (millis), so we do some custom parsing here.
        // Parse the nanos right out of the string.
        var e = 0, n = J.exec(t);
        if (O(!!n), n[1]) {
            // Pad the fraction out to 9 digits (nanos).
            var r = n[1];
            r = (r + "000000000").substr(0, 9), e = Number(r);
        }
        // Parse the date to get the seconds.
                var i = new Date(t);
        return {
            seconds: Math.floor(i.getTime() / 1e3),
            nanos: e
        };
    }
    return {
        seconds: tt(t.seconds),
        nanos: tt(t.nanos)
    };
}

/**
 * Converts the possible Proto types for numbers into a JavaScript number.
 * Returns 0 if the value is not numeric.
 */ function tt(t) {
    // TODO(bjornick): Handle int64 greater than 53 bits.
    return "number" == typeof t ? t : "string" == typeof t ? Number(t) : 0;
}

/** Converts the possible Proto types for Blobs into a ByteString. */ function et(t) {
    return "string" == typeof t ? X.fromBase64String(t) : X.fromUint8Array(t);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Represents a locally-applied ServerTimestamp.
 *
 * Server Timestamps are backed by MapValues that contain an internal field
 * `__type__` with a value of `server_timestamp`. The previous value and local
 * write time are stored in its `__previous_value__` and `__local_write_time__`
 * fields respectively.
 *
 * Notes:
 * - ServerTimestampValue instances are created as the result of applying a
 *   transform. They can only exist in the local view of a document. Therefore
 *   they do not need to be parsed or serialized.
 * - When evaluated locally (e.g. for snapshot.data()), they by default
 *   evaluate to `null`. This behavior can be configured by passing custom
 *   FieldValueOptions to value().
 * - With respect to other ServerTimestampValues, they sort by their
 *   localWriteTime.
 */ function nt(t) {
    var e, n;
    return "server_timestamp" === (null === (n = ((null === (e = null == t ? void 0 : t.mapValue) || void 0 === e ? void 0 : e.fields) || {}).__type__) || void 0 === n ? void 0 : n.stringValue);
}

/**
 * Creates a new ServerTimestamp proto value (using the internal format).
 */
/**
 * Returns the value of the field before this ServerTimestamp was set.
 *
 * Preserving the previous values allows the user to display the last resoled
 * value until the backend responds with the timestamp.
 */ function rt(t) {
    var e = t.mapValue.fields.__previous_value__;
    return nt(e) ? rt(e) : e;
}

/**
 * Returns the local time at which this timestamp was first set.
 */ function it(t) {
    var e = Z(t.mapValue.fields.__local_write_time__.timestampValue);
    return new B(e.seconds, e.nanos);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Sentinel value that sorts before any Mutation Batch ID. */
/**
 * Returns whether a variable is either undefined or null.
 */ function ot(t) {
    return null == t;
}

/** Returns whether the value represents -0. */ function st(t) {
    // Detect if the value is -0.0. Based on polyfill from
    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
    return 0 === t && 1 / t == -1 / 0;
}

/**
 * Returns whether a value is an integer and in the safe integer range
 * @param value - The value to test for being an integer and in the safe range
 */ function ut(t) {
    return "number" == typeof t && Number.isInteger(t) && !st(t) && t <= Number.MAX_SAFE_INTEGER && t >= Number.MIN_SAFE_INTEGER;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var at = /** @class */ function() {
    function t(t) {
        this.path = t;
    }
    return t.fromPath = function(e) {
        return new t(W.fromString(e));
    }, t.fromName = function(e) {
        return new t(W.fromString(e).popFirst(5));
    }, 
    /** Returns true if the document is in the specified collectionId. */ t.prototype.hasCollectionId = function(t) {
        return this.path.length >= 2 && this.path.get(this.path.length - 2) === t;
    }, t.prototype.isEqual = function(t) {
        return null !== t && 0 === W.comparator(this.path, t.path);
    }, t.prototype.toString = function() {
        return this.path.toString();
    }, t.comparator = function(t, e) {
        return W.comparator(t.path, e.path);
    }, t.isDocumentKey = function(t) {
        return t.length % 2 == 0;
    }, 
    /**
     * Creates and returns a new document key with the given segments.
     *
     * @param segments - The segments of the path to the document
     * @returns A new instance of DocumentKey
     */
    t.fromSegments = function(e) {
        return new t(new W(e.slice()));
    }, t;
}();

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Extracts the backend's type order for the provided value. */ function ct(t) {
    return "nullValue" in t ? 0 /* NullValue */ : "booleanValue" in t ? 1 /* BooleanValue */ : "integerValue" in t || "doubleValue" in t ? 2 /* NumberValue */ : "timestampValue" in t ? 3 /* TimestampValue */ : "stringValue" in t ? 5 /* StringValue */ : "bytesValue" in t ? 6 /* BlobValue */ : "referenceValue" in t ? 7 /* RefValue */ : "geoPointValue" in t ? 8 /* GeoPointValue */ : "arrayValue" in t ? 9 /* ArrayValue */ : "mapValue" in t ? nt(t) ? 4 /* ServerTimestampValue */ : 10 /* ObjectValue */ : L();
}

/** Tests `left` and `right` for equality based on the backend semantics. */ function ht(t, e) {
    var n = ct(t);
    if (n !== ct(e)) return !1;
    switch (n) {
      case 0 /* NullValue */ :
        return !0;

      case 1 /* BooleanValue */ :
        return t.booleanValue === e.booleanValue;

      case 4 /* ServerTimestampValue */ :
        return it(t).isEqual(it(e));

      case 3 /* TimestampValue */ :
        return function(t, e) {
            if ("string" == typeof t.timestampValue && "string" == typeof e.timestampValue && t.timestampValue.length === e.timestampValue.length) 
            // Use string equality for ISO 8601 timestamps
            return t.timestampValue === e.timestampValue;
            var n = Z(t.timestampValue), r = Z(e.timestampValue);
            return n.seconds === r.seconds && n.nanos === r.nanos;
        }(t, e);

      case 5 /* StringValue */ :
        return t.stringValue === e.stringValue;

      case 6 /* BlobValue */ :
        return function(t, e) {
            return et(t.bytesValue).isEqual(et(e.bytesValue));
        }(t, e);

      case 7 /* RefValue */ :
        return t.referenceValue === e.referenceValue;

      case 8 /* GeoPointValue */ :
        return function(t, e) {
            return tt(t.geoPointValue.latitude) === tt(e.geoPointValue.latitude) && tt(t.geoPointValue.longitude) === tt(e.geoPointValue.longitude);
        }(t, e);

      case 2 /* NumberValue */ :
        return function(t, e) {
            if ("integerValue" in t && "integerValue" in e) return tt(t.integerValue) === tt(e.integerValue);
            if ("doubleValue" in t && "doubleValue" in e) {
                var n = tt(t.doubleValue), r = tt(e.doubleValue);
                return n === r ? st(n) === st(r) : isNaN(n) && isNaN(r);
            }
            return !1;
        }(t, e);

      case 9 /* ArrayValue */ :
        return q(t.arrayValue.values || [], e.arrayValue.values || [], ht);

      case 10 /* ObjectValue */ :
        return function(t, e) {
            var n = t.mapValue.fields || {}, r = e.mapValue.fields || {};
            if (K(n) !== K(r)) return !1;
            for (var i in n) if (n.hasOwnProperty(i) && (void 0 === r[i] || !ht(n[i], r[i]))) return !1;
            return !0;
        }(t, e);

      default:
        return L();
    }
}

function ft(t, e) {
    return void 0 !== (t.values || []).find((function(t) {
        return ht(t, e);
    }));
}

function lt(t, e) {
    var n = ct(t), r = ct(e);
    if (n !== r) return V(n, r);
    switch (n) {
      case 0 /* NullValue */ :
        return 0;

      case 1 /* BooleanValue */ :
        return V(t.booleanValue, e.booleanValue);

      case 2 /* NumberValue */ :
        return function(t, e) {
            var n = tt(t.integerValue || t.doubleValue), r = tt(e.integerValue || e.doubleValue);
            return n < r ? -1 : n > r ? 1 : n === r ? 0 : 
            // one or both are NaN.
            isNaN(n) ? isNaN(r) ? 0 : -1 : 1;
        }(t, e);

      case 3 /* TimestampValue */ :
        return dt(t.timestampValue, e.timestampValue);

      case 4 /* ServerTimestampValue */ :
        return dt(it(t), it(e));

      case 5 /* StringValue */ :
        return V(t.stringValue, e.stringValue);

      case 6 /* BlobValue */ :
        return function(t, e) {
            var n = et(t), r = et(e);
            return n.compareTo(r);
        }(t.bytesValue, e.bytesValue);

      case 7 /* RefValue */ :
        return function(t, e) {
            for (var n = t.split("/"), r = e.split("/"), i = 0; i < n.length && i < r.length; i++) {
                var o = V(n[i], r[i]);
                if (0 !== o) return o;
            }
            return V(n.length, r.length);
        }(t.referenceValue, e.referenceValue);

      case 8 /* GeoPointValue */ :
        return function(t, e) {
            var n = V(tt(t.latitude), tt(e.latitude));
            return 0 !== n ? n : V(tt(t.longitude), tt(e.longitude));
        }(t.geoPointValue, e.geoPointValue);

      case 9 /* ArrayValue */ :
        return function(t, e) {
            for (var n = t.values || [], r = e.values || [], i = 0; i < n.length && i < r.length; ++i) {
                var o = lt(n[i], r[i]);
                if (o) return o;
            }
            return V(n.length, r.length);
        }(t.arrayValue, e.arrayValue);

      case 10 /* ObjectValue */ :
        return function(t, e) {
            var n = t.fields || {}, r = Object.keys(n), i = e.fields || {}, o = Object.keys(i);
            // Even though MapValues are likely sorted correctly based on their insertion
            // order (e.g. when received from the backend), local modifications can bring
            // elements out of order. We need to re-sort the elements to ensure that
            // canonical IDs are independent of insertion order.
                        r.sort(), o.sort();
            for (var s = 0; s < r.length && s < o.length; ++s) {
                var u = V(r[s], o[s]);
                if (0 !== u) return u;
                var a = lt(n[r[s]], i[o[s]]);
                if (0 !== a) return a;
            }
            return V(r.length, o.length);
        }(t.mapValue, e.mapValue);

      default:
        throw L();
    }
}

function dt(t, e) {
    if ("string" == typeof t && "string" == typeof e && t.length === e.length) return V(t, e);
    var n = Z(t), r = Z(e), i = V(n.seconds, r.seconds);
    return 0 !== i ? i : V(n.nanos, r.nanos);
}

function pt(t) {
    return yt(t);
}

function yt(t) {
    return "nullValue" in t ? "null" : "booleanValue" in t ? "" + t.booleanValue : "integerValue" in t ? "" + t.integerValue : "doubleValue" in t ? "" + t.doubleValue : "timestampValue" in t ? function(t) {
        var e = Z(t);
        return "time(" + e.seconds + "," + e.nanos + ")";
    }(t.timestampValue) : "stringValue" in t ? t.stringValue : "bytesValue" in t ? et(t.bytesValue).toBase64() : "referenceValue" in t ? (n = t.referenceValue, 
    at.fromName(n).toString()) : "geoPointValue" in t ? "geo(" + (e = t.geoPointValue).latitude + "," + e.longitude + ")" : "arrayValue" in t ? function(t) {
        for (var e = "[", n = !0, r = 0, i = t.values || []; r < i.length; r++) {
            n ? n = !1 : e += ",", e += yt(i[r]);
        }
        return e + "]";
    }(t.arrayValue) : "mapValue" in t ? function(t) {
        for (
        // Iteration order in JavaScript is not guaranteed. To ensure that we generate
        // matching canonical IDs for identical maps, we need to sort the keys.
        var e = "{", n = !0, r = 0, i = Object.keys(t.fields || {}).sort(); r < i.length; r++) {
            var o = i[r];
            n ? n = !1 : e += ",", e += o + ":" + yt(t.fields[o]);
        }
        return e + "}";
    }(t.mapValue) : L();
    var e, n;
}

function vt(t, e) {
    return {
        referenceValue: "projects/" + t.projectId + "/databases/" + t.database + "/documents/" + e.path.canonicalString()
    };
}

/** Returns true if `value` is an IntegerValue . */ function mt(t) {
    return !!t && "integerValue" in t;
}

/** Returns true if `value` is a DoubleValue. */
/** Returns true if `value` is an ArrayValue. */ function gt(t) {
    return !!t && "arrayValue" in t;
}

/** Returns true if `value` is a NullValue. */ function wt(t) {
    return !!t && "nullValue" in t;
}

/** Returns true if `value` is NaN. */ function bt(t) {
    return !!t && "doubleValue" in t && isNaN(Number(t.doubleValue));
}

/** Returns true if `value` is a MapValue. */ function It(t) {
    return !!t && "mapValue" in t;
}

/** Creates a deep copy of `source`. */ function Tt(t) {
    if (t.geoPointValue) return {
        geoPointValue: Object.assign({}, t.geoPointValue)
    };
    if (t.timestampValue) return {
        timestampValue: Object.assign({}, Z(t.timestampValue))
    };
    if (t.mapValue) {
        var e = {
            mapValue: {
                fields: {}
            }
        };
        return G(t.mapValue.fields, (function(t, n) {
            return e.mapValue.fields[t] = Tt(n);
        })), e;
    }
    if (t.arrayValue) {
        for (var n = {
            arrayValue: {
                values: []
            }
        }, r = 0; r < (t.arrayValue.values || []).length; ++r) n.arrayValue.values[r] = Tt(t.arrayValue.values[r]);
        return n;
    }
    return Object.assign({}, t);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An ObjectValue represents a MapValue in the Firestore Proto and offers the
 * ability to add and remove fields (via the ObjectValueBuilder).
 */ var Et = /** @class */ function() {
    function t(t) {
        this.value = t;
    }
    return t.empty = function() {
        return new t({
            mapValue: {}
        });
    }, 
    /**
     * Returns the value at the given path or null.
     *
     * @param path - the path to search
     * @returns The value at the path or null if the path is not set.
     */
    t.prototype.field = function(t) {
        if (t.isEmpty()) return this.value;
        for (var e = this.value, n = 0; n < t.length - 1; ++n) if (!It(e = (e.mapValue.fields || {})[t.get(n)])) return null;
        return (e = (e.mapValue.fields || {})[t.lastSegment()]) || null;
    }, 
    /**
     * Sets the field to the provided value.
     *
     * @param path - The field path to set.
     * @param value - The value to set.
     */
    t.prototype.set = function(t, e) {
        this.getFieldsMap(t.popLast())[t.lastSegment()] = Tt(e);
    }, 
    /**
     * Sets the provided fields to the provided values.
     *
     * @param data - A map of fields to values (or null for deletes).
     */
    t.prototype.setAll = function(t) {
        var e = this, n = Y.emptyPath(), r = {}, i = [];
        t.forEach((function(t, o) {
            if (!n.isImmediateParentOf(o)) {
                // Insert the accumulated changes at this parent location
                var s = e.getFieldsMap(n);
                e.applyChanges(s, r, i), r = {}, i = [], n = o.popLast();
            }
            t ? r[o.lastSegment()] = Tt(t) : i.push(o.lastSegment());
        }));
        var o = this.getFieldsMap(n);
        this.applyChanges(o, r, i);
    }, 
    /**
     * Removes the field at the specified path. If there is no field at the
     * specified path, nothing is changed.
     *
     * @param path - The field path to remove.
     */
    t.prototype.delete = function(t) {
        var e = this.field(t.popLast());
        It(e) && e.mapValue.fields && delete e.mapValue.fields[t.lastSegment()];
    }, t.prototype.isEqual = function(t) {
        return ht(this.value, t.value);
    }, 
    /**
     * Returns the map that contains the leaf element of `path`. If the parent
     * entry does not yet exist, or if it is not a map, a new map will be created.
     */
    t.prototype.getFieldsMap = function(t) {
        var e = this.value;
        e.mapValue.fields || (e.mapValue = {
            fields: {}
        });
        for (var n = 0; n < t.length; ++n) {
            var r = e.mapValue.fields[t.get(n)];
            It(r) && r.mapValue.fields || (r = {
                mapValue: {
                    fields: {}
                }
            }, e.mapValue.fields[t.get(n)] = r), e = r;
        }
        return e.mapValue.fields;
    }, 
    /**
     * Modifies `fieldsMap` by adding, replacing or deleting the specified
     * entries.
     */
    t.prototype.applyChanges = function(t, e, n) {
        G(e, (function(e, n) {
            return t[e] = n;
        }));
        for (var r = 0, i = n; r < i.length; r++) {
            var o = i[r];
            delete t[o];
        }
    }, t.prototype.clone = function() {
        return new t(Tt(this.value));
    }, t;
}();

/**
 * Returns a FieldMask built from all fields in a MapValue.
 */ function _t(t) {
    var e = [];
    return G(t.fields, (function(t, n) {
        var r = new Y([ t ]);
        if (It(n)) {
            var i = _t(n.mapValue).fields;
            if (0 === i.length) 
            // Preserve the empty map by adding it to the FieldMask.
            e.push(r); else 
            // For nested and non-empty ObjectValues, add the FieldPath of the
            // leaf nodes.
            for (var o = 0, s = i; o < s.length; o++) {
                var u = s[o];
                e.push(r.child(u));
            }
        } else 
        // For nested and non-empty ObjectValues, add the FieldPath of the leaf
        // nodes.
        e.push(r);
    })), new $(e)
    /**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    /**
 * Represents a document in Firestore with a key, version, data and whether it
 * has local mutations applied to it.
 *
 * Documents can transition between states via `convertToFoundDocument()`,
 * `convertToNoDocument()` and `convertToUnknownDocument()`. If a document does
 * not transition to one of these states even after all mutations have been
 * applied, `isValidDocument()` returns false and the document should be removed
 * from all views.
 */;
}

var St = /** @class */ function() {
    function t(t, e, n, r, i) {
        this.key = t, this.documentType = e, this.version = n, this.data = r, this.documentState = i
        /**
     * Creates a document with no known version or data, but which can serve as
     * base document for mutations.
     */;
    }
    return t.newInvalidDocument = function(e) {
        return new t(e, 0 /* INVALID */ , j.min(), Et.empty(), 0 /* SYNCED */);
    }, 
    /**
     * Creates a new document that is known to exist with the given data at the
     * given version.
     */
    t.newFoundDocument = function(e, n, r) {
        return new t(e, 1 /* FOUND_DOCUMENT */ , n, r, 0 /* SYNCED */);
    }, 
    /** Creates a new document that is known to not exist at the given version. */ t.newNoDocument = function(e, n) {
        return new t(e, 2 /* NO_DOCUMENT */ , n, Et.empty(), 0 /* SYNCED */);
    }, 
    /**
     * Creates a new document that is known to exist at the given version but
     * whose data is not known (e.g. a document that was updated without a known
     * base document).
     */
    t.newUnknownDocument = function(e, n) {
        return new t(e, 3 /* UNKNOWN_DOCUMENT */ , n, Et.empty(), 2 /* HAS_COMMITTED_MUTATIONS */);
    }, 
    /**
     * Changes the document type to indicate that it exists and that its version
     * and data are known.
     */
    t.prototype.convertToFoundDocument = function(t, e) {
        return this.version = t, this.documentType = 1 /* FOUND_DOCUMENT */ , this.data = e, 
        this.documentState = 0 /* SYNCED */ , this;
    }, 
    /**
     * Changes the document type to indicate that it doesn't exist at the given
     * version.
     */
    t.prototype.convertToNoDocument = function(t) {
        return this.version = t, this.documentType = 2 /* NO_DOCUMENT */ , this.data = Et.empty(), 
        this.documentState = 0 /* SYNCED */ , this;
    }, 
    /**
     * Changes the document type to indicate that it exists at a given version but
     * that its data is not known (e.g. a document that was updated without a known
     * base document).
     */
    t.prototype.convertToUnknownDocument = function(t) {
        return this.version = t, this.documentType = 3 /* UNKNOWN_DOCUMENT */ , this.data = Et.empty(), 
        this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;
    }, t.prototype.setHasCommittedMutations = function() {
        return this.documentState = 2 /* HAS_COMMITTED_MUTATIONS */ , this;
    }, t.prototype.setHasLocalMutations = function() {
        return this.documentState = 1 /* HAS_LOCAL_MUTATIONS */ , this;
    }, Object.defineProperty(t.prototype, "hasLocalMutations", {
        get: function() {
            return 1 /* HAS_LOCAL_MUTATIONS */ === this.documentState;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "hasCommittedMutations", {
        get: function() {
            return 2 /* HAS_COMMITTED_MUTATIONS */ === this.documentState;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "hasPendingWrites", {
        get: function() {
            return this.hasLocalMutations || this.hasCommittedMutations;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.isValidDocument = function() {
        return 0 /* INVALID */ !== this.documentType;
    }, t.prototype.isFoundDocument = function() {
        return 1 /* FOUND_DOCUMENT */ === this.documentType;
    }, t.prototype.isNoDocument = function() {
        return 2 /* NO_DOCUMENT */ === this.documentType;
    }, t.prototype.isUnknownDocument = function() {
        return 3 /* UNKNOWN_DOCUMENT */ === this.documentType;
    }, t.prototype.isEqual = function(e) {
        return e instanceof t && this.key.isEqual(e.key) && this.version.isEqual(e.version) && this.documentType === e.documentType && this.documentState === e.documentState && this.data.isEqual(e.data);
    }, t.prototype.clone = function() {
        return new t(this.key, this.documentType, this.version, this.data.clone(), this.documentState);
    }, t.prototype.toString = function() {
        return "Document(" + this.key + ", " + this.version + ", " + JSON.stringify(this.data.value) + ", {documentType: " + this.documentType + "}), {documentState: " + this.documentState + "})";
    }, t;
}(), Nt = function(t, e, n, r, i, o, s) {
    void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), 
    void 0 === i && (i = null), void 0 === o && (o = null), void 0 === s && (s = null), 
    this.path = t, this.collectionGroup = e, this.orderBy = n, this.filters = r, this.limit = i, 
    this.startAt = o, this.endAt = s, this.h = null;
};

/**
 * Compares the value for field `field` in the provided documents. Throws if
 * the field does not exist in both documents.
 */
/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Visible for testing
/**
 * Initializes a Target with a path and optional additional query constraints.
 * Path must currently be empty if this is a collection group query.
 *
 * NOTE: you should always construct `Target` from `Query.toTarget` instead of
 * using this factory method, because `Query` provides an implicit `orderBy`
 * property.
 */
function Dt(t, e, n, r, i, o, s) {
    return void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), 
    void 0 === i && (i = null), void 0 === o && (o = null), void 0 === s && (s = null), 
    new Nt(t, e, n, r, i, o, s);
}

function At(t) {
    var e = P(t);
    if (null === e.h) {
        var n = e.path.canonicalString();
        null !== e.collectionGroup && (n += "|cg:" + e.collectionGroup), n += "|f:", n += e.filters.map((function(t) {
            return function(t) {
                // TODO(b/29183165): Technically, this won't be unique if two values have
                // the same description, such as the int 3 and the string "3". So we should
                // add the types in here somehow, too.
                return t.field.canonicalString() + t.op.toString() + pt(t.value);
            }(t);
        })).join(","), n += "|ob:", n += e.orderBy.map((function(t) {
            return function(t) {
                // TODO(b/29183165): Make this collision robust.
                return t.field.canonicalString() + t.dir;
            }(t);
        })).join(","), ot(e.limit) || (n += "|l:", n += e.limit), e.startAt && (n += "|lb:", 
        n += Bt(e.startAt)), e.endAt && (n += "|ub:", n += Bt(e.endAt)), e.h = n;
    }
    return e.h;
}

function kt(t, e) {
    if (t.limit !== e.limit) return !1;
    if (t.orderBy.length !== e.orderBy.length) return !1;
    for (var n = 0; n < t.orderBy.length; n++) if (!Kt(t.orderBy[n], e.orderBy[n])) return !1;
    if (t.filters.length !== e.filters.length) return !1;
    for (var r = 0; r < t.filters.length; r++) if (i = t.filters[r], o = e.filters[r], 
    i.op !== o.op || !i.field.isEqual(o.field) || !ht(i.value, o.value)) return !1;
    var i, o;
    return t.collectionGroup === e.collectionGroup && !!t.path.isEqual(e.path) && !!Qt(t.startAt, e.startAt) && Qt(t.endAt, e.endAt);
}

function xt(t) {
    return at.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;
}

var Ct = /** @class */ function(t) {
    function e(e, n, r) {
        var i = this;
        return (i = t.call(this) || this).field = e, i.op = n, i.value = r, i;
    }
    /**
     * Creates a filter based on the provided arguments.
     */    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.create = function(t, n, r) {
        return t.isKeyField() ? "in" /* IN */ === n || "not-in" /* NOT_IN */ === n ? this.l(t, n, r) : new Rt(t, n, r) : "array-contains" /* ARRAY_CONTAINS */ === n ? new Ft(t, r) : "in" /* IN */ === n ? new Mt(t, r) : "not-in" /* NOT_IN */ === n ? new Vt(t, r) : "array-contains-any" /* ARRAY_CONTAINS_ANY */ === n ? new qt(t, r) : new e(t, n, r);
    }, e.l = function(t, e, n) {
        return "in" /* IN */ === e ? new Lt(t, n) : new Ot(t, n);
    }, e.prototype.matches = function(t) {
        var e = t.data.field(this.field);
        // Types do not have to match in NOT_EQUAL filters.
                return "!=" /* NOT_EQUAL */ === this.op ? null !== e && this.m(lt(e, this.value)) : null !== e && ct(this.value) === ct(e) && this.m(lt(e, this.value));
        // Only compare types with matching backend order (such as double and int).
        }, e.prototype.m = function(t) {
        switch (this.op) {
          case "<" /* LESS_THAN */ :
            return t < 0;

          case "<=" /* LESS_THAN_OR_EQUAL */ :
            return t <= 0;

          case "==" /* EQUAL */ :
            return 0 === t;

          case "!=" /* NOT_EQUAL */ :
            return 0 !== t;

          case ">" /* GREATER_THAN */ :
            return t > 0;

          case ">=" /* GREATER_THAN_OR_EQUAL */ :
            return t >= 0;

          default:
            return L();
        }
    }, e.prototype.g = function() {
        return [ "<" /* LESS_THAN */ , "<=" /* LESS_THAN_OR_EQUAL */ , ">" /* GREATER_THAN */ , ">=" /* GREATER_THAN_OR_EQUAL */ , "!=" /* NOT_EQUAL */ , "not-in" /* NOT_IN */ ].indexOf(this.op) >= 0;
    }, e;
}((function() {}));

var Rt = /** @class */ function(t) {
    function e(e, n, r) {
        var i = this;
        return (i = t.call(this, e, n, r) || this).key = at.fromName(r.referenceValue), 
        i;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.matches = function(t) {
        var e = at.comparator(t.key, this.key);
        return this.m(e);
    }, e;
}(Ct), Lt = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this, e, "in" /* IN */ , n) || this).keys = Pt("in" /* IN */ , n), 
        r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.matches = function(t) {
        return this.keys.some((function(e) {
            return e.isEqual(t.key);
        }));
    }, e;
}(Ct), Ot = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this, e, "not-in" /* NOT_IN */ , n) || this).keys = Pt("not-in" /* NOT_IN */ , n), 
        r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.matches = function(t) {
        return !this.keys.some((function(e) {
            return e.isEqual(t.key);
        }));
    }, e;
}(Ct);

/** Filter that matches on key fields within an array. */ function Pt(t, e) {
    var n;
    return ((null === (n = e.arrayValue) || void 0 === n ? void 0 : n.values) || []).map((function(t) {
        return at.fromName(t.referenceValue);
    }));
}

/** A Filter that implements the array-contains operator. */ var Ft = /** @class */ function(t) {
    function e(e, n) {
        return t.call(this, e, "array-contains" /* ARRAY_CONTAINS */ , n) || this;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.matches = function(t) {
        var e = t.data.field(this.field);
        return gt(e) && ft(e.arrayValue, this.value);
    }, e;
}(Ct), Mt = /** @class */ function(t) {
    function e(e, n) {
        return t.call(this, e, "in" /* IN */ , n) || this;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.matches = function(t) {
        var e = t.data.field(this.field);
        return null !== e && ft(this.value.arrayValue, e);
    }, e;
}(Ct), Vt = /** @class */ function(t) {
    function e(e, n) {
        return t.call(this, e, "not-in" /* NOT_IN */ , n) || this;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.matches = function(t) {
        if (ft(this.value.arrayValue, {
            nullValue: "NULL_VALUE"
        })) return !1;
        var e = t.data.field(this.field);
        return null !== e && !ft(this.value.arrayValue, e);
    }, e;
}(Ct), qt = /** @class */ function(t) {
    function e(e, n) {
        return t.call(this, e, "array-contains-any" /* ARRAY_CONTAINS_ANY */ , n) || this;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.matches = function(t) {
        var e = this, n = t.data.field(this.field);
        return !(!gt(n) || !n.arrayValue.values) && n.arrayValue.values.some((function(t) {
            return ft(e.value.arrayValue, t);
        }));
    }, e;
}(Ct), Ut = function(t, e) {
    this.position = t, this.before = e;
};

/** A Filter that implements the IN operator. */ function Bt(t) {
    // TODO(b/29183165): Make this collision robust.
    return (t.before ? "b" : "a") + ":" + t.position.map((function(t) {
        return pt(t);
    })).join(",");
}

/**
 * An ordering on a field, in some Direction. Direction defaults to ASCENDING.
 */ var jt = function(t, e /* ASCENDING */) {
    void 0 === e && (e = "asc"), this.field = t, this.dir = e;
};

function Kt(t, e) {
    return t.dir === e.dir && t.field.isEqual(e.field);
}

/**
 * Returns true if a document sorts before a bound using the provided sort
 * order.
 */ function Gt(t, e, n) {
    for (var r = 0, i = 0; i < t.position.length; i++) {
        var o = e[i], s = t.position[i];
        if (r = o.field.isKeyField() ? at.comparator(at.fromName(s.referenceValue), n.key) : lt(s, n.data.field(o.field)), 
        "desc" /* DESCENDING */ === o.dir && (r *= -1), 0 !== r) break;
    }
    return t.before ? r <= 0 : r < 0;
}

function Qt(t, e) {
    if (null === t) return null === e;
    if (null === e) return !1;
    if (t.before !== e.before || t.position.length !== e.position.length) return !1;
    for (var n = 0; n < t.position.length; n++) if (!ht(t.position[n], e.position[n])) return !1;
    return !0;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Query encapsulates all the query attributes we support in the SDK. It can
 * be run against the LocalStore, as well as be converted to a `Target` to
 * query the RemoteStore results.
 *
 * Visible for testing.
 */ var zt = 
/**
     * Initializes a Query with a path and optional additional query constraints.
     * Path must currently be empty if this is a collection group query.
     */
function(t, e, n, r, i, o /* First */ , s, u) {
    void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), 
    void 0 === i && (i = null), void 0 === o && (o = "F"), void 0 === s && (s = null), 
    void 0 === u && (u = null), this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, 
    this.filters = r, this.limit = i, this.limitType = o, this.startAt = s, this.endAt = u, 
    this.p = null, 
    // The corresponding `Target` of this `Query` instance.
    this.T = null, this.startAt, this.endAt;
};

/** Creates a new Query instance with the options provided. */ function Wt(t, e, n, r, i, o, s, u) {
    return new zt(t, e, n, r, i, o, s, u);
}

/** Creates a new Query for a query that matches all documents at `path` */ function Ht(t) {
    return new zt(t);
}

/**
 * Helper to convert a collection group query into a collection query at a
 * specific path. This is used when executing collection group queries, since
 * we have to split the query into a set of collection queries at multiple
 * paths.
 */ function Yt(t) {
    return !ot(t.limit) && "F" /* First */ === t.limitType;
}

function $t(t) {
    return !ot(t.limit) && "L" /* Last */ === t.limitType;
}

function Xt(t) {
    return t.explicitOrderBy.length > 0 ? t.explicitOrderBy[0].field : null;
}

function Jt(t) {
    for (var e = 0, n = t.filters; e < n.length; e++) {
        var r = n[e];
        if (r.g()) return r.field;
    }
    return null;
}

/**
 * Checks if any of the provided Operators are included in the query and
 * returns the first one that is, or null if none are.
 */
/**
 * Returns whether the query matches a collection group rather than a specific
 * collection.
 */ function Zt(t) {
    return null !== t.collectionGroup;
}

/**
 * Returns the implicit order by constraint that is used to execute the Query,
 * which can be different from the order by constraints the user provided (e.g.
 * the SDK and backend always orders by `__name__`).
 */ function te(t) {
    var e = P(t);
    if (null === e.p) {
        e.p = [];
        var n = Jt(e), r = Xt(e);
        if (null !== n && null === r) 
        // In order to implicitly add key ordering, we must also add the
        // inequality filter field for it to be a valid query.
        // Note that the default inequality field and key ordering is ascending.
        n.isKeyField() || e.p.push(new jt(n)), e.p.push(new jt(Y.keyField(), "asc" /* ASCENDING */)); else {
            for (var i = !1, o = 0, s = e.explicitOrderBy; o < s.length; o++) {
                var u = s[o];
                e.p.push(u), u.field.isKeyField() && (i = !0);
            }
            if (!i) {
                // The order of the implicit key ordering always matches the last
                // explicit order by
                var a = e.explicitOrderBy.length > 0 ? e.explicitOrderBy[e.explicitOrderBy.length - 1].dir : "asc" /* ASCENDING */;
                e.p.push(new jt(Y.keyField(), a));
            }
        }
    }
    return e.p;
}

/**
 * Converts this `Query` instance to it's corresponding `Target` representation.
 */ function ee(t) {
    var e = P(t);
    if (!e.T) if ("F" /* First */ === e.limitType) e.T = Dt(e.path, e.collectionGroup, te(e), e.filters, e.limit, e.startAt, e.endAt); else {
        for (
        // Flip the orderBy directions since we want the last results
        var n = [], r = 0, i = te(e); r < i.length; r++) {
            var o = i[r], s = "desc" /* DESCENDING */ === o.dir ? "asc" /* ASCENDING */ : "desc" /* DESCENDING */;
            n.push(new jt(o.field, s));
        }
        // We need to swap the cursors to match the now-flipped query ordering.
                var u = e.endAt ? new Ut(e.endAt.position, !e.endAt.before) : null, a = e.startAt ? new Ut(e.startAt.position, !e.startAt.before) : null;
        // Now return as a LimitType.First query.
                e.T = Dt(e.path, e.collectionGroup, n, e.filters, e.limit, u, a);
    }
    return e.T;
}

function ne(t, e, n) {
    return new zt(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), e, n, t.startAt, t.endAt);
}

function re(t, e) {
    return kt(ee(t), ee(e)) && t.limitType === e.limitType;
}

// TODO(b/29183165): This is used to get a unique string from a query to, for
// example, use as a dictionary key, but the implementation is subject to
// collisions. Make it collision-free.
function ie(t) {
    return At(ee(t)) + "|lt:" + t.limitType;
}

function oe(t) {
    return "Query(target=" + function(t) {
        var e = t.path.canonicalString();
        return null !== t.collectionGroup && (e += " collectionGroup=" + t.collectionGroup), 
        t.filters.length > 0 && (e += ", filters: [" + t.filters.map((function(t) {
            return (e = t).field.canonicalString() + " " + e.op + " " + pt(e.value);
            /** Returns a debug description for `filter`. */            var e;
            /** Filter that matches on key fields (i.e. '__name__'). */        })).join(", ") + "]"), 
        ot(t.limit) || (e += ", limit: " + t.limit), t.orderBy.length > 0 && (e += ", orderBy: [" + t.orderBy.map((function(t) {
            return function(t) {
                return t.field.canonicalString() + " (" + t.dir + ")";
            }(t);
        })).join(", ") + "]"), t.startAt && (e += ", startAt: " + Bt(t.startAt)), t.endAt && (e += ", endAt: " + Bt(t.endAt)), 
        "Target(" + e + ")";
    }(ee(t)) + "; limitType=" + t.limitType + ")";
}

/** Returns whether `doc` matches the constraints of `query`. */ function se(t, e) {
    return e.isFoundDocument() && function(t, e) {
        var n = e.key.path;
        return null !== t.collectionGroup ? e.key.hasCollectionId(t.collectionGroup) && t.path.isPrefixOf(n) : at.isDocumentKey(t.path) ? t.path.isEqual(n) : t.path.isImmediateParentOf(n);
    }(t, e) && function(t, e) {
        for (var n = 0, r = t.explicitOrderBy; n < r.length; n++) {
            var i = r[n];
            // order by key always matches
                        if (!i.field.isKeyField() && null === e.data.field(i.field)) return !1;
        }
        return !0;
    }(t, e) && function(t, e) {
        for (var n = 0, r = t.filters; n < r.length; n++) {
            if (!r[n].matches(e)) return !1;
        }
        return !0;
    }(t, e) && function(t, e) {
        return !(t.startAt && !Gt(t.startAt, te(t), e)) && (!t.endAt || !Gt(t.endAt, te(t), e));
    }(t, e);
}

function ue(t) {
    return function(e, n) {
        for (var r = !1, i = 0, o = te(t); i < o.length; i++) {
            var s = o[i], u = ae(s, e, n);
            if (0 !== u) return u;
            r = r || s.field.isKeyField();
        }
        return 0;
    };
}

function ae(t, e, n) {
    var r = t.field.isKeyField() ? at.comparator(e.key, n.key) : function(t, e, n) {
        var r = e.data.field(t), i = n.data.field(t);
        return null !== r && null !== i ? lt(r, i) : L();
    }(t.field, e, n);
    switch (t.dir) {
      case "asc" /* ASCENDING */ :
        return r;

      case "desc" /* DESCENDING */ :
        return -1 * r;

      default:
        return L();
    }
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns an DoubleValue for `value` that is encoded based the serializer's
 * `useProto3Json` setting.
 */ function ce(t, e) {
    if (t.I) {
        if (isNaN(e)) return {
            doubleValue: "NaN"
        };
        if (e === 1 / 0) return {
            doubleValue: "Infinity"
        };
        if (e === -1 / 0) return {
            doubleValue: "-Infinity"
        };
    }
    return {
        doubleValue: st(e) ? "-0" : e
    };
}

/**
 * Returns an IntegerValue for `value`.
 */ function he(t) {
    return {
        integerValue: "" + t
    };
}

/**
 * Returns a value for a number that's appropriate to put into a proto.
 * The return value is an IntegerValue if it can safely represent the value,
 * otherwise a DoubleValue is returned.
 */ function fe(t, e) {
    return ut(e) ? he(e) : ce(t, e);
}

/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Used to represent a field transform on a mutation. */ var le = function() {
    // Make sure that the structural type of `TransformOperation` is unique.
    // See https://github.com/microsoft/TypeScript/issues/5451
    this._ = void 0;
};

/**
 * Computes the local transform result against the provided `previousValue`,
 * optionally using the provided localWriteTime.
 */ function de(t, e, n) {
    return t instanceof ve ? function(t, e) {
        var n = {
            fields: {
                __type__: {
                    stringValue: "server_timestamp"
                },
                __local_write_time__: {
                    timestampValue: {
                        seconds: t.seconds,
                        nanos: t.nanoseconds
                    }
                }
            }
        };
        return e && (n.fields.__previous_value__ = e), {
            mapValue: n
        };
    }(n, e) : t instanceof me ? ge(t, e) : t instanceof we ? be(t, e) : function(t, e) {
        // PORTING NOTE: Since JavaScript's integer arithmetic is limited to 53 bit
        // precision and resolves overflows by reducing precision, we do not
        // manually cap overflows at 2^63.
        var n = ye(t, e), r = Te(n) + Te(t.A);
        return mt(n) && mt(t.A) ? he(r) : ce(t.R, r);
    }(t, e);
}

/**
 * Computes a final transform result after the transform has been acknowledged
 * by the server, potentially using the server-provided transformResult.
 */ function pe(t, e, n) {
    // The server just sends null as the transform result for array operations,
    // so we have to calculate a result the same as we do for local
    // applications.
    return t instanceof me ? ge(t, e) : t instanceof we ? be(t, e) : n;
}

/**
 * If this transform operation is not idempotent, returns the base value to
 * persist for this transform. If a base value is returned, the transform
 * operation is always applied to this base value, even if document has
 * already been updated.
 *
 * Base values provide consistent behavior for non-idempotent transforms and
 * allow us to return the same latency-compensated value even if the backend
 * has already applied the transform operation. The base value is null for
 * idempotent transforms, as they can be re-played even if the backend has
 * already applied them.
 *
 * @returns a base value to store along with the mutation, or null for
 * idempotent transforms.
 */ function ye(t, e) {
    return t instanceof Ie ? mt(n = e) || function(t) {
        return !!t && "doubleValue" in t;
    }(n) ? e : {
        integerValue: 0
    } : null;
    var n;
}

/** Transforms a value into a server-generated timestamp. */ var ve = /** @class */ function(t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(le), me = /** @class */ function(t) {
    function e(e) {
        var n = this;
        return (n = t.call(this) || this).elements = e, n;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(le);

/** Transforms an array value via a union operation. */ function ge(t, e) {
    for (var n = Ee(e), r = function(t) {
        n.some((function(e) {
            return ht(e, t);
        })) || n.push(t);
    }, i = 0, o = t.elements; i < o.length; i++) {
        r(o[i]);
    }
    return {
        arrayValue: {
            values: n
        }
    };
}

/** Transforms an array value via a remove operation. */ var we = /** @class */ function(t) {
    function e(e) {
        var n = this;
        return (n = t.call(this) || this).elements = e, n;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(le);

function be(t, e) {
    for (var n = Ee(e), r = function(t) {
        n = n.filter((function(e) {
            return !ht(e, t);
        }));
    }, i = 0, o = t.elements; i < o.length; i++) {
        r(o[i]);
    }
    return {
        arrayValue: {
            values: n
        }
    };
}

/**
 * Implements the backend semantics for locally computed NUMERIC_ADD (increment)
 * transforms. Converts all field values to integers or doubles, but unlike the
 * backend does not cap integer values at 2^63. Instead, JavaScript number
 * arithmetic is used and precision loss can occur for values greater than 2^53.
 */ var Ie = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this) || this).R = e, r.A = n, r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(le);

function Te(t) {
    return tt(t.integerValue || t.doubleValue);
}

function Ee(t) {
    return gt(t) && t.arrayValue.values ? t.arrayValue.values.slice() : [];
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** A field path and the TransformOperation to perform upon it. */ var _e = function(t, e) {
    this.field = t, this.transform = e;
};

/** The result of successfully applying a mutation to the backend. */
var Se = function(
/**
     * The version at which the mutation was committed:
     *
     * - For most operations, this is the updateTime in the WriteResult.
     * - For deletes, the commitTime of the WriteResponse (because deletes are
     *   not stored and have no updateTime).
     *
     * Note that these versions can be different: No-op writes will not change
     * the updateTime even though the commitTime advances.
     */
t, 
/**
     * The resulting fields returned from the backend after a mutation
     * containing field transforms has been committed. Contains one FieldValue
     * for each FieldTransform that was in the mutation.
     *
     * Will be empty if the mutation did not contain any field transforms.
     */
e) {
    this.version = t, this.transformResults = e;
}, Ne = /** @class */ function() {
    function t(t, e) {
        this.updateTime = t, this.exists = e
        /** Creates a new empty Precondition. */;
    }
    return t.none = function() {
        return new t;
    }, 
    /** Creates a new Precondition with an exists flag. */ t.exists = function(e) {
        return new t(void 0, e);
    }, 
    /** Creates a new Precondition based on a version a document exists at. */ t.updateTime = function(e) {
        return new t(e);
    }, Object.defineProperty(t.prototype, "isNone", {
        /** Returns whether this Precondition is empty. */ get: function() {
            return void 0 === this.updateTime && void 0 === this.exists;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.isEqual = function(t) {
        return this.exists === t.exists && (this.updateTime ? !!t.updateTime && this.updateTime.isEqual(t.updateTime) : !t.updateTime);
    }, t;
}();

/**
 * Encodes a precondition for a mutation. This follows the model that the
 * backend accepts with the special case of an explicit "empty" precondition
 * (meaning no precondition).
 */
/** Returns true if the preconditions is valid for the given document. */ function De(t, e) {
    return void 0 !== t.updateTime ? e.isFoundDocument() && e.version.isEqual(t.updateTime) : void 0 === t.exists || t.exists === e.isFoundDocument();
}

/**
 * A mutation describes a self-contained change to a document. Mutations can
 * create, replace, delete, and update subsets of documents.
 *
 * Mutations not only act on the value of the document but also its version.
 *
 * For local mutations (mutations that haven't been committed yet), we preserve
 * the existing version for Set and Patch mutations. For Delete mutations, we
 * reset the version to 0.
 *
 * Here's the expected transition table.
 *
 * MUTATION           APPLIED TO            RESULTS IN
 *
 * SetMutation        Document(v3)          Document(v3)
 * SetMutation        NoDocument(v3)        Document(v0)
 * SetMutation        InvalidDocument(v0)   Document(v0)
 * PatchMutation      Document(v3)          Document(v3)
 * PatchMutation      NoDocument(v3)        NoDocument(v3)
 * PatchMutation      InvalidDocument(v0)   UnknownDocument(v3)
 * DeleteMutation     Document(v3)          NoDocument(v0)
 * DeleteMutation     NoDocument(v3)        NoDocument(v0)
 * DeleteMutation     InvalidDocument(v0)   NoDocument(v0)
 *
 * For acknowledged mutations, we use the updateTime of the WriteResponse as
 * the resulting version for Set and Patch mutations. As deletes have no
 * explicit update time, we use the commitTime of the WriteResponse for
 * Delete mutations.
 *
 * If a mutation is acknowledged by the backend but fails the precondition check
 * locally, we transition to an `UnknownDocument` and rely on Watch to send us
 * the updated version.
 *
 * Field transforms are used only with Patch and Set Mutations. We use the
 * `updateTransforms` message to store transforms, rather than the `transforms`s
 * messages.
 *
 * ## Subclassing Notes
 *
 * Every type of mutation needs to implement its own applyToRemoteDocument() and
 * applyToLocalView() to implement the actual behavior of applying the mutation
 * to some source document (see `applySetMutationToRemoteDocument()` for an
 * example).
 */ var Ae = function() {};

/**
 * Applies this mutation to the given document for the purposes of computing a
 * new remote document. If the input document doesn't match the expected state
 * (e.g. it is invalid or outdated), the document type may transition to
 * unknown.
 *
 * @param mutation - The mutation to apply.
 * @param document - The document to mutate. The input document can be an
 *     invalid document if the client has no knowledge of the pre-mutation state
 *     of the document.
 * @param mutationResult - The result of applying the mutation from the backend.
 */ function ke(t, e, n) {
    t instanceof Oe ? function(t, e, n) {
        // Unlike applySetMutationToLocalView, if we're applying a mutation to a
        // remote document the server has accepted the mutation so the precondition
        // must have held.
        var r = t.value.clone(), i = Me(t.fieldTransforms, e, n.transformResults);
        r.setAll(i), e.convertToFoundDocument(n.version, r).setHasCommittedMutations();
    }(t, e, n) : t instanceof Pe ? function(t, e, n) {
        if (De(t.precondition, e)) {
            var r = Me(t.fieldTransforms, e, n.transformResults), i = e.data;
            i.setAll(Fe(t)), i.setAll(r), e.convertToFoundDocument(n.version, i).setHasCommittedMutations();
        } else e.convertToUnknownDocument(n.version);
    }(t, e, n) : function(t, e, n) {
        // Unlike applyToLocalView, if we're applying a mutation to a remote
        // document the server has accepted the mutation so the precondition must
        // have held.
        e.convertToNoDocument(n.version).setHasCommittedMutations();
    }(0, e, n);
}

/**
 * Applies this mutation to the given document for the purposes of computing
 * the new local view of a document. If the input document doesn't match the
 * expected state, the document is not modified.
 *
 * @param mutation - The mutation to apply.
 * @param document - The document to mutate. The input document can be an
 *     invalid document if the client has no knowledge of the pre-mutation state
 *     of the document.
 * @param localWriteTime - A timestamp indicating the local write time of the
 *     batch this mutation is a part of.
 */ function xe(t, e, n) {
    t instanceof Oe ? function(t, e, n) {
        if (De(t.precondition, e)) {
            var r = t.value.clone(), i = Ve(t.fieldTransforms, n, e);
            r.setAll(i), e.convertToFoundDocument(Le(e), r).setHasLocalMutations();
        }
    }(t, e, n) : t instanceof Pe ? function(t, e, n) {
        if (De(t.precondition, e)) {
            var r = Ve(t.fieldTransforms, n, e), i = e.data;
            i.setAll(Fe(t)), i.setAll(r), e.convertToFoundDocument(Le(e), i).setHasLocalMutations();
        }
    }(t, e, n) : function(t, e) {
        De(t.precondition, e) && 
        // We don't call `setHasLocalMutations()` since we want to be backwards
        // compatible with the existing SDK behavior.
        e.convertToNoDocument(j.min());
    }(t, e);
}

/**
 * If this mutation is not idempotent, returns the base value to persist with
 * this mutation. If a base value is returned, the mutation is always applied
 * to this base value, even if document has already been updated.
 *
 * The base value is a sparse object that consists of only the document
 * fields for which this mutation contains a non-idempotent transformation
 * (e.g. a numeric increment). The provided value guarantees consistent
 * behavior for non-idempotent transforms and allow us to return the same
 * latency-compensated value even if the backend has already applied the
 * mutation. The base value is null for idempotent mutations, as they can be
 * re-played even if the backend has already applied them.
 *
 * @returns a base value to store along with the mutation, or null for
 * idempotent mutations.
 */ function Ce(t, e) {
    for (var n = null, r = 0, i = t.fieldTransforms; r < i.length; r++) {
        var o = i[r], s = e.data.field(o.field), u = ye(o.transform, s || null);
        null != u && (null == n && (n = Et.empty()), n.set(o.field, u));
    }
    return n || null;
}

function Re(t, e) {
    return t.type === e.type && !!t.key.isEqual(e.key) && !!t.precondition.isEqual(e.precondition) && !!function(t, e) {
        return void 0 === t && void 0 === e || !(!t || !e) && q(t, e, (function(t, e) {
            return function(t, e) {
                return t.field.isEqual(e.field) && function(t, e) {
                    return t instanceof me && e instanceof me || t instanceof we && e instanceof we ? q(t.elements, e.elements, ht) : t instanceof Ie && e instanceof Ie ? ht(t.A, e.A) : t instanceof ve && e instanceof ve;
                }(t.transform, e.transform);
            }(t, e);
        }));
    }(t.fieldTransforms, e.fieldTransforms) && (0 /* Set */ === t.type ? t.value.isEqual(e.value) : 1 /* Patch */ !== t.type || t.data.isEqual(e.data) && t.fieldMask.isEqual(e.fieldMask));
}

/**
 * Returns the version from the given document for use as the result of a
 * mutation. Mutations are defined to return the version of the base document
 * only if it is an existing document. Deleted and unknown documents have a
 * post-mutation version of SnapshotVersion.min().
 */ function Le(t) {
    return t.isFoundDocument() ? t.version : j.min();
}

/**
 * A mutation that creates or replaces the document at the given key with the
 * object value contents.
 */ var Oe = /** @class */ function(t) {
    function e(e, n, r, i) {
        void 0 === i && (i = []);
        var o = this;
        return (o = t.call(this) || this).key = e, o.value = n, o.precondition = r, o.fieldTransforms = i, 
        o.type = 0 /* Set */ , o;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(Ae), Pe = /** @class */ function(t) {
    function e(e, n, r, i, o) {
        void 0 === o && (o = []);
        var s = this;
        return (s = t.call(this) || this).key = e, s.data = n, s.fieldMask = r, s.precondition = i, 
        s.fieldTransforms = o, s.type = 1 /* Patch */ , s;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(Ae);

function Fe(t) {
    var e = new Map;
    return t.fieldMask.fields.forEach((function(n) {
        if (!n.isEmpty()) {
            var r = t.data.field(n);
            e.set(n, r);
        }
    })), e
    /**
 * Creates a list of "transform results" (a transform result is a field value
 * representing the result of applying a transform) for use after a mutation
 * containing transforms has been acknowledged by the server.
 *
 * @param fieldTransforms - The field transforms to apply the result to.
 * @param mutableDocument - The current state of the document after applying all
 * previous mutations.
 * @param serverTransformResults - The transform results received by the server.
 * @returns The transform results list.
 */;
}

function Me(t, e, n) {
    var r = new Map;
    O(t.length === n.length);
    for (var i = 0; i < n.length; i++) {
        var o = t[i], s = o.transform, u = e.data.field(o.field);
        r.set(o.field, pe(s, u, n[i]));
    }
    return r;
}

/**
 * Creates a list of "transform results" (a transform result is a field value
 * representing the result of applying a transform) for use when applying a
 * transform locally.
 *
 * @param fieldTransforms - The field transforms to apply the result to.
 * @param localWriteTime - The local time of the mutation (used to
 *     generate ServerTimestampValues).
 * @param mutableDocument - The current state of the document after applying all
 *     previous mutations.
 * @returns The transform results list.
 */ function Ve(t, e, n) {
    for (var r = new Map, i = 0, o = t; i < o.length; i++) {
        var s = o[i], u = s.transform, a = n.data.field(s.field);
        r.set(s.field, de(u, a, e));
    }
    return r;
}

/** A mutation that deletes the document at the given key. */ var qe, Ue, Be = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this) || this).key = e, r.precondition = n, r.type = 2 /* Delete */ , 
        r.fieldTransforms = [], r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(Ae), je = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this) || this).key = e, r.precondition = n, r.type = 3 /* Verify */ , 
        r.fieldTransforms = [], r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(Ae), Ke = 
// TODO(b/33078163): just use simplest form of existence filter for now
function(t) {
    this.count = t;
};

/**
 * Determines whether an error code represents a permanent error when received
 * in response to a non-write operation.
 *
 * See isPermanentWriteError for classifying write errors.
 */
function Ge(t) {
    switch (t) {
      case S.OK:
        return L();

      case S.CANCELLED:
      case S.UNKNOWN:
      case S.DEADLINE_EXCEEDED:
      case S.RESOURCE_EXHAUSTED:
      case S.INTERNAL:
      case S.UNAVAILABLE:
 // Unauthenticated means something went wrong with our token and we need
        // to retry with new credentials which will happen automatically.
              case S.UNAUTHENTICATED:
        return !1;

      case S.INVALID_ARGUMENT:
      case S.NOT_FOUND:
      case S.ALREADY_EXISTS:
      case S.PERMISSION_DENIED:
      case S.FAILED_PRECONDITION:
 // Aborted might be retried in some scenarios, but that is dependant on
        // the context and should handled individually by the calling code.
        // See https://cloud.google.com/apis/design/errors.
              case S.ABORTED:
      case S.OUT_OF_RANGE:
      case S.UNIMPLEMENTED:
      case S.DATA_LOSS:
        return !0;

      default:
        return L();
    }
}

/**
 * Determines whether an error code represents a permanent error when received
 * in response to a write operation.
 *
 * Write operations must be handled specially because as of b/119437764, ABORTED
 * errors on the write stream should be retried too (even though ABORTED errors
 * are not generally retryable).
 *
 * Note that during the initial handshake on the write stream an ABORTED error
 * signals that we should discard our stream token (i.e. it is permanent). This
 * means a handshake error should be classified with isPermanentError, above.
 */
/**
 * Maps an error Code from GRPC status code number, like 0, 1, or 14. These
 * are not the same as HTTP status codes.
 *
 * @returns The Code equivalent to the given GRPC status code. Fails if there
 *     is no match.
 */ function Qe(t) {
    if (void 0 === t) 
    // This shouldn't normally happen, but in certain error cases (like trying
    // to send invalid proto messages) we may get an error with no GRPC code.
    return x("GRPC error has no .code"), S.UNKNOWN;
    switch (t) {
      case qe.OK:
        return S.OK;

      case qe.CANCELLED:
        return S.CANCELLED;

      case qe.UNKNOWN:
        return S.UNKNOWN;

      case qe.DEADLINE_EXCEEDED:
        return S.DEADLINE_EXCEEDED;

      case qe.RESOURCE_EXHAUSTED:
        return S.RESOURCE_EXHAUSTED;

      case qe.INTERNAL:
        return S.INTERNAL;

      case qe.UNAVAILABLE:
        return S.UNAVAILABLE;

      case qe.UNAUTHENTICATED:
        return S.UNAUTHENTICATED;

      case qe.INVALID_ARGUMENT:
        return S.INVALID_ARGUMENT;

      case qe.NOT_FOUND:
        return S.NOT_FOUND;

      case qe.ALREADY_EXISTS:
        return S.ALREADY_EXISTS;

      case qe.PERMISSION_DENIED:
        return S.PERMISSION_DENIED;

      case qe.FAILED_PRECONDITION:
        return S.FAILED_PRECONDITION;

      case qe.ABORTED:
        return S.ABORTED;

      case qe.OUT_OF_RANGE:
        return S.OUT_OF_RANGE;

      case qe.UNIMPLEMENTED:
        return S.UNIMPLEMENTED;

      case qe.DATA_LOSS:
        return S.DATA_LOSS;

      default:
        return L();
    }
}

/**
 * Converts an HTTP response's error status to the equivalent error code.
 *
 * @param status - An HTTP error response status ("FAILED_PRECONDITION",
 * "UNKNOWN", etc.)
 * @returns The equivalent Code. Non-matching responses are mapped to
 *     Code.UNKNOWN.
 */ (Ue = qe || (qe = {}))[Ue.OK = 0] = "OK", Ue[Ue.CANCELLED = 1] = "CANCELLED", 
Ue[Ue.UNKNOWN = 2] = "UNKNOWN", Ue[Ue.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", 
Ue[Ue.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", Ue[Ue.NOT_FOUND = 5] = "NOT_FOUND", 
Ue[Ue.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", Ue[Ue.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", 
Ue[Ue.UNAUTHENTICATED = 16] = "UNAUTHENTICATED", Ue[Ue.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", 
Ue[Ue.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", Ue[Ue.ABORTED = 10] = "ABORTED", 
Ue[Ue.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", Ue[Ue.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", 
Ue[Ue.INTERNAL = 13] = "INTERNAL", Ue[Ue.UNAVAILABLE = 14] = "UNAVAILABLE", Ue[Ue.DATA_LOSS = 15] = "DATA_LOSS";

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// An immutable sorted map implementation, based on a Left-leaning Red-Black
// tree.
var ze = /** @class */ function() {
    function t(t, e) {
        this.comparator = t, this.root = e || He.EMPTY;
    }
    // Returns a copy of the map, with the specified key/value added or replaced.
        return t.prototype.insert = function(e, n) {
        return new t(this.comparator, this.root.insert(e, n, this.comparator).copy(null, null, He.BLACK, null, null));
    }, 
    // Returns a copy of the map, with the specified key removed.
    t.prototype.remove = function(e) {
        return new t(this.comparator, this.root.remove(e, this.comparator).copy(null, null, He.BLACK, null, null));
    }, 
    // Returns the value of the node with the given key, or null.
    t.prototype.get = function(t) {
        for (var e = this.root; !e.isEmpty(); ) {
            var n = this.comparator(t, e.key);
            if (0 === n) return e.value;
            n < 0 ? e = e.left : n > 0 && (e = e.right);
        }
        return null;
    }, 
    // Returns the index of the element in this sorted map, or -1 if it doesn't
    // exist.
    t.prototype.indexOf = function(t) {
        for (
        // Number of nodes that were pruned when descending right
        var e = 0, n = this.root; !n.isEmpty(); ) {
            var r = this.comparator(t, n.key);
            if (0 === r) return e + n.left.size;
            r < 0 ? n = n.left : (
            // Count all nodes left of the node plus the node itself
            e += n.left.size + 1, n = n.right);
        }
        // Node not found
                return -1;
    }, t.prototype.isEmpty = function() {
        return this.root.isEmpty();
    }, Object.defineProperty(t.prototype, "size", {
        // Returns the total number of nodes in the map.
        get: function() {
            return this.root.size;
        },
        enumerable: !1,
        configurable: !0
    }), 
    // Returns the minimum key in the map.
    t.prototype.minKey = function() {
        return this.root.minKey();
    }, 
    // Returns the maximum key in the map.
    t.prototype.maxKey = function() {
        return this.root.maxKey();
    }, 
    // Traverses the map in key order and calls the specified action function
    // for each key/value pair. If action returns true, traversal is aborted.
    // Returns the first truthy value returned by action, or the last falsey
    // value returned by action.
    t.prototype.inorderTraversal = function(t) {
        return this.root.inorderTraversal(t);
    }, t.prototype.forEach = function(t) {
        this.inorderTraversal((function(e, n) {
            return t(e, n), !1;
        }));
    }, t.prototype.toString = function() {
        var t = [];
        return this.inorderTraversal((function(e, n) {
            return t.push(e + ":" + n), !1;
        })), "{" + t.join(", ") + "}";
    }, 
    // Traverses the map in reverse key order and calls the specified action
    // function for each key/value pair. If action returns true, traversal is
    // aborted.
    // Returns the first truthy value returned by action, or the last falsey
    // value returned by action.
    t.prototype.reverseTraversal = function(t) {
        return this.root.reverseTraversal(t);
    }, 
    // Returns an iterator over the SortedMap.
    t.prototype.getIterator = function() {
        return new We(this.root, null, this.comparator, !1);
    }, t.prototype.getIteratorFrom = function(t) {
        return new We(this.root, t, this.comparator, !1);
    }, t.prototype.getReverseIterator = function() {
        return new We(this.root, null, this.comparator, !0);
    }, t.prototype.getReverseIteratorFrom = function(t) {
        return new We(this.root, t, this.comparator, !0);
    }, t;
}(), We = /** @class */ function() {
    function t(t, e, n, r) {
        this.isReverse = r, this.nodeStack = [];
        for (var i = 1; !t.isEmpty(); ) if (i = e ? n(t.key, e) : 1, 
        // flip the comparison if we're going in reverse
        r && (i *= -1), i < 0) 
        // This node is less than our start key. ignore it
        t = this.isReverse ? t.left : t.right; else {
            if (0 === i) {
                // This node is exactly equal to our start key. Push it on the stack,
                // but stop iterating;
                this.nodeStack.push(t);
                break;
            }
            // This node is greater than our start key, add it to the stack and move
            // to the next one
                        this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;
        }
    }
    return t.prototype.getNext = function() {
        var t = this.nodeStack.pop(), e = {
            key: t.key,
            value: t.value
        };
        if (this.isReverse) for (t = t.left; !t.isEmpty(); ) this.nodeStack.push(t), t = t.right; else for (t = t.right; !t.isEmpty(); ) this.nodeStack.push(t), 
        t = t.left;
        return e;
    }, t.prototype.hasNext = function() {
        return this.nodeStack.length > 0;
    }, t.prototype.peek = function() {
        if (0 === this.nodeStack.length) return null;
        var t = this.nodeStack[this.nodeStack.length - 1];
        return {
            key: t.key,
            value: t.value
        };
    }, t;
}(), He = /** @class */ function() {
    function t(e, n, r, i, o) {
        this.key = e, this.value = n, this.color = null != r ? r : t.RED, this.left = null != i ? i : t.EMPTY, 
        this.right = null != o ? o : t.EMPTY, this.size = this.left.size + 1 + this.right.size;
    }
    // Returns a copy of the current node, optionally replacing pieces of it.
        return t.prototype.copy = function(e, n, r, i, o) {
        return new t(null != e ? e : this.key, null != n ? n : this.value, null != r ? r : this.color, null != i ? i : this.left, null != o ? o : this.right);
    }, t.prototype.isEmpty = function() {
        return !1;
    }, 
    // Traverses the tree in key order and calls the specified action function
    // for each node. If action returns true, traversal is aborted.
    // Returns the first truthy value returned by action, or the last falsey
    // value returned by action.
    t.prototype.inorderTraversal = function(t) {
        return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);
    }, 
    // Traverses the tree in reverse key order and calls the specified action
    // function for each node. If action returns true, traversal is aborted.
    // Returns the first truthy value returned by action, or the last falsey
    // value returned by action.
    t.prototype.reverseTraversal = function(t) {
        return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);
    }, 
    // Returns the minimum node in the tree.
    t.prototype.min = function() {
        return this.left.isEmpty() ? this : this.left.min();
    }, 
    // Returns the maximum key in the tree.
    t.prototype.minKey = function() {
        return this.min().key;
    }, 
    // Returns the maximum key in the tree.
    t.prototype.maxKey = function() {
        return this.right.isEmpty() ? this.key : this.right.maxKey();
    }, 
    // Returns new tree, with the key/value added.
    t.prototype.insert = function(t, e, n) {
        var r = this, i = n(t, r.key);
        return (r = i < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === i ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n))).fixUp();
    }, t.prototype.removeMin = function() {
        if (this.left.isEmpty()) return t.EMPTY;
        var e = this;
        return e.left.isRed() || e.left.left.isRed() || (e = e.moveRedLeft()), (e = e.copy(null, null, null, e.left.removeMin(), null)).fixUp();
    }, 
    // Returns new tree, with the specified item removed.
    t.prototype.remove = function(e, n) {
        var r, i = this;
        if (n(e, i.key) < 0) i.left.isEmpty() || i.left.isRed() || i.left.left.isRed() || (i = i.moveRedLeft()), 
        i = i.copy(null, null, null, i.left.remove(e, n), null); else {
            if (i.left.isRed() && (i = i.rotateRight()), i.right.isEmpty() || i.right.isRed() || i.right.left.isRed() || (i = i.moveRedRight()), 
            0 === n(e, i.key)) {
                if (i.right.isEmpty()) return t.EMPTY;
                r = i.right.min(), i = i.copy(r.key, r.value, null, null, i.right.removeMin());
            }
            i = i.copy(null, null, null, null, i.right.remove(e, n));
        }
        return i.fixUp();
    }, t.prototype.isRed = function() {
        return this.color;
    }, 
    // Returns new tree after performing any needed rotations.
    t.prototype.fixUp = function() {
        var t = this;
        return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), 
        t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;
    }, t.prototype.moveRedLeft = function() {
        var t = this.colorFlip();
        return t.right.left.isRed() && (t = (t = (t = t.copy(null, null, null, null, t.right.rotateRight())).rotateLeft()).colorFlip()), 
        t;
    }, t.prototype.moveRedRight = function() {
        var t = this.colorFlip();
        return t.left.left.isRed() && (t = (t = t.rotateRight()).colorFlip()), t;
    }, t.prototype.rotateLeft = function() {
        var e = this.copy(null, null, t.RED, null, this.right.left);
        return this.right.copy(null, null, this.color, e, null);
    }, t.prototype.rotateRight = function() {
        var e = this.copy(null, null, t.RED, this.left.right, null);
        return this.left.copy(null, null, this.color, null, e);
    }, t.prototype.colorFlip = function() {
        var t = this.left.copy(null, null, !this.left.color, null, null), e = this.right.copy(null, null, !this.right.color, null, null);
        return this.copy(null, null, !this.color, t, e);
    }, 
    // For testing.
    t.prototype.checkMaxDepth = function() {
        var t = this.check();
        return Math.pow(2, t) <= this.size + 1;
    }, 
    // In a balanced RB tree, the black-depth (number of black nodes) from root to
    // leaves is equal on both sides.  This function verifies that or asserts.
    t.prototype.check = function() {
        if (this.isRed() && this.left.isRed()) throw L();
        if (this.right.isRed()) throw L();
        var t = this.left.check();
        if (t !== this.right.check()) throw L();
        return t + (this.isRed() ? 0 : 1);
    }, t;
}();

// end SortedMap
// An iterator over an LLRBNode.
// end LLRBNode
// Empty node is shared between all LLRB trees.
// eslint-disable-next-line @typescript-eslint/no-explicit-any
He.EMPTY = null, He.RED = !0, He.BLACK = !1, 
// end LLRBEmptyNode
He.EMPTY = new (/** @class */ function() {
    function t() {
        this.size = 0;
    }
    return Object.defineProperty(t.prototype, "key", {
        get: function() {
            throw L();
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "value", {
        get: function() {
            throw L();
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "color", {
        get: function() {
            throw L();
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "left", {
        get: function() {
            throw L();
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "right", {
        get: function() {
            throw L();
        },
        enumerable: !1,
        configurable: !0
    }), 
    // Returns a copy of the current node.
    t.prototype.copy = function(t, e, n, r, i) {
        return this;
    }, 
    // Returns a copy of the tree, with the specified key/value added.
    t.prototype.insert = function(t, e, n) {
        return new He(t, e);
    }, 
    // Returns a copy of the tree, with the specified key removed.
    t.prototype.remove = function(t, e) {
        return this;
    }, t.prototype.isEmpty = function() {
        return !0;
    }, t.prototype.inorderTraversal = function(t) {
        return !1;
    }, t.prototype.reverseTraversal = function(t) {
        return !1;
    }, t.prototype.minKey = function() {
        return null;
    }, t.prototype.maxKey = function() {
        return null;
    }, t.prototype.isRed = function() {
        return !1;
    }, 
    // For testing.
    t.prototype.checkMaxDepth = function() {
        return !0;
    }, t.prototype.check = function() {
        return 0;
    }, t;
}());

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * SortedSet is an immutable (copy-on-write) collection that holds elements
 * in order specified by the provided comparator.
 *
 * NOTE: if provided comparator returns 0 for two elements, we consider them to
 * be equal!
 */
var Ye = /** @class */ function() {
    function t(t) {
        this.comparator = t, this.data = new ze(this.comparator);
    }
    return t.prototype.has = function(t) {
        return null !== this.data.get(t);
    }, t.prototype.first = function() {
        return this.data.minKey();
    }, t.prototype.last = function() {
        return this.data.maxKey();
    }, Object.defineProperty(t.prototype, "size", {
        get: function() {
            return this.data.size;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.indexOf = function(t) {
        return this.data.indexOf(t);
    }, 
    /** Iterates elements in order defined by "comparator" */ t.prototype.forEach = function(t) {
        this.data.inorderTraversal((function(e, n) {
            return t(e), !1;
        }));
    }, 
    /** Iterates over `elem`s such that: range[0] &lt;= elem &lt; range[1]. */ t.prototype.forEachInRange = function(t, e) {
        for (var n = this.data.getIteratorFrom(t[0]); n.hasNext(); ) {
            var r = n.getNext();
            if (this.comparator(r.key, t[1]) >= 0) return;
            e(r.key);
        }
    }, 
    /**
     * Iterates over `elem`s such that: start &lt;= elem until false is returned.
     */
    t.prototype.forEachWhile = function(t, e) {
        var n;
        for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext(); ) if (!t(n.getNext().key)) return;
    }, 
    /** Finds the least element greater than or equal to `elem`. */ t.prototype.firstAfterOrEqual = function(t) {
        var e = this.data.getIteratorFrom(t);
        return e.hasNext() ? e.getNext().key : null;
    }, t.prototype.getIterator = function() {
        return new $e(this.data.getIterator());
    }, t.prototype.getIteratorFrom = function(t) {
        return new $e(this.data.getIteratorFrom(t));
    }, 
    /** Inserts or updates an element */ t.prototype.add = function(t) {
        return this.copy(this.data.remove(t).insert(t, !0));
    }, 
    /** Deletes an element */ t.prototype.delete = function(t) {
        return this.has(t) ? this.copy(this.data.remove(t)) : this;
    }, t.prototype.isEmpty = function() {
        return this.data.isEmpty();
    }, t.prototype.unionWith = function(t) {
        var e = this;
        // Make sure `result` always refers to the larger one of the two sets.
                return e.size < t.size && (e = t, t = this), t.forEach((function(t) {
            e = e.add(t);
        })), e;
    }, t.prototype.isEqual = function(e) {
        if (!(e instanceof t)) return !1;
        if (this.size !== e.size) return !1;
        for (var n = this.data.getIterator(), r = e.data.getIterator(); n.hasNext(); ) {
            var i = n.getNext().key, o = r.getNext().key;
            if (0 !== this.comparator(i, o)) return !1;
        }
        return !0;
    }, t.prototype.toArray = function() {
        var t = [];
        return this.forEach((function(e) {
            t.push(e);
        })), t;
    }, t.prototype.toString = function() {
        var t = [];
        return this.forEach((function(e) {
            return t.push(e);
        })), "SortedSet(" + t.toString() + ")";
    }, t.prototype.copy = function(e) {
        var n = new t(this.comparator);
        return n.data = e, n;
    }, t;
}(), $e = /** @class */ function() {
    function t(t) {
        this.iter = t;
    }
    return t.prototype.getNext = function() {
        return this.iter.getNext().key;
    }, t.prototype.hasNext = function() {
        return this.iter.hasNext();
    }, t;
}(), Xe = new ze(at.comparator);

function Je() {
    return Xe;
}

var Ze = new ze(at.comparator);

function tn() {
    return Ze;
}

var en = new ze(at.comparator);

function nn() {
    return en;
}

var rn = new Ye(at.comparator);

function on() {
    for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
    for (var n = rn, r = 0, i = t; r < i.length; r++) {
        var o = i[r];
        n = n.add(o);
    }
    return n;
}

var sn = new Ye(V);

function un() {
    return sn;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An event from the RemoteStore. It is split into targetChanges (changes to the
 * state or the set of documents in our watched targets) and documentUpdates
 * (changes to the actual documents).
 */ var an = /** @class */ function() {
    function t(
    /**
     * The snapshot version this event brings us up to, or MIN if not set.
     */
    t, 
    /**
     * A map from target to changes to the target. See TargetChange.
     */
    e, 
    /**
     * A set of targets that is known to be inconsistent. Listens for these
     * targets should be re-established without resume tokens.
     */
    n, 
    /**
     * A set of which documents have changed or been deleted, along with the
     * doc's new values (if not deleted).
     */
    r, 
    /**
     * A set of which document updates are due only to limbo resolution targets.
     */
    i) {
        this.snapshotVersion = t, this.targetChanges = e, this.targetMismatches = n, this.documentUpdates = r, 
        this.resolvedLimboDocuments = i;
    }
    /**
     * HACK: Views require RemoteEvents in order to determine whether the view is
     * CURRENT, but secondary tabs don't receive remote events. So this method is
     * used to create a synthesized RemoteEvent that can be used to apply a
     * CURRENT status change to a View, for queries executed in a different tab.
     */
    // PORTING NOTE: Multi-tab only
        return t.createSynthesizedRemoteEventForCurrentChange = function(e, n) {
        var r = new Map;
        return r.set(e, cn.createSynthesizedTargetChangeForCurrentChange(e, n)), new t(j.min(), r, un(), Je(), on());
    }, t;
}(), cn = /** @class */ function() {
    function t(
    /**
     * An opaque, server-assigned token that allows watching a query to be resumed
     * after disconnecting without retransmitting all the data that matches the
     * query. The resume token essentially identifies a point in time from which
     * the server should resume sending results.
     */
    t, 
    /**
     * The "current" (synced) status of this target. Note that "current"
     * has special meaning in the RPC protocol that implies that a target is
     * both up-to-date and consistent with the rest of the watch stream.
     */
    e, 
    /**
     * The set of documents that were newly assigned to this target as part of
     * this remote event.
     */
    n, 
    /**
     * The set of documents that were already assigned to this target but received
     * an update during this remote event.
     */
    r, 
    /**
     * The set of documents that were removed from this target as part of this
     * remote event.
     */
    i) {
        this.resumeToken = t, this.current = e, this.addedDocuments = n, this.modifiedDocuments = r, 
        this.removedDocuments = i
        /**
     * This method is used to create a synthesized TargetChanges that can be used to
     * apply a CURRENT status change to a View (for queries executed in a different
     * tab) or for new queries (to raise snapshots with correct CURRENT status).
     */;
    }
    return t.createSynthesizedTargetChangeForCurrentChange = function(e, n) {
        return new t(X.EMPTY_BYTE_STRING, n, on(), on(), on());
    }, t;
}(), hn = function(
/** The new document applies to all of these targets. */
t, 
/** The new document is removed from all of these targets. */
e, 
/** The key of the document for this change. */
n, 
/**
     * The new document or NoDocument if it was deleted. Is null if the
     * document went out of view without the server sending a new document.
     */
r) {
    this.v = t, this.removedTargetIds = e, this.key = n, this.P = r;
}, fn = function(t, e) {
    this.targetId = t, this.V = e;
}, ln = function(
/** What kind of change occurred to the watch target. */
t, 
/** The target IDs that were added/removed/set. */
e, 
/**
     * An opaque, server-assigned token that allows watching a target to be
     * resumed after disconnecting without retransmitting all the data that
     * matches the target. The resume token essentially identifies a point in
     * time from which the server should resume sending results.
     */
n
/** An RPC error indicating why the watch failed. */ , r) {
    void 0 === n && (n = X.EMPTY_BYTE_STRING), void 0 === r && (r = null), this.state = t, 
    this.targetIds = e, this.resumeToken = n, this.cause = r;
}, dn = /** @class */ function() {
    function t() {
        /**
         * The number of pending responses (adds or removes) that we are waiting on.
         * We only consider targets active that have no pending responses.
         */
        this.S = 0, 
        /**
             * Keeps track of the document changes since the last raised snapshot.
             *
             * These changes are continuously updated as we receive document updates and
             * always reflect the current set of changes against the last issued snapshot.
             */
        this.D = vn(), 
        /** See public getters for explanations of these fields. */
        this.C = X.EMPTY_BYTE_STRING, this.N = !1, 
        /**
             * Whether this target state should be included in the next snapshot. We
             * initialize to true so that newly-added targets are included in the next
             * RemoteEvent.
             */
        this.F = !0;
    }
    return Object.defineProperty(t.prototype, "current", {
        /**
         * Whether this target has been marked 'current'.
         *
         * 'Current' has special meaning in the RPC protocol: It implies that the
         * Watch backend has sent us all changes up to the point at which the target
         * was added and that the target is consistent with the rest of the watch
         * stream.
         */
        get: function() {
            return this.N;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "resumeToken", {
        /** The last resume token sent to us for this target. */ get: function() {
            return this.C;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "k", {
        /** Whether this target has pending target adds or target removes. */ get: function() {
            return 0 !== this.S;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "$", {
        /** Whether we have modified any state that should trigger a snapshot. */ get: function() {
            return this.F;
        },
        enumerable: !1,
        configurable: !0
    }), 
    /**
     * Applies the resume token to the TargetChange, but only when it has a new
     * value. Empty resumeTokens are discarded.
     */
    t.prototype.O = function(t) {
        t.approximateByteSize() > 0 && (this.F = !0, this.C = t);
    }, 
    /**
     * Creates a target change from the current set of changes.
     *
     * To reset the document changes after raising this snapshot, call
     * `clearPendingChanges()`.
     */
    t.prototype.M = function() {
        var t = on(), e = on(), n = on();
        return this.D.forEach((function(r, i) {
            switch (i) {
              case 0 /* Added */ :
                t = t.add(r);
                break;

              case 2 /* Modified */ :
                e = e.add(r);
                break;

              case 1 /* Removed */ :
                n = n.add(r);
                break;

              default:
                L();
            }
        })), new cn(this.C, this.N, t, e, n);
    }, 
    /**
     * Resets the document changes and sets `hasPendingChanges` to false.
     */
    t.prototype.L = function() {
        this.F = !1, this.D = vn();
    }, t.prototype.B = function(t, e) {
        this.F = !0, this.D = this.D.insert(t, e);
    }, t.prototype.q = function(t) {
        this.F = !0, this.D = this.D.remove(t);
    }, t.prototype.U = function() {
        this.S += 1;
    }, t.prototype.K = function() {
        this.S -= 1;
    }, t.prototype.j = function() {
        this.F = !0, this.N = !0;
    }, t;
}(), pn = /** @class */ function() {
    function t(t) {
        this.W = t, 
        /** The internal state of all tracked targets. */
        this.G = new Map, 
        /** Keeps track of the documents to update since the last raised snapshot. */
        this.H = Je(), 
        /** A mapping of document keys to their set of target IDs. */
        this.J = yn(), 
        /**
             * A list of targets with existence filter mismatches. These targets are
             * known to be inconsistent and their listens needs to be re-established by
             * RemoteStore.
             */
        this.Y = new Ye(V)
        /**
     * Processes and adds the DocumentWatchChange to the current set of changes.
     */;
    }
    return t.prototype.X = function(t) {
        for (var e = 0, n = t.v; e < n.length; e++) {
            var r = n[e];
            t.P && t.P.isFoundDocument() ? this.Z(r, t.P) : this.tt(r, t.key, t.P);
        }
        for (var i = 0, o = t.removedTargetIds; i < o.length; i++) {
            r = o[i];
            this.tt(r, t.key, t.P);
        }
    }, 
    /** Processes and adds the WatchTargetChange to the current set of changes. */ t.prototype.et = function(t) {
        var e = this;
        this.forEachTarget(t, (function(n) {
            var r = e.nt(n);
            switch (t.state) {
              case 0 /* NoChange */ :
                e.st(n) && r.O(t.resumeToken);
                break;

              case 1 /* Added */ :
                // We need to decrement the number of pending acks needed from watch
                // for this targetId.
                r.K(), r.k || 
                // We have a freshly added target, so we need to reset any state
                // that we had previously. This can happen e.g. when remove and add
                // back a target for existence filter mismatches.
                r.L(), r.O(t.resumeToken);
                break;

              case 2 /* Removed */ :
                // We need to keep track of removed targets to we can post-filter and
                // remove any target changes.
                // We need to decrement the number of pending acks needed from watch
                // for this targetId.
                r.K(), r.k || e.removeTarget(n);
                break;

              case 3 /* Current */ :
                e.st(n) && (r.j(), r.O(t.resumeToken));
                break;

              case 4 /* Reset */ :
                e.st(n) && (
                // Reset the target and synthesizes removes for all existing
                // documents. The backend will re-add any documents that still
                // match the target before it sends the next global snapshot.
                e.it(n), r.O(t.resumeToken));
                break;

              default:
                L();
            }
        }));
    }, 
    /**
     * Iterates over all targetIds that the watch change applies to: either the
     * targetIds explicitly listed in the change or the targetIds of all currently
     * active targets.
     */
    t.prototype.forEachTarget = function(t, e) {
        var n = this;
        t.targetIds.length > 0 ? t.targetIds.forEach(e) : this.G.forEach((function(t, r) {
            n.st(r) && e(r);
        }));
    }, 
    /**
     * Handles existence filters and synthesizes deletes for filter mismatches.
     * Targets that are invalidated by filter mismatches are added to
     * `pendingTargetResets`.
     */
    t.prototype.rt = function(t) {
        var e = t.targetId, n = t.V.count, r = this.ot(e);
        if (r) {
            var i = r.target;
            if (xt(i)) if (0 === n) {
                // The existence filter told us the document does not exist. We deduce
                // that this document does not exist and apply a deleted document to
                // our updates. Without applying this deleted document there might be
                // another query that will raise this document as part of a snapshot
                // until it is resolved, essentially exposing inconsistency between
                // queries.
                var o = new at(i.path);
                this.tt(e, o, St.newNoDocument(o, j.min()));
            } else O(1 === n); else this.ct(e) !== n && (
            // Existence filter mismatch: We reset the mapping and raise a new
            // snapshot with `isFromCache:true`.
            this.it(e), this.Y = this.Y.add(e));
        }
    }, 
    /**
     * Converts the currently accumulated state into a remote event at the
     * provided snapshot version. Resets the accumulated changes before returning.
     */
    t.prototype.ut = function(t) {
        var e = this, n = new Map;
        this.G.forEach((function(r, i) {
            var o = e.ot(i);
            if (o) {
                if (r.current && xt(o.target)) {
                    // Document queries for document that don't exist can produce an empty
                    // result set. To update our local cache, we synthesize a document
                    // delete if we have not previously received the document. This
                    // resolves the limbo state of the document, removing it from
                    // limboDocumentRefs.
                    // TODO(dimond): Ideally we would have an explicit lookup target
                    // instead resulting in an explicit delete message and we could
                    // remove this special logic.
                    var s = new at(o.target.path);
                    null !== e.H.get(s) || e.at(i, s) || e.tt(i, s, St.newNoDocument(s, t));
                }
                r.$ && (n.set(i, r.M()), r.L());
            }
        }));
        var r = on();
        // We extract the set of limbo-only document updates as the GC logic
        // special-cases documents that do not appear in the target cache.
        // TODO(gsoltis): Expand on this comment once GC is available in the JS
        // client.
                this.J.forEach((function(t, n) {
            var i = !0;
            n.forEachWhile((function(t) {
                var n = e.ot(t);
                return !n || 2 /* LimboResolution */ === n.purpose || (i = !1, !1);
            })), i && (r = r.add(t));
        }));
        var i = new an(t, n, this.Y, this.H, r);
        return this.H = Je(), this.J = yn(), this.Y = new Ye(V), i;
    }, 
    /**
     * Adds the provided document to the internal list of document updates and
     * its document key to the given target's mapping.
     */
    // Visible for testing.
    t.prototype.Z = function(t, e) {
        if (this.st(t)) {
            var n = this.at(t, e.key) ? 2 /* Modified */ : 0 /* Added */;
            this.nt(t).B(e.key, n), this.H = this.H.insert(e.key, e), this.J = this.J.insert(e.key, this.ht(e.key).add(t));
        }
    }, 
    /**
     * Removes the provided document from the target mapping. If the
     * document no longer matches the target, but the document's state is still
     * known (e.g. we know that the document was deleted or we received the change
     * that caused the filter mismatch), the new document can be provided
     * to update the remote document cache.
     */
    // Visible for testing.
    t.prototype.tt = function(t, e, n) {
        if (this.st(t)) {
            var r = this.nt(t);
            this.at(t, e) ? r.B(e, 1 /* Removed */) : 
            // The document may have entered and left the target before we raised a
            // snapshot, so we can just ignore the change.
            r.q(e), this.J = this.J.insert(e, this.ht(e).delete(t)), n && (this.H = this.H.insert(e, n));
        }
    }, t.prototype.removeTarget = function(t) {
        this.G.delete(t);
    }, 
    /**
     * Returns the current count of documents in the target. This includes both
     * the number of documents that the LocalStore considers to be part of the
     * target as well as any accumulated changes.
     */
    t.prototype.ct = function(t) {
        var e = this.nt(t).M();
        return this.W.getRemoteKeysForTarget(t).size + e.addedDocuments.size - e.removedDocuments.size;
    }, 
    /**
     * Increment the number of acks needed from watch before we can consider the
     * server to be 'in-sync' with the client's active targets.
     */
    t.prototype.U = function(t) {
        this.nt(t).U();
    }, t.prototype.nt = function(t) {
        var e = this.G.get(t);
        return e || (e = new dn, this.G.set(t, e)), e;
    }, t.prototype.ht = function(t) {
        var e = this.J.get(t);
        return e || (e = new Ye(V), this.J = this.J.insert(t, e)), e;
    }, 
    /**
     * Verifies that the user is still interested in this target (by calling
     * `getTargetDataForTarget()`) and that we are not waiting for pending ADDs
     * from watch.
     */
    t.prototype.st = function(t) {
        var e = null !== this.ot(t);
        return e || k("WatchChangeAggregator", "Detected inactive target", t), e;
    }, 
    /**
     * Returns the TargetData for an active target (i.e. a target that the user
     * is still interested in that has no outstanding target change requests).
     */
    t.prototype.ot = function(t) {
        var e = this.G.get(t);
        return e && e.k ? null : this.W.lt(t);
    }, 
    /**
     * Resets the state of a Watch target to its initial state (e.g. sets
     * 'current' to false, clears the resume token and removes its target mapping
     * from all documents).
     */
    t.prototype.it = function(t) {
        var e = this;
        this.G.set(t, new dn), this.W.getRemoteKeysForTarget(t).forEach((function(n) {
            e.tt(t, n, /*updatedDocument=*/ null);
        }));
    }, 
    /**
     * Returns whether the LocalStore considers the document to be part of the
     * specified target.
     */
    t.prototype.at = function(t, e) {
        return this.W.getRemoteKeysForTarget(t).has(e);
    }, t;
}();

/**
 * A TargetChange specifies the set of changes for a specific target as part of
 * a RemoteEvent. These changes track which documents are added, modified or
 * removed, as well as the target's resume token and whether the target is
 * marked CURRENT.
 * The actual changes *to* documents are not part of the TargetChange since
 * documents may be part of multiple targets.
 */ function yn() {
    return new ze(at.comparator);
}

function vn() {
    return new ze(at.comparator);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var mn = {
    asc: "ASCENDING",
    desc: "DESCENDING"
}, gn = {
    "<": "LESS_THAN",
    "<=": "LESS_THAN_OR_EQUAL",
    ">": "GREATER_THAN",
    ">=": "GREATER_THAN_OR_EQUAL",
    "==": "EQUAL",
    "!=": "NOT_EQUAL",
    "array-contains": "ARRAY_CONTAINS",
    in: "IN",
    "not-in": "NOT_IN",
    "array-contains-any": "ARRAY_CONTAINS_ANY"
}, wn = function(t, e) {
    this.databaseId = t, this.I = e;
};

/**
 * This class generates JsonObject values for the Datastore API suitable for
 * sending to either GRPC stub methods or via the JSON/HTTP REST API.
 *
 * The serializer supports both Protobuf.js and Proto3 JSON formats. By
 * setting `useProto3Json` to true, the serializer will use the Proto3 JSON
 * format.
 *
 * For a description of the Proto3 JSON format check
 * https://developers.google.com/protocol-buffers/docs/proto3#json
 *
 * TODO(klimt): We can remove the databaseId argument if we keep the full
 * resource name in documents.
 */
/**
 * Returns a value for a Date that's appropriate to put into a proto.
 */
function bn(t, e) {
    return t.I ? new Date(1e3 * e.seconds).toISOString().replace(/\.\d*/, "").replace("Z", "") + "." + ("000000000" + e.nanoseconds).slice(-9) + "Z" : {
        seconds: "" + e.seconds,
        nanos: e.nanoseconds
    };
}

/**
 * Returns a value for bytes that's appropriate to put in a proto.
 *
 * Visible for testing.
 */ function In(t, e) {
    return t.I ? e.toBase64() : e.toUint8Array();
}

/**
 * Returns a ByteString based on the proto string value.
 */ function Tn(t, e) {
    return bn(t, e.toTimestamp());
}

function En(t) {
    return O(!!t), j.fromTimestamp(function(t) {
        var e = Z(t);
        return new B(e.seconds, e.nanos);
    }(t));
}

function _n(t, e) {
    return function(t) {
        return new W([ "projects", t.projectId, "databases", t.database ]);
    }(t).child("documents").child(e).canonicalString();
}

function Sn(t) {
    var e = W.fromString(t);
    return O(Yn(e)), e;
}

function Nn(t, e) {
    return _n(t.databaseId, e.path);
}

function Dn(t, e) {
    var n = Sn(e);
    if (n.get(1) !== t.databaseId.projectId) throw new N(S.INVALID_ARGUMENT, "Tried to deserialize key from different project: " + n.get(1) + " vs " + t.databaseId.projectId);
    if (n.get(3) !== t.databaseId.database) throw new N(S.INVALID_ARGUMENT, "Tried to deserialize key from different database: " + n.get(3) + " vs " + t.databaseId.database);
    return new at(Cn(n));
}

function An(t, e) {
    return _n(t.databaseId, e);
}

function kn(t) {
    var e = Sn(t);
    // In v1beta1 queries for collections at the root did not have a trailing
    // "/documents". In v1 all resource paths contain "/documents". Preserve the
    // ability to read the v1beta1 form for compatibility with queries persisted
    // in the local target cache.
        return 4 === e.length ? W.emptyPath() : Cn(e);
}

function xn(t) {
    return new W([ "projects", t.databaseId.projectId, "databases", t.databaseId.database ]).canonicalString();
}

function Cn(t) {
    return O(t.length > 4 && "documents" === t.get(4)), t.popFirst(5)
    /** Creates a Document proto from key and fields (but no create/update time) */;
}

function Rn(t, e, n) {
    return {
        name: Nn(t, e),
        fields: n.value.mapValue.fields
    };
}

function Ln(t, e, n) {
    var r = Dn(t, e.name), i = En(e.updateTime), o = new Et({
        mapValue: {
            fields: e.fields
        }
    }), s = St.newFoundDocument(r, i, o);
    return n && s.setHasCommittedMutations(), n ? s.setHasCommittedMutations() : s;
}

function On(t, e) {
    var n;
    if (e instanceof Oe) n = {
        update: Rn(t, e.key, e.value)
    }; else if (e instanceof Be) n = {
        delete: Nn(t, e.key)
    }; else if (e instanceof Pe) n = {
        update: Rn(t, e.key, e.data),
        updateMask: Hn(e.fieldMask)
    }; else {
        if (!(e instanceof je)) return L();
        n = {
            verify: Nn(t, e.key)
        };
    }
    return e.fieldTransforms.length > 0 && (n.updateTransforms = e.fieldTransforms.map((function(t) {
        return function(t, e) {
            var n = e.transform;
            if (n instanceof ve) return {
                fieldPath: e.field.canonicalString(),
                setToServerValue: "REQUEST_TIME"
            };
            if (n instanceof me) return {
                fieldPath: e.field.canonicalString(),
                appendMissingElements: {
                    values: n.elements
                }
            };
            if (n instanceof we) return {
                fieldPath: e.field.canonicalString(),
                removeAllFromArray: {
                    values: n.elements
                }
            };
            if (n instanceof Ie) return {
                fieldPath: e.field.canonicalString(),
                increment: n.A
            };
            throw L();
        }(0, t);
    }))), e.precondition.isNone || (n.currentDocument = function(t, e) {
        return void 0 !== e.updateTime ? {
            updateTime: Tn(t, e.updateTime)
        } : void 0 !== e.exists ? {
            exists: e.exists
        } : L();
    }(t, e.precondition)), n;
}

function Pn(t, e) {
    var n = e.currentDocument ? function(t) {
        return void 0 !== t.updateTime ? Ne.updateTime(En(t.updateTime)) : void 0 !== t.exists ? Ne.exists(t.exists) : Ne.none();
    }(e.currentDocument) : Ne.none(), r = e.updateTransforms ? e.updateTransforms.map((function(e) {
        return function(t, e) {
            var n = null;
            if ("setToServerValue" in e) O("REQUEST_TIME" === e.setToServerValue), n = new ve; else if ("appendMissingElements" in e) {
                var r = e.appendMissingElements.values || [];
                n = new me(r);
            } else if ("removeAllFromArray" in e) {
                var i = e.removeAllFromArray.values || [];
                n = new we(i);
            } else "increment" in e ? n = new Ie(t, e.increment) : L();
            var o = Y.fromServerFormat(e.fieldPath);
            return new _e(o, n);
        }(t, e);
    })) : [];
    if (e.update) {
        e.update.name;
        var i = Dn(t, e.update.name), o = new Et({
            mapValue: {
                fields: e.update.fields
            }
        });
        if (e.updateMask) {
            var s = function(t) {
                var e = t.fieldPaths || [];
                return new $(e.map((function(t) {
                    return Y.fromServerFormat(t);
                })));
            }(e.updateMask);
            return new Pe(i, o, s, n, r);
        }
        return new Oe(i, o, n, r);
    }
    if (e.delete) {
        var u = Dn(t, e.delete);
        return new Be(u, n);
    }
    if (e.verify) {
        var a = Dn(t, e.verify);
        return new je(a, n);
    }
    return L();
}

function Fn(t, e) {
    return {
        documents: [ An(t, e.path) ]
    };
}

function Mn(t, e) {
    // Dissect the path into parent, collectionId, and optional key filter.
    var n = {
        structuredQuery: {}
    }, r = e.path;
    null !== e.collectionGroup ? (n.parent = An(t, r), n.structuredQuery.from = [ {
        collectionId: e.collectionGroup,
        allDescendants: !0
    } ]) : (n.parent = An(t, r.popLast()), n.structuredQuery.from = [ {
        collectionId: r.lastSegment()
    } ]);
    var i = function(t) {
        if (0 !== t.length) {
            var e = t.map((function(t) {
                // visible for testing
                return function(t) {
                    if ("==" /* EQUAL */ === t.op) {
                        if (bt(t.value)) return {
                            unaryFilter: {
                                field: Gn(t.field),
                                op: "IS_NAN"
                            }
                        };
                        if (wt(t.value)) return {
                            unaryFilter: {
                                field: Gn(t.field),
                                op: "IS_NULL"
                            }
                        };
                    } else if ("!=" /* NOT_EQUAL */ === t.op) {
                        if (bt(t.value)) return {
                            unaryFilter: {
                                field: Gn(t.field),
                                op: "IS_NOT_NAN"
                            }
                        };
                        if (wt(t.value)) return {
                            unaryFilter: {
                                field: Gn(t.field),
                                op: "IS_NOT_NULL"
                            }
                        };
                    }
                    return {
                        fieldFilter: {
                            field: Gn(t.field),
                            op: Kn(t.op),
                            value: t.value
                        }
                    };
                }(t);
            }));
            return 1 === e.length ? e[0] : {
                compositeFilter: {
                    op: "AND",
                    filters: e
                }
            };
        }
    }(e.filters);
    i && (n.structuredQuery.where = i);
    var o = function(t) {
        if (0 !== t.length) return t.map((function(t) {
            // visible for testing
            return function(t) {
                return {
                    field: Gn(t.field),
                    direction: jn(t.dir)
                };
            }(t);
        }));
    }(e.orderBy);
    o && (n.structuredQuery.orderBy = o);
    var s = function(t, e) {
        return t.I || ot(e) ? e : {
            value: e
        };
    }(t, e.limit);
    return null !== s && (n.structuredQuery.limit = s), e.startAt && (n.structuredQuery.startAt = Un(e.startAt)), 
    e.endAt && (n.structuredQuery.endAt = Un(e.endAt)), n;
}

function Vn(t) {
    var e = kn(t.parent), n = t.structuredQuery, r = n.from ? n.from.length : 0, i = null;
    if (r > 0) {
        O(1 === r);
        var o = n.from[0];
        o.allDescendants ? i = o.collectionId : e = e.child(o.collectionId);
    }
    var s = [];
    n.where && (s = qn(n.where));
    var u = [];
    n.orderBy && (u = n.orderBy.map((function(t) {
        return function(t) {
            return new jt(Qn(t.field), 
            // visible for testing
            function(t) {
                switch (t) {
                  case "ASCENDING":
                    return "asc" /* ASCENDING */;

                  case "DESCENDING":
                    return "desc" /* DESCENDING */;

                  default:
                    return;
                }
            }(t.direction));
        }(t);
    })));
    var a = null;
    n.limit && (a = function(t) {
        var e;
        return ot(e = "object" == typeof t ? t.value : t) ? null : e;
    }(n.limit));
    var c = null;
    n.startAt && (c = Bn(n.startAt));
    var h = null;
    return n.endAt && (h = Bn(n.endAt)), Wt(e, i, u, s, a, "F" /* First */ , c, h);
}

function qn(t) {
    return t ? void 0 !== t.unaryFilter ? [ Wn(t) ] : void 0 !== t.fieldFilter ? [ zn(t) ] : void 0 !== t.compositeFilter ? t.compositeFilter.filters.map((function(t) {
        return qn(t);
    })).reduce((function(t, e) {
        return t.concat(e);
    })) : L() : [];
}

function Un(t) {
    return {
        before: t.before,
        values: t.position
    };
}

function Bn(t) {
    var e = !!t.before, n = t.values || [];
    return new Ut(n, e);
}

// visible for testing
function jn(t) {
    return mn[t];
}

function Kn(t) {
    return gn[t];
}

function Gn(t) {
    return {
        fieldPath: t.canonicalString()
    };
}

function Qn(t) {
    return Y.fromServerFormat(t.fieldPath);
}

function zn(t) {
    return Ct.create(Qn(t.fieldFilter.field), function(t) {
        switch (t) {
          case "EQUAL":
            return "==" /* EQUAL */;

          case "NOT_EQUAL":
            return "!=" /* NOT_EQUAL */;

          case "GREATER_THAN":
            return ">" /* GREATER_THAN */;

          case "GREATER_THAN_OR_EQUAL":
            return ">=" /* GREATER_THAN_OR_EQUAL */;

          case "LESS_THAN":
            return "<" /* LESS_THAN */;

          case "LESS_THAN_OR_EQUAL":
            return "<=" /* LESS_THAN_OR_EQUAL */;

          case "ARRAY_CONTAINS":
            return "array-contains" /* ARRAY_CONTAINS */;

          case "IN":
            return "in" /* IN */;

          case "NOT_IN":
            return "not-in" /* NOT_IN */;

          case "ARRAY_CONTAINS_ANY":
            return "array-contains-any" /* ARRAY_CONTAINS_ANY */;

          case "OPERATOR_UNSPECIFIED":
          default:
            return L();
        }
    }(t.fieldFilter.op), t.fieldFilter.value);
}

function Wn(t) {
    switch (t.unaryFilter.op) {
      case "IS_NAN":
        var e = Qn(t.unaryFilter.field);
        return Ct.create(e, "==" /* EQUAL */ , {
            doubleValue: NaN
        });

      case "IS_NULL":
        var n = Qn(t.unaryFilter.field);
        return Ct.create(n, "==" /* EQUAL */ , {
            nullValue: "NULL_VALUE"
        });

      case "IS_NOT_NAN":
        var r = Qn(t.unaryFilter.field);
        return Ct.create(r, "!=" /* NOT_EQUAL */ , {
            doubleValue: NaN
        });

      case "IS_NOT_NULL":
        var i = Qn(t.unaryFilter.field);
        return Ct.create(i, "!=" /* NOT_EQUAL */ , {
            nullValue: "NULL_VALUE"
        });

      case "OPERATOR_UNSPECIFIED":
      default:
        return L();
    }
}

function Hn(t) {
    var e = [];
    return t.fields.forEach((function(t) {
        return e.push(t.canonicalString());
    })), {
        fieldPaths: e
    };
}

function Yn(t) {
    // Resource names have at least 4 components (project ID, database ID)
    return t.length >= 4 && "projects" === t.get(0) && "databases" === t.get(2);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Encodes a resource path into a IndexedDb-compatible string form.
 */ function $n(t) {
    for (var e = "", n = 0; n < t.length; n++) e.length > 0 && (e = Jn(e)), e = Xn(t.get(n), e);
    return Jn(e);
}

/** Encodes a single segment of a resource path into the given result */ function Xn(t, e) {
    for (var n = e, r = t.length, i = 0; i < r; i++) {
        var o = t.charAt(i);
        switch (o) {
          case "\0":
            n += "";
            break;

          case "":
            n += "";
            break;

          default:
            n += o;
        }
    }
    return n;
}

/** Encodes a path separator into the given result */ function Jn(t) {
    return t + "";
}

/**
 * Decodes the given IndexedDb-compatible string form of a resource path into
 * a ResourcePath instance. Note that this method is not suitable for use with
 * decoding resource names from the server; those are One Platform format
 * strings.
 */ function Zn(t) {
    // Event the empty path must encode as a path of at least length 2. A path
    // with exactly 2 must be the empty path.
    var e = t.length;
    if (O(e >= 2), 2 === e) return O("" === t.charAt(0) && "" === t.charAt(1)), W.emptyPath();
    // Escape characters cannot exist past the second-to-last position in the
    // source value.
        for (var n = e - 2, r = [], i = "", o = 0; o < e; ) {
        // The last two characters of a valid encoded path must be a separator, so
        // there must be an end to this segment.
        var s = t.indexOf("", o);
        switch ((s < 0 || s > n) && L(), t.charAt(s + 1)) {
          case "":
            var u = t.substring(o, s), a = void 0;
            0 === i.length ? 
            // Avoid copying for the common case of a segment that excludes \0
            // and \001
            a = u : (a = i += u, i = ""), r.push(a);
            break;

          case "":
            i += t.substring(o, s), i += "\0";
            break;

          case "":
            // The escape character can be used in the output to encode itself.
            i += t.substring(o, s + 1);
            break;

          default:
            L();
        }
        o = s + 2;
    }
    return new W(r);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Schema Version for the Web client:
 * 1.  Initial version including Mutation Queue, Query Cache, and Remote
 *     Document Cache
 * 2.  Used to ensure a targetGlobal object exists and add targetCount to it. No
 *     longer required because migration 3 unconditionally clears it.
 * 3.  Dropped and re-created Query Cache to deal with cache corruption related
 *     to limbo resolution. Addresses
 *     https://github.com/firebase/firebase-ios-sdk/issues/1548
 * 4.  Multi-Tab Support.
 * 5.  Removal of held write acks.
 * 6.  Create document global for tracking document cache size.
 * 7.  Ensure every cached document has a sentinel row with a sequence number.
 * 8.  Add collection-parent index for Collection Group queries.
 * 9.  Change RemoteDocumentChanges store to be keyed by readTime rather than
 *     an auto-incrementing ID. This is required for Index-Free queries.
 * 10. Rewrite the canonical IDs to the explicit Protobuf-based format.
 * 11. Add bundles and named_queries for bundle support.
 */
/**
 * Wrapper class to store timestamps (seconds and nanos) in IndexedDb objects.
 */ var tr = function(t, e) {
    this.seconds = t, this.nanoseconds = e;
}, er = function(t, 
/** Whether to allow shared access from multiple tabs. */
e, n) {
    this.ownerId = t, this.allowTabSynchronization = e, this.leaseTimestampMs = n;
};

/**
 * A singleton object to be stored in the 'owner' store in IndexedDb.
 *
 * A given database can have a single primary tab assigned at a given time. That
 * tab must validate that it is still holding the primary lease before every
 * operation that requires locked access. The primary tab should regularly
 * write an updated timestamp to this lease to prevent other tabs from
 * "stealing" the primary lease
 */
/**
 * Name of the IndexedDb object store.
 *
 * Note that the name 'owner' is chosen to ensure backwards compatibility with
 * older clients that only supported single locked access to the persistence
 * layer.
 */
er.store = "owner", 
/**
     * The key string used for the single object that exists in the
     * DbPrimaryClient store.
     */
er.key = "owner";

/**
 * An object to be stored in the 'mutationQueues' store in IndexedDb.
 *
 * Each user gets a single queue of MutationBatches to apply to the server.
 * DbMutationQueue tracks the metadata about the queue.
 */
var nr = function(
/**
     * The normalized user ID to which this queue belongs.
     */
t, 
/**
     * An identifier for the highest numbered batch that has been acknowledged
     * by the server. All MutationBatches in this queue with batchIds less
     * than or equal to this value are considered to have been acknowledged by
     * the server.
     *
     * NOTE: this is deprecated and no longer used by the code.
     */
e, 
/**
     * A stream token that was previously sent by the server.
     *
     * See StreamingWriteRequest in datastore.proto for more details about
     * usage.
     *
     * After sending this token, earlier tokens may not be used anymore so
     * only a single stream token is retained.
     *
     * NOTE: this is deprecated and no longer used by the code.
     */
n) {
    this.userId = t, this.lastAcknowledgedBatchId = e, this.lastStreamToken = n;
};

/** Name of the IndexedDb object store.  */ nr.store = "mutationQueues", 
/** Keys are automatically assigned via the userId property. */
nr.keyPath = "userId";

/**
 * An object to be stored in the 'mutations' store in IndexedDb.
 *
 * Represents a batch of user-level mutations intended to be sent to the server
 * in a single write. Each user-level batch gets a separate DbMutationBatch
 * with a new batchId.
 */
var rr = function(
/**
     * The normalized user ID to which this batch belongs.
     */
t, 
/**
     * An identifier for this batch, allocated using an auto-generated key.
     */
e, 
/**
     * The local write time of the batch, stored as milliseconds since the
     * epoch.
     */
n, 
/**
     * A list of "mutations" that represent a partial base state from when this
     * write batch was initially created. During local application of the write
     * batch, these baseMutations are applied prior to the real writes in order
     * to override certain document fields from the remote document cache. This
     * is necessary in the case of non-idempotent writes (e.g. `increment()`
     * transforms) to make sure that the local view of the modified documents
     * doesn't flicker if the remote document cache receives the result of the
     * non-idempotent write before the write is removed from the queue.
     *
     * These mutations are never sent to the backend.
     */
r, 
/**
     * A list of mutations to apply. All mutations will be applied atomically.
     *
     * Mutations are serialized via toMutation().
     */
i) {
    this.userId = t, this.batchId = e, this.localWriteTimeMs = n, this.baseMutations = r, 
    this.mutations = i;
};

/** Name of the IndexedDb object store.  */ rr.store = "mutations", 
/** Keys are automatically assigned via the userId, batchId properties. */
rr.keyPath = "batchId", 
/** The index name for lookup of mutations by user. */
rr.userMutationsIndex = "userMutationsIndex", 
/** The user mutations index is keyed by [userId, batchId] pairs. */
rr.userMutationsKeyPath = [ "userId", "batchId" ];

/**
 * An object to be stored in the 'documentMutations' store in IndexedDb.
 *
 * A manually maintained index of all the mutation batches that affect a given
 * document key. The rows in this table are references based on the contents of
 * DbMutationBatch.mutations.
 */
var ir = /** @class */ function() {
    function t() {}
    /**
     * Creates a [userId] key for use in the DbDocumentMutations index to iterate
     * over all of a user's document mutations.
     */    return t.prefixForUser = function(t) {
        return [ t ];
    }, 
    /**
     * Creates a [userId, encodedPath] key for use in the DbDocumentMutations
     * index to iterate over all at document mutations for a given path or lower.
     */
    t.prefixForPath = function(t, e) {
        return [ t, $n(e) ];
    }, 
    /**
     * Creates a full index key of [userId, encodedPath, batchId] for inserting
     * and deleting into the DbDocumentMutations index.
     */
    t.key = function(t, e, n) {
        return [ t, $n(e), n ];
    }, t;
}();

ir.store = "documentMutations", 
/**
     * Because we store all the useful information for this store in the key,
     * there is no useful information to store as the value. The raw (unencoded)
     * path cannot be stored because IndexedDb doesn't store prototype
     * information.
     */
ir.PLACEHOLDER = new ir;

/**
 * Represents the known absence of a document at a particular version.
 * Stored in IndexedDb as part of a DbRemoteDocument object.
 */
var or = function(t, e) {
    this.path = t, this.readTime = e;
}, sr = function(t, e) {
    this.path = t, this.version = e;
}, ur = 
// TODO: We are currently storing full document keys almost three times
// (once as part of the primary key, once - partly - as `parentPath` and once
// inside the encoded documents). During our next migration, we should
// rewrite the primary key as parentPath + document ID which would allow us
// to drop one value.
function(
/**
     * Set to an instance of DbUnknownDocument if the data for a document is
     * not known, but it is known that a document exists at the specified
     * version (e.g. it had a successful update applied to it)
     */
t, 
/**
     * Set to an instance of a DbNoDocument if it is known that no document
     * exists.
     */
e, 
/**
     * Set to an instance of a Document if there's a cached version of the
     * document.
     */
n, 
/**
     * Documents that were written to the remote document store based on
     * a write acknowledgment are marked with `hasCommittedMutations`. These
     * documents are potentially inconsistent with the backend's copy and use
     * the write's commit version as their document version.
     */
r, 
/**
     * When the document was read from the backend. Undefined for data written
     * prior to schema version 9.
     */
i, 
/**
     * The path of the collection this document is part of. Undefined for data
     * written prior to schema version 9.
     */
o) {
    this.unknownDocument = t, this.noDocument = e, this.document = n, this.hasCommittedMutations = r, 
    this.readTime = i, this.parentPath = o;
};

/**
 * Represents a document that is known to exist but whose data is unknown.
 * Stored in IndexedDb as part of a DbRemoteDocument object.
 */ ur.store = "remoteDocuments", 
/**
     * An index that provides access to all entries sorted by read time (which
     * corresponds to the last modification time of each row).
     *
     * This index is used to provide a changelog for Multi-Tab.
     */
ur.readTimeIndex = "readTimeIndex", ur.readTimeIndexPath = "readTime", 
/**
     * An index that provides access to documents in a collection sorted by read
     * time.
     *
     * This index is used to allow the RemoteDocumentCache to fetch newly changed
     * documents in a collection.
     */
ur.collectionReadTimeIndex = "collectionReadTimeIndex", ur.collectionReadTimeIndexPath = [ "parentPath", "readTime" ];

/**
 * Contains a single entry that has metadata about the remote document cache.
 */
var ar = 
/**
     * @param byteSize - Approximately the total size in bytes of all the
     * documents in the document cache.
     */
function(t) {
    this.byteSize = t;
};

ar.store = "remoteDocumentGlobal", ar.key = "remoteDocumentGlobalKey";

/**
 * An object to be stored in the 'targets' store in IndexedDb.
 *
 * This is based on and should be kept in sync with the proto used in the iOS
 * client.
 *
 * Each query the client listens to against the server is tracked on disk so
 * that the query can be efficiently resumed on restart.
 */
var cr = function(
/**
     * An auto-generated sequential numeric identifier for the query.
     *
     * Queries are stored using their canonicalId as the key, but these
     * canonicalIds can be quite long so we additionally assign a unique
     * queryId which can be used by referenced data structures (e.g.
     * indexes) to minimize the on-disk cost.
     */
t, 
/**
     * The canonical string representing this query. This is not unique.
     */
e, 
/**
     * The last readTime received from the Watch Service for this query.
     *
     * This is the same value as TargetChange.read_time in the protos.
     */
n, 
/**
     * An opaque, server-assigned token that allows watching a query to be
     * resumed after disconnecting without retransmitting all the data
     * that matches the query. The resume token essentially identifies a
     * point in time from which the server should resume sending results.
     *
     * This is related to the snapshotVersion in that the resumeToken
     * effectively also encodes that value, but the resumeToken is opaque
     * and sometimes encodes additional information.
     *
     * A consequence of this is that the resumeToken should be used when
     * asking the server to reason about where this client is in the watch
     * stream, but the client should use the snapshotVersion for its own
     * purposes.
     *
     * This is the same value as TargetChange.resume_token in the protos.
     */
r, 
/**
     * A sequence number representing the last time this query was
     * listened to, used for garbage collection purposes.
     *
     * Conventionally this would be a timestamp value, but device-local
     * clocks are unreliable and they must be able to create new listens
     * even while disconnected. Instead this should be a monotonically
     * increasing number that's incremented on each listen call.
     *
     * This is different from the queryId since the queryId is an
     * immutable identifier assigned to the Query on first use while
     * lastListenSequenceNumber is updated every time the query is
     * listened to.
     */
i, 
/**
     * Denotes the maximum snapshot version at which the associated query view
     * contained no limbo documents.  Undefined for data written prior to
     * schema version 9.
     */
o, 
/**
     * The query for this target.
     *
     * Because canonical ids are not unique we must store the actual query. We
     * use the proto to have an object we can persist without having to
     * duplicate translation logic to and from a `Query` object.
     */
s) {
    this.targetId = t, this.canonicalId = e, this.readTime = n, this.resumeToken = r, 
    this.lastListenSequenceNumber = i, this.lastLimboFreeSnapshotVersion = o, this.query = s;
};

cr.store = "targets", 
/** Keys are automatically assigned via the targetId property. */
cr.keyPath = "targetId", 
/** The name of the queryTargets index. */
cr.queryTargetsIndexName = "queryTargetsIndex", 
/**
     * The index of all canonicalIds to the targets that they match. This is not
     * a unique mapping because canonicalId does not promise a unique name for all
     * possible queries, so we append the targetId to make the mapping unique.
     */
cr.queryTargetsKeyPath = [ "canonicalId", "targetId" ];

/**
 * An object representing an association between a target and a document, or a
 * sentinel row marking the last sequence number at which a document was used.
 * Each document cached must have a corresponding sentinel row before lru
 * garbage collection is enabled.
 *
 * The target associations and sentinel rows are co-located so that orphaned
 * documents and their sequence numbers can be identified efficiently via a scan
 * of this store.
 */
var hr = function(
/**
     * The targetId identifying a target or 0 for a sentinel row.
     */
t, 
/**
     * The path to the document, as encoded in the key.
     */
e, 
/**
     * If this is a sentinel row, this should be the sequence number of the last
     * time the document specified by `path` was used. Otherwise, it should be
     * `undefined`.
     */
n) {
    this.targetId = t, this.path = e, this.sequenceNumber = n;
};

/** Name of the IndexedDb object store.  */ hr.store = "targetDocuments", 
/** Keys are automatically assigned via the targetId, path properties. */
hr.keyPath = [ "targetId", "path" ], 
/** The index name for the reverse index. */
hr.documentTargetsIndex = "documentTargetsIndex", 
/** We also need to create the reverse index for these properties. */
hr.documentTargetsKeyPath = [ "path", "targetId" ];

/**
 * A record of global state tracked across all Targets, tracked separately
 * to avoid the need for extra indexes.
 *
 * This should be kept in-sync with the proto used in the iOS client.
 */
var fr = function(
/**
     * The highest numbered target id across all targets.
     *
     * See DbTarget.targetId.
     */
t, 
/**
     * The highest numbered lastListenSequenceNumber across all targets.
     *
     * See DbTarget.lastListenSequenceNumber.
     */
e, 
/**
     * A global snapshot version representing the last consistent snapshot we
     * received from the backend. This is monotonically increasing and any
     * snapshots received from the backend prior to this version (e.g. for
     * targets resumed with a resumeToken) should be suppressed (buffered)
     * until the backend has caught up to this snapshot version again. This
     * prevents our cache from ever going backwards in time.
     */
n, 
/**
     * The number of targets persisted.
     */
r) {
    this.highestTargetId = t, this.highestListenSequenceNumber = e, this.lastRemoteSnapshotVersion = n, 
    this.targetCount = r;
};

/**
 * The key string used for the single object that exists in the
 * DbTargetGlobal store.
 */ fr.key = "targetGlobalKey", fr.store = "targetGlobal";

/**
 * An object representing an association between a Collection id (e.g. 'messages')
 * to a parent path (e.g. '/chats/123') that contains it as a (sub)collection.
 * This is used to efficiently find all collections to query when performing
 * a Collection Group query.
 */
var lr = function(
/**
     * The collectionId (e.g. 'messages')
     */
t, 
/**
     * The path to the parent (either a document location or an empty path for
     * a root-level collection).
     */
e) {
    this.collectionId = t, this.parent = e;
};

/** Name of the IndexedDb object store. */ lr.store = "collectionParents", 
/** Keys are automatically assigned via the collectionId, parent properties. */
lr.keyPath = [ "collectionId", "parent" ];

/**
 * A record of the metadata state of each client.
 *
 * PORTING NOTE: This is used to synchronize multi-tab state and does not need
 * to be ported to iOS or Android.
 */
var dr = function(
// Note: Previous schema versions included a field
// "lastProcessedDocumentChangeId". Don't use anymore.
/** The auto-generated client id assigned at client startup. */
t, 
/** The last time this state was updated. */
e, 
/** Whether the client's network connection is enabled. */
n, 
/** Whether this client is running in a foreground tab. */
r) {
    this.clientId = t, this.updateTimeMs = e, this.networkEnabled = n, this.inForeground = r;
};

/** Name of the IndexedDb object store. */ dr.store = "clientMetadata", 
/** Keys are automatically assigned via the clientId properties. */
dr.keyPath = "clientId";

/**
 * A object representing a bundle loaded by the SDK.
 */
var pr = function(
/** The ID of the loaded bundle. */
t, 
/** The create time of the loaded bundle. */
e, 
/** The schema version of the loaded bundle. */
n) {
    this.bundleId = t, this.createTime = e, this.version = n;
};

/** Name of the IndexedDb object store. */ pr.store = "bundles", pr.keyPath = "bundleId";

/**
 * A object representing a named query loaded by the SDK via a bundle.
 */
var yr = function(
/** The name of the query. */
t, 
/** The read time of the results saved in the bundle from the named query. */
e, 
/** The query saved in the bundle. */
n) {
    this.name = t, this.readTime = e, this.bundledQuery = n;
};

/** Name of the IndexedDb object store. */ yr.store = "namedQueries", yr.keyPath = "name";

// Visible for testing
var vr = (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([], (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)((0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([], [ nr.store, rr.store, ir.store, ur.store, cr.store, er.store, fr.store, hr.store ]), [ dr.store ])), [ ar.store ])), [ lr.store ])), [ pr.store, yr.store ]), mr = "The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.", gr = /** @class */ function() {
    function t() {
        this.onCommittedListeners = [];
    }
    return t.prototype.addOnCommittedListener = function(t) {
        this.onCommittedListeners.push(t);
    }, t.prototype.raiseOnCommittedEvent = function() {
        this.onCommittedListeners.forEach((function(t) {
            return t();
        }));
    }, t;
}(), wr = function() {
    var t = this;
    this.promise = new Promise((function(e, n) {
        t.resolve = e, t.reject = n;
    }));
}, br = /** @class */ function() {
    function t(t) {
        var e = this;
        // NOTE: next/catchCallback will always point to our own wrapper functions,
        // not the user's raw next() or catch() callbacks.
                this.nextCallback = null, this.catchCallback = null, 
        // When the operation resolves, we'll set result or error and mark isDone.
        this.result = void 0, this.error = void 0, this.isDone = !1, 
        // Set to true when .then() or .catch() are called and prevents additional
        // chaining.
        this.callbackAttached = !1, t((function(t) {
            e.isDone = !0, e.result = t, e.nextCallback && 
            // value should be defined unless T is Void, but we can't express
            // that in the type system.
            e.nextCallback(t);
        }), (function(t) {
            e.isDone = !0, e.error = t, e.catchCallback && e.catchCallback(t);
        }));
    }
    return t.prototype.catch = function(t) {
        return this.next(void 0, t);
    }, t.prototype.next = function(e, n) {
        var r = this;
        return this.callbackAttached && L(), this.callbackAttached = !0, this.isDone ? this.error ? this.wrapFailure(n, this.error) : this.wrapSuccess(e, this.result) : new t((function(t, i) {
            r.nextCallback = function(n) {
                r.wrapSuccess(e, n).next(t, i);
            }, r.catchCallback = function(e) {
                r.wrapFailure(n, e).next(t, i);
            };
        }));
    }, t.prototype.toPromise = function() {
        var t = this;
        return new Promise((function(e, n) {
            t.next(e, n);
        }));
    }, t.prototype.wrapUserFunction = function(e) {
        try {
            var n = e();
            return n instanceof t ? n : t.resolve(n);
        } catch (e) {
            return t.reject(e);
        }
    }, t.prototype.wrapSuccess = function(e, n) {
        return e ? this.wrapUserFunction((function() {
            return e(n);
        })) : t.resolve(n);
    }, t.prototype.wrapFailure = function(e, n) {
        return e ? this.wrapUserFunction((function() {
            return e(n);
        })) : t.reject(n);
    }, t.resolve = function(e) {
        return new t((function(t, n) {
            t(e);
        }));
    }, t.reject = function(e) {
        return new t((function(t, n) {
            n(e);
        }));
    }, t.waitFor = function(
    // Accept all Promise types in waitFor().
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    e) {
        return new t((function(t, n) {
            var r = 0, i = 0, o = !1;
            e.forEach((function(e) {
                ++r, e.next((function() {
                    ++i, o && i === r && t();
                }), (function(t) {
                    return n(t);
                }));
            })), o = !0, i === r && t();
        }));
    }, 
    /**
     * Given an array of predicate functions that asynchronously evaluate to a
     * boolean, implements a short-circuiting `or` between the results. Predicates
     * will be evaluated until one of them returns `true`, then stop. The final
     * result will be whether any of them returned `true`.
     */
    t.or = function(e) {
        for (var n = t.resolve(!1), r = function(e) {
            n = n.next((function(n) {
                return n ? t.resolve(n) : e();
            }));
        }, i = 0, o = e; i < o.length; i++) {
            r(o[i]);
        }
        return n;
    }, t.forEach = function(t, e) {
        var n = this, r = [];
        return t.forEach((function(t, i) {
            r.push(e.call(n, t, i));
        })), this.waitFor(r);
    }, t;
}(), Ir = /** @class */ function() {
    function t(t, e) {
        var n = this;
        this.action = t, this.transaction = e, this.aborted = !1, 
        /**
             * A promise that resolves with the result of the IndexedDb transaction.
             */
        this.ft = new wr, this.transaction.oncomplete = function() {
            n.ft.resolve();
        }, this.transaction.onabort = function() {
            e.error ? n.ft.reject(new _r(t, e.error)) : n.ft.resolve();
        }, this.transaction.onerror = function(e) {
            var r = kr(e.target.error);
            n.ft.reject(new _r(t, r));
        };
    }
    return t.open = function(e, n, r, i) {
        try {
            return new t(n, e.transaction(i, r));
        } catch (e) {
            throw new _r(n, e);
        }
    }, Object.defineProperty(t.prototype, "dt", {
        get: function() {
            return this.ft.promise;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.abort = function(t) {
        t && this.ft.reject(t), this.aborted || (k("SimpleDb", "Aborting transaction:", t ? t.message : "Client-initiated abort"), 
        this.aborted = !0, this.transaction.abort());
    }, 
    /**
     * Returns a SimpleDbStore<KeyType, ValueType> for the specified store. All
     * operations performed on the SimpleDbStore happen within the context of this
     * transaction and it cannot be used anymore once the transaction is
     * completed.
     *
     * Note that we can't actually enforce that the KeyType and ValueType are
     * correct, but they allow type safety through the rest of the consuming code.
     */
    t.prototype.store = function(t) {
        var e = this.transaction.objectStore(t);
        return new Nr(e);
    }, t;
}(), Tr = /** @class */ function() {
    /*
     * Creates a new SimpleDb wrapper for IndexedDb database `name`.
     *
     * Note that `version` must not be a downgrade. IndexedDB does not support
     * downgrading the schema version. We currently do not support any way to do
     * versioning outside of IndexedDB's versioning mechanism, as only
     * version-upgrade transactions are allowed to do things like create
     * objectstores.
     */
    function e(n, r, i) {
        this.name = n, this.version = r, this.wt = i, 
        // NOTE: According to https://bugs.webkit.org/show_bug.cgi?id=197050, the
        // bug we're checking for should exist in iOS >= 12.2 and < 13, but for
        // whatever reason it's much harder to hit after 12.2 so we only proactively
        // log on 12.2.
        12.2 === e._t((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getUA)()) && x("Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");
    }
    /** Deletes the specified database. */    return e.delete = function(t) {
        return k("SimpleDb", "Removing database:", t), Dr(window.indexedDB.deleteDatabase(t)).toPromise();
    }, 
    /** Returns true if IndexedDB is available in the current environment. */ e.yt = function() {
        if ("undefined" == typeof indexedDB) return !1;
        if (e.gt()) return !0;
        // We extensively use indexed array values and compound keys,
        // which IE and Edge do not support. However, they still have indexedDB
        // defined on the window, so we need to check for them here and make sure
        // to return that persistence is not enabled for those browsers.
        // For tracking support of this feature, see here:
        // https://developer.microsoft.com/en-us/microsoft-edge/platform/status/indexeddbarraysandmultientrysupport/
        // Check the UA string to find out the browser.
                var n = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getUA)(), r = e._t(n), i = 0 < r && r < 10, o = e.Et(n), s = 0 < o && o < 4.5;
        // IE 10
        // ua = 'Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Trident/6.0)';
        // IE 11
        // ua = 'Mozilla/5.0 (Windows NT 6.3; Trident/7.0; rv:11.0) like Gecko';
        // Edge
        // ua = 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML,
        // like Gecko) Chrome/39.0.2171.71 Safari/537.36 Edge/12.0';
        // iOS Safari: Disable for users running iOS version < 10.
                return !(n.indexOf("MSIE ") > 0 || n.indexOf("Trident/") > 0 || n.indexOf("Edge/") > 0 || i || s);
    }, 
    /**
     * Returns true if the backing IndexedDB store is the Node IndexedDBShim
     * (see https://github.com/axemclion/IndexedDBShim).
     */
    e.gt = function() {
        var t;
        return "undefined" != typeof process && "YES" === (null === (t = process.env) || void 0 === t ? void 0 : t.Tt);
    }, 
    /** Helper to get a typed SimpleDbStore from a transaction. */ e.It = function(t, e) {
        return t.store(e);
    }, 
    // visible for testing
    /** Parse User Agent to determine iOS version. Returns -1 if not found. */
    e._t = function(t) {
        var e = t.match(/i(?:phone|pad|pod) os ([\d_]+)/i), n = e ? e[1].split("_").slice(0, 2).join(".") : "-1";
        return Number(n);
    }, 
    // visible for testing
    /** Parse User Agent to determine Android version. Returns -1 if not found. */
    e.Et = function(t) {
        var e = t.match(/Android ([\d.]+)/i), n = e ? e[1].split(".").slice(0, 2).join(".") : "-1";
        return Number(n);
    }, 
    /**
     * Opens the specified database, creating or upgrading it if necessary.
     */
    e.prototype.At = function(t) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var e, n = this;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
                switch (r.label) {
                  case 0:
                    return this.db ? [ 3 /*break*/ , 2 ] : (k("SimpleDb", "Opening database:", this.name), 
                    e = this, [ 4 /*yield*/ , new Promise((function(e, r) {
                        // TODO(mikelehen): Investigate browser compatibility.
                        // https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API/Using_IndexedDB
                        // suggests IE9 and older WebKit browsers handle upgrade
                        // differently. They expect setVersion, as described here:
                        // https://developer.mozilla.org/en-US/docs/Web/API/IDBVersionChangeRequest/setVersion
                        var i = indexedDB.open(n.name, n.version);
                        i.onsuccess = function(t) {
                            var n = t.target.result;
                            e(n);
                        }, i.onblocked = function() {
                            r(new _r(t, "Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."));
                        }, i.onerror = function(e) {
                            var n = e.target.error;
                            "VersionError" === n.name ? r(new N(S.FAILED_PRECONDITION, "A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.")) : r(new _r(t, n));
                        }, i.onupgradeneeded = function(t) {
                            k("SimpleDb", 'Database "' + n.name + '" requires upgrade from version:', t.oldVersion);
                            var e = t.target.result;
                            n.wt.Rt(e, i.transaction, t.oldVersion, n.version).next((function() {
                                k("SimpleDb", "Database upgrade to version " + n.version + " complete");
                            }));
                        };
                    })) ]);

                  case 1:
                    e.db = r.sent(), r.label = 2;

                  case 2:
                    return [ 2 /*return*/ , (this.bt && (this.db.onversionchange = function(t) {
                        return n.bt(t);
                    }), this.db) ];
                }
            }));
        }));
    }, e.prototype.vt = function(t) {
        this.bt = t, this.db && (this.db.onversionchange = function(e) {
            return t(e);
        });
    }, e.prototype.runTransaction = function(t, e, n, r) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var i, o, s, u, a;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(c) {
                switch (c.label) {
                  case 0:
                    i = "readonly" === e, o = 0, s = function() {
                        var e, s, a, c, h;
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(f) {
                            switch (f.label) {
                              case 0:
                                ++o, f.label = 1;

                              case 1:
                                return f.trys.push([ 1, 4, , 5 ]), [ 4 /*yield*/ , u.At(t) ];

                              case 2:
                                // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
                                // fire), but still return the original transactionFnResult back to the
                                // caller.
                                return u.db = f.sent(), e = Ir.open(u.db, t, i ? "readonly" : "readwrite", n), s = r(e).catch((function(t) {
                                    // Abort the transaction if there was an error.
                                    return e.abort(t), br.reject(t);
                                })).toPromise(), a = {}, s.catch((function() {})), [ 4 /*yield*/ , e.dt ];

                              case 3:
                                return [ 2 /*return*/ , (a.value = (
                                // Wait for the transaction to complete (i.e. IndexedDb's onsuccess event to
                                // fire), but still return the original transactionFnResult back to the
                                // caller.
                                f.sent(), s), a) ];

                              case 4:
                                return c = f.sent(), h = "FirebaseError" !== c.name && o < 3, k("SimpleDb", "Transaction failed with error:", c.message, "Retrying:", h), 
                                u.close(), h ? [ 3 /*break*/ , 5 ] : [ 2 /*return*/ , {
                                    value: Promise.reject(c)
                                } ];

                              case 5:
                                return [ 2 /*return*/ ];
                            }
                        }));
                    }, u = this, c.label = 1;

                  case 1:
                    return [ 5 /*yield**/ , s() ];

                  case 2:
                    if ("object" == typeof (a = c.sent())) return [ 2 /*return*/ , a.value ];
                    c.label = 3;

                  case 3:
                    return [ 3 /*break*/ , 1 ];

                  case 4:
                    return [ 2 /*return*/ ];
                }
            }));
        }));
    }, e.prototype.close = function() {
        this.db && this.db.close(), this.db = void 0;
    }, e;
}(), Er = /** @class */ function() {
    function t(t) {
        this.Pt = t, this.Vt = !1, this.St = null;
    }
    return Object.defineProperty(t.prototype, "isDone", {
        get: function() {
            return this.Vt;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "Dt", {
        get: function() {
            return this.St;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "cursor", {
        set: function(t) {
            this.Pt = t;
        },
        enumerable: !1,
        configurable: !0
    }), 
    /**
     * This function can be called to stop iteration at any point.
     */
    t.prototype.done = function() {
        this.Vt = !0;
    }, 
    /**
     * This function can be called to skip to that next key, which could be
     * an index or a primary key.
     */
    t.prototype.Ct = function(t) {
        this.St = t;
    }, 
    /**
     * Delete the current cursor value from the object store.
     *
     * NOTE: You CANNOT do this with a keysOnly query.
     */
    t.prototype.delete = function() {
        return Dr(this.Pt.delete());
    }, t;
}(), _r = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this, S.UNAVAILABLE, "IndexedDB transaction '" + e + "' failed: " + n) || this).name = "IndexedDbTransactionError", 
        r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(N);

// V2 is no longer usable (see comment at top of file)
// Visible for testing
/**
 * A base class representing a persistence transaction, encapsulating both the
 * transaction's sequence numbers as well as a list of onCommitted listeners.
 *
 * When you call Persistence.runTransaction(), it will create a transaction and
 * pass it to your callback. You then pass it to any method that operates
 * on persistence.
 */
/** Verifies whether `e` is an IndexedDbTransactionError. */ function Sr(t) {
    // Use name equality, as instanceof checks on errors don't work with errors
    // that wrap other errors.
    return "IndexedDbTransactionError" === t.name;
}

/**
 * A wrapper around an IDBObjectStore providing an API that:
 *
 * 1) Has generic KeyType / ValueType parameters to provide strongly-typed
 * methods for acting against the object store.
 * 2) Deals with IndexedDB's onsuccess / onerror event callbacks, making every
 * method return a PersistencePromise instead.
 * 3) Provides a higher-level API to avoid needing to do excessive wrapping of
 * intermediate IndexedDB types (IDBCursorWithValue, etc.)
 */ var Nr = /** @class */ function() {
    function t(t) {
        this.store = t;
    }
    return t.prototype.put = function(t, e) {
        var n;
        return void 0 !== e ? (k("SimpleDb", "PUT", this.store.name, t, e), n = this.store.put(e, t)) : (k("SimpleDb", "PUT", this.store.name, "<auto-key>", t), 
        n = this.store.put(t)), Dr(n);
    }, 
    /**
     * Adds a new value into an Object Store and returns the new key. Similar to
     * IndexedDb's `add()`, this method will fail on primary key collisions.
     *
     * @param value - The object to write.
     * @returns The key of the value to add.
     */
    t.prototype.add = function(t) {
        return k("SimpleDb", "ADD", this.store.name, t, t), Dr(this.store.add(t));
    }, 
    /**
     * Gets the object with the specified key from the specified store, or null
     * if no object exists with the specified key.
     *
     * @key The key of the object to get.
     * @returns The object with the specified key or null if no object exists.
     */
    t.prototype.get = function(t) {
        var e = this;
        // We're doing an unsafe cast to ValueType.
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
                return Dr(this.store.get(t)).next((function(n) {
            // Normalize nonexistence to null.
            return void 0 === n && (n = null), k("SimpleDb", "GET", e.store.name, t, n), n;
        }));
    }, t.prototype.delete = function(t) {
        return k("SimpleDb", "DELETE", this.store.name, t), Dr(this.store.delete(t));
    }, 
    /**
     * If we ever need more of the count variants, we can add overloads. For now,
     * all we need is to count everything in a store.
     *
     * Returns the number of rows in the store.
     */
    t.prototype.count = function() {
        return k("SimpleDb", "COUNT", this.store.name), Dr(this.store.count());
    }, t.prototype.Nt = function(t, e) {
        var n = this.cursor(this.options(t, e)), r = [];
        return this.xt(n, (function(t, e) {
            r.push(e);
        })).next((function() {
            return r;
        }));
    }, t.prototype.Ft = function(t, e) {
        k("SimpleDb", "DELETE ALL", this.store.name);
        var n = this.options(t, e);
        n.kt = !1;
        var r = this.cursor(n);
        return this.xt(r, (function(t, e, n) {
            return n.delete();
        }));
    }, t.prototype.$t = function(t, e) {
        var n;
        e ? n = t : (n = {}, e = t);
        var r = this.cursor(n);
        return this.xt(r, e);
    }, 
    /**
     * Iterates over a store, but waits for the given callback to complete for
     * each entry before iterating the next entry. This allows the callback to do
     * asynchronous work to determine if this iteration should continue.
     *
     * The provided callback should return `true` to continue iteration, and
     * `false` otherwise.
     */
    t.prototype.Ot = function(t) {
        var e = this.cursor({});
        return new br((function(n, r) {
            e.onerror = function(t) {
                var e = kr(t.target.error);
                r(e);
            }, e.onsuccess = function(e) {
                var r = e.target.result;
                r ? t(r.primaryKey, r.value).next((function(t) {
                    t ? r.continue() : n();
                })) : n();
            };
        }));
    }, t.prototype.xt = function(t, e) {
        var n = [];
        return new br((function(r, i) {
            t.onerror = function(t) {
                i(t.target.error);
            }, t.onsuccess = function(t) {
                var i = t.target.result;
                if (i) {
                    var o = new Er(i), s = e(i.primaryKey, i.value, o);
                    if (s instanceof br) {
                        var u = s.catch((function(t) {
                            return o.done(), br.reject(t);
                        }));
                        n.push(u);
                    }
                    o.isDone ? r() : null === o.Dt ? i.continue() : i.continue(o.Dt);
                } else r();
            };
        })).next((function() {
            return br.waitFor(n);
        }));
    }, t.prototype.options = function(t, e) {
        var n;
        return void 0 !== t && ("string" == typeof t ? n = t : e = t), {
            index: n,
            range: e
        };
    }, t.prototype.cursor = function(t) {
        var e = "next";
        if (t.reverse && (e = "prev"), t.index) {
            var n = this.store.index(t.index);
            return t.kt ? n.openKeyCursor(t.range, e) : n.openCursor(t.range, e);
        }
        return this.store.openCursor(t.range, e);
    }, t;
}();

/**
 * Wraps an IDBRequest in a PersistencePromise, using the onsuccess / onerror
 * handlers to resolve / reject the PersistencePromise as appropriate.
 */ function Dr(t) {
    return new br((function(e, n) {
        t.onsuccess = function(t) {
            var n = t.target.result;
            e(n);
        }, t.onerror = function(t) {
            var e = kr(t.target.error);
            n(e);
        };
    }));
}

// Guard so we only report the error once.
var Ar = !1;

function kr(e) {
    var n = Tr._t((0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getUA)());
    if (n >= 12.2 && n < 13) {
        var r = "An internal error was encountered in the Indexed Database server";
        if (e.message.indexOf(r) >= 0) {
            // Wrap error in a more descriptive one.
            var i = new N("internal", "IOS_INDEXEDDB_BUG1: IndexedDb has thrown '" + r + "'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");
            return Ar || (Ar = !0, 
            // Throw a global exception outside of this promise chain, for the user to
            // potentially catch.
            setTimeout((function() {
                throw i;
            }), 0)), i;
        }
    }
    return e;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var xr = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this) || this).Mt = e, r.currentSequenceNumber = n, r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(gr);

function Cr(t, e) {
    var n = P(t);
    return Tr.It(n.Mt, e);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A batch of mutations that will be sent as one unit to the backend.
 */ var Rr = /** @class */ function() {
    /**
     * @param batchId - The unique ID of this mutation batch.
     * @param localWriteTime - The original write time of this mutation.
     * @param baseMutations - Mutations that are used to populate the base
     * values when this mutation is applied locally. This can be used to locally
     * overwrite values that are persisted in the remote document cache. Base
     * mutations are never sent to the backend.
     * @param mutations - The user-provided mutations in this mutation batch.
     * User-provided mutations are applied both locally and remotely on the
     * backend.
     */
    function t(t, e, n, r) {
        this.batchId = t, this.localWriteTime = e, this.baseMutations = n, this.mutations = r
        /**
     * Applies all the mutations in this MutationBatch to the specified document
     * to compute the state of the remote document
     *
     * @param document - The document to apply mutations to.
     * @param batchResult - The result of applying the MutationBatch to the
     * backend.
     */;
    }
    return t.prototype.applyToRemoteDocument = function(t, e) {
        for (var n = e.mutationResults, r = 0; r < this.mutations.length; r++) {
            var i = this.mutations[r];
            i.key.isEqual(t.key) && ke(i, t, n[r]);
        }
    }, 
    /**
     * Computes the local view of a document given all the mutations in this
     * batch.
     *
     * @param document - The document to apply mutations to.
     */
    t.prototype.applyToLocalView = function(t) {
        // First, apply the base state. This allows us to apply non-idempotent
        // transform against a consistent set of values.
        for (var e = 0, n = this.baseMutations; e < n.length; e++) {
            (o = n[e]).key.isEqual(t.key) && xe(o, t, this.localWriteTime);
        }
        // Second, apply all user-provided mutations.
                for (var r = 0, i = this.mutations; r < i.length; r++) {
            var o;
            (o = i[r]).key.isEqual(t.key) && xe(o, t, this.localWriteTime);
        }
    }, 
    /**
     * Computes the local view for all provided documents given the mutations in
     * this batch.
     */
    t.prototype.applyToLocalDocumentSet = function(t) {
        var e = this;
        // TODO(mrschmidt): This implementation is O(n^2). If we apply the mutations
        // directly (as done in `applyToLocalView()`), we can reduce the complexity
        // to O(n).
                this.mutations.forEach((function(n) {
            var r = t.get(n.key), i = r;
            // TODO(mutabledocuments): This method should take a MutableDocumentMap
            // and we should remove this cast.
                        e.applyToLocalView(i), r.isValidDocument() || i.convertToNoDocument(j.min());
        }));
    }, t.prototype.keys = function() {
        return this.mutations.reduce((function(t, e) {
            return t.add(e.key);
        }), on());
    }, t.prototype.isEqual = function(t) {
        return this.batchId === t.batchId && q(this.mutations, t.mutations, (function(t, e) {
            return Re(t, e);
        })) && q(this.baseMutations, t.baseMutations, (function(t, e) {
            return Re(t, e);
        }));
    }, t;
}(), Lr = /** @class */ function() {
    function t(t, e, n, 
    /**
     * A pre-computed mapping from each mutated document to the resulting
     * version.
     */
    r) {
        this.batch = t, this.commitVersion = e, this.mutationResults = n, this.docVersions = r
        /**
     * Creates a new MutationBatchResult for the given batch and results. There
     * must be one result for each mutation in the batch. This static factory
     * caches a document=&gt;version mapping (docVersions).
     */;
    }
    return t.from = function(e, n, r) {
        O(e.mutations.length === r.length);
        for (var i = nn(), o = e.mutations, s = 0; s < o.length; s++) i = i.insert(o[s].key, r[s].version);
        return new t(e, n, r, i);
    }, t;
}(), Or = /** @class */ function() {
    function t(
    /** The target being listened to. */
    t, 
    /**
     * The target ID to which the target corresponds; Assigned by the
     * LocalStore for user listens and by the SyncEngine for limbo watches.
     */
    e, 
    /** The purpose of the target. */
    n, 
    /**
     * The sequence number of the last transaction during which this target data
     * was modified.
     */
    r, 
    /** The latest snapshot version seen for this target. */
    i
    /**
     * The maximum snapshot version at which the associated view
     * contained no limbo documents.
     */ , o
    /**
     * An opaque, server-assigned token that allows watching a target to be
     * resumed after disconnecting without retransmitting all the data that
     * matches the target. The resume token essentially identifies a point in
     * time from which the server should resume sending results.
     */ , s) {
        void 0 === i && (i = j.min()), void 0 === o && (o = j.min()), void 0 === s && (s = X.EMPTY_BYTE_STRING), 
        this.target = t, this.targetId = e, this.purpose = n, this.sequenceNumber = r, this.snapshotVersion = i, 
        this.lastLimboFreeSnapshotVersion = o, this.resumeToken = s;
    }
    /** Creates a new target data instance with an updated sequence number. */    return t.prototype.withSequenceNumber = function(e) {
        return new t(this.target, this.targetId, this.purpose, e, this.snapshotVersion, this.lastLimboFreeSnapshotVersion, this.resumeToken);
    }, 
    /**
     * Creates a new target data instance with an updated resume token and
     * snapshot version.
     */
    t.prototype.withResumeToken = function(e, n) {
        return new t(this.target, this.targetId, this.purpose, this.sequenceNumber, n, this.lastLimboFreeSnapshotVersion, e);
    }, 
    /**
     * Creates a new target data instance with an updated last limbo free
     * snapshot version number.
     */
    t.prototype.withLastLimboFreeSnapshotVersion = function(e) {
        return new t(this.target, this.targetId, this.purpose, this.sequenceNumber, this.snapshotVersion, e, this.resumeToken);
    }, t;
}(), Pr = function(t) {
    this.Lt = t;
};

/** The result of applying a mutation batch to the backend. */
/** Decodes a remote document from storage locally to a Document. */ function Fr(t, e) {
    if (e.document) return Ln(t.Lt, e.document, !!e.hasCommittedMutations);
    if (e.noDocument) {
        var n = at.fromSegments(e.noDocument.path), r = Br(e.noDocument.readTime), i = St.newNoDocument(n, r);
        return e.hasCommittedMutations ? i.setHasCommittedMutations() : i;
    }
    if (e.unknownDocument) {
        var o = at.fromSegments(e.unknownDocument.path);
        r = Br(e.unknownDocument.version);
        return St.newUnknownDocument(o, r);
    }
    return L();
}

/** Encodes a document for storage locally. */ function Mr(t, e, n) {
    var r = Vr(n), i = e.key.path.popLast().toArray();
    if (e.isFoundDocument()) {
        var o = function(t, e) {
            return {
                name: Nn(t, e.key),
                fields: e.data.value.mapValue.fields,
                updateTime: bn(t, e.version.toTimestamp())
            };
        }(t.Lt, e), s = e.hasCommittedMutations;
        return new ur(
        /* unknownDocument= */ null, 
        /* noDocument= */ null, o, s, r, i);
    }
    if (e.isNoDocument()) {
        var u = e.key.path.toArray(), a = Ur(e.version);
        s = e.hasCommittedMutations;
        return new ur(
        /* unknownDocument= */ null, new or(u, a), 
        /* document= */ null, s, r, i);
    }
    if (e.isUnknownDocument()) {
        var c = e.key.path.toArray(), h = Ur(e.version);
        return new ur(new sr(c, h), 
        /* noDocument= */ null, 
        /* document= */ null, 
        /* hasCommittedMutations= */ !0, r, i);
    }
    return L();
}

function Vr(t) {
    var e = t.toTimestamp();
    return [ e.seconds, e.nanoseconds ];
}

function qr(t) {
    var e = new B(t[0], t[1]);
    return j.fromTimestamp(e);
}

function Ur(t) {
    var e = t.toTimestamp();
    return new tr(e.seconds, e.nanoseconds);
}

function Br(t) {
    var e = new B(t.seconds, t.nanoseconds);
    return j.fromTimestamp(e);
}

/** Encodes a batch of mutations into a DbMutationBatch for local storage. */
/** Decodes a DbMutationBatch into a MutationBatch */ function jr(t, e) {
    // Squash old transform mutations into existing patch or set mutations.
    // The replacement of representing `transforms` with `update_transforms`
    // on the SDK means that old `transform` mutations stored in IndexedDB need
    // to be updated to `update_transforms`.
    // TODO(b/174608374): Remove this code once we perform a schema migration.
    for (var n = (e.baseMutations || []).map((function(e) {
        return Pn(t.Lt, e);
    })), r = 0; r < e.mutations.length - 1; ++r) {
        var i = e.mutations[r];
        if (r + 1 < e.mutations.length && void 0 !== e.mutations[r + 1].transform) {
            var o = e.mutations[r + 1];
            i.updateTransforms = o.transform.fieldTransforms, e.mutations.splice(r + 1, 1), 
            ++r;
        }
    }
    var s = e.mutations.map((function(e) {
        return Pn(t.Lt, e);
    })), u = B.fromMillis(e.localWriteTimeMs);
    return new Rr(e.batchId, u, n, s);
}

/** Decodes a DbTarget into TargetData */ function Kr(t) {
    var e, n, r = Br(t.readTime), i = void 0 !== t.lastLimboFreeSnapshotVersion ? Br(t.lastLimboFreeSnapshotVersion) : j.min();
    return void 0 !== t.query.documents ? (O(1 === (n = t.query).documents.length), 
    e = ee(Ht(kn(n.documents[0])))) : e = function(t) {
        return ee(Vn(t));
    }(t.query), new Or(e, t.targetId, 0 /* Listen */ , t.lastListenSequenceNumber, r, i, X.fromBase64String(t.resumeToken))
    /** Encodes TargetData into a DbTarget for storage locally. */;
}

function Gr(t, e) {
    var n, r = Ur(e.snapshotVersion), i = Ur(e.lastLimboFreeSnapshotVersion);
    n = xt(e.target) ? Fn(t.Lt, e.target) : Mn(t.Lt, e.target);
    // We can't store the resumeToken as a ByteString in IndexedDb, so we
    // convert it to a base64 string for storage.
    var o = e.resumeToken.toBase64();
    // lastListenSequenceNumber is always 0 until we do real GC.
        return new cr(e.targetId, At(e.target), r, o, e.sequenceNumber, i, n);
}

/**
 * A helper function for figuring out what kind of query has been stored.
 */
/**
 * Encodes a `BundledQuery` from bundle proto to a Query object.
 *
 * This reconstructs the original query used to build the bundle being loaded,
 * including features exists only in SDKs (for example: limit-to-last).
 */ function Qr(t) {
    var e = Vn({
        parent: t.parent,
        structuredQuery: t.structuredQuery
    });
    return "LAST" === t.limitType ? ne(e, e.limit, "L" /* Last */) : e;
}

/** Encodes a NamedQuery proto object to a NamedQuery model object. */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var zr = /** @class */ function() {
    function t() {}
    return t.prototype.getBundleMetadata = function(t, e) {
        return Wr(t).get(e).next((function(t) {
            if (t) return {
                id: (e = t).bundleId,
                createTime: Br(e.createTime),
                version: e.version
            };
            /** Encodes a DbBundle to a BundleMetadata object. */            var e;
            /** Encodes a BundleMetadata to a DbBundle. */        }));
    }, t.prototype.saveBundleMetadata = function(t, e) {
        return Wr(t).put({
            bundleId: (n = e).id,
            createTime: Ur(En(n.createTime)),
            version: n.version
        });
        var n;
        /** Encodes a DbNamedQuery to a NamedQuery. */    }, t.prototype.getNamedQuery = function(t, e) {
        return Hr(t).get(e).next((function(t) {
            if (t) return {
                name: (e = t).name,
                query: Qr(e.bundledQuery),
                readTime: Br(e.readTime)
            };
            var e;
            /** Encodes a NamedQuery from a bundle proto to a DbNamedQuery. */        }));
    }, t.prototype.saveNamedQuery = function(t, e) {
        return Hr(t).put(function(t) {
            return {
                name: t.name,
                readTime: Ur(En(t.readTime)),
                bundledQuery: t.bundledQuery
            };
        }(e));
    }, t;
}();

/**
 * Helper to get a typed SimpleDbStore for the bundles object store.
 */ function Wr(t) {
    return Cr(t, pr.store);
}

/**
 * Helper to get a typed SimpleDbStore for the namedQueries object store.
 */ function Hr(t) {
    return Cr(t, yr.store);
}

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An in-memory implementation of IndexManager.
 */ var Yr = /** @class */ function() {
    function t() {
        this.Bt = new $r;
    }
    return t.prototype.addToCollectionParentIndex = function(t, e) {
        return this.Bt.add(e), br.resolve();
    }, t.prototype.getCollectionParents = function(t, e) {
        return br.resolve(this.Bt.getEntries(e));
    }, t;
}(), $r = /** @class */ function() {
    function t() {
        this.index = {};
    }
    // Returns false if the entry already existed.
        return t.prototype.add = function(t) {
        var e = t.lastSegment(), n = t.popLast(), r = this.index[e] || new Ye(W.comparator), i = !r.has(n);
        return this.index[e] = r.add(n), i;
    }, t.prototype.has = function(t) {
        var e = t.lastSegment(), n = t.popLast(), r = this.index[e];
        return r && r.has(n);
    }, t.prototype.getEntries = function(t) {
        return (this.index[t] || new Ye(W.comparator)).toArray();
    }, t;
}(), Xr = /** @class */ function() {
    function t() {
        /**
         * An in-memory copy of the index entries we've already written since the SDK
         * launched. Used to avoid re-writing the same entry repeatedly.
         *
         * This is *NOT* a complete cache of what's in persistence and so can never be used to
         * satisfy reads.
         */
        this.qt = new $r;
    }
    /**
     * Adds a new entry to the collection parent index.
     *
     * Repeated calls for the same collectionPath should be avoided within a
     * transaction as IndexedDbIndexManager only caches writes once a transaction
     * has been committed.
     */    return t.prototype.addToCollectionParentIndex = function(t, e) {
        var n = this;
        if (!this.qt.has(e)) {
            var r = e.lastSegment(), i = e.popLast();
            t.addOnCommittedListener((function() {
                // Add the collection to the in memory cache only if the transaction was
                // successfully committed.
                n.qt.add(e);
            }));
            var o = {
                collectionId: r,
                parent: $n(i)
            };
            return Jr(t).put(o);
        }
        return br.resolve();
    }, t.prototype.getCollectionParents = function(t, e) {
        var n = [], r = IDBKeyRange.bound([ e, "" ], [ U(e), "" ], 
        /*lowerOpen=*/ !1, 
        /*upperOpen=*/ !0);
        return Jr(t).Nt(r).next((function(t) {
            for (var r = 0, i = t; r < i.length; r++) {
                var o = i[r];
                // This collectionId guard shouldn't be necessary (and isn't as long
                // as we're running in a real browser), but there's a bug in
                // indexeddbshim that breaks our range in our tests running in node:
                // https://github.com/axemclion/IndexedDBShim/issues/334
                                if (o.collectionId !== e) break;
                n.push(Zn(o.parent));
            }
            return n;
        }));
    }, t;
}();

/**
 * Internal implementation of the collection-parent index exposed by MemoryIndexManager.
 * Also used for in-memory caching by IndexedDbIndexManager and initial index population
 * in indexeddb_schema.ts
 */
/**
 * Helper to get a typed SimpleDbStore for the collectionParents
 * document store.
 */
function Jr(t) {
    return Cr(t, lr.store);
}

/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var Zr = {
    didRun: !1,
    sequenceNumbersCollected: 0,
    targetsRemoved: 0,
    documentsRemoved: 0
}, ti = /** @class */ function() {
    function t(
    // When we attempt to collect, we will only do so if the cache size is greater than this
    // threshold. Passing `COLLECTION_DISABLED` here will cause collection to always be skipped.
    t, 
    // The percentage of sequence numbers that we will attempt to collect
    e, 
    // A cap on the total number of sequence numbers that will be collected. This prevents
    // us from collecting a huge number of sequence numbers if the cache has grown very large.
    n) {
        this.cacheSizeCollectionThreshold = t, this.percentileToCollect = e, this.maximumSequenceNumbersToCollect = n;
    }
    return t.withCacheSize = function(e) {
        return new t(e, t.DEFAULT_COLLECTION_PERCENTILE, t.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);
    }, t;
}();

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Delete a mutation batch and the associated document mutations.
 * @returns A PersistencePromise of the document mutations that were removed.
 */
function ei(t, e, n) {
    var r = t.store(rr.store), i = t.store(ir.store), o = [], s = IDBKeyRange.only(n.batchId), u = 0, a = r.$t({
        range: s
    }, (function(t, e, n) {
        return u++, n.delete();
    }));
    o.push(a.next((function() {
        O(1 === u);
    })));
    for (var c = [], h = 0, f = n.mutations; h < f.length; h++) {
        var l = f[h], d = ir.key(e, l.key.path, n.batchId);
        o.push(i.delete(d)), c.push(l.key);
    }
    return br.waitFor(o).next((function() {
        return c;
    }));
}

/**
 * Returns an approximate size for the given document.
 */ function ni(t) {
    if (!t) return 0;
    var e;
    if (t.document) e = t.document; else if (t.unknownDocument) e = t.unknownDocument; else {
        if (!t.noDocument) throw L();
        e = t.noDocument;
    }
    return JSON.stringify(e).length;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** A mutation queue for a specific user, backed by IndexedDB. */ ti.DEFAULT_COLLECTION_PERCENTILE = 10, 
ti.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3, ti.DEFAULT = new ti(41943040, ti.DEFAULT_COLLECTION_PERCENTILE, ti.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT), 
ti.DISABLED = new ti(-1, 0, 0);

var ri = /** @class */ function() {
    function t(
    /**
     * The normalized userId (e.g. null UID => "" userId) used to store /
     * retrieve mutations.
     */
    t, e, n, r) {
        this.userId = t, this.R = e, this.Ut = n, this.referenceDelegate = r, 
        /**
             * Caches the document keys for pending mutation batches. If the mutation
             * has been removed from IndexedDb, the cached value may continue to
             * be used to retrieve the batch's document keys. To remove a cached value
             * locally, `removeCachedMutationKeys()` should be invoked either directly
             * or through `removeMutationBatches()`.
             *
             * With multi-tab, when the primary client acknowledges or rejects a mutation,
             * this cache is used by secondary clients to invalidate the local
             * view of the documents that were previously affected by the mutation.
             */
        // PORTING NOTE: Multi-tab only.
        this.Qt = {}
        /**
     * Creates a new mutation queue for the given user.
     * @param user - The user for which to create a mutation queue.
     * @param serializer - The serializer to use when persisting to IndexedDb.
     */;
    }
    return t.Kt = function(e, n, r, i) {
        // TODO(mcg): Figure out what constraints there are on userIDs
        // In particular, are there any reserved characters? are empty ids allowed?
        // For the moment store these together in the same mutations table assuming
        // that empty userIDs aren't allowed.
        return O("" !== e.uid), new t(e.isAuthenticated() ? e.uid : "", n, r, i);
    }, t.prototype.checkEmpty = function(t) {
        var e = !0, n = IDBKeyRange.bound([ this.userId, Number.NEGATIVE_INFINITY ], [ this.userId, Number.POSITIVE_INFINITY ]);
        return oi(t).$t({
            index: rr.userMutationsIndex,
            range: n
        }, (function(t, n, r) {
            e = !1, r.done();
        })).next((function() {
            return e;
        }));
    }, t.prototype.addMutationBatch = function(t, e, n, r) {
        var i = this, o = si(t), s = oi(t);
        // The IndexedDb implementation in Chrome (and Firefox) does not handle
        // compound indices that include auto-generated keys correctly. To ensure
        // that the index entry is added correctly in all browsers, we perform two
        // writes: The first write is used to retrieve the next auto-generated Batch
        // ID, and the second write populates the index and stores the actual
        // mutation batch.
        // See: https://bugs.chromium.org/p/chromium/issues/detail?id=701972
        // We write an empty object to obtain key
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        return s.add({}).next((function(u) {
            O("number" == typeof u);
            for (var a = new Rr(u, e, n, r), c = function(t, e, n) {
                var r = n.baseMutations.map((function(e) {
                    return On(t.Lt, e);
                })), i = n.mutations.map((function(e) {
                    return On(t.Lt, e);
                }));
                return new rr(e, n.batchId, n.localWriteTime.toMillis(), r, i);
            }(i.R, i.userId, a), h = [], f = new Ye((function(t, e) {
                return V(t.canonicalString(), e.canonicalString());
            })), l = 0, d = r; l < d.length; l++) {
                var p = d[l], y = ir.key(i.userId, p.key.path, u);
                f = f.add(p.key.path.popLast()), h.push(s.put(c)), h.push(o.put(y, ir.PLACEHOLDER));
            }
            return f.forEach((function(e) {
                h.push(i.Ut.addToCollectionParentIndex(t, e));
            })), t.addOnCommittedListener((function() {
                i.Qt[u] = a.keys();
            })), br.waitFor(h).next((function() {
                return a;
            }));
        }));
    }, t.prototype.lookupMutationBatch = function(t, e) {
        var n = this;
        return oi(t).get(e).next((function(t) {
            return t ? (O(t.userId === n.userId), jr(n.R, t)) : null;
        }));
    }, 
    /**
     * Returns the document keys for the mutation batch with the given batchId.
     * For primary clients, this method returns `null` after
     * `removeMutationBatches()` has been called. Secondary clients return a
     * cached result until `removeCachedMutationKeys()` is invoked.
     */
    // PORTING NOTE: Multi-tab only.
    t.prototype.jt = function(t, e) {
        var n = this;
        return this.Qt[e] ? br.resolve(this.Qt[e]) : this.lookupMutationBatch(t, e).next((function(t) {
            if (t) {
                var r = t.keys();
                return n.Qt[e] = r, r;
            }
            return null;
        }));
    }, t.prototype.getNextMutationBatchAfterBatchId = function(t, e) {
        var n = this, r = e + 1, i = IDBKeyRange.lowerBound([ this.userId, r ]), o = null;
        return oi(t).$t({
            index: rr.userMutationsIndex,
            range: i
        }, (function(t, e, i) {
            e.userId === n.userId && (O(e.batchId >= r), o = jr(n.R, e)), i.done();
        })).next((function() {
            return o;
        }));
    }, t.prototype.getHighestUnacknowledgedBatchId = function(t) {
        var e = IDBKeyRange.upperBound([ this.userId, Number.POSITIVE_INFINITY ]), n = -1;
        return oi(t).$t({
            index: rr.userMutationsIndex,
            range: e,
            reverse: !0
        }, (function(t, e, r) {
            n = e.batchId, r.done();
        })).next((function() {
            return n;
        }));
    }, t.prototype.getAllMutationBatches = function(t) {
        var e = this, n = IDBKeyRange.bound([ this.userId, -1 ], [ this.userId, Number.POSITIVE_INFINITY ]);
        return oi(t).Nt(rr.userMutationsIndex, n).next((function(t) {
            return t.map((function(t) {
                return jr(e.R, t);
            }));
        }));
    }, t.prototype.getAllMutationBatchesAffectingDocumentKey = function(t, e) {
        var n = this, r = ir.prefixForPath(this.userId, e.path), i = IDBKeyRange.lowerBound(r), o = [];
        // Scan the document-mutation index starting with a prefix starting with
        // the given documentKey.
                return si(t).$t({
            range: i
        }, (function(r, i, s) {
            var u = r[0], a = r[1], c = r[2], h = Zn(a);
            // Only consider rows matching exactly the specific key of
            // interest. Note that because we order by path first, and we
            // order terminators before path separators, we'll encounter all
            // the index rows for documentKey contiguously. In particular, all
            // the rows for documentKey will occur before any rows for
            // documents nested in a subcollection beneath documentKey so we
            // can stop as soon as we hit any such row.
                        if (u === n.userId && e.path.isEqual(h)) 
            // Look up the mutation batch in the store.
            return oi(t).get(c).next((function(t) {
                if (!t) throw L();
                O(t.userId === n.userId), o.push(jr(n.R, t));
            }));
            s.done();
        })).next((function() {
            return o;
        }));
    }, t.prototype.getAllMutationBatchesAffectingDocumentKeys = function(t, e) {
        var n = this, r = new Ye(V), i = [];
        return e.forEach((function(e) {
            var o = ir.prefixForPath(n.userId, e.path), s = IDBKeyRange.lowerBound(o), u = si(t).$t({
                range: s
            }, (function(t, i, o) {
                var s = t[0], u = t[1], a = t[2], c = Zn(u);
                // Only consider rows matching exactly the specific key of
                // interest. Note that because we order by path first, and we
                // order terminators before path separators, we'll encounter all
                // the index rows for documentKey contiguously. In particular, all
                // the rows for documentKey will occur before any rows for
                // documents nested in a subcollection beneath documentKey so we
                // can stop as soon as we hit any such row.
                                s === n.userId && e.path.isEqual(c) ? r = r.add(a) : o.done();
            }));
            i.push(u);
        })), br.waitFor(i).next((function() {
            return n.Wt(t, r);
        }));
    }, t.prototype.getAllMutationBatchesAffectingQuery = function(t, e) {
        var n = this, r = e.path, i = r.length + 1, o = ir.prefixForPath(this.userId, r), s = IDBKeyRange.lowerBound(o), u = new Ye(V);
        return si(t).$t({
            range: s
        }, (function(t, e, o) {
            var s = t[0], a = t[1], c = t[2], h = Zn(a);
            s === n.userId && r.isPrefixOf(h) ? 
            // Rows with document keys more than one segment longer than the
            // query path can't be matches. For example, a query on 'rooms'
            // can't match the document /rooms/abc/messages/xyx.
            // TODO(mcg): we'll need a different scanner when we implement
            // ancestor queries.
            h.length === i && (u = u.add(c)) : o.done();
        })).next((function() {
            return n.Wt(t, u);
        }));
    }, t.prototype.Wt = function(t, e) {
        var n = this, r = [], i = [];
        // TODO(rockwood): Implement this using iterate.
        return e.forEach((function(e) {
            i.push(oi(t).get(e).next((function(t) {
                if (null === t) throw L();
                O(t.userId === n.userId), r.push(jr(n.R, t));
            })));
        })), br.waitFor(i).next((function() {
            return r;
        }));
    }, t.prototype.removeMutationBatch = function(t, e) {
        var n = this;
        return ei(t.Mt, this.userId, e).next((function(r) {
            return t.addOnCommittedListener((function() {
                n.Gt(e.batchId);
            })), br.forEach(r, (function(e) {
                return n.referenceDelegate.markPotentiallyOrphaned(t, e);
            }));
        }));
    }, 
    /**
     * Clears the cached keys for a mutation batch. This method should be
     * called by secondary clients after they process mutation updates.
     *
     * Note that this method does not have to be called from primary clients as
     * the corresponding cache entries are cleared when an acknowledged or
     * rejected batch is removed from the mutation queue.
     */
    // PORTING NOTE: Multi-tab only
    t.prototype.Gt = function(t) {
        delete this.Qt[t];
    }, t.prototype.performConsistencyCheck = function(t) {
        var e = this;
        return this.checkEmpty(t).next((function(n) {
            if (!n) return br.resolve();
            // Verify that there are no entries in the documentMutations index if
            // the queue is empty.
                        var r = IDBKeyRange.lowerBound(ir.prefixForUser(e.userId)), i = [];
            return si(t).$t({
                range: r
            }, (function(t, n, r) {
                if (t[0] === e.userId) {
                    var o = Zn(t[1]);
                    i.push(o);
                } else r.done();
            })).next((function() {
                O(0 === i.length);
            }));
        }));
    }, t.prototype.containsKey = function(t, e) {
        return ii(t, this.userId, e);
    }, 
    // PORTING NOTE: Multi-tab only (state is held in memory in other clients).
    /** Returns the mutation queue's metadata from IndexedDb. */
    t.prototype.zt = function(t) {
        var e = this;
        return ui(t).get(this.userId).next((function(t) {
            return t || new nr(e.userId, -1, 
            /*lastStreamToken=*/ "");
        }));
    }, t;
}();

/**
 * @returns true if the mutation queue for the given user contains a pending
 *         mutation for the given key.
 */ function ii(t, e, n) {
    var r = ir.prefixForPath(e, n.path), i = r[1], o = IDBKeyRange.lowerBound(r), s = !1;
    return si(t).$t({
        range: o,
        kt: !0
    }, (function(t, n, r) {
        var o = t[0], u = t[1];
        t[2];
        o === e && u === i && (s = !0), r.done();
    })).next((function() {
        return s;
    }));
}

/** Returns true if any mutation queue contains the given document. */
/**
 * Helper to get a typed SimpleDbStore for the mutations object store.
 */ function oi(t) {
    return Cr(t, rr.store);
}

/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */ function si(t) {
    return Cr(t, ir.store);
}

/**
 * Helper to get a typed SimpleDbStore for the mutationQueues object store.
 */ function ui(t) {
    return Cr(t, nr.store);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Offset to ensure non-overlapping target ids. */
/**
 * Generates monotonically increasing target IDs for sending targets to the
 * watch stream.
 *
 * The client constructs two generators, one for the target cache, and one for
 * for the sync engine (to generate limbo documents targets). These
 * generators produce non-overlapping IDs (by using even and odd IDs
 * respectively).
 *
 * By separating the target ID space, the query cache can generate target IDs
 * that persist across client restarts, while sync engine can independently
 * generate in-memory target IDs that are transient and can be reused after a
 * restart.
 */ var ai = /** @class */ function() {
    function t(t) {
        this.Ht = t;
    }
    return t.prototype.next = function() {
        return this.Ht += 2, this.Ht;
    }, t.Jt = function() {
        // The target cache generator must return '2' in its first call to `next()`
        // as there is no differentiation in the protocol layer between an unset
        // number and the number '0'. If we were to sent a target with target ID
        // '0', the backend would consider it unset and replace it with its own ID.
        return new t(0);
    }, t.Yt = function() {
        // Sync engine assigns target IDs for limbo document detection.
        return new t(-1);
    }, t;
}(), ci = /** @class */ function() {
    function t(t, e) {
        this.referenceDelegate = t, this.R = e;
    }
    // PORTING NOTE: We don't cache global metadata for the target cache, since
    // some of it (in particular `highestTargetId`) can be modified by secondary
    // tabs. We could perhaps be more granular (and e.g. still cache
    // `lastRemoteSnapshotVersion` in memory) but for simplicity we currently go
    // to IndexedDb whenever we need to read metadata. We can revisit if it turns
    // out to have a meaningful performance impact.
        return t.prototype.allocateTargetId = function(t) {
        var e = this;
        return this.Xt(t).next((function(n) {
            var r = new ai(n.highestTargetId);
            return n.highestTargetId = r.next(), e.Zt(t, n).next((function() {
                return n.highestTargetId;
            }));
        }));
    }, t.prototype.getLastRemoteSnapshotVersion = function(t) {
        return this.Xt(t).next((function(t) {
            return j.fromTimestamp(new B(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds));
        }));
    }, t.prototype.getHighestSequenceNumber = function(t) {
        return this.Xt(t).next((function(t) {
            return t.highestListenSequenceNumber;
        }));
    }, t.prototype.setTargetsMetadata = function(t, e, n) {
        var r = this;
        return this.Xt(t).next((function(i) {
            return i.highestListenSequenceNumber = e, n && (i.lastRemoteSnapshotVersion = n.toTimestamp()), 
            e > i.highestListenSequenceNumber && (i.highestListenSequenceNumber = e), r.Zt(t, i);
        }));
    }, t.prototype.addTargetData = function(t, e) {
        var n = this;
        return this.te(t, e).next((function() {
            return n.Xt(t).next((function(r) {
                return r.targetCount += 1, n.ee(e, r), n.Zt(t, r);
            }));
        }));
    }, t.prototype.updateTargetData = function(t, e) {
        return this.te(t, e);
    }, t.prototype.removeTargetData = function(t, e) {
        var n = this;
        return this.removeMatchingKeysForTargetId(t, e.targetId).next((function() {
            return hi(t).delete(e.targetId);
        })).next((function() {
            return n.Xt(t);
        })).next((function(e) {
            return O(e.targetCount > 0), e.targetCount -= 1, n.Zt(t, e);
        }));
    }, 
    /**
     * Drops any targets with sequence number less than or equal to the upper bound, excepting those
     * present in `activeTargetIds`. Document associations for the removed targets are also removed.
     * Returns the number of targets removed.
     */
    t.prototype.removeTargets = function(t, e, n) {
        var r = this, i = 0, o = [];
        return hi(t).$t((function(s, u) {
            var a = Kr(u);
            a.sequenceNumber <= e && null === n.get(a.targetId) && (i++, o.push(r.removeTargetData(t, a)));
        })).next((function() {
            return br.waitFor(o);
        })).next((function() {
            return i;
        }));
    }, 
    /**
     * Call provided function with each `TargetData` that we have cached.
     */
    t.prototype.forEachTarget = function(t, e) {
        return hi(t).$t((function(t, n) {
            var r = Kr(n);
            e(r);
        }));
    }, t.prototype.Xt = function(t) {
        return fi(t).get(fr.key).next((function(t) {
            return O(null !== t), t;
        }));
    }, t.prototype.Zt = function(t, e) {
        return fi(t).put(fr.key, e);
    }, t.prototype.te = function(t, e) {
        return hi(t).put(Gr(this.R, e));
    }, 
    /**
     * In-place updates the provided metadata to account for values in the given
     * TargetData. Saving is done separately. Returns true if there were any
     * changes to the metadata.
     */
    t.prototype.ee = function(t, e) {
        var n = !1;
        return t.targetId > e.highestTargetId && (e.highestTargetId = t.targetId, n = !0), 
        t.sequenceNumber > e.highestListenSequenceNumber && (e.highestListenSequenceNumber = t.sequenceNumber, 
        n = !0), n;
    }, t.prototype.getTargetCount = function(t) {
        return this.Xt(t).next((function(t) {
            return t.targetCount;
        }));
    }, t.prototype.getTargetData = function(t, e) {
        // Iterating by the canonicalId may yield more than one result because
        // canonicalId values are not required to be unique per target. This query
        // depends on the queryTargets index to be efficient.
        var n = At(e), r = IDBKeyRange.bound([ n, Number.NEGATIVE_INFINITY ], [ n, Number.POSITIVE_INFINITY ]), i = null;
        return hi(t).$t({
            range: r,
            index: cr.queryTargetsIndexName
        }, (function(t, n, r) {
            var o = Kr(n);
            // After finding a potential match, check that the target is
            // actually equal to the requested target.
                        kt(e, o.target) && (i = o, r.done());
        })).next((function() {
            return i;
        }));
    }, t.prototype.addMatchingKeys = function(t, e, n) {
        var r = this, i = [], o = li(t);
        // PORTING NOTE: The reverse index (documentsTargets) is maintained by
        // IndexedDb.
                return e.forEach((function(e) {
            var s = $n(e.path);
            i.push(o.put(new hr(n, s))), i.push(r.referenceDelegate.addReference(t, n, e));
        })), br.waitFor(i);
    }, t.prototype.removeMatchingKeys = function(t, e, n) {
        var r = this, i = li(t);
        // PORTING NOTE: The reverse index (documentsTargets) is maintained by
        // IndexedDb.
                return br.forEach(e, (function(e) {
            var o = $n(e.path);
            return br.waitFor([ i.delete([ n, o ]), r.referenceDelegate.removeReference(t, n, e) ]);
        }));
    }, t.prototype.removeMatchingKeysForTargetId = function(t, e) {
        var n = li(t), r = IDBKeyRange.bound([ e ], [ e + 1 ], 
        /*lowerOpen=*/ !1, 
        /*upperOpen=*/ !0);
        return n.delete(r);
    }, t.prototype.getMatchingKeysForTargetId = function(t, e) {
        var n = IDBKeyRange.bound([ e ], [ e + 1 ], 
        /*lowerOpen=*/ !1, 
        /*upperOpen=*/ !0), r = li(t), i = on();
        return r.$t({
            range: n,
            kt: !0
        }, (function(t, e, n) {
            var r = Zn(t[1]), o = new at(r);
            i = i.add(o);
        })).next((function() {
            return i;
        }));
    }, t.prototype.containsKey = function(t, e) {
        var n = $n(e.path), r = IDBKeyRange.bound([ n ], [ U(n) ], 
        /*lowerOpen=*/ !1, 
        /*upperOpen=*/ !0), i = 0;
        return li(t).$t({
            index: hr.documentTargetsIndex,
            kt: !0,
            range: r
        }, (function(t, e, n) {
            var r = t[0];
            // Having a sentinel row for a document does not count as containing that document;
            // For the target cache, containing the document means the document is part of some
            // target.
                        t[1];
            0 !== r && (i++, n.done());
        })).next((function() {
            return i > 0;
        }));
    }, 
    /**
     * Looks up a TargetData entry by target ID.
     *
     * @param targetId - The target ID of the TargetData entry to look up.
     * @returns The cached TargetData entry, or null if the cache has no entry for
     * the target.
     */
    // PORTING NOTE: Multi-tab only.
    t.prototype.lt = function(t, e) {
        return hi(t).get(e).next((function(t) {
            return t ? Kr(t) : null;
        }));
    }, t;
}();

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Helper to get a typed SimpleDbStore for the queries object store.
 */
function hi(t) {
    return Cr(t, cr.store);
}

/**
 * Helper to get a typed SimpleDbStore for the target globals object store.
 */ function fi(t) {
    return Cr(t, fr.store);
}

/**
 * Helper to get a typed SimpleDbStore for the document target object store.
 */ function li(t) {
    return Cr(t, hr.store);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Verifies the error thrown by a LocalStore operation. If a LocalStore
 * operation fails because the primary lease has been taken by another client,
 * we ignore the error (the persistence layer will immediately call
 * `applyPrimaryLease` to propagate the primary state change). All other errors
 * are re-thrown.
 *
 * @param err - An error returned by a LocalStore operation.
 * @returns A Promise that resolves after we recovered, or the original error.
 */ function di(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
            if (t.code !== S.FAILED_PRECONDITION || t.message !== mr) throw t;
            return k("LocalStore", "Unexpectedly lost primary lease"), [ 2 /*return*/ ];
        }));
    }));
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ function pi(t, e) {
    var n = t[0], r = t[1], i = e[0], o = e[1], s = V(n, i);
    return 0 === s ? V(r, o) : s;
}

/**
 * Used to calculate the nth sequence number. Keeps a rolling buffer of the
 * lowest n values passed to `addElement`, and finally reports the largest of
 * them in `maxValue`.
 */ var yi = /** @class */ function() {
    function t(t) {
        this.ne = t, this.buffer = new Ye(pi), this.se = 0;
    }
    return t.prototype.ie = function() {
        return ++this.se;
    }, t.prototype.re = function(t) {
        var e = [ t, this.ie() ];
        if (this.buffer.size < this.ne) this.buffer = this.buffer.add(e); else {
            var n = this.buffer.last();
            pi(e, n) < 0 && (this.buffer = this.buffer.delete(n).add(e));
        }
    }, Object.defineProperty(t.prototype, "maxValue", {
        get: function() {
            // Guaranteed to be non-empty. If we decide we are not collecting any
            // sequence numbers, nthSequenceNumber below short-circuits. If we have
            // decided that we are collecting n sequence numbers, it's because n is some
            // percentage of the existing sequence numbers. That means we should never
            // be in a situation where we are collecting sequence numbers but don't
            // actually have any.
            return this.buffer.last()[0];
        },
        enumerable: !1,
        configurable: !0
    }), t;
}(), vi = /** @class */ function() {
    function t(t, e) {
        this.garbageCollector = t, this.asyncQueue = e, this.oe = !1, this.ce = null;
    }
    return t.prototype.start = function(t) {
        -1 !== this.garbageCollector.params.cacheSizeCollectionThreshold && this.ue(t);
    }, t.prototype.stop = function() {
        this.ce && (this.ce.cancel(), this.ce = null);
    }, Object.defineProperty(t.prototype, "started", {
        get: function() {
            return null !== this.ce;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.ue = function(t) {
        var e = this, n = this.oe ? 3e5 : 6e4;
        k("LruGarbageCollector", "Garbage collection scheduled in " + n + "ms"), this.ce = this.asyncQueue.enqueueAfterDelay("lru_garbage_collection" /* LruGarbageCollection */ , n, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
                var e;
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                    switch (n.label) {
                      case 0:
                        this.ce = null, this.oe = !0, n.label = 1;

                      case 1:
                        return n.trys.push([ 1, 3, , 7 ]), [ 4 /*yield*/ , t.collectGarbage(this.garbageCollector) ];

                      case 2:
                        return n.sent(), [ 3 /*break*/ , 7 ];

                      case 3:
                        return Sr(e = n.sent()) ? (k("LruGarbageCollector", "Ignoring IndexedDB error during garbage collection: ", e), 
                        [ 3 /*break*/ , 6 ]) : [ 3 /*break*/ , 4 ];

                      case 4:
                        return [ 4 /*yield*/ , di(e) ];

                      case 5:
                        n.sent(), n.label = 6;

                      case 6:
                        return [ 3 /*break*/ , 7 ];

                      case 7:
                        return [ 4 /*yield*/ , this.ue(t) ];

                      case 8:
                        return n.sent(), [ 2 /*return*/ ];
                    }
                }));
            }));
        }));
    }, t;
}(), mi = /** @class */ function() {
    function t(t, e) {
        this.ae = t, this.params = e;
    }
    return t.prototype.calculateTargetCount = function(t, e) {
        return this.ae.he(t).next((function(t) {
            return Math.floor(e / 100 * t);
        }));
    }, t.prototype.nthSequenceNumber = function(t, e) {
        var n = this;
        if (0 === e) return br.resolve(_.o);
        var r = new yi(e);
        return this.ae.forEachTarget(t, (function(t) {
            return r.re(t.sequenceNumber);
        })).next((function() {
            return n.ae.le(t, (function(t) {
                return r.re(t);
            }));
        })).next((function() {
            return r.maxValue;
        }));
    }, t.prototype.removeTargets = function(t, e, n) {
        return this.ae.removeTargets(t, e, n);
    }, t.prototype.removeOrphanedDocuments = function(t, e) {
        return this.ae.removeOrphanedDocuments(t, e);
    }, t.prototype.collect = function(t, e) {
        var n = this;
        return -1 === this.params.cacheSizeCollectionThreshold ? (k("LruGarbageCollector", "Garbage collection skipped; disabled"), 
        br.resolve(Zr)) : this.getCacheSize(t).next((function(r) {
            return r < n.params.cacheSizeCollectionThreshold ? (k("LruGarbageCollector", "Garbage collection skipped; Cache size " + r + " is lower than threshold " + n.params.cacheSizeCollectionThreshold), 
            Zr) : n.fe(t, e);
        }));
    }, t.prototype.getCacheSize = function(t) {
        return this.ae.getCacheSize(t);
    }, t.prototype.fe = function(t, e) {
        var n, r, i, o, s, u, a, c = this, f = Date.now();
        return this.calculateTargetCount(t, this.params.percentileToCollect).next((function(e) {
            // Cap at the configured max
            return e > c.params.maximumSequenceNumbersToCollect ? (k("LruGarbageCollector", "Capping sequence numbers to collect down to the maximum of " + c.params.maximumSequenceNumbersToCollect + " from " + e), 
            r = c.params.maximumSequenceNumbersToCollect) : r = e, o = Date.now(), c.nthSequenceNumber(t, r);
        })).next((function(r) {
            return n = r, s = Date.now(), c.removeTargets(t, n, e);
        })).next((function(e) {
            return i = e, u = Date.now(), c.removeOrphanedDocuments(t, n);
        })).next((function(t) {
            return a = Date.now(), A() <= _firebase_logger__WEBPACK_IMPORTED_MODULE_1__.LogLevel.DEBUG && k("LruGarbageCollector", "LRU Garbage Collection\n\tCounted targets in " + (o - f) + "ms\n\tDetermined least recently used " + r + " in " + (s - o) + "ms\n\tRemoved " + i + " targets in " + (u - s) + "ms\n\tRemoved " + t + " documents in " + (a - u) + "ms\nTotal Duration: " + (a - f) + "ms"), 
            br.resolve({
                didRun: !0,
                sequenceNumbersCollected: r,
                targetsRemoved: i,
                documentsRemoved: t
            });
        }));
    }, t;
}(), gi = /** @class */ function() {
    function t(t, e) {
        this.db = t, this.garbageCollector = function(t, e) {
            return new mi(t, e);
        }(this, e);
    }
    return t.prototype.he = function(t) {
        var e = this.de(t);
        return this.db.getTargetCache().getTargetCount(t).next((function(t) {
            return e.next((function(e) {
                return t + e;
            }));
        }));
    }, t.prototype.de = function(t) {
        var e = 0;
        return this.le(t, (function(t) {
            e++;
        })).next((function() {
            return e;
        }));
    }, t.prototype.forEachTarget = function(t, e) {
        return this.db.getTargetCache().forEachTarget(t, e);
    }, t.prototype.le = function(t, e) {
        return this.we(t, (function(t, n) {
            return e(n);
        }));
    }, t.prototype.addReference = function(t, e, n) {
        return wi(t, n);
    }, t.prototype.removeReference = function(t, e, n) {
        return wi(t, n);
    }, t.prototype.removeTargets = function(t, e, n) {
        return this.db.getTargetCache().removeTargets(t, e, n);
    }, t.prototype.markPotentiallyOrphaned = function(t, e) {
        return wi(t, e);
    }, 
    /**
     * Returns true if anything would prevent this document from being garbage
     * collected, given that the document in question is not present in any
     * targets and has a sequence number less than or equal to the upper bound for
     * the collection run.
     */
    t.prototype._e = function(t, e) {
        return function(t, e) {
            var n = !1;
            return ui(t).Ot((function(r) {
                return ii(t, r, e).next((function(t) {
                    return t && (n = !0), br.resolve(!t);
                }));
            })).next((function() {
                return n;
            }));
        }(t, e);
    }, t.prototype.removeOrphanedDocuments = function(t, e) {
        var n = this, r = this.db.getRemoteDocumentCache().newChangeBuffer(), i = [], o = 0;
        return this.we(t, (function(s, u) {
            if (u <= e) {
                var a = n._e(t, s).next((function(e) {
                    if (!e) 
                    // Our size accounting requires us to read all documents before
                    // removing them.
                    return o++, r.getEntry(t, s).next((function() {
                        return r.removeEntry(s), li(t).delete([ 0, $n(s.path) ]);
                    }));
                }));
                i.push(a);
            }
        })).next((function() {
            return br.waitFor(i);
        })).next((function() {
            return r.apply(t);
        })).next((function() {
            return o;
        }));
    }, t.prototype.removeTarget = function(t, e) {
        var n = e.withSequenceNumber(t.currentSequenceNumber);
        return this.db.getTargetCache().updateTargetData(t, n);
    }, t.prototype.updateLimboDocument = function(t, e) {
        return wi(t, e);
    }, 
    /**
     * Call provided function for each document in the cache that is 'orphaned'. Orphaned
     * means not a part of any target, so the only entry in the target-document index for
     * that document will be the sentinel row (targetId 0), which will also have the sequence
     * number for the last time the document was accessed.
     */
    t.prototype.we = function(t, e) {
        var n, r = li(t), i = _.o;
        return r.$t({
            index: hr.documentTargetsIndex
        }, (function(t, r) {
            var o = t[0], s = (t[1], r.path), u = r.sequenceNumber;
            0 === o ? (
            // if nextToReport is valid, report it, this is a new key so the
            // last one must not be a member of any targets.
            i !== _.o && e(new at(Zn(n)), i), 
            // set nextToReport to be this sequence number. It's the next one we
            // might report, if we don't find any targets for this document.
            // Note that the sequence number must be defined when the targetId
            // is 0.
            i = u, n = s) : 
            // set nextToReport to be invalid, we know we don't need to report
            // this one since we found a target for it.
            i = _.o;
        })).next((function() {
            // Since we report sequence numbers after getting to the next key, we
            // need to check if the last key we iterated over was an orphaned
            // document and report it.
            i !== _.o && e(new at(Zn(n)), i);
        }));
    }, t.prototype.getCacheSize = function(t) {
        return this.db.getRemoteDocumentCache().getSize(t);
    }, t;
}();

/**
 * This class is responsible for the scheduling of LRU garbage collection. It handles checking
 * whether or not GC is enabled, as well as which delay to use before the next run.
 */ function wi(t, e) {
    return li(t).put(
    /**
 * @returns A value suitable for writing a sentinel row in the target-document
 * store.
 */
    function(t, e) {
        return new hr(0, $n(t.path), e);
    }(e, t.currentSequenceNumber));
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A map implementation that uses objects as keys. Objects must have an
 * associated equals function and must be immutable. Entries in the map are
 * stored together with the key being produced from the mapKeyFn. This map
 * automatically handles collisions of keys.
 */ var bi = /** @class */ function() {
    function t(t, e) {
        this.mapKeyFn = t, this.equalsFn = e, 
        /**
             * The inner map for a key/value pair. Due to the possibility of collisions we
             * keep a list of entries that we do a linear search through to find an actual
             * match. Note that collisions should be rare, so we still expect near
             * constant time lookups in practice.
             */
        this.inner = {}
        /** Get a value for this key, or undefined if it does not exist. */;
    }
    return t.prototype.get = function(t) {
        var e = this.mapKeyFn(t), n = this.inner[e];
        if (void 0 !== n) for (var r = 0, i = n; r < i.length; r++) {
            var o = i[r], s = o[0], u = o[1];
            if (this.equalsFn(s, t)) return u;
        }
    }, t.prototype.has = function(t) {
        return void 0 !== this.get(t);
    }, 
    /** Put this key and value in the map. */ t.prototype.set = function(t, e) {
        var n = this.mapKeyFn(t), r = this.inner[n];
        if (void 0 !== r) {
            for (var i = 0; i < r.length; i++) if (this.equalsFn(r[i][0], t)) return void (r[i] = [ t, e ]);
            r.push([ t, e ]);
        } else this.inner[n] = [ [ t, e ] ];
    }, 
    /**
     * Remove this key from the map. Returns a boolean if anything was deleted.
     */
    t.prototype.delete = function(t) {
        var e = this.mapKeyFn(t), n = this.inner[e];
        if (void 0 === n) return !1;
        for (var r = 0; r < n.length; r++) if (this.equalsFn(n[r][0], t)) return 1 === n.length ? delete this.inner[e] : n.splice(r, 1), 
        !0;
        return !1;
    }, t.prototype.forEach = function(t) {
        G(this.inner, (function(e, n) {
            for (var r = 0, i = n; r < i.length; r++) {
                var o = i[r], s = o[0], u = o[1];
                t(s, u);
            }
        }));
    }, t.prototype.isEmpty = function() {
        return Q(this.inner);
    }, t;
}(), Ii = /** @class */ function() {
    function t() {
        // A mapping of document key to the new cache entry that should be written (or null if any
        // existing cache entry should be removed).
        this.changes = new bi((function(t) {
            return t.toString();
        }), (function(t, e) {
            return t.isEqual(e);
        })), this.changesApplied = !1;
    }
    return t.prototype.getReadTime = function(t) {
        var e = this.changes.get(t);
        return e ? e.readTime : j.min();
    }, 
    /**
     * Buffers a `RemoteDocumentCache.addEntry()` call.
     *
     * You can only modify documents that have already been retrieved via
     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
     */
    t.prototype.addEntry = function(t, e) {
        this.assertNotApplied(), this.changes.set(t.key, {
            document: t,
            readTime: e
        });
    }, 
    /**
     * Buffers a `RemoteDocumentCache.removeEntry()` call.
     *
     * You can only remove documents that have already been retrieved via
     * `getEntry()/getEntries()` (enforced via IndexedDbs `apply()`).
     */
    t.prototype.removeEntry = function(t, e) {
        void 0 === e && (e = null), this.assertNotApplied(), this.changes.set(t, {
            document: St.newInvalidDocument(t),
            readTime: e
        });
    }, 
    /**
     * Looks up an entry in the cache. The buffered changes will first be checked,
     * and if no buffered change applies, this will forward to
     * `RemoteDocumentCache.getEntry()`.
     *
     * @param transaction - The transaction in which to perform any persistence
     *     operations.
     * @param documentKey - The key of the entry to look up.
     * @returns The cached document or an invalid document if we have nothing
     * cached.
     */
    t.prototype.getEntry = function(t, e) {
        this.assertNotApplied();
        var n = this.changes.get(e);
        return void 0 !== n ? br.resolve(n.document) : this.getFromCache(t, e);
    }, 
    /**
     * Looks up several entries in the cache, forwarding to
     * `RemoteDocumentCache.getEntry()`.
     *
     * @param transaction - The transaction in which to perform any persistence
     *     operations.
     * @param documentKeys - The keys of the entries to look up.
     * @returns A map of cached documents, indexed by key. If an entry cannot be
     *     found, the corresponding key will be mapped to an invalid document.
     */
    t.prototype.getEntries = function(t, e) {
        return this.getAllFromCache(t, e);
    }, 
    /**
     * Applies buffered changes to the underlying RemoteDocumentCache, using
     * the provided transaction.
     */
    t.prototype.apply = function(t) {
        return this.assertNotApplied(), this.changesApplied = !0, this.applyChanges(t);
    }, 
    /** Helper to assert this.changes is not null  */ t.prototype.assertNotApplied = function() {}, 
    t;
}(), Ti = /** @class */ function() {
    /**
     * @param serializer - The document serializer.
     * @param indexManager - The query indexes that need to be maintained.
     */
    function t(t, e) {
        this.R = t, this.Ut = e
        /**
     * Adds the supplied entries to the cache.
     *
     * All calls of `addEntry` are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
     */;
    }
    return t.prototype.addEntry = function(t, e, n) {
        return Si(t).put(Ni(e), n);
    }, 
    /**
     * Removes a document from the cache.
     *
     * All calls of `removeEntry`  are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()` to ensure proper accounting of metadata.
     */
    t.prototype.removeEntry = function(t, e) {
        var n = Si(t), r = Ni(e);
        return n.delete(r);
    }, 
    /**
     * Updates the current cache size.
     *
     * Callers to `addEntry()` and `removeEntry()` *must* call this afterwards to update the
     * cache's metadata.
     */
    t.prototype.updateMetadata = function(t, e) {
        var n = this;
        return this.getMetadata(t).next((function(r) {
            return r.byteSize += e, n.me(t, r);
        }));
    }, t.prototype.getEntry = function(t, e) {
        var n = this;
        return Si(t).get(Ni(e)).next((function(t) {
            return n.ye(e, t);
        }));
    }, 
    /**
     * Looks up an entry in the cache.
     *
     * @param documentKey - The key of the entry to look up.
     * @returns The cached document entry and its size.
     */
    t.prototype.ge = function(t, e) {
        var n = this;
        return Si(t).get(Ni(e)).next((function(t) {
            return {
                document: n.ye(e, t),
                size: ni(t)
            };
        }));
    }, t.prototype.getEntries = function(t, e) {
        var n = this, r = Je();
        return this.pe(t, e, (function(t, e) {
            var i = n.ye(t, e);
            r = r.insert(t, i);
        })).next((function() {
            return r;
        }));
    }, 
    /**
     * Looks up several entries in the cache.
     *
     * @param documentKeys - The set of keys entries to look up.
     * @returns A map of documents indexed by key and a map of sizes indexed by
     *     key (zero if the document does not exist).
     */
    t.prototype.Ee = function(t, e) {
        var n = this, r = Je(), i = new ze(at.comparator);
        return this.pe(t, e, (function(t, e) {
            var o = n.ye(t, e);
            r = r.insert(t, o), i = i.insert(t, ni(e));
        })).next((function() {
            return {
                documents: r,
                Te: i
            };
        }));
    }, t.prototype.pe = function(t, e, n) {
        if (e.isEmpty()) return br.resolve();
        var r = IDBKeyRange.bound(e.first().path.toArray(), e.last().path.toArray()), i = e.getIterator(), o = i.getNext();
        return Si(t).$t({
            range: r
        }, (function(t, e, r) {
            // Go through keys not found in cache.
            for (var s = at.fromSegments(t); o && at.comparator(o, s) < 0; ) n(o, null), o = i.getNext();
            o && o.isEqual(s) && (
            // Key found in cache.
            n(o, e), o = i.hasNext() ? i.getNext() : null), 
            // Skip to the next key (if there is one).
            o ? r.Ct(o.path.toArray()) : r.done();
        })).next((function() {
            // The rest of the keys are not in the cache. One case where `iterate`
            // above won't go through them is when the cache is empty.
            for (;o; ) n(o, null), o = i.hasNext() ? i.getNext() : null;
        }));
    }, t.prototype.getDocumentsMatchingQuery = function(t, e, n) {
        var r = this, i = Je(), o = e.path.length + 1, s = {};
        if (n.isEqual(j.min())) {
            // Documents are ordered by key, so we can use a prefix scan to narrow
            // down the documents we need to match the query against.
            var u = e.path.toArray();
            s.range = IDBKeyRange.lowerBound(u);
        } else {
            // Execute an index-free query and filter by read time. This is safe
            // since all document changes to queries that have a
            // lastLimboFreeSnapshotVersion (`sinceReadTime`) have a read time set.
            var a = e.path.toArray(), c = Vr(n);
            s.range = IDBKeyRange.lowerBound([ a, c ], 
            /* open= */ !0), s.index = ur.collectionReadTimeIndex;
        }
        return Si(t).$t(s, (function(t, n, s) {
            // The query is actually returning any path that starts with the query
            // path prefix which may include documents in subcollections. For
            // example, a query on 'rooms' will return rooms/abc/messages/xyx but we
            // shouldn't match it. Fix this by discarding rows with document keys
            // more than one segment longer than the query path.
            if (t.length === o) {
                var u = Fr(r.R, n);
                e.path.isPrefixOf(u.key.path) ? se(e, u) && (i = i.insert(u.key, u)) : s.done();
            }
        })).next((function() {
            return i;
        }));
    }, t.prototype.newChangeBuffer = function(t) {
        return new Ei(this, !!t && t.trackRemovals);
    }, t.prototype.getSize = function(t) {
        return this.getMetadata(t).next((function(t) {
            return t.byteSize;
        }));
    }, t.prototype.getMetadata = function(t) {
        return _i(t).get(ar.key).next((function(t) {
            return O(!!t), t;
        }));
    }, t.prototype.me = function(t, e) {
        return _i(t).put(ar.key, e);
    }, 
    /**
     * Decodes `remoteDoc` and returns the document (or null, if the document
     * corresponds to the format used for sentinel deletes).
     */
    t.prototype.ye = function(t, e) {
        if (e) {
            var n = Fr(this.R, e);
            // Whether the document is a sentinel removal and should only be used in the
            // `getNewDocumentChanges()`
                        if (!n.isNoDocument() || !n.version.isEqual(j.min())) return n;
        }
        return St.newInvalidDocument(t);
    }, t;
}(), Ei = /** @class */ function(t) {
    /**
     * @param documentCache - The IndexedDbRemoteDocumentCache to apply the changes to.
     * @param trackRemovals - Whether to create sentinel deletes that can be tracked by
     * `getNewDocumentChanges()`.
     */
    function e(e, n) {
        var r = this;
        return (r = t.call(this) || this).Ie = e, r.trackRemovals = n, 
        // A map of document sizes prior to applying the changes in this buffer.
        r.Ae = new bi((function(t) {
            return t.toString();
        }), (function(t, e) {
            return t.isEqual(e);
        })), r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.applyChanges = function(t) {
        var e = this, n = [], r = 0, i = new Ye((function(t, e) {
            return V(t.canonicalString(), e.canonicalString());
        }));
        return this.changes.forEach((function(o, s) {
            var u = e.Ae.get(o);
            if (s.document.isValidDocument()) {
                var a = Mr(e.Ie.R, s.document, e.getReadTime(o));
                i = i.add(o.path.popLast());
                var c = ni(a);
                r += c - u, n.push(e.Ie.addEntry(t, o, a));
            } else if (r -= u, e.trackRemovals) {
                // In order to track removals, we store a "sentinel delete" in the
                // RemoteDocumentCache. This entry is represented by a NoDocument
                // with a version of 0 and ignored by `maybeDecodeDocument()` but
                // preserved in `getNewDocumentChanges()`.
                var h = Mr(e.Ie.R, St.newNoDocument(o, j.min()), e.getReadTime(o));
                n.push(e.Ie.addEntry(t, o, h));
            } else n.push(e.Ie.removeEntry(t, o));
        })), i.forEach((function(r) {
            n.push(e.Ie.Ut.addToCollectionParentIndex(t, r));
        })), n.push(this.Ie.updateMetadata(t, r)), br.waitFor(n);
    }, e.prototype.getFromCache = function(t, e) {
        var n = this;
        // Record the size of everything we load from the cache so we can compute a delta later.
                return this.Ie.ge(t, e).next((function(t) {
            return n.Ae.set(e, t.size), t.document;
        }));
    }, e.prototype.getAllFromCache = function(t, e) {
        var n = this;
        // Record the size of everything we load from the cache so we can compute
        // a delta later.
                return this.Ie.Ee(t, e).next((function(t) {
            var e = t.documents;
            // Note: `getAllFromCache` returns two maps instead of a single map from
            // keys to `DocumentSizeEntry`s. This is to allow returning the
            // `MutableDocumentMap` directly, without a conversion.
            return t.Te.forEach((function(t, e) {
                n.Ae.set(t, e);
            })), e;
        }));
    }, e;
}(Ii);

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An in-memory buffer of entries to be written to a RemoteDocumentCache.
 * It can be used to batch up a set of changes to be written to the cache, but
 * additionally supports reading entries back with the `getEntry()` method,
 * falling back to the underlying RemoteDocumentCache if no entry is
 * buffered.
 *
 * Entries added to the cache *must* be read first. This is to facilitate
 * calculating the size delta of the pending changes.
 *
 * PORTING NOTE: This class was implemented then removed from other platforms.
 * If byte-counting ends up being needed on the other platforms, consider
 * porting this class as part of that implementation work.
 */ function _i(t) {
    return Cr(t, ar.store);
}

/**
 * Helper to get a typed SimpleDbStore for the remoteDocuments object store.
 */ function Si(t) {
    return Cr(t, ur.store);
}

function Ni(t) {
    return t.path.toArray();
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Performs database creation and schema upgrades. */ var Di = /** @class */ function() {
    function t(t) {
        this.R = t;
    }
    /**
     * Performs database creation and schema upgrades.
     *
     * Note that in production, this method is only ever used to upgrade the schema
     * to SCHEMA_VERSION. Different values of toVersion are only used for testing
     * and local feature development.
     */    return t.prototype.Rt = function(t, e, n, r) {
        var i = this;
        O(n < r && n >= 0 && r <= 11);
        var o = new Ir("createOrUpgrade", e);
        n < 1 && r >= 1 && (function(t) {
            t.createObjectStore(er.store);
        }(t), function(t) {
            t.createObjectStore(nr.store, {
                keyPath: nr.keyPath
            }), t.createObjectStore(rr.store, {
                keyPath: rr.keyPath,
                autoIncrement: !0
            }).createIndex(rr.userMutationsIndex, rr.userMutationsKeyPath, {
                unique: !0
            }), t.createObjectStore(ir.store);
        }(t), Ai(t), function(t) {
            t.createObjectStore(ur.store);
        }(t));
        // Migration 2 to populate the targetGlobal object no longer needed since
        // migration 3 unconditionally clears it.
        var s = br.resolve();
        return n < 3 && r >= 3 && (
        // Brand new clients don't need to drop and recreate--only clients that
        // potentially have corrupt data.
        0 !== n && (function(t) {
            t.deleteObjectStore(hr.store), t.deleteObjectStore(cr.store), t.deleteObjectStore(fr.store);
        }(t), Ai(t)), s = s.next((function() {
            /**
     * Creates the target global singleton row.
     *
     * @param txn - The version upgrade transaction for indexeddb
     */
            return function(t) {
                var e = t.store(fr.store), n = new fr(
                /*highestTargetId=*/ 0, 
                /*lastListenSequenceNumber=*/ 0, j.min().toTimestamp(), 
                /*targetCount=*/ 0);
                return e.put(fr.key, n);
            }(o);
        }))), n < 4 && r >= 4 && (0 !== n && (
        // Schema version 3 uses auto-generated keys to generate globally unique
        // mutation batch IDs (this was previously ensured internally by the
        // client). To migrate to the new schema, we have to read all mutations
        // and write them back out. We preserve the existing batch IDs to guarantee
        // consistency with other object stores. Any further mutation batch IDs will
        // be auto-generated.
        s = s.next((function() {
            return function(t, e) {
                return e.store(rr.store).Nt().next((function(n) {
                    t.deleteObjectStore(rr.store), t.createObjectStore(rr.store, {
                        keyPath: rr.keyPath,
                        autoIncrement: !0
                    }).createIndex(rr.userMutationsIndex, rr.userMutationsKeyPath, {
                        unique: !0
                    });
                    var r = e.store(rr.store), i = n.map((function(t) {
                        return r.put(t);
                    }));
                    return br.waitFor(i);
                }));
            }(t, o);
        }))), s = s.next((function() {
            !function(t) {
                t.createObjectStore(dr.store, {
                    keyPath: dr.keyPath
                });
            }(t);
        }))), n < 5 && r >= 5 && (s = s.next((function() {
            return i.Re(o);
        }))), n < 6 && r >= 6 && (s = s.next((function() {
            return function(t) {
                t.createObjectStore(ar.store);
            }(t), i.be(o);
        }))), n < 7 && r >= 7 && (s = s.next((function() {
            return i.ve(o);
        }))), n < 8 && r >= 8 && (s = s.next((function() {
            return i.Pe(t, o);
        }))), n < 9 && r >= 9 && (s = s.next((function() {
            // Multi-Tab used to manage its own changelog, but this has been moved
            // to the DbRemoteDocument object store itself. Since the previous change
            // log only contained transient data, we can drop its object store.
            !function(t) {
                t.objectStoreNames.contains("remoteDocumentChanges") && t.deleteObjectStore("remoteDocumentChanges");
            }(t), function(t) {
                var e = t.objectStore(ur.store);
                e.createIndex(ur.readTimeIndex, ur.readTimeIndexPath, {
                    unique: !1
                }), e.createIndex(ur.collectionReadTimeIndex, ur.collectionReadTimeIndexPath, {
                    unique: !1
                });
            }(e);
        }))), n < 10 && r >= 10 && (s = s.next((function() {
            return i.Ve(o);
        }))), n < 11 && r >= 11 && (s = s.next((function() {
            !function(t) {
                t.createObjectStore(pr.store, {
                    keyPath: pr.keyPath
                });
            }(t), function(t) {
                t.createObjectStore(yr.store, {
                    keyPath: yr.keyPath
                });
            }(t);
        }))), s;
    }, t.prototype.be = function(t) {
        var e = 0;
        return t.store(ur.store).$t((function(t, n) {
            e += ni(n);
        })).next((function() {
            var n = new ar(e);
            return t.store(ar.store).put(ar.key, n);
        }));
    }, t.prototype.Re = function(t) {
        var e = this, n = t.store(nr.store), r = t.store(rr.store);
        return n.Nt().next((function(n) {
            return br.forEach(n, (function(n) {
                var i = IDBKeyRange.bound([ n.userId, -1 ], [ n.userId, n.lastAcknowledgedBatchId ]);
                return r.Nt(rr.userMutationsIndex, i).next((function(r) {
                    return br.forEach(r, (function(r) {
                        O(r.userId === n.userId);
                        var i = jr(e.R, r);
                        return ei(t, n.userId, i).next((function() {}));
                    }));
                }));
            }));
        }));
    }, 
    /**
     * Ensures that every document in the remote document cache has a corresponding sentinel row
     * with a sequence number. Missing rows are given the most recently used sequence number.
     */
    t.prototype.ve = function(t) {
        var e = t.store(hr.store), n = t.store(ur.store);
        return t.store(fr.store).get(fr.key).next((function(t) {
            var r = [];
            return n.$t((function(n, i) {
                var o = new W(n), s = function(t) {
                    return [ 0, $n(t) ];
                }(o);
                r.push(e.get(s).next((function(n) {
                    return n ? br.resolve() : function(n) {
                        return e.put(new hr(0, $n(n), t.highestListenSequenceNumber));
                    }(o);
                })));
            })).next((function() {
                return br.waitFor(r);
            }));
        }));
    }, t.prototype.Pe = function(t, e) {
        // Create the index.
        t.createObjectStore(lr.store, {
            keyPath: lr.keyPath
        });
        var n = e.store(lr.store), r = new $r, i = function(t) {
            if (r.add(t)) {
                var e = t.lastSegment(), i = t.popLast();
                return n.put({
                    collectionId: e,
                    parent: $n(i)
                });
            }
        };
        // Helper to add an index entry iff we haven't already written it.
        // Index existing remote documents.
                return e.store(ur.store).$t({
            kt: !0
        }, (function(t, e) {
            var n = new W(t);
            return i(n.popLast());
        })).next((function() {
            return e.store(ir.store).$t({
                kt: !0
            }, (function(t, e) {
                t[0];
                var n = t[1], r = (t[2], Zn(n));
                return i(r.popLast());
            }));
        }));
    }, t.prototype.Ve = function(t) {
        var e = this, n = t.store(cr.store);
        return n.$t((function(t, r) {
            var i = Kr(r), o = Gr(e.R, i);
            return n.put(o);
        }));
    }, t;
}();

function Ai(t) {
    t.createObjectStore(hr.store, {
        keyPath: hr.keyPath
    }).createIndex(hr.documentTargetsIndex, hr.documentTargetsKeyPath, {
        unique: !0
    }), 
    // NOTE: This is unique only because the TargetId is the suffix.
    t.createObjectStore(cr.store, {
        keyPath: cr.keyPath
    }).createIndex(cr.queryTargetsIndexName, cr.queryTargetsKeyPath, {
        unique: !0
    }), t.createObjectStore(fr.store);
}

var ki = "Failed to obtain exclusive access to the persistence layer. To allow shared access, multi-tab synchronization has to be enabled in all tabs. If you are using `experimentalForceOwningTab:true`, make sure that only one tab has persistence enabled at any given time.", xi = /** @class */ function() {
    function t(
    /**
     * Whether to synchronize the in-memory state of multiple tabs and share
     * access to local persistence.
     */
    e, n, r, i, o, s, u, a, c, 
    /**
     * If set to true, forcefully obtains database access. Existing tabs will
     * no longer be able to access IndexedDB.
     */
    h) {
        if (this.allowTabSynchronization = e, this.persistenceKey = n, this.clientId = r, 
        this.Se = o, this.window = s, this.document = u, this.De = c, this.Ce = h, this.Ne = null, 
        this.xe = !1, this.isPrimary = !1, this.networkEnabled = !0, 
        /** Our window.unload handler, if registered. */
        this.Fe = null, this.inForeground = !1, 
        /** Our 'visibilitychange' listener if registered. */
        this.ke = null, 
        /** The client metadata refresh task. */
        this.$e = null, 
        /** The last time we garbage collected the client metadata object store. */
        this.Oe = Number.NEGATIVE_INFINITY, 
        /** A listener to notify on primary state changes. */
        this.Me = function(t) {
            return Promise.resolve();
        }, !t.yt()) throw new N(S.UNIMPLEMENTED, "This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.");
        this.referenceDelegate = new gi(this, i), this.Le = n + "main", this.R = new Pr(a), 
        this.Be = new Tr(this.Le, 11, new Di(this.R)), this.qe = new ci(this.referenceDelegate, this.R), 
        this.Ut = new Xr, this.Ue = function(t, e) {
            return new Ti(t, e);
        }(this.R, this.Ut), this.Qe = new zr, this.window && this.window.localStorage ? this.Ke = this.window.localStorage : (this.Ke = null, 
        !1 === h && x("IndexedDbPersistence", "LocalStorage is unavailable. As a result, persistence may not work reliably. In particular enablePersistence() could fail immediately after refreshing the page."));
    }
    /**
     * Attempt to start IndexedDb persistence.
     *
     * @returns Whether persistence was enabled.
     */    return t.prototype.start = function() {
        var t = this;
        // NOTE: This is expected to fail sometimes (in the case of another tab
        // already having the persistence lock), so it's the first thing we should
        // do.
                return this.je().then((function() {
            if (!t.isPrimary && !t.allowTabSynchronization) 
            // Fail `start()` if `synchronizeTabs` is disabled and we cannot
            // obtain the primary lease.
            throw new N(S.FAILED_PRECONDITION, ki);
            return t.We(), t.Ge(), t.ze(), t.runTransaction("getHighestListenSequenceNumber", "readonly", (function(e) {
                return t.qe.getHighestSequenceNumber(e);
            }));
        })).then((function(e) {
            t.Ne = new _(e, t.De);
        })).then((function() {
            t.xe = !0;
        })).catch((function(e) {
            return t.Be && t.Be.close(), Promise.reject(e);
        }));
    }, 
    /**
     * Registers a listener that gets called when the primary state of the
     * instance changes. Upon registering, this listener is invoked immediately
     * with the current primary state.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */
    t.prototype.He = function(t) {
        var e = this;
        return this.Me = function(n) {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                    return this.started ? [ 2 /*return*/ , t(n) ] : [ 2 /*return*/ ];
                }));
            }));
        }, t(this.isPrimary);
    }, 
    /**
     * Registers a listener that gets called when the database receives a
     * version change event indicating that it has deleted.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */
    t.prototype.setDatabaseDeletedListener = function(t) {
        var e = this;
        this.Be.vt((function(n) {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                    switch (e.label) {
                      case 0:
                        return null === n.newVersion ? [ 4 /*yield*/ , t() ] : [ 3 /*break*/ , 2 ];

                      case 1:
                        e.sent(), e.label = 2;

                      case 2:
                        return [ 2 /*return*/ ];
                    }
                }));
            }));
        }));
    }, 
    /**
     * Adjusts the current network state in the client's metadata, potentially
     * affecting the primary lease.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */
    t.prototype.setNetworkEnabled = function(t) {
        var e = this;
        this.networkEnabled !== t && (this.networkEnabled = t, 
        // Schedule a primary lease refresh for immediate execution. The eventual
        // lease update will be propagated via `primaryStateListener`.
        this.Se.enqueueAndForget((function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                    switch (t.label) {
                      case 0:
                        return this.started ? [ 4 /*yield*/ , this.je() ] : [ 3 /*break*/ , 2 ];

                      case 1:
                        t.sent(), t.label = 2;

                      case 2:
                        return [ 2 /*return*/ ];
                    }
                }));
            }));
        })));
    }, 
    /**
     * Updates the client metadata in IndexedDb and attempts to either obtain or
     * extend the primary lease for the local client. Asynchronously notifies the
     * primary state listener if the client either newly obtained or released its
     * primary lease.
     */
    t.prototype.je = function() {
        var t = this;
        return this.runTransaction("updateClientMetadataAndTryBecomePrimary", "readwrite", (function(e) {
            return Ri(e).put(new dr(t.clientId, Date.now(), t.networkEnabled, t.inForeground)).next((function() {
                if (t.isPrimary) return t.Je(e).next((function(e) {
                    e || (t.isPrimary = !1, t.Se.enqueueRetryable((function() {
                        return t.Me(!1);
                    })));
                }));
            })).next((function() {
                return t.Ye(e);
            })).next((function(n) {
                return t.isPrimary && !n ? t.Xe(e).next((function() {
                    return !1;
                })) : !!n && t.Ze(e).next((function() {
                    return !0;
                }));
            }));
        })).catch((function(e) {
            if (Sr(e)) 
            // Proceed with the existing state. Any subsequent access to
            // IndexedDB will verify the lease.
            return k("IndexedDbPersistence", "Failed to extend owner lease: ", e), t.isPrimary;
            if (!t.allowTabSynchronization) throw e;
            return k("IndexedDbPersistence", "Releasing owner lease after error during lease refresh", e), 
            /* isPrimary= */ !1;
        })).then((function(e) {
            t.isPrimary !== e && t.Se.enqueueRetryable((function() {
                return t.Me(e);
            })), t.isPrimary = e;
        }));
    }, t.prototype.Je = function(t) {
        var e = this;
        return Ci(t).get(er.key).next((function(t) {
            return br.resolve(e.tn(t));
        }));
    }, t.prototype.en = function(t) {
        return Ri(t).delete(this.clientId);
    }, 
    /**
     * If the garbage collection threshold has passed, prunes the
     * RemoteDocumentChanges and the ClientMetadata store based on the last update
     * time of all clients.
     */
    t.prototype.nn = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var t, e, n, r, i = this;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
                switch (o.label) {
                  case 0:
                    return !this.isPrimary || this.sn(this.Oe, 18e5) ? [ 3 /*break*/ , 2 ] : (this.Oe = Date.now(), 
                    [ 4 /*yield*/ , this.runTransaction("maybeGarbageCollectMultiClientState", "readwrite-primary", (function(t) {
                        var e = Cr(t, dr.store);
                        return e.Nt().next((function(t) {
                            var n = i.rn(t, 18e5), r = t.filter((function(t) {
                                return -1 === n.indexOf(t);
                            }));
                            // Delete metadata for clients that are no longer considered active.
                                                        return br.forEach(r, (function(t) {
                                return e.delete(t.clientId);
                            })).next((function() {
                                return r;
                            }));
                        }));
                    })).catch((function() {
                        return [];
                    })) ]);

                  case 1:
                    // Delete potential leftover entries that may continue to mark the
                    // inactive clients as zombied in LocalStorage.
                    // Ideally we'd delete the IndexedDb and LocalStorage zombie entries for
                    // the client atomically, but we can't. So we opt to delete the IndexedDb
                    // entries first to avoid potentially reviving a zombied client.
                    if (t = o.sent(), this.Ke) for (e = 0, n = t; e < n.length; e++) r = n[e], this.Ke.removeItem(this.on(r.clientId));
                    o.label = 2;

                  case 2:
                    return [ 2 /*return*/ ];
                }
            }));
        }));
    }, 
    /**
     * Schedules a recurring timer to update the client metadata and to either
     * extend or acquire the primary lease if the client is eligible.
     */
    t.prototype.ze = function() {
        var t = this;
        this.$e = this.Se.enqueueAfterDelay("client_metadata_refresh" /* ClientMetadataRefresh */ , 4e3, (function() {
            return t.je().then((function() {
                return t.nn();
            })).then((function() {
                return t.ze();
            }));
        }));
    }, 
    /** Checks whether `client` is the local client. */ t.prototype.tn = function(t) {
        return !!t && t.ownerId === this.clientId;
    }, 
    /**
     * Evaluate the state of all active clients and determine whether the local
     * client is or can act as the holder of the primary lease. Returns whether
     * the client is eligible for the lease, but does not actually acquire it.
     * May return 'false' even if there is no active leaseholder and another
     * (foreground) client should become leaseholder instead.
     */
    t.prototype.Ye = function(t) {
        var e = this;
        return this.Ce ? br.resolve(!0) : Ci(t).get(er.key).next((function(n) {
            // A client is eligible for the primary lease if:
            // - its network is enabled and the client's tab is in the foreground.
            // - its network is enabled and no other client's tab is in the
            //   foreground.
            // - every clients network is disabled and the client's tab is in the
            //   foreground.
            // - every clients network is disabled and no other client's tab is in
            //   the foreground.
            // - the `forceOwningTab` setting was passed in.
            if (null !== n && e.sn(n.leaseTimestampMs, 5e3) && !e.cn(n.ownerId)) {
                if (e.tn(n) && e.networkEnabled) return !0;
                if (!e.tn(n)) {
                    if (!n.allowTabSynchronization) 
                    // Fail the `canActAsPrimary` check if the current leaseholder has
                    // not opted into multi-tab synchronization. If this happens at
                    // client startup, we reject the Promise returned by
                    // `enablePersistence()` and the user can continue to use Firestore
                    // with in-memory persistence.
                    // If this fails during a lease refresh, we will instead block the
                    // AsyncQueue from executing further operations. Note that this is
                    // acceptable since mixing & matching different `synchronizeTabs`
                    // settings is not supported.
                    // TODO(b/114226234): Remove this check when `synchronizeTabs` can
                    // no longer be turned off.
                    throw new N(S.FAILED_PRECONDITION, ki);
                    return !1;
                }
            }
            return !(!e.networkEnabled || !e.inForeground) || Ri(t).Nt().next((function(t) {
                return void 0 === e.rn(t, 5e3).find((function(t) {
                    if (e.clientId !== t.clientId) {
                        var n = !e.networkEnabled && t.networkEnabled, r = !e.inForeground && t.inForeground, i = e.networkEnabled === t.networkEnabled;
                        if (n || r && i) return !0;
                    }
                    return !1;
                }));
            }));
        })).next((function(t) {
            return e.isPrimary !== t && k("IndexedDbPersistence", "Client " + (t ? "is" : "is not") + " eligible for a primary lease."), 
            t;
        }));
    }, t.prototype.shutdown = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var t = this;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                switch (e.label) {
                  case 0:
                    // Use `SimpleDb.runTransaction` directly to avoid failing if another tab
                    // has obtained the primary lease.
                    // The shutdown() operations are idempotent and can be called even when
                    // start() aborted (e.g. because it couldn't acquire the persistence lease).
                    return this.xe = !1, this.un(), this.$e && (this.$e.cancel(), this.$e = null), this.an(), 
                    this.hn(), [ 4 /*yield*/ , this.Be.runTransaction("shutdown", "readwrite", [ er.store, dr.store ], (function(e) {
                        var n = new xr(e, _.o);
                        return t.Xe(n).next((function() {
                            return t.en(n);
                        }));
                    })) ];

                  case 1:
                    // The shutdown() operations are idempotent and can be called even when
                    // start() aborted (e.g. because it couldn't acquire the persistence lease).
                    // Use `SimpleDb.runTransaction` directly to avoid failing if another tab
                    // has obtained the primary lease.
                    return e.sent(), this.Be.close(), 
                    // Remove the entry marking the client as zombied from LocalStorage since
                    // we successfully deleted its metadata from IndexedDb.
                    this.ln(), [ 2 /*return*/ ];
                }
            }));
        }));
    }, 
    /**
     * Returns clients that are not zombied and have an updateTime within the
     * provided threshold.
     */
    t.prototype.rn = function(t, e) {
        var n = this;
        return t.filter((function(t) {
            return n.sn(t.updateTimeMs, e) && !n.cn(t.clientId);
        }));
    }, 
    /**
     * Returns the IDs of the clients that are currently active. If multi-tab
     * is not supported, returns an array that only contains the local client's
     * ID.
     *
     * PORTING NOTE: This is only used for Web multi-tab.
     */
    t.prototype.fn = function() {
        var t = this;
        return this.runTransaction("getActiveClients", "readonly", (function(e) {
            return Ri(e).Nt().next((function(e) {
                return t.rn(e, 18e5).map((function(t) {
                    return t.clientId;
                }));
            }));
        }));
    }, Object.defineProperty(t.prototype, "started", {
        get: function() {
            return this.xe;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.getMutationQueue = function(t) {
        return ri.Kt(t, this.R, this.Ut, this.referenceDelegate);
    }, t.prototype.getTargetCache = function() {
        return this.qe;
    }, t.prototype.getRemoteDocumentCache = function() {
        return this.Ue;
    }, t.prototype.getIndexManager = function() {
        return this.Ut;
    }, t.prototype.getBundleCache = function() {
        return this.Qe;
    }, t.prototype.runTransaction = function(t, e, n) {
        var r = this;
        k("IndexedDbPersistence", "Starting transaction:", t);
        var i, o = "readonly" === e ? "readonly" : "readwrite";
        // Do all transactions as readwrite against all object stores, since we
        // are the only reader/writer.
        return this.Be.runTransaction(t, o, vr, (function(o) {
            return i = new xr(o, r.Ne ? r.Ne.next() : _.o), "readwrite-primary" === e ? r.Je(i).next((function(t) {
                return !!t || r.Ye(i);
            })).next((function(e) {
                if (!e) throw x("Failed to obtain primary lease for action '" + t + "'."), r.isPrimary = !1, 
                r.Se.enqueueRetryable((function() {
                    return r.Me(!1);
                })), new N(S.FAILED_PRECONDITION, mr);
                return n(i);
            })).next((function(t) {
                return r.Ze(i).next((function() {
                    return t;
                }));
            })) : r.dn(i).next((function() {
                return n(i);
            }));
        })).then((function(t) {
            return i.raiseOnCommittedEvent(), t;
        }));
    }, 
    /**
     * Verifies that the current tab is the primary leaseholder or alternatively
     * that the leaseholder has opted into multi-tab synchronization.
     */
    // TODO(b/114226234): Remove this check when `synchronizeTabs` can no longer
    // be turned off.
    t.prototype.dn = function(t) {
        var e = this;
        return Ci(t).get(er.key).next((function(t) {
            if (null !== t && e.sn(t.leaseTimestampMs, 5e3) && !e.cn(t.ownerId) && !e.tn(t) && !(e.Ce || e.allowTabSynchronization && t.allowTabSynchronization)) throw new N(S.FAILED_PRECONDITION, ki);
        }));
    }, 
    /**
     * Obtains or extends the new primary lease for the local client. This
     * method does not verify that the client is eligible for this lease.
     */
    t.prototype.Ze = function(t) {
        var e = new er(this.clientId, this.allowTabSynchronization, Date.now());
        return Ci(t).put(er.key, e);
    }, t.yt = function() {
        return Tr.yt();
    }, 
    /** Checks the primary lease and removes it if we are the current primary. */ t.prototype.Xe = function(t) {
        var e = this, n = Ci(t);
        return n.get(er.key).next((function(t) {
            return e.tn(t) ? (k("IndexedDbPersistence", "Releasing primary lease."), n.delete(er.key)) : br.resolve();
        }));
    }, 
    /** Verifies that `updateTimeMs` is within `maxAgeMs`. */ t.prototype.sn = function(t, e) {
        var n = Date.now();
        return !(t < n - e || t > n && (x("Detected an update time that is in the future: " + t + " > " + n), 
        1));
    }, t.prototype.We = function() {
        var t = this;
        null !== this.document && "function" == typeof this.document.addEventListener && (this.ke = function() {
            t.Se.enqueueAndForget((function() {
                return t.inForeground = "visible" === t.document.visibilityState, t.je();
            }));
        }, this.document.addEventListener("visibilitychange", this.ke), this.inForeground = "visible" === this.document.visibilityState);
    }, t.prototype.an = function() {
        this.ke && (this.document.removeEventListener("visibilitychange", this.ke), this.ke = null);
    }, 
    /**
     * Attaches a window.unload handler that will synchronously write our
     * clientId to a "zombie client id" location in LocalStorage. This can be used
     * by tabs trying to acquire the primary lease to determine that the lease
     * is no longer valid even if the timestamp is recent. This is particularly
     * important for the refresh case (so the tab correctly re-acquires the
     * primary lease). LocalStorage is used for this rather than IndexedDb because
     * it is a synchronous API and so can be used reliably from  an unload
     * handler.
     */
    t.prototype.Ge = function() {
        var t, e = this;
        "function" == typeof (null === (t = this.window) || void 0 === t ? void 0 : t.addEventListener) && (this.Fe = function() {
            // Note: In theory, this should be scheduled on the AsyncQueue since it
            // accesses internal state. We execute this code directly during shutdown
            // to make sure it gets a chance to run.
            e.un(), e.Se.enqueueAndForget((function() {
                return e.shutdown();
            }));
        }, this.window.addEventListener("pagehide", this.Fe));
    }, t.prototype.hn = function() {
        this.Fe && (this.window.removeEventListener("pagehide", this.Fe), this.Fe = null);
    }, 
    /**
     * Returns whether a client is "zombied" based on its LocalStorage entry.
     * Clients become zombied when their tab closes without running all of the
     * cleanup logic in `shutdown()`.
     */
    t.prototype.cn = function(t) {
        var e;
        try {
            var n = null !== (null === (e = this.Ke) || void 0 === e ? void 0 : e.getItem(this.on(t)));
            return k("IndexedDbPersistence", "Client '" + t + "' " + (n ? "is" : "is not") + " zombied in LocalStorage"), 
            n;
        } catch (t) {
            // Gracefully handle if LocalStorage isn't working.
            return x("IndexedDbPersistence", "Failed to get zombied client id.", t), !1;
        }
    }, 
    /**
     * Record client as zombied (a client that had its tab closed). Zombied
     * clients are ignored during primary tab selection.
     */
    t.prototype.un = function() {
        if (this.Ke) try {
            this.Ke.setItem(this.on(this.clientId), String(Date.now()));
        } catch (t) {
            // Gracefully handle if LocalStorage isn't available / working.
            x("Failed to set zombie client id.", t);
        }
    }, 
    /** Removes the zombied client entry if it exists. */ t.prototype.ln = function() {
        if (this.Ke) try {
            this.Ke.removeItem(this.on(this.clientId));
        } catch (t) {
            // Ignore
        }
    }, t.prototype.on = function(t) {
        return "firestore_zombie_" + this.persistenceKey + "_" + t;
    }, t;
}();

/**
 * Oldest acceptable age in milliseconds for client metadata before the client
 * is considered inactive and its associated data is garbage collected.
 */
/**
 * An IndexedDB-backed instance of Persistence. Data is stored persistently
 * across sessions.
 *
 * On Web only, the Firestore SDKs support shared access to its persistence
 * layer. This allows multiple browser tabs to read and write to IndexedDb and
 * to synchronize state even without network connectivity. Shared access is
 * currently optional and not enabled unless all clients invoke
 * `enablePersistence()` with `{synchronizeTabs:true}`.
 *
 * In multi-tab mode, if multiple clients are active at the same time, the SDK
 * will designate one client as the “primary client”. An effort is made to pick
 * a visible, network-connected and active client, and this client is
 * responsible for letting other clients know about its presence. The primary
 * client writes a unique client-generated identifier (the client ID) to
 * IndexedDb’s “owner” store every 4 seconds. If the primary client fails to
 * update this entry, another client can acquire the lease and take over as
 * primary.
 *
 * Some persistence operations in the SDK are designated as primary-client only
 * operations. This includes the acknowledgment of mutations and all updates of
 * remote documents. The effects of these operations are written to persistence
 * and then broadcast to other tabs via LocalStorage (see
 * `WebStorageSharedClientState`), which then refresh their state from
 * persistence.
 *
 * Similarly, the primary client listens to notifications sent by secondary
 * clients to discover persistence changes written by secondary clients, such as
 * the addition of new mutations and query targets.
 *
 * If multi-tab is not enabled and another tab already obtained the primary
 * lease, IndexedDbPersistence enters a failed state and all subsequent
 * operations will automatically fail.
 *
 * Additionally, there is an optimization so that when a tab is closed, the
 * primary lease is released immediately (this is especially important to make
 * sure that a refreshed tab is able to immediately re-acquire the primary
 * lease). Unfortunately, IndexedDB cannot be reliably used in window.unload
 * since it is an asynchronous API. So in addition to attempting to give up the
 * lease, the leaseholder writes its client ID to a "zombiedClient" entry in
 * LocalStorage which acts as an indicator that another tab should go ahead and
 * take the primary lease immediately regardless of the current lease timestamp.
 *
 * TODO(b/114226234): Remove `synchronizeTabs` section when multi-tab is no
 * longer optional.
 */
/**
 * Helper to get a typed SimpleDbStore for the primary client object store.
 */
function Ci(t) {
    return Cr(t, er.store);
}

/**
 * Helper to get a typed SimpleDbStore for the client metadata object store.
 */ function Ri(t) {
    return Cr(t, dr.store);
}

/**
 * Generates a string used as a prefix when storing data in IndexedDB and
 * LocalStorage.
 */ function Li(t, e) {
    // Use two different prefix formats:
    //   * firestore / persistenceKey / projectID . databaseID / ...
    //   * firestore / persistenceKey / projectID / ...
    // projectIDs are DNS-compatible names and cannot contain dots
    // so there's no danger of collisions.
    var n = t.projectId;
    return t.isDefaultDatabase || (n += "." + t.database), "firestore/" + e + "/" + n + "/"
    /**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */;
}

var Oi = function(t, e) {
    this.progress = t, this.wn = e;
}, Pi = /** @class */ function() {
    function t(t, e, n) {
        this.Ue = t, this._n = e, this.Ut = n
        /**
     * Get the local view of the document identified by `key`.
     *
     * @returns Local view of the document or null if we don't have any cached
     * state for it.
     */;
    }
    return t.prototype.mn = function(t, e) {
        var n = this;
        return this._n.getAllMutationBatchesAffectingDocumentKey(t, e).next((function(r) {
            return n.yn(t, e, r);
        }));
    }, 
    /** Internal version of `getDocument` that allows reusing batches. */ t.prototype.yn = function(t, e, n) {
        return this.Ue.getEntry(t, e).next((function(t) {
            for (var e = 0, r = n; e < r.length; e++) {
                r[e].applyToLocalView(t);
            }
            return t;
        }));
    }, 
    // Returns the view of the given `docs` as they would appear after applying
    // all mutations in the given `batches`.
    t.prototype.gn = function(t, e) {
        t.forEach((function(t, n) {
            for (var r = 0, i = e; r < i.length; r++) {
                i[r].applyToLocalView(n);
            }
        }));
    }, 
    /**
     * Gets the local view of the documents identified by `keys`.
     *
     * If we don't have cached state for a document in `keys`, a NoDocument will
     * be stored for that key in the resulting set.
     */
    t.prototype.pn = function(t, e) {
        var n = this;
        return this.Ue.getEntries(t, e).next((function(e) {
            return n.En(t, e).next((function() {
                return e;
            }));
        }));
    }, 
    /**
     * Applies the local view the given `baseDocs` without retrieving documents
     * from the local store.
     */
    t.prototype.En = function(t, e) {
        var n = this;
        return this._n.getAllMutationBatchesAffectingDocumentKeys(t, e).next((function(t) {
            return n.gn(e, t);
        }));
    }, 
    /**
     * Performs a query against the local view of all documents.
     *
     * @param transaction - The persistence transaction.
     * @param query - The query to match documents against.
     * @param sinceReadTime - If not set to SnapshotVersion.min(), return only
     *     documents that have been read since this snapshot version (exclusive).
     */
    t.prototype.getDocumentsMatchingQuery = function(t, e, n) {
        /**
 * Returns whether the query matches a single document by path (rather than a
 * collection).
 */
        return function(t) {
            return at.isDocumentKey(t.path) && null === t.collectionGroup && 0 === t.filters.length;
        }(e) ? this.Tn(t, e.path) : Zt(e) ? this.In(t, e, n) : this.An(t, e, n);
    }, t.prototype.Tn = function(t, e) {
        // Just do a simple document lookup.
        return this.mn(t, new at(e)).next((function(t) {
            var e = tn();
            return t.isFoundDocument() && (e = e.insert(t.key, t)), e;
        }));
    }, t.prototype.In = function(t, e, n) {
        var r = this, i = e.collectionGroup, o = tn();
        return this.Ut.getCollectionParents(t, i).next((function(s) {
            return br.forEach(s, (function(s) {
                var u = function(t, e) {
                    return new zt(e, 
                    /*collectionGroup=*/ null, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);
                }(e, s.child(i));
                return r.An(t, u, n).next((function(t) {
                    t.forEach((function(t, e) {
                        o = o.insert(t, e);
                    }));
                }));
            })).next((function() {
                return o;
            }));
        }));
    }, t.prototype.An = function(t, e, n) {
        var r, i, o = this;
        // Query the remote documents and overlay mutations.
                return this.Ue.getDocumentsMatchingQuery(t, e, n).next((function(n) {
            return r = n, o._n.getAllMutationBatchesAffectingQuery(t, e);
        })).next((function(e) {
            return i = e, o.Rn(t, i, r).next((function(t) {
                r = t;
                for (var e = 0, n = i; e < n.length; e++) for (var o = n[e], s = 0, u = o.mutations; s < u.length; s++) {
                    var a = u[s], c = a.key, h = r.get(c);
                    null == h && (
                    // Create invalid document to apply mutations on top of
                    h = St.newInvalidDocument(c), r = r.insert(c, h)), xe(a, h, o.localWriteTime), h.isFoundDocument() || (r = r.remove(c));
                }
            }));
        })).next((function() {
            // Finally, filter out any documents that don't actually match
            // the query.
            return r.forEach((function(t, n) {
                se(e, n) || (r = r.remove(t));
            })), r;
        }));
    }, t.prototype.Rn = function(t, e, n) {
        for (var r = on(), i = 0, o = e; i < o.length; i++) for (var s = 0, u = o[i].mutations; s < u.length; s++) {
            var a = u[s];
            a instanceof Pe && null === n.get(a.key) && (r = r.add(a.key));
        }
        var c = n;
        return this.Ue.getEntries(t, r).next((function(t) {
            return t.forEach((function(t, e) {
                e.isFoundDocument() && (c = c.insert(t, e));
            })), c;
        }));
    }, t;
}(), Fi = /** @class */ function() {
    function t(t, e, n, r) {
        this.targetId = t, this.fromCache = e, this.bn = n, this.vn = r;
    }
    return t.Pn = function(e, n) {
        for (var r = on(), i = on(), o = 0, s = n.docChanges; o < s.length; o++) {
            var u = s[o];
            switch (u.type) {
              case 0 /* Added */ :
                r = r.add(u.doc.key);
                break;

              case 1 /* Removed */ :
                i = i.add(u.doc.key);
                // do nothing
                        }
        }
        return new t(e, n.fromCache, r, i);
    }, t;
}(), Mi = /** @class */ function() {
    function t() {}
    /** Sets the document view to query against. */    return t.prototype.Vn = function(t) {
        this.Sn = t;
    }, 
    /** Returns all local documents matching the specified query. */ t.prototype.getDocumentsMatchingQuery = function(t, e, n, r) {
        var i = this;
        // Queries that match all documents don't benefit from using
        // key-based lookups. It is more efficient to scan all documents in a
        // collection, rather than to perform individual lookups.
                return function(t) {
            return 0 === t.filters.length && null === t.limit && null == t.startAt && null == t.endAt && (0 === t.explicitOrderBy.length || 1 === t.explicitOrderBy.length && t.explicitOrderBy[0].field.isKeyField());
        }(e) || n.isEqual(j.min()) ? this.Dn(t, e) : this.Sn.pn(t, r).next((function(o) {
            var s = i.Cn(e, o);
            return (Yt(e) || $t(e)) && i.Nn(e.limitType, s, r, n) ? i.Dn(t, e) : (A() <= _firebase_logger__WEBPACK_IMPORTED_MODULE_1__.LogLevel.DEBUG && k("QueryEngine", "Re-using previous result from %s to execute query: %s", n.toString(), oe(e)), 
            i.Sn.getDocumentsMatchingQuery(t, e, n).next((function(t) {
                // We merge `previousResults` into `updateResults`, since
                // `updateResults` is already a DocumentMap. If a document is
                // contained in both lists, then its contents are the same.
                return s.forEach((function(e) {
                    t = t.insert(e.key, e);
                })), t;
            })));
        }));
        // Queries that have never seen a snapshot without limbo free documents
        // should also be run as a full collection scan.
        }, 
    /** Applies the query filter and sorting to the provided documents.  */ t.prototype.Cn = function(t, e) {
        // Sort the documents and re-apply the query filter since previously
        // matching documents do not necessarily still match the query.
        var n = new Ye(ue(t));
        return e.forEach((function(e, r) {
            se(t, r) && (n = n.add(r));
        })), n;
    }, 
    /**
     * Determines if a limit query needs to be refilled from cache, making it
     * ineligible for index-free execution.
     *
     * @param sortedPreviousResults - The documents that matched the query when it
     * was last synchronized, sorted by the query's comparator.
     * @param remoteKeys - The document keys that matched the query at the last
     * snapshot.
     * @param limboFreeSnapshotVersion - The version of the snapshot when the
     * query was last synchronized.
     */
    t.prototype.Nn = function(t, e, n, r) {
        // The query needs to be refilled if a previously matching document no
        // longer matches.
        if (n.size !== e.size) return !0;
        // Limit queries are not eligible for index-free query execution if there is
        // a potential that an older document from cache now sorts before a document
        // that was previously part of the limit. This, however, can only happen if
        // the document at the edge of the limit goes out of limit.
        // If a document that is not the limit boundary sorts differently,
        // the boundary of the limit itself did not change and documents from cache
        // will continue to be "rejected" by this boundary. Therefore, we can ignore
        // any modifications that don't affect the last document.
                var i = "F" /* First */ === t ? e.last() : e.first();
        return !!i && (i.hasPendingWrites || i.version.compareTo(r) > 0);
    }, t.prototype.Dn = function(t, e) {
        return A() <= _firebase_logger__WEBPACK_IMPORTED_MODULE_1__.LogLevel.DEBUG && k("QueryEngine", "Using full collection scan to execute query:", oe(e)), 
        this.Sn.getDocumentsMatchingQuery(t, e, j.min());
    }, t;
}(), Vi = /** @class */ function() {
    function t(
    /** Manages our in-memory or durable persistence. */
    t, e, n, r) {
        this.persistence = t, this.xn = e, this.R = r, 
        /**
             * Maps a targetID to data about its target.
             *
             * PORTING NOTE: We are using an immutable data structure on Web to make re-runs
             * of `applyRemoteEvent()` idempotent.
             */
        this.Fn = new ze(V), 
        /** Maps a target to its targetID. */
        // TODO(wuandy): Evaluate if TargetId can be part of Target.
        this.kn = new bi((function(t) {
            return At(t);
        }), kt), 
        /**
             * The read time of the last entry processed by `getNewDocumentChanges()`.
             *
             * PORTING NOTE: This is only used for multi-tab synchronization.
             */
        this.$n = j.min(), this._n = t.getMutationQueue(n), this.On = t.getRemoteDocumentCache(), 
        this.qe = t.getTargetCache(), this.Mn = new Pi(this.On, this._n, this.persistence.getIndexManager()), 
        this.Qe = t.getBundleCache(), this.xn.Vn(this.Mn);
    }
    return t.prototype.collectGarbage = function(t) {
        var e = this;
        return this.persistence.runTransaction("Collect garbage", "readwrite-primary", (function(n) {
            return t.collect(n, e.Fn);
        }));
    }, t;
}();

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A readonly view of the local state of all documents we're tracking (i.e. we
 * have a cached version in remoteDocumentCache or local mutations for the
 * document). The view is computed by applying the mutations in the
 * MutationQueue to the RemoteDocumentCache.
 */ function qi(
/** Manages our in-memory or durable persistence. */
t, e, n, r) {
    return new Vi(t, e, n, r);
}

/**
 * Tells the LocalStore that the currently authenticated user has changed.
 *
 * In response the local store switches the mutation queue to the new user and
 * returns any resulting document changes.
 */
// PORTING NOTE: Android and iOS only return the documents affected by the
// change.
function Ui(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i, o;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(s) {
            switch (s.label) {
              case 0:
                return n = P(t), r = n._n, i = n.Mn, [ 4 /*yield*/ , n.persistence.runTransaction("Handle user change", "readonly", (function(t) {
                    // Swap out the mutation queue, grabbing the pending mutation batches
                    // before and after.
                    var o;
                    return n._n.getAllMutationBatches(t).next((function(s) {
                        return o = s, r = n.persistence.getMutationQueue(e), 
                        // Recreate our LocalDocumentsView using the new
                        // MutationQueue.
                        i = new Pi(n.On, r, n.persistence.getIndexManager()), r.getAllMutationBatches(t);
                    })).next((function(e) {
                        for (var n = [], r = [], s = on(), u = 0, a = o
                        // Union the old/new changed keys.
                        ; u < a.length; u++) {
                            var c = a[u];
                            n.push(c.batchId);
                            for (var h = 0, f = c.mutations; h < f.length; h++) {
                                var l = f[h];
                                s = s.add(l.key);
                            }
                        }
                        for (var d = 0, p = e; d < p.length; d++) {
                            var y = p[d];
                            r.push(y.batchId);
                            for (var v = 0, m = y.mutations; v < m.length; v++) {
                                var g = m[v];
                                s = s.add(g.key);
                            }
                        }
                        // Return the set of all (potentially) changed documents and the list
                        // of mutation batch IDs that were affected by change.
                                                return i.pn(t, s).next((function(t) {
                            return {
                                Ln: t,
                                removedBatchIds: n,
                                addedBatchIds: r
                            };
                        }));
                    }));
                })) ];

              case 1:
                return o = s.sent(), [ 2 /*return*/ , (n._n = r, n.Mn = i, n.xn.Vn(n.Mn), o) ];
            }
        }));
    }));
}

/* Accepts locally generated Mutations and commit them to storage. */
/**
 * Acknowledges the given batch.
 *
 * On the happy path when a batch is acknowledged, the local store will
 *
 *  + remove the batch from the mutation queue;
 *  + apply the changes to the remote document cache;
 *  + recalculate the latency compensated view implied by those changes (there
 *    may be mutations in the queue that affect the documents but haven't been
 *    acknowledged yet); and
 *  + give the changed documents back the sync engine
 *
 * @returns The resulting (modified) documents.
 */ function Bi(t, e) {
    var n = P(t);
    return n.persistence.runTransaction("Acknowledge batch", "readwrite-primary", (function(t) {
        var r = e.batch.keys(), i = n.On.newChangeBuffer({
            trackRemovals: !0
        });
        return function(t, e, n, r) {
            var i = n.batch, o = i.keys(), s = br.resolve();
            return o.forEach((function(t) {
                s = s.next((function() {
                    return r.getEntry(e, t);
                })).next((function(e) {
                    var o = n.docVersions.get(t);
                    O(null !== o), e.version.compareTo(o) < 0 && (i.applyToRemoteDocument(e, n), e.isValidDocument() && 
                    // We use the commitVersion as the readTime rather than the
                    // document's updateTime since the updateTime is not advanced
                    // for updates that do not modify the underlying document.
                    r.addEntry(e, n.commitVersion));
                }));
            })), s.next((function() {
                return t._n.removeMutationBatch(e, i);
            }));
        }(n, t, e, i).next((function() {
            return i.apply(t);
        })).next((function() {
            return n._n.performConsistencyCheck(t);
        })).next((function() {
            return n.Mn.pn(t, r);
        }));
    }));
}

/**
 * Removes mutations from the MutationQueue for the specified batch;
 * LocalDocuments will be recalculated.
 *
 * @returns The resulting modified documents.
 */
/**
 * Returns the last consistent snapshot processed (used by the RemoteStore to
 * determine whether to buffer incoming snapshots from the backend).
 */ function ji(t) {
    var e = P(t);
    return e.persistence.runTransaction("Get last remote snapshot version", "readonly", (function(t) {
        return e.qe.getLastRemoteSnapshotVersion(t);
    }));
}

/**
 * Updates the "ground-state" (remote) documents. We assume that the remote
 * event reflects any write batches that have been acknowledged or rejected
 * (i.e. we do not re-apply local mutations to updates from this event).
 *
 * LocalDocuments are re-calculated if there are remaining mutations in the
 * queue.
 */ function Ki(t, e) {
    var n = P(t), r = e.snapshotVersion, i = n.Fn;
    return n.persistence.runTransaction("Apply remote event", "readwrite-primary", (function(t) {
        var o = n.On.newChangeBuffer({
            trackRemovals: !0
        });
        // Reset newTargetDataByTargetMap in case this transaction gets re-run.
                i = n.Fn;
        var s = [];
        e.targetChanges.forEach((function(e, o) {
            var u = i.get(o);
            if (u) {
                // Only update the remote keys if the target is still active. This
                // ensures that we can persist the updated target data along with
                // the updated assignment.
                s.push(n.qe.removeMatchingKeys(t, e.removedDocuments, o).next((function() {
                    return n.qe.addMatchingKeys(t, e.addedDocuments, o);
                })));
                var a = e.resumeToken;
                // Update the resume token if the change includes one.
                                if (a.approximateByteSize() > 0) {
                    var c = u.withResumeToken(a, r).withSequenceNumber(t.currentSequenceNumber);
                    i = i.insert(o, c), 
                    // Update the target data if there are target changes (or if
                    // sufficient time has passed since the last update).
                    /**
     * Returns true if the newTargetData should be persisted during an update of
     * an active target. TargetData should always be persisted when a target is
     * being released and should not call this function.
     *
     * While the target is active, TargetData updates can be omitted when nothing
     * about the target has changed except metadata like the resume token or
     * snapshot version. Occasionally it's worth the extra write to prevent these
     * values from getting too stale after a crash, but this doesn't have to be
     * too frequent.
     */
                    function(t, e, n) {
                        // Always persist target data if we don't already have a resume token.
                        return O(e.resumeToken.approximateByteSize() > 0), 0 === t.resumeToken.approximateByteSize() || (
                        // Don't allow resume token changes to be buffered indefinitely. This
                        // allows us to be reasonably up-to-date after a crash and avoids needing
                        // to loop over all active queries on shutdown. Especially in the browser
                        // we may not get time to do anything interesting while the current tab is
                        // closing.
                        e.snapshotVersion.toMicroseconds() - t.snapshotVersion.toMicroseconds() >= 3e8 || n.addedDocuments.size + n.modifiedDocuments.size + n.removedDocuments.size > 0);
                    }(u, c, e) && s.push(n.qe.updateTargetData(t, c));
                }
            }
        }));
        var u = Je();
        // HACK: The only reason we allow a null snapshot version is so that we
        // can synthesize remote events when we get permission denied errors while
        // trying to resolve the state of a locally cached document that is in
        // limbo.
                if (e.documentUpdates.forEach((function(r, i) {
            e.resolvedLimboDocuments.has(r) && s.push(n.persistence.referenceDelegate.updateLimboDocument(t, r));
        })), 
        // Each loop iteration only affects its "own" doc, so it's safe to get all the remote
        // documents in advance in a single call.
        s.push(Gi(t, o, e.documentUpdates, r, void 0).next((function(t) {
            u = t;
        }))), !r.isEqual(j.min())) {
            var a = n.qe.getLastRemoteSnapshotVersion(t).next((function(e) {
                return n.qe.setTargetsMetadata(t, t.currentSequenceNumber, r);
            }));
            s.push(a);
        }
        return br.waitFor(s).next((function() {
            return o.apply(t);
        })).next((function() {
            return n.Mn.En(t, u);
        })).next((function() {
            return u;
        }));
    })).then((function(t) {
        return n.Fn = i, t;
    }));
}

/**
 * Populates document change buffer with documents from backend or a bundle.
 * Returns the document changes resulting from applying those documents.
 *
 * @param txn - Transaction to use to read existing documents from storage.
 * @param documentBuffer - Document buffer to collect the resulted changes to be
 *        applied to storage.
 * @param documents - Documents to be applied.
 * @param globalVersion - A `SnapshotVersion` representing the read time if all
 *        documents have the same read time.
 * @param documentVersions - A DocumentKey-to-SnapshotVersion map if documents
 *        have their own read time.
 *
 * Note: this function will use `documentVersions` if it is defined;
 * when it is not defined, resorts to `globalVersion`.
 */ function Gi(t, e, n, r, 
// TODO(wuandy): We could add `readTime` to MaybeDocument instead to remove
// this parameter.
i) {
    var o = on();
    return n.forEach((function(t) {
        return o = o.add(t);
    })), e.getEntries(t, o).next((function(t) {
        var o = Je();
        return n.forEach((function(n, s) {
            var u = t.get(n), a = (null == i ? void 0 : i.get(n)) || r;
            // Note: The order of the steps below is important, since we want
            // to ensure that rejected limbo resolutions (which fabricate
            // NoDocuments with SnapshotVersion.min()) never add documents to
            // cache.
                        s.isNoDocument() && s.version.isEqual(j.min()) ? (
            // NoDocuments with SnapshotVersion.min() are used in manufactured
            // events. We remove these documents from cache since we lost
            // access.
            e.removeEntry(n, a), o = o.insert(n, s)) : !u.isValidDocument() || s.version.compareTo(u.version) > 0 || 0 === s.version.compareTo(u.version) && u.hasPendingWrites ? (e.addEntry(s, a), 
            o = o.insert(n, s)) : k("LocalStore", "Ignoring outdated watch update for ", n, ". Current version:", u.version, " Watch version:", s.version);
        })), o;
    }))
    /**
 * Gets the mutation batch after the passed in batchId in the mutation queue
 * or null if empty.
 * @param afterBatchId - If provided, the batch to search after.
 * @returns The next mutation or null if there wasn't one.
 */;
}

function Qi(t, e) {
    var n = P(t);
    return n.persistence.runTransaction("Get next mutation batch", "readonly", (function(t) {
        return void 0 === e && (e = -1), n._n.getNextMutationBatchAfterBatchId(t, e);
    }));
}

/**
 * Reads the current value of a Document with a given key or null if not
 * found - used for testing.
 */
/**
 * Assigns the given target an internal ID so that its results can be pinned so
 * they don't get GC'd. A target must be allocated in the local store before
 * the store can be used to manage its view.
 *
 * Allocating an already allocated `Target` will return the existing `TargetData`
 * for that `Target`.
 */ function zi(t, e) {
    var n = P(t);
    return n.persistence.runTransaction("Allocate target", "readwrite", (function(t) {
        var r;
        return n.qe.getTargetData(t, e).next((function(i) {
            return i ? (
            // This target has been listened to previously, so reuse the
            // previous targetID.
            // TODO(mcg): freshen last accessed date?
            r = i, br.resolve(r)) : n.qe.allocateTargetId(t).next((function(i) {
                return r = new Or(e, i, 0 /* Listen */ , t.currentSequenceNumber), n.qe.addTargetData(t, r).next((function() {
                    return r;
                }));
            }));
        }));
    })).then((function(t) {
        // If Multi-Tab is enabled, the existing target data may be newer than
        // the in-memory data
        var r = n.Fn.get(t.targetId);
        return (null === r || t.snapshotVersion.compareTo(r.snapshotVersion) > 0) && (n.Fn = n.Fn.insert(t.targetId, t), 
        n.kn.set(e, t.targetId)), t;
    }));
}

/**
 * Returns the TargetData as seen by the LocalStore, including updates that may
 * have not yet been persisted to the TargetCache.
 */
// Visible for testing.
/**
 * Unpins all the documents associated with the given target. If
 * `keepPersistedTargetData` is set to false and Eager GC enabled, the method
 * directly removes the associated target data from the target cache.
 *
 * Releasing a non-existing `Target` is a no-op.
 */
// PORTING NOTE: `keepPersistedTargetData` is multi-tab only.
function Wi(t, e, n) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var r, i, o, s;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(u) {
            switch (u.label) {
              case 0:
                r = P(t), i = r.Fn.get(e), o = n ? "readwrite" : "readwrite-primary", u.label = 1;

              case 1:
                return u.trys.push([ 1, 4, , 5 ]), n ? [ 3 /*break*/ , 3 ] : [ 4 /*yield*/ , r.persistence.runTransaction("Release target", o, (function(t) {
                    return r.persistence.referenceDelegate.removeTarget(t, i);
                })) ];

              case 2:
                u.sent(), u.label = 3;

              case 3:
                return [ 3 /*break*/ , 5 ];

              case 4:
                if (!Sr(s = u.sent())) throw s;
                // All `releaseTarget` does is record the final metadata state for the
                // target, but we've been recording this periodically during target
                // activity. If we lose this write this could cause a very slight
                // difference in the order of target deletion during GC, but we
                // don't define exact LRU semantics so this is acceptable.
                                return k("LocalStore", "Failed to update sequence numbers for target " + e + ": " + s), 
                [ 3 /*break*/ , 5 ];

              case 5:
                return r.Fn = r.Fn.remove(e), r.kn.delete(i.target), [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Runs the specified query against the local store and returns the results,
 * potentially taking advantage of query data from previous executions (such
 * as the set of remote keys).
 *
 * @param usePreviousResults - Whether results from previous executions can
 * be used to optimize this query execution.
 */ function Hi(t, e, n) {
    var r = P(t), i = j.min(), o = on();
    return r.persistence.runTransaction("Execute query", "readonly", (function(t) {
        return function(t, e, n) {
            var r = P(t), i = r.kn.get(n);
            return void 0 !== i ? br.resolve(r.Fn.get(i)) : r.qe.getTargetData(e, n);
        }(r, t, ee(e)).next((function(e) {
            if (e) return i = e.lastLimboFreeSnapshotVersion, r.qe.getMatchingKeysForTargetId(t, e.targetId).next((function(t) {
                o = t;
            }));
        })).next((function() {
            return r.xn.getDocumentsMatchingQuery(t, e, n ? i : j.min(), n ? o : on());
        })).next((function(t) {
            return {
                documents: t,
                Bn: o
            };
        }));
    }));
}

// PORTING NOTE: Multi-Tab only.
function Yi(t, e) {
    var n = P(t), r = P(n.qe), i = n.Fn.get(e);
    return i ? Promise.resolve(i.target) : n.persistence.runTransaction("Get target data", "readonly", (function(t) {
        return r.lt(t, e).next((function(t) {
            return t ? t.target : null;
        }));
    }));
}

/**
 * Returns the set of documents that have been updated since the last call.
 * If this is the first call, returns the set of changes since client
 * initialization. Further invocations will return document that have changed
 * since the prior call.
 */
// PORTING NOTE: Multi-Tab only.
function $i(t) {
    var e = P(t);
    return e.persistence.runTransaction("Get new document changes", "readonly", (function(t) {
        return function(t, e, n) {
            var r = P(t), i = Je(), o = Vr(n), s = Si(e), u = IDBKeyRange.lowerBound(o, !0);
            return s.$t({
                index: ur.readTimeIndex,
                range: u
            }, (function(t, e) {
                // Unlike `getEntry()` and others, `getNewDocumentChanges()` parses
                // the documents directly since we want to keep sentinel deletes.
                var n = Fr(r.R, e);
                i = i.insert(n.key, n), o = e.readTime;
            })).next((function() {
                return {
                    wn: i,
                    readTime: qr(o)
                };
            }));
        }(e.On, t, e.$n);
    })).then((function(t) {
        var n = t.wn, r = t.readTime;
        return e.$n = r, n;
    }));
}

/**
 * Reads the newest document change from persistence and moves the internal
 * synchronization marker forward so that calls to `getNewDocumentChanges()`
 * only return changes that happened after client initialization.
 */
// PORTING NOTE: Multi-Tab only.
function Xi(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var e;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
            return [ 2 /*return*/ , (e = P(t)).persistence.runTransaction("Synchronize last document change read time", "readonly", (function(t) {
                return function(t) {
                    var e = Si(t), n = j.min();
                    // If there are no existing entries, we return SnapshotVersion.min().
                                        return e.$t({
                        index: ur.readTimeIndex,
                        reverse: !0
                    }, (function(t, e, r) {
                        e.readTime && (n = qr(e.readTime)), r.done();
                    })).next((function() {
                        return n;
                    }));
                }(t);
            })).then((function(t) {
                e.$n = t;
            })) ];
        }));
    }));
}

/**
 * Creates a new target using the given bundle name, which will be used to
 * hold the keys of all documents from the bundle in query-document mappings.
 * This ensures that the loaded documents do not get garbage collected
 * right away.
 */
/**
 * Applies the documents from a bundle to the "ground-state" (remote)
 * documents.
 *
 * LocalDocuments are re-calculated if there are remaining mutations in the
 * queue.
 */ function Ji(t, e, n, r) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var i, o, s, u, a, c, h, f, l, d;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(p) {
            switch (p.label) {
              case 0:
                for (i = P(t), o = on(), s = Je(), u = nn(), a = 0, c = n; a < c.length; a++) h = c[a], 
                f = e.qn(h.metadata.name), h.document && (o = o.add(f)), s = s.insert(f, e.Un(h)), 
                u = u.insert(f, e.Qn(h.metadata.readTime));
                return l = i.On.newChangeBuffer({
                    trackRemovals: !0
                }), [ 4 /*yield*/ , zi(i, function(t) {
                    // It is OK that the path used for the query is not valid, because this will
                    // not be read and queried.
                    return ee(Ht(W.fromString("__bundle__/docs/" + t)));
                }(r)) ];

              case 1:
                // Allocates a target to hold all document keys from the bundle, such that
                // they will not get garbage collected right away.
                return d = p.sent(), [ 2 /*return*/ , i.persistence.runTransaction("Apply bundle documents", "readwrite", (function(t) {
                    return Gi(t, l, s, j.min(), u).next((function(e) {
                        return l.apply(t), e;
                    })).next((function(e) {
                        return i.qe.removeMatchingKeysForTargetId(t, d.targetId).next((function() {
                            return i.qe.addMatchingKeys(t, o, d.targetId);
                        })).next((function() {
                            return i.Mn.En(t, e);
                        })).next((function() {
                            return e;
                        }));
                    }));
                })) ];
            }
        }));
    }));
}

/**
 * Returns a promise of a boolean to indicate if the given bundle has already
 * been loaded and the create time is newer than the current loading bundle.
 */
/**
 * Saves the given `NamedQuery` to local persistence.
 */ function Zi(t, e, n) {
    return void 0 === n && (n = on()), (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var r, i;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
            switch (o.label) {
              case 0:
                return [ 4 /*yield*/ , zi(t, ee(Qr(e.bundledQuery))) ];

              case 1:
                return r = o.sent(), [ 2 /*return*/ , (i = P(t)).persistence.runTransaction("Save named query", "readwrite", (function(t) {
                    var o = En(e.readTime);
                    // Simply save the query itself if it is older than what the SDK already
                    // has.
                                        if (r.snapshotVersion.compareTo(o) >= 0) return i.Qe.saveNamedQuery(t, e);
                    // Update existing target data because the query from the bundle is newer.
                                        var s = r.withResumeToken(X.EMPTY_BYTE_STRING, o);
                    return i.Fn = i.Fn.insert(s.targetId, s), i.qe.updateTargetData(t, s).next((function() {
                        return i.qe.removeMatchingKeysForTargetId(t, r.targetId);
                    })).next((function() {
                        return i.qe.addMatchingKeys(t, n, r.targetId);
                    })).next((function() {
                        return i.Qe.saveNamedQuery(t, e);
                    }));
                })) ];
            }
        }));
    }));
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var to = /** @class */ function() {
    function t(t) {
        this.R = t, this.Kn = new Map, this.jn = new Map;
    }
    return t.prototype.getBundleMetadata = function(t, e) {
        return br.resolve(this.Kn.get(e));
    }, t.prototype.saveBundleMetadata = function(t, e) {
        /** Decodes a BundleMetadata proto into a BundleMetadata object. */
        var n;
        return this.Kn.set(e.id, {
            id: (n = e).id,
            version: n.version,
            createTime: En(n.createTime)
        }), br.resolve();
    }, t.prototype.getNamedQuery = function(t, e) {
        return br.resolve(this.jn.get(e));
    }, t.prototype.saveNamedQuery = function(t, e) {
        return this.jn.set(e.name, function(t) {
            return {
                name: t.name,
                query: Qr(t.bundledQuery),
                readTime: En(t.readTime)
            };
        }(e)), br.resolve();
    }, t;
}(), eo = /** @class */ function() {
    function t() {
        // A set of outstanding references to a document sorted by key.
        this.Wn = new Ye(no.Gn), 
        // A set of outstanding references to a document sorted by target id.
        this.zn = new Ye(no.Hn)
        /** Returns true if the reference set contains no references. */;
    }
    return t.prototype.isEmpty = function() {
        return this.Wn.isEmpty();
    }, 
    /** Adds a reference to the given document key for the given ID. */ t.prototype.addReference = function(t, e) {
        var n = new no(t, e);
        this.Wn = this.Wn.add(n), this.zn = this.zn.add(n);
    }, 
    /** Add references to the given document keys for the given ID. */ t.prototype.Jn = function(t, e) {
        var n = this;
        t.forEach((function(t) {
            return n.addReference(t, e);
        }));
    }, 
    /**
     * Removes a reference to the given document key for the given
     * ID.
     */
    t.prototype.removeReference = function(t, e) {
        this.Yn(new no(t, e));
    }, t.prototype.Xn = function(t, e) {
        var n = this;
        t.forEach((function(t) {
            return n.removeReference(t, e);
        }));
    }, 
    /**
     * Clears all references with a given ID. Calls removeRef() for each key
     * removed.
     */
    t.prototype.Zn = function(t) {
        var e = this, n = new at(new W([])), r = new no(n, t), i = new no(n, t + 1), o = [];
        return this.zn.forEachInRange([ r, i ], (function(t) {
            e.Yn(t), o.push(t.key);
        })), o;
    }, t.prototype.ts = function() {
        var t = this;
        this.Wn.forEach((function(e) {
            return t.Yn(e);
        }));
    }, t.prototype.Yn = function(t) {
        this.Wn = this.Wn.delete(t), this.zn = this.zn.delete(t);
    }, t.prototype.es = function(t) {
        var e = new at(new W([])), n = new no(e, t), r = new no(e, t + 1), i = on();
        return this.zn.forEachInRange([ n, r ], (function(t) {
            i = i.add(t.key);
        })), i;
    }, t.prototype.containsKey = function(t) {
        var e = new no(t, 0), n = this.Wn.firstAfterOrEqual(e);
        return null !== n && t.isEqual(n.key);
    }, t;
}(), no = /** @class */ function() {
    function t(t, e) {
        this.key = t, this.ns = e
        /** Compare by key then by ID */;
    }
    return t.Gn = function(t, e) {
        return at.comparator(t.key, e.key) || V(t.ns, e.ns);
    }, 
    /** Compare by ID then by key */ t.Hn = function(t, e) {
        return V(t.ns, e.ns) || at.comparator(t.key, e.key);
    }, t;
}(), ro = /** @class */ function() {
    function t(t, e) {
        this.Ut = t, this.referenceDelegate = e, 
        /**
             * The set of all mutations that have been sent but not yet been applied to
             * the backend.
             */
        this._n = [], 
        /** Next value to use when assigning sequential IDs to each mutation batch. */
        this.ss = 1, 
        /** An ordered mapping between documents and the mutations batch IDs. */
        this.rs = new Ye(no.Gn);
    }
    return t.prototype.checkEmpty = function(t) {
        return br.resolve(0 === this._n.length);
    }, t.prototype.addMutationBatch = function(t, e, n, r) {
        var i = this.ss;
        this.ss++, this._n.length > 0 && this._n[this._n.length - 1];
        var o = new Rr(i, e, n, r);
        this._n.push(o);
        // Track references by document key and index collection parents.
        for (var s = 0, u = r; s < u.length; s++) {
            var a = u[s];
            this.rs = this.rs.add(new no(a.key, i)), this.Ut.addToCollectionParentIndex(t, a.key.path.popLast());
        }
        return br.resolve(o);
    }, t.prototype.lookupMutationBatch = function(t, e) {
        return br.resolve(this.os(e));
    }, t.prototype.getNextMutationBatchAfterBatchId = function(t, e) {
        var n = e + 1, r = this.cs(n), i = r < 0 ? 0 : r;
        // The requested batchId may still be out of range so normalize it to the
        // start of the queue.
                return br.resolve(this._n.length > i ? this._n[i] : null);
    }, t.prototype.getHighestUnacknowledgedBatchId = function() {
        return br.resolve(0 === this._n.length ? -1 : this.ss - 1);
    }, t.prototype.getAllMutationBatches = function(t) {
        return br.resolve(this._n.slice());
    }, t.prototype.getAllMutationBatchesAffectingDocumentKey = function(t, e) {
        var n = this, r = new no(e, 0), i = new no(e, Number.POSITIVE_INFINITY), o = [];
        return this.rs.forEachInRange([ r, i ], (function(t) {
            var e = n.os(t.ns);
            o.push(e);
        })), br.resolve(o);
    }, t.prototype.getAllMutationBatchesAffectingDocumentKeys = function(t, e) {
        var n = this, r = new Ye(V);
        return e.forEach((function(t) {
            var e = new no(t, 0), i = new no(t, Number.POSITIVE_INFINITY);
            n.rs.forEachInRange([ e, i ], (function(t) {
                r = r.add(t.ns);
            }));
        })), br.resolve(this.us(r));
    }, t.prototype.getAllMutationBatchesAffectingQuery = function(t, e) {
        // Use the query path as a prefix for testing if a document matches the
        // query.
        var n = e.path, r = n.length + 1, i = n;
        // Construct a document reference for actually scanning the index. Unlike
        // the prefix the document key in this reference must have an even number of
        // segments. The empty segment can be used a suffix of the query path
        // because it precedes all other segments in an ordered traversal.
                at.isDocumentKey(i) || (i = i.child(""));
        var o = new no(new at(i), 0), s = new Ye(V);
        // Find unique batchIDs referenced by all documents potentially matching the
        // query.
                return this.rs.forEachWhile((function(t) {
            var e = t.key.path;
            return !!n.isPrefixOf(e) && (
            // Rows with document keys more than one segment longer than the query
            // path can't be matches. For example, a query on 'rooms' can't match
            // the document /rooms/abc/messages/xyx.
            // TODO(mcg): we'll need a different scanner when we implement
            // ancestor queries.
            e.length === r && (s = s.add(t.ns)), !0);
        }), o), br.resolve(this.us(s));
    }, t.prototype.us = function(t) {
        var e = this, n = [];
        // Construct an array of matching batches, sorted by batchID to ensure that
        // multiple mutations affecting the same document key are applied in order.
                return t.forEach((function(t) {
            var r = e.os(t);
            null !== r && n.push(r);
        })), n;
    }, t.prototype.removeMutationBatch = function(t, e) {
        var n = this;
        O(0 === this.hs(e.batchId, "removed")), this._n.shift();
        var r = this.rs;
        return br.forEach(e.mutations, (function(i) {
            var o = new no(i.key, e.batchId);
            return r = r.delete(o), n.referenceDelegate.markPotentiallyOrphaned(t, i.key);
        })).next((function() {
            n.rs = r;
        }));
    }, t.prototype.Gt = function(t) {
        // No-op since the memory mutation queue does not maintain a separate cache.
    }, t.prototype.containsKey = function(t, e) {
        var n = new no(e, 0), r = this.rs.firstAfterOrEqual(n);
        return br.resolve(e.isEqual(r && r.key));
    }, t.prototype.performConsistencyCheck = function(t) {
        return this._n.length, br.resolve();
    }, 
    /**
     * Finds the index of the given batchId in the mutation queue and asserts that
     * the resulting index is within the bounds of the queue.
     *
     * @param batchId - The batchId to search for
     * @param action - A description of what the caller is doing, phrased in passive
     * form (e.g. "acknowledged" in a routine that acknowledges batches).
     */
    t.prototype.hs = function(t, e) {
        return this.cs(t);
    }, 
    /**
     * Finds the index of the given batchId in the mutation queue. This operation
     * is O(1).
     *
     * @returns The computed index of the batch with the given batchId, based on
     * the state of the queue. Note this index can be negative if the requested
     * batchId has already been remvoed from the queue or past the end of the
     * queue if the batchId is larger than the last added batch.
     */
    t.prototype.cs = function(t) {
        return 0 === this._n.length ? 0 : t - this._n[0].batchId;
        // Examine the front of the queue to figure out the difference between the
        // batchId and indexes in the array. Note that since the queue is ordered
        // by batchId, if the first batch has a larger batchId then the requested
        // batchId doesn't exist in the queue.
        }, 
    /**
     * A version of lookupMutationBatch that doesn't return a promise, this makes
     * other functions that uses this code easier to read and more efficent.
     */
    t.prototype.os = function(t) {
        var e = this.cs(t);
        return e < 0 || e >= this._n.length ? null : this._n[e];
    }, t;
}(), io = /** @class */ function() {
    /**
     * @param sizer - Used to assess the size of a document. For eager GC, this is
     * expected to just return 0 to avoid unnecessarily doing the work of
     * calculating the size.
     */
    function t(t, e) {
        this.Ut = t, this.ls = e, 
        /** Underlying cache of documents and their read times. */
        this.docs = new ze(at.comparator), 
        /** Size of all cached documents. */
        this.size = 0
        /**
     * Adds the supplied entry to the cache and updates the cache size as appropriate.
     *
     * All calls of `addEntry`  are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()`.
     */;
    }
    return t.prototype.addEntry = function(t, e, n) {
        var r = e.key, i = this.docs.get(r), o = i ? i.size : 0, s = this.ls(e);
        return this.docs = this.docs.insert(r, {
            document: e.clone(),
            size: s,
            readTime: n
        }), this.size += s - o, this.Ut.addToCollectionParentIndex(t, r.path.popLast());
    }, 
    /**
     * Removes the specified entry from the cache and updates the cache size as appropriate.
     *
     * All calls of `removeEntry` are required to go through the RemoteDocumentChangeBuffer
     * returned by `newChangeBuffer()`.
     */
    t.prototype.removeEntry = function(t) {
        var e = this.docs.get(t);
        e && (this.docs = this.docs.remove(t), this.size -= e.size);
    }, t.prototype.getEntry = function(t, e) {
        var n = this.docs.get(e);
        return br.resolve(n ? n.document.clone() : St.newInvalidDocument(e));
    }, t.prototype.getEntries = function(t, e) {
        var n = this, r = Je();
        return e.forEach((function(t) {
            var e = n.docs.get(t);
            r = r.insert(t, e ? e.document.clone() : St.newInvalidDocument(t));
        })), br.resolve(r);
    }, t.prototype.getDocumentsMatchingQuery = function(t, e, n) {
        for (var r = Je(), i = new at(e.path.child("")), o = this.docs.getIteratorFrom(i)
        // Documents are ordered by key, so we can use a prefix scan to narrow down
        // the documents we need to match the query against.
        ; o.hasNext(); ) {
            var s = o.getNext(), u = s.key, a = s.value, c = a.document, h = a.readTime;
            if (!e.path.isPrefixOf(u.path)) break;
            h.compareTo(n) <= 0 || se(e, c) && (r = r.insert(c.key, c.clone()));
        }
        return br.resolve(r);
    }, t.prototype.fs = function(t, e) {
        return br.forEach(this.docs, (function(t) {
            return e(t);
        }));
    }, t.prototype.newChangeBuffer = function(t) {
        // `trackRemovals` is ignores since the MemoryRemoteDocumentCache keeps
        // a separate changelog and does not need special handling for removals.
        return new oo(this);
    }, t.prototype.getSize = function(t) {
        return br.resolve(this.size);
    }, t;
}(), oo = /** @class */ function(t) {
    function e(e) {
        var n = this;
        return (n = t.call(this) || this).Ie = e, n;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.applyChanges = function(t) {
        var e = this, n = [];
        return this.changes.forEach((function(r, i) {
            i.document.isValidDocument() ? n.push(e.Ie.addEntry(t, i.document, e.getReadTime(r))) : e.Ie.removeEntry(r);
        })), br.waitFor(n);
    }, e.prototype.getFromCache = function(t, e) {
        return this.Ie.getEntry(t, e);
    }, e.prototype.getAllFromCache = function(t, e) {
        return this.Ie.getEntries(t, e);
    }, e;
}(Ii), so = /** @class */ function() {
    function t(t) {
        this.persistence = t, 
        /**
             * Maps a target to the data about that target
             */
        this.ds = new bi((function(t) {
            return At(t);
        }), kt), 
        /** The last received snapshot version. */
        this.lastRemoteSnapshotVersion = j.min(), 
        /** The highest numbered target ID encountered. */
        this.highestTargetId = 0, 
        /** The highest sequence number encountered. */
        this.ws = 0, 
        /**
             * A ordered bidirectional mapping between documents and the remote target
             * IDs.
             */
        this._s = new eo, this.targetCount = 0, this.ys = ai.Jt();
    }
    return t.prototype.forEachTarget = function(t, e) {
        return this.ds.forEach((function(t, n) {
            return e(n);
        })), br.resolve();
    }, t.prototype.getLastRemoteSnapshotVersion = function(t) {
        return br.resolve(this.lastRemoteSnapshotVersion);
    }, t.prototype.getHighestSequenceNumber = function(t) {
        return br.resolve(this.ws);
    }, t.prototype.allocateTargetId = function(t) {
        return this.highestTargetId = this.ys.next(), br.resolve(this.highestTargetId);
    }, t.prototype.setTargetsMetadata = function(t, e, n) {
        return n && (this.lastRemoteSnapshotVersion = n), e > this.ws && (this.ws = e), 
        br.resolve();
    }, t.prototype.te = function(t) {
        this.ds.set(t.target, t);
        var e = t.targetId;
        e > this.highestTargetId && (this.ys = new ai(e), this.highestTargetId = e), t.sequenceNumber > this.ws && (this.ws = t.sequenceNumber);
    }, t.prototype.addTargetData = function(t, e) {
        return this.te(e), this.targetCount += 1, br.resolve();
    }, t.prototype.updateTargetData = function(t, e) {
        return this.te(e), br.resolve();
    }, t.prototype.removeTargetData = function(t, e) {
        return this.ds.delete(e.target), this._s.Zn(e.targetId), this.targetCount -= 1, 
        br.resolve();
    }, t.prototype.removeTargets = function(t, e, n) {
        var r = this, i = 0, o = [];
        return this.ds.forEach((function(s, u) {
            u.sequenceNumber <= e && null === n.get(u.targetId) && (r.ds.delete(s), o.push(r.removeMatchingKeysForTargetId(t, u.targetId)), 
            i++);
        })), br.waitFor(o).next((function() {
            return i;
        }));
    }, t.prototype.getTargetCount = function(t) {
        return br.resolve(this.targetCount);
    }, t.prototype.getTargetData = function(t, e) {
        var n = this.ds.get(e) || null;
        return br.resolve(n);
    }, t.prototype.addMatchingKeys = function(t, e, n) {
        return this._s.Jn(e, n), br.resolve();
    }, t.prototype.removeMatchingKeys = function(t, e, n) {
        this._s.Xn(e, n);
        var r = this.persistence.referenceDelegate, i = [];
        return r && e.forEach((function(e) {
            i.push(r.markPotentiallyOrphaned(t, e));
        })), br.waitFor(i);
    }, t.prototype.removeMatchingKeysForTargetId = function(t, e) {
        return this._s.Zn(e), br.resolve();
    }, t.prototype.getMatchingKeysForTargetId = function(t, e) {
        var n = this._s.es(e);
        return br.resolve(n);
    }, t.prototype.containsKey = function(t, e) {
        return br.resolve(this._s.containsKey(e));
    }, t;
}(), uo = /** @class */ function() {
    /**
     * The constructor accepts a factory for creating a reference delegate. This
     * allows both the delegate and this instance to have strong references to
     * each other without having nullable fields that would then need to be
     * checked or asserted on every access.
     */
    function t(t, e) {
        var n = this;
        this.gs = {}, this.Ne = new _(0), this.xe = !1, this.xe = !0, this.referenceDelegate = t(this), 
        this.qe = new so(this), this.Ut = new Yr, this.Ue = function(t, e) {
            return new io(t, (function(t) {
                return n.referenceDelegate.ps(t);
            }));
        }(this.Ut), this.R = new Pr(e), this.Qe = new to(this.R);
    }
    return t.prototype.start = function() {
        return Promise.resolve();
    }, t.prototype.shutdown = function() {
        // No durable state to ensure is closed on shutdown.
        return this.xe = !1, Promise.resolve();
    }, Object.defineProperty(t.prototype, "started", {
        get: function() {
            return this.xe;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.setDatabaseDeletedListener = function() {
        // No op.
    }, t.prototype.setNetworkEnabled = function() {
        // No op.
    }, t.prototype.getIndexManager = function() {
        return this.Ut;
    }, t.prototype.getMutationQueue = function(t) {
        var e = this.gs[t.toKey()];
        return e || (e = new ro(this.Ut, this.referenceDelegate), this.gs[t.toKey()] = e), 
        e;
    }, t.prototype.getTargetCache = function() {
        return this.qe;
    }, t.prototype.getRemoteDocumentCache = function() {
        return this.Ue;
    }, t.prototype.getBundleCache = function() {
        return this.Qe;
    }, t.prototype.runTransaction = function(t, e, n) {
        var r = this;
        k("MemoryPersistence", "Starting transaction:", t);
        var i = new ao(this.Ne.next());
        return this.referenceDelegate.Es(), n(i).next((function(t) {
            return r.referenceDelegate.Ts(i).next((function() {
                return t;
            }));
        })).toPromise().then((function(t) {
            return i.raiseOnCommittedEvent(), t;
        }));
    }, t.prototype.Is = function(t, e) {
        return br.or(Object.values(this.gs).map((function(n) {
            return function() {
                return n.containsKey(t, e);
            };
        })));
    }, t;
}(), ao = /** @class */ function(t) {
    function e(e) {
        var n = this;
        return (n = t.call(this) || this).currentSequenceNumber = e, n;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e;
}(gr), co = /** @class */ function() {
    function t(t) {
        this.persistence = t, 
        /** Tracks all documents that are active in Query views. */
        this.As = new eo, 
        /** The list of documents that are potentially GCed after each transaction. */
        this.Rs = null;
    }
    return t.bs = function(e) {
        return new t(e);
    }, Object.defineProperty(t.prototype, "vs", {
        get: function() {
            if (this.Rs) return this.Rs;
            throw L();
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.addReference = function(t, e, n) {
        return this.As.addReference(n, e), this.vs.delete(n.toString()), br.resolve();
    }, t.prototype.removeReference = function(t, e, n) {
        return this.As.removeReference(n, e), this.vs.add(n.toString()), br.resolve();
    }, t.prototype.markPotentiallyOrphaned = function(t, e) {
        return this.vs.add(e.toString()), br.resolve();
    }, t.prototype.removeTarget = function(t, e) {
        var n = this;
        this.As.Zn(e.targetId).forEach((function(t) {
            return n.vs.add(t.toString());
        }));
        var r = this.persistence.getTargetCache();
        return r.getMatchingKeysForTargetId(t, e.targetId).next((function(t) {
            t.forEach((function(t) {
                return n.vs.add(t.toString());
            }));
        })).next((function() {
            return r.removeTargetData(t, e);
        }));
    }, t.prototype.Es = function() {
        this.Rs = new Set;
    }, t.prototype.Ts = function(t) {
        var e = this, n = this.persistence.getRemoteDocumentCache().newChangeBuffer();
        // Remove newly orphaned documents.
                return br.forEach(this.vs, (function(r) {
            var i = at.fromPath(r);
            return e.Ps(t, i).next((function(t) {
                t || n.removeEntry(i);
            }));
        })).next((function() {
            return e.Rs = null, n.apply(t);
        }));
    }, t.prototype.updateLimboDocument = function(t, e) {
        var n = this;
        return this.Ps(t, e).next((function(t) {
            t ? n.vs.delete(e.toString()) : n.vs.add(e.toString());
        }));
    }, t.prototype.ps = function(t) {
        // For eager GC, we don't care about the document size, there are no size thresholds.
        return 0;
    }, t.prototype.Ps = function(t, e) {
        var n = this;
        return br.or([ function() {
            return br.resolve(n.As.containsKey(e));
        }, function() {
            return n.persistence.getTargetCache().containsKey(t, e);
        }, function() {
            return n.persistence.Is(t, e);
        } ]);
    }, t;
}(), ho = /** @class */ function() {
    function t(t) {
        this.uid = t;
    }
    return t.prototype.isAuthenticated = function() {
        return null != this.uid;
    }, 
    /**
     * Returns a key representing this user, suitable for inclusion in a
     * dictionary.
     */
    t.prototype.toKey = function() {
        return this.isAuthenticated() ? "uid:" + this.uid : "anonymous-user";
    }, t.prototype.isEqual = function(t) {
        return t.uid === this.uid;
    }, t;
}();

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A collection of references to a document from some kind of numbered entity
 * (either a target ID or batch ID). As references are added to or removed from
 * the set corresponding events are emitted to a registered garbage collector.
 *
 * Each reference is represented by a DocumentReference object. Each of them
 * contains enough information to uniquely identify the reference. They are all
 * stored primarily in a set sorted by key. A document is considered garbage if
 * there's no references in that set (this can be efficiently checked thanks to
 * sorting by key).
 *
 * ReferenceSet also keeps a secondary set that contains references sorted by
 * IDs. This one is used to efficiently implement removal of all references by
 * some target ID.
 */
/** Assembles the key for a client state in WebStorage */
function fo(t, e) {
    return "firestore_clients_" + t + "_" + e;
}

// The format of the WebStorage key that stores the mutation state is:
//     firestore_mutations_<persistence_prefix>_<batch_id>
//     (for unauthenticated users)
// or: firestore_mutations_<persistence_prefix>_<batch_id>_<user_uid>
// 'user_uid' is last to avoid needing to escape '_' characters that it might
// contain.
/** Assembles the key for a mutation batch in WebStorage */ function lo(t, e, n) {
    var r = "firestore_mutations_" + t + "_" + n;
    return e.isAuthenticated() && (r += "_" + e.uid), r;
}

// The format of the WebStorage key that stores a query target's metadata is:
//     firestore_targets_<persistence_prefix>_<target_id>
/** Assembles the key for a query state in WebStorage */ function po(t, e) {
    return "firestore_targets_" + t + "_" + e;
}

// The WebStorage prefix that stores the primary tab's online state. The
// format of the key is:
//     firestore_online_state_<persistence_prefix>
/**
 * Holds the state of a mutation batch, including its user ID, batch ID and
 * whether the batch is 'pending', 'acknowledged' or 'rejected'.
 */
// Visible for testing
/** A user with a null UID. */ ho.UNAUTHENTICATED = new ho(null), 
// TODO(mikelehen): Look into getting a proper uid-equivalent for
// non-FirebaseAuth providers.
ho.GOOGLE_CREDENTIALS = new ho("google-credentials-uid"), ho.FIRST_PARTY = new ho("first-party-uid");

var yo = /** @class */ function() {
    function t(t, e, n, r) {
        this.user = t, this.batchId = e, this.state = n, this.error = r
        /**
     * Parses a MutationMetadata from its JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */;
    }
    return t.Vs = function(e, n, r) {
        var i, o = JSON.parse(r), s = "object" == typeof o && -1 !== [ "pending", "acknowledged", "rejected" ].indexOf(o.state) && (void 0 === o.error || "object" == typeof o.error);
        return s && o.error && ((s = "string" == typeof o.error.message && "string" == typeof o.error.code) && (i = new N(o.error.code, o.error.message))), 
        s ? new t(e, n, o.state, i) : (x("SharedClientState", "Failed to parse mutation state for ID '" + n + "': " + r), 
        null);
    }, t.prototype.Ss = function() {
        var t = {
            state: this.state,
            updateTimeMs: Date.now()
        };
        return this.error && (t.error = {
            code: this.error.code,
            message: this.error.message
        }), JSON.stringify(t);
    }, t;
}(), vo = /** @class */ function() {
    function t(t, e, n) {
        this.targetId = t, this.state = e, this.error = n
        /**
     * Parses a QueryTargetMetadata from its JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */;
    }
    return t.Vs = function(e, n) {
        var r, i = JSON.parse(n), o = "object" == typeof i && -1 !== [ "not-current", "current", "rejected" ].indexOf(i.state) && (void 0 === i.error || "object" == typeof i.error);
        return o && i.error && ((o = "string" == typeof i.error.message && "string" == typeof i.error.code) && (r = new N(i.error.code, i.error.message))), 
        o ? new t(e, i.state, r) : (x("SharedClientState", "Failed to parse target state for ID '" + e + "': " + n), 
        null);
    }, t.prototype.Ss = function() {
        var t = {
            state: this.state,
            updateTimeMs: Date.now()
        };
        return this.error && (t.error = {
            code: this.error.code,
            message: this.error.message
        }), JSON.stringify(t);
    }, t;
}(), mo = /** @class */ function() {
    function t(t, e) {
        this.clientId = t, this.activeTargetIds = e
        /**
     * Parses a RemoteClientState from the JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */;
    }
    return t.Vs = function(e, n) {
        for (var r = JSON.parse(n), i = "object" == typeof r && r.activeTargetIds instanceof Array, o = un(), s = 0; i && s < r.activeTargetIds.length; ++s) i = ut(r.activeTargetIds[s]), 
        o = o.add(r.activeTargetIds[s]);
        return i ? new t(e, o) : (x("SharedClientState", "Failed to parse client data for instance '" + e + "': " + n), 
        null);
    }, t;
}(), go = /** @class */ function() {
    function t(t, e) {
        this.clientId = t, this.onlineState = e
        /**
     * Parses a SharedOnlineState from its JSON representation in WebStorage.
     * Logs a warning and returns null if the format of the data is not valid.
     */;
    }
    return t.Vs = function(e) {
        var n = JSON.parse(e);
        return "object" == typeof n && -1 !== [ "Unknown", "Online", "Offline" ].indexOf(n.onlineState) && "string" == typeof n.clientId ? new t(n.clientId, n.onlineState) : (x("SharedClientState", "Failed to parse online state: " + e), 
        null);
    }, t;
}(), wo = /** @class */ function() {
    function t() {
        this.activeTargetIds = un();
    }
    return t.prototype.Ds = function(t) {
        this.activeTargetIds = this.activeTargetIds.add(t);
    }, t.prototype.Cs = function(t) {
        this.activeTargetIds = this.activeTargetIds.delete(t);
    }, 
    /**
     * Converts this entry into a JSON-encoded format we can use for WebStorage.
     * Does not encode `clientId` as it is part of the key in WebStorage.
     */
    t.prototype.Ss = function() {
        var t = {
            activeTargetIds: this.activeTargetIds.toArray(),
            updateTimeMs: Date.now()
        };
        return JSON.stringify(t);
    }, t;
}(), bo = /** @class */ function() {
    function t(t, e, n, r, i) {
        this.window = t, this.Se = e, this.persistenceKey = n, this.Ns = r, this.syncEngine = null, 
        this.onlineStateHandler = null, this.sequenceNumberHandler = null, this.xs = this.Fs.bind(this), 
        this.ks = new ze(V), this.started = !1, 
        /**
             * Captures WebStorage events that occur before `start()` is called. These
             * events are replayed once `WebStorageSharedClientState` is started.
             */
        this.$s = [];
        // Escape the special characters mentioned here:
        // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions
        var o = n.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
        this.storage = this.window.localStorage, this.currentUser = i, this.Os = fo(this.persistenceKey, this.Ns), 
        this.Ms = 
        /** Assembles the key for the current sequence number. */
        function(t) {
            return "firestore_sequence_number_" + t;
        }(this.persistenceKey), this.ks = this.ks.insert(this.Ns, new wo), this.Ls = new RegExp("^firestore_clients_" + o + "_([^_]*)$"), 
        this.Bs = new RegExp("^firestore_mutations_" + o + "_(\\d+)(?:_(.*))?$"), this.qs = new RegExp("^firestore_targets_" + o + "_(\\d+)$"), 
        this.Us = 
        /** Assembles the key for the online state of the primary tab. */
        function(t) {
            return "firestore_online_state_" + t;
        }(this.persistenceKey), this.Qs = function(t) {
            return "firestore_bundle_loaded_" + t;
        }(this.persistenceKey), 
        // Rather than adding the storage observer during start(), we add the
        // storage observer during initialization. This ensures that we collect
        // events before other components populate their initial state (during their
        // respective start() calls). Otherwise, we might for example miss a
        // mutation that is added after LocalStore's start() processed the existing
        // mutations but before we observe WebStorage events.
        this.window.addEventListener("storage", this.xs);
    }
    /** Returns 'true' if WebStorage is available in the current environment. */    return t.yt = function(t) {
        return !(!t || !t.localStorage);
    }, t.prototype.start = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var t, e, n, r, i, o, s, u, a, c, h, f = this;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(l) {
                switch (l.label) {
                  case 0:
                    return [ 4 /*yield*/ , this.syncEngine.fn() ];

                  case 1:
                    for (t = l.sent(), e = 0, n = t; e < n.length; e++) (r = n[e]) !== this.Ns && (i = this.getItem(fo(this.persistenceKey, r))) && (o = mo.Vs(r, i)) && (this.ks = this.ks.insert(o.clientId, o));
                    for (this.Ks(), (s = this.storage.getItem(this.Us)) && (u = this.js(s)) && this.Ws(u), 
                    a = 0, c = this.$s; a < c.length; a++) h = c[a], this.Fs(h);
                    return this.$s = [], 
                    // Register a window unload hook to remove the client metadata entry from
                    // WebStorage even if `shutdown()` was not called.
                    this.window.addEventListener("pagehide", (function() {
                        return f.shutdown();
                    })), this.started = !0, [ 2 /*return*/ ];
                }
            }));
        }));
    }, t.prototype.writeSequenceNumber = function(t) {
        this.setItem(this.Ms, JSON.stringify(t));
    }, t.prototype.getAllActiveQueryTargets = function() {
        return this.Gs(this.ks);
    }, t.prototype.isActiveQueryTarget = function(t) {
        var e = !1;
        return this.ks.forEach((function(n, r) {
            r.activeTargetIds.has(t) && (e = !0);
        })), e;
    }, t.prototype.addPendingMutation = function(t) {
        this.zs(t, "pending");
    }, t.prototype.updateMutationState = function(t, e, n) {
        this.zs(t, e, n), 
        // Once a final mutation result is observed by other clients, they no longer
        // access the mutation's metadata entry. Since WebStorage replays events
        // in order, it is safe to delete the entry right after updating it.
        this.Hs(t);
    }, t.prototype.addLocalQueryTarget = function(t) {
        var e = "not-current";
        // Lookup an existing query state if the target ID was already registered
        // by another tab
                if (this.isActiveQueryTarget(t)) {
            var n = this.storage.getItem(po(this.persistenceKey, t));
            if (n) {
                var r = vo.Vs(t, n);
                r && (e = r.state);
            }
        }
        return this.Js.Ds(t), this.Ks(), e;
    }, t.prototype.removeLocalQueryTarget = function(t) {
        this.Js.Cs(t), this.Ks();
    }, t.prototype.isLocalQueryTarget = function(t) {
        return this.Js.activeTargetIds.has(t);
    }, t.prototype.clearQueryState = function(t) {
        this.removeItem(po(this.persistenceKey, t));
    }, t.prototype.updateQueryState = function(t, e, n) {
        this.Ys(t, e, n);
    }, t.prototype.handleUserChange = function(t, e, n) {
        var r = this;
        e.forEach((function(t) {
            r.Hs(t);
        })), this.currentUser = t, n.forEach((function(t) {
            r.addPendingMutation(t);
        }));
    }, t.prototype.setOnlineState = function(t) {
        this.Xs(t);
    }, t.prototype.notifyBundleLoaded = function() {
        this.Zs();
    }, t.prototype.shutdown = function() {
        this.started && (this.window.removeEventListener("storage", this.xs), this.removeItem(this.Os), 
        this.started = !1);
    }, t.prototype.getItem = function(t) {
        var e = this.storage.getItem(t);
        return k("SharedClientState", "READ", t, e), e;
    }, t.prototype.setItem = function(t, e) {
        k("SharedClientState", "SET", t, e), this.storage.setItem(t, e);
    }, t.prototype.removeItem = function(t) {
        k("SharedClientState", "REMOVE", t), this.storage.removeItem(t);
    }, t.prototype.Fs = function(t) {
        var e = this, n = t;
        // Note: The function is typed to take Event to be interface-compatible with
        // `Window.addEventListener`.
                if (n.storageArea === this.storage) {
            if (k("SharedClientState", "EVENT", n.key, n.newValue), n.key === this.Os) return void x("Received WebStorage notification for local change. Another client might have garbage-collected our state");
            this.Se.enqueueRetryable((function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
                    var t, e, r, i, o, s;
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(u) {
                        if (this.started) {
                            if (null !== n.key) if (this.Ls.test(n.key)) {
                                if (null == n.newValue) return t = this.ti(n.key), [ 2 /*return*/ , this.ei(t, null) ];
                                if (e = this.ni(n.key, n.newValue)) return [ 2 /*return*/ , this.ei(e.clientId, e) ];
                            } else if (this.Bs.test(n.key)) {
                                if (null !== n.newValue && (r = this.si(n.key, n.newValue))) return [ 2 /*return*/ , this.ii(r) ];
                            } else if (this.qs.test(n.key)) {
                                if (null !== n.newValue && (i = this.ri(n.key, n.newValue))) return [ 2 /*return*/ , this.oi(i) ];
                            } else if (n.key === this.Us) {
                                if (null !== n.newValue && (o = this.js(n.newValue))) return [ 2 /*return*/ , this.Ws(o) ];
                            } else if (n.key === this.Ms) (s = function(t) {
                                var e = _.o;
                                if (null != t) try {
                                    var n = JSON.parse(t);
                                    O("number" == typeof n), e = n;
                                } catch (t) {
                                    x("SharedClientState", "Failed to read sequence number from WebStorage", t);
                                }
                                return e;
                            }(n.newValue)) !== _.o && this.sequenceNumberHandler(s); else if (n.key === this.Qs) return [ 2 /*return*/ , this.syncEngine.ci() ];
                        } else this.$s.push(n);
                        return [ 2 /*return*/ ];
                    }));
                }));
            }));
        }
    }, Object.defineProperty(t.prototype, "Js", {
        get: function() {
            return this.ks.get(this.Ns);
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.Ks = function() {
        this.setItem(this.Os, this.Js.Ss());
    }, t.prototype.zs = function(t, e, n) {
        var r = new yo(this.currentUser, t, e, n), i = lo(this.persistenceKey, this.currentUser, t);
        this.setItem(i, r.Ss());
    }, t.prototype.Hs = function(t) {
        var e = lo(this.persistenceKey, this.currentUser, t);
        this.removeItem(e);
    }, t.prototype.Xs = function(t) {
        var e = {
            clientId: this.Ns,
            onlineState: t
        };
        this.storage.setItem(this.Us, JSON.stringify(e));
    }, t.prototype.Ys = function(t, e, n) {
        var r = po(this.persistenceKey, t), i = new vo(t, e, n);
        this.setItem(r, i.Ss());
    }, t.prototype.Zs = function() {
        this.setItem(this.Qs, "value-not-used");
    }, 
    /**
     * Parses a client state key in WebStorage. Returns null if the key does not
     * match the expected key format.
     */
    t.prototype.ti = function(t) {
        var e = this.Ls.exec(t);
        return e ? e[1] : null;
    }, 
    /**
     * Parses a client state in WebStorage. Returns 'null' if the value could not
     * be parsed.
     */
    t.prototype.ni = function(t, e) {
        var n = this.ti(t);
        return mo.Vs(n, e);
    }, 
    /**
     * Parses a mutation batch state in WebStorage. Returns 'null' if the value
     * could not be parsed.
     */
    t.prototype.si = function(t, e) {
        var n = this.Bs.exec(t), r = Number(n[1]), i = void 0 !== n[2] ? n[2] : null;
        return yo.Vs(new ho(i), r, e);
    }, 
    /**
     * Parses a query target state from WebStorage. Returns 'null' if the value
     * could not be parsed.
     */
    t.prototype.ri = function(t, e) {
        var n = this.qs.exec(t), r = Number(n[1]);
        return vo.Vs(r, e);
    }, 
    /**
     * Parses an online state from WebStorage. Returns 'null' if the value
     * could not be parsed.
     */
    t.prototype.js = function(t) {
        return go.Vs(t);
    }, t.prototype.ii = function(t) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                return t.user.uid === this.currentUser.uid ? [ 2 /*return*/ , this.syncEngine.ui(t.batchId, t.state, t.error) ] : (k("SharedClientState", "Ignoring mutation for non-active user " + t.user.uid), 
                [ 2 /*return*/ ]);
            }));
        }));
    }, t.prototype.oi = function(t) {
        return this.syncEngine.ai(t.targetId, t.state, t.error);
    }, t.prototype.ei = function(t, e) {
        var n = this, r = e ? this.ks.insert(t, e) : this.ks.remove(t), i = this.Gs(this.ks), o = this.Gs(r), s = [], u = [];
        return o.forEach((function(t) {
            i.has(t) || s.push(t);
        })), i.forEach((function(t) {
            o.has(t) || u.push(t);
        })), this.syncEngine.hi(s, u).then((function() {
            n.ks = r;
        }));
    }, t.prototype.Ws = function(t) {
        // We check whether the client that wrote this online state is still active
        // by comparing its client ID to the list of clients kept active in
        // IndexedDb. If a client does not update their IndexedDb client state
        // within 5 seconds, it is considered inactive and we don't emit an online
        // state event.
        this.ks.get(t.clientId) && this.onlineStateHandler(t.onlineState);
    }, t.prototype.Gs = function(t) {
        var e = un();
        return t.forEach((function(t, n) {
            e = e.unionWith(n.activeTargetIds);
        })), e;
    }, t;
}(), Io = /** @class */ function() {
    function t() {
        this.li = new wo, this.fi = {}, this.onlineStateHandler = null, this.sequenceNumberHandler = null;
    }
    return t.prototype.addPendingMutation = function(t) {
        // No op.
    }, t.prototype.updateMutationState = function(t, e, n) {
        // No op.
    }, t.prototype.addLocalQueryTarget = function(t) {
        return this.li.Ds(t), this.fi[t] || "not-current";
    }, t.prototype.updateQueryState = function(t, e, n) {
        this.fi[t] = e;
    }, t.prototype.removeLocalQueryTarget = function(t) {
        this.li.Cs(t);
    }, t.prototype.isLocalQueryTarget = function(t) {
        return this.li.activeTargetIds.has(t);
    }, t.prototype.clearQueryState = function(t) {
        delete this.fi[t];
    }, t.prototype.getAllActiveQueryTargets = function() {
        return this.li.activeTargetIds;
    }, t.prototype.isActiveQueryTarget = function(t) {
        return this.li.activeTargetIds.has(t);
    }, t.prototype.start = function() {
        return this.li = new wo, Promise.resolve();
    }, t.prototype.handleUserChange = function(t, e, n) {
        // No op.
    }, t.prototype.setOnlineState = function(t) {
        // No op.
    }, t.prototype.shutdown = function() {}, t.prototype.writeSequenceNumber = function(t) {}, 
    t.prototype.notifyBundleLoaded = function() {
        // No op.
    }, t;
}(), To = /** @class */ function() {
    function t() {}
    return t.prototype.di = function(t) {
        // No-op.
    }, t.prototype.shutdown = function() {
        // No-op.
    }, t;
}(), Eo = /** @class */ function() {
    function t() {
        var t = this;
        this.wi = function() {
            return t._i();
        }, this.mi = function() {
            return t.yi();
        }, this.gi = [], this.pi();
    }
    return t.prototype.di = function(t) {
        this.gi.push(t);
    }, t.prototype.shutdown = function() {
        window.removeEventListener("online", this.wi), window.removeEventListener("offline", this.mi);
    }, t.prototype.pi = function() {
        window.addEventListener("online", this.wi), window.addEventListener("offline", this.mi);
    }, t.prototype._i = function() {
        k("ConnectivityMonitor", "Network connectivity changed: AVAILABLE");
        for (var t = 0, e = this.gi; t < e.length; t++) {
            (0, e[t])(0 /* AVAILABLE */);
        }
    }, t.prototype.yi = function() {
        k("ConnectivityMonitor", "Network connectivity changed: UNAVAILABLE");
        for (var t = 0, e = this.gi; t < e.length; t++) {
            (0, e[t])(1 /* UNAVAILABLE */);
        }
    }, 
    // TODO(chenbrian): Consider passing in window either into this component or
    // here for testing via FakeWindow.
    /** Checks that all used attributes of window are available. */
    t.yt = function() {
        return "undefined" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;
    }, t;
}(), _o = {
    BatchGetDocuments: "batchGet",
    Commit: "commit",
    RunQuery: "runQuery"
}, So = /** @class */ function() {
    function t(t) {
        this.Ei = t.Ei, this.Ti = t.Ti;
    }
    return t.prototype.Ii = function(t) {
        this.Ai = t;
    }, t.prototype.Ri = function(t) {
        this.bi = t;
    }, t.prototype.onMessage = function(t) {
        this.vi = t;
    }, t.prototype.close = function() {
        this.Ti();
    }, t.prototype.send = function(t) {
        this.Ei(t);
    }, t.prototype.Pi = function() {
        this.Ai();
    }, t.prototype.Vi = function(t) {
        this.bi(t);
    }, t.prototype.Si = function(t) {
        this.vi(t);
    }, t;
}(), No = /** @class */ function(t) {
    function u(e) {
        var n = this;
        return (n = t.call(this, e) || this).forceLongPolling = e.forceLongPolling, n.autoDetectLongPolling = e.autoDetectLongPolling, 
        n.useFetchStreams = e.useFetchStreams, n;
    }
    /**
     * Base class for all Rest-based connections to the backend (WebChannel and
     * HTTP).
     */
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(u, t), u.prototype.ki = function(t, e, n, r) {
        return new Promise((function(i, o) {
            var s = new _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.XhrIo;
            s.listenOnce(_firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.EventType.COMPLETE, (function() {
                try {
                    switch (s.getLastErrorCode()) {
                      case _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.ErrorCode.NO_ERROR:
                        var e = s.getResponseJson();
                        k("Connection", "XHR received:", JSON.stringify(e)), i(e);
                        break;

                      case _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.ErrorCode.TIMEOUT:
                        k("Connection", 'RPC "' + t + '" timed out'), o(new N(S.DEADLINE_EXCEEDED, "Request time out"));
                        break;

                      case _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.ErrorCode.HTTP_ERROR:
                        var n = s.getStatus();
                        if (k("Connection", 'RPC "' + t + '" failed with status:', n, "response text:", s.getResponseText()), 
                        n > 0) {
                            var r = s.getResponseJson().error;
                            if (r && r.status && r.message) {
                                var u = function(t) {
                                    var e = t.toLowerCase().replace(/_/g, "-");
                                    return Object.values(S).indexOf(e) >= 0 ? e : S.UNKNOWN;
                                }(r.status);
                                o(new N(u, r.message));
                            } else o(new N(S.UNKNOWN, "Server responded with status " + s.getStatus()));
                        } else 
                        // If we received an HTTP_ERROR but there's no status code,
                        // it's most probably a connection issue
                        o(new N(S.UNAVAILABLE, "Connection failed."));
                        break;

                      default:
                        L();
                    }
                } finally {
                    k("Connection", 'RPC "' + t + '" completed.');
                }
            }));
            var u = JSON.stringify(r);
            s.send(e, "POST", u, n, 15);
        }));
    }, u.prototype.Oi = function(t, u) {
        var a = [ this.Di, "/", "google.firestore.v1.Firestore", "/", t, "/channel" ], c = (0,_firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.createWebChannelTransport)(), h = (0,_firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.getStatEventTarget)(), f = {
            // Required for backend stickiness, routing behavior is based on this
            // parameter.
            httpSessionIdParam: "gsessionid",
            initMessageHeaders: {},
            messageUrlParams: {
                // This param is used to improve routing and project isolation by the
                // backend and must be included in every request.
                database: "projects/" + this.databaseId.projectId + "/databases/" + this.databaseId.database
            },
            sendRawJson: !0,
            supportsCrossDomainXhr: !0,
            internalChannelParams: {
                // Override the default timeout (randomized between 10-20 seconds) since
                // a large write batch on a slow internet connection may take a long
                // time to send to the backend. Rather than have WebChannel impose a
                // tight timeout which could lead to infinite timeouts and retries, we
                // set it very large (5-10 minutes) and rely on the browser's builtin
                // timeouts to kick in if the request isn't working.
                forwardChannelRequestTimeoutMs: 6e5
            },
            forceLongPolling: this.forceLongPolling,
            detectBufferingProxy: this.autoDetectLongPolling
        };
        this.useFetchStreams && (f.xmlHttpFactory = new _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.FetchXmlHttpFactory({})), this.Fi(f.initMessageHeaders, u), 
        // Sending the custom headers we just added to request.initMessageHeaders
        // (Authorization, etc.) will trigger the browser to make a CORS preflight
        // request because the XHR will no longer meet the criteria for a "simple"
        // CORS request:
        // https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS#Simple_requests
        // Therefore to avoid the CORS preflight request (an extra network
        // roundtrip), we use the httpHeadersOverwriteParam option to specify that
        // the headers should instead be encoded into a special "$httpHeaders" query
        // parameter, which is recognized by the webchannel backend. This is
        // formally defined here:
        // https://github.com/google/closure-library/blob/b0e1815b13fb92a46d7c9b3c30de5d6a396a3245/closure/goog/net/rpc/httpcors.js#L32
        // TODO(b/145624756): There is a backend bug where $httpHeaders isn't respected if the request
        // doesn't have an Origin header. So we have to exclude a few browser environments that are
        // known to (sometimes) not include an Origin. See
        // https://github.com/firebase/firebase-js-sdk/issues/1491.
        (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isMobileCordova)() || (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isReactNative)() || (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isElectron)() || (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isIE)() || (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isUWP)() || (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.isBrowserExtension)() || (f.httpHeadersOverwriteParam = "$httpHeaders");
        var l = a.join("");
        k("Connection", "Creating WebChannel: " + l, f);
        var d = c.createWebChannel(l, f), b = !1, I = !1, T = new So({
            Ei: function(t) {
                I ? k("Connection", "Not sending because WebChannel is closed:", t) : (b || (k("Connection", "Opening WebChannel transport."), 
                d.open(), b = !0), k("Connection", "WebChannel sending:", t), d.send(t));
            },
            Ti: function() {
                return d.close();
            }
        }), E = function(t, e, n) {
            // TODO(dimond): closure typing seems broken because WebChannel does
            // not implement goog.events.Listenable
            t.listen(e, (function(t) {
                try {
                    n(t);
                } catch (t) {
                    setTimeout((function() {
                        throw t;
                    }), 0);
                }
            }));
        };
        // WebChannel supports sending the first message with the handshake - saving
        // a network round trip. However, it will have to call send in the same
        // JS event loop as open. In order to enforce this, we delay actually
        // opening the WebChannel until send is called. Whether we have called
        // open is tracked with this variable.
                // Closure events are guarded and exceptions are swallowed, so catch any
        // exception and rethrow using a setTimeout so they become visible again.
        // Note that eventually this function could go away if we are confident
        // enough the code is exception free.
        return E(d, _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.WebChannel.EventType.OPEN, (function() {
            I || k("Connection", "WebChannel transport opened.");
        })), E(d, _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.WebChannel.EventType.CLOSE, (function() {
            I || (I = !0, k("Connection", "WebChannel transport closed"), T.Vi());
        })), E(d, _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.WebChannel.EventType.ERROR, (function(t) {
            I || (I = !0, C("Connection", "WebChannel transport errored:", t), T.Vi(new N(S.UNAVAILABLE, "The operation could not be completed")));
        })), E(d, _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.WebChannel.EventType.MESSAGE, (function(t) {
            var e;
            if (!I) {
                var n = t.data[0];
                O(!!n);
                // TODO(b/35143891): There is a bug in One Platform that caused errors
                // (and only errors) to be wrapped in an extra array. To be forward
                // compatible with the bug we need to check either condition. The latter
                // can be removed once the fix has been rolled out.
                // Use any because msgData.error is not typed.
                var r = n, i = r.error || (null === (e = r[0]) || void 0 === e ? void 0 : e.error);
                if (i) {
                    k("Connection", "WebChannel received error:", i);
                    // error.status will be a string like 'OK' or 'NOT_FOUND'.
                    var o = i.status, s = 
                    /**
 * Maps an error Code from a GRPC status identifier like 'NOT_FOUND'.
 *
 * @returns The Code equivalent to the given status string or undefined if
 *     there is no match.
 */
                    function(t) {
                        // lookup by string
                        // eslint-disable-next-line @typescript-eslint/no-explicit-any
                        var e = qe[t];
                        if (void 0 !== e) return Qe(e);
                    }(o), u = i.message;
                    void 0 === s && (s = S.INTERNAL, u = "Unknown error status: " + o + " with message " + i.message), 
                    // Mark closed so no further events are propagated
                    I = !0, T.Vi(new N(s, u)), d.close();
                } else k("Connection", "WebChannel received:", n), T.Si(n);
            }
        })), E(h, _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.Event.STAT_EVENT, (function(t) {
            t.stat === _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.Stat.PROXY ? k("Connection", "Detected buffering proxy") : t.stat === _firebase_webchannel_wrapper__WEBPACK_IMPORTED_MODULE_2__.Stat.NOPROXY && k("Connection", "Detected no buffering proxy");
        })), setTimeout((function() {
            // Technically we could/should wait for the WebChannel opened event,
            // but because we want to send the first message with the WebChannel
            // handshake we pretend the channel opened here (asynchronously), and
            // then delay the actual open until the first message is sent.
            T.Pi();
        }), 0), T;
    }, u;
}(/** @class */ function() {
    function t(t) {
        this.databaseInfo = t, this.databaseId = t.databaseId;
        var e = t.ssl ? "https" : "http";
        this.Di = e + "://" + t.host, this.Ci = "projects/" + this.databaseId.projectId + "/databases/" + this.databaseId.database + "/documents";
    }
    return t.prototype.Ni = function(t, e, n, r) {
        var i = this.xi(t, e);
        k("RestConnection", "Sending: ", i, n);
        var o = {};
        return this.Fi(o, r), this.ki(t, i, o, n).then((function(t) {
            return k("RestConnection", "Received: ", t), t;
        }), (function(e) {
            throw C("RestConnection", t + " failed with error: ", e, "url: ", i, "request:", n), 
            e;
        }));
    }, t.prototype.$i = function(t, e, n, r) {
        // The REST API automatically aggregates all of the streamed results, so we
        // can just use the normal invoke() method.
        return this.Ni(t, e, n, r);
    }, 
    /**
     * Modifies the headers for a request, adding any authorization token if
     * present and any additional headers for the request.
     */
    t.prototype.Fi = function(t, e) {
        if (t["X-Goog-Api-Client"] = "gl-js/ fire/8.6.5", 
        // Content-Type: text/plain will avoid preflight requests which might
        // mess with CORS and redirects by proxies. If we add custom headers
        // we will need to change this code to potentially use the $httpOverwrite
        // parameter supported by ESF to avoid triggering preflight requests.
        t["Content-Type"] = "text/plain", this.databaseInfo.appId && (t["X-Firebase-GMPID"] = this.databaseInfo.appId), 
        e) for (var n in e.authHeaders) e.authHeaders.hasOwnProperty(n) && (t[n] = e.authHeaders[n]);
    }, t.prototype.xi = function(t, e) {
        var n = _o[t];
        return this.Di + "/v1/" + e + ":" + n;
    }, t;
}());

/**
 * Holds the state of a query target, including its target ID and whether the
 * target is 'not-current', 'current' or 'rejected'.
 */
// Visible for testing
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Initializes the WebChannelConnection for the browser. */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** The Platform's 'window' implementation or null if not available. */
function Do() {
    // `window` is not always available, e.g. in ReactNative and WebWorkers.
    // eslint-disable-next-line no-restricted-globals
    return "undefined" != typeof window ? window : null;
}

/** The Platform's 'document' implementation or null if not available. */ function Ao() {
    // `document` is not always available, e.g. in ReactNative and WebWorkers.
    // eslint-disable-next-line no-restricted-globals
    return "undefined" != typeof document ? document : null;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ function ko(t) {
    return new wn(t, /* useProto3Json= */ !0);
}

/**
 * An instance of the Platform's 'TextEncoder' implementation.
 */
/**
 * A helper for running delayed tasks following an exponential backoff curve
 * between attempts.
 *
 * Each delay is made up of a "base" delay which follows the exponential
 * backoff curve, and a +/- 50% "jitter" that is calculated and added to the
 * base delay. This prevents clients from accidentally synchronizing their
 * delays causing spikes of load to the backend.
 */ var xo = /** @class */ function() {
    function t(
    /**
     * The AsyncQueue to run backoff operations on.
     */
    t, 
    /**
     * The ID to use when scheduling backoff operations on the AsyncQueue.
     */
    e, 
    /**
     * The initial delay (used as the base delay on the first retry attempt).
     * Note that jitter will still be applied, so the actual delay could be as
     * little as 0.5*initialDelayMs.
     */
    n
    /**
     * The multiplier to use to determine the extended base delay after each
     * attempt.
     */ , r
    /**
     * The maximum base delay after which no further backoff is performed.
     * Note that jitter will still be applied, so the actual delay could be as
     * much as 1.5*maxDelayMs.
     */ , i) {
        void 0 === n && (n = 1e3), void 0 === r && (r = 1.5), void 0 === i && (i = 6e4), 
        this.Se = t, this.timerId = e, this.Mi = n, this.Li = r, this.Bi = i, this.qi = 0, 
        this.Ui = null, 
        /** The last backoff attempt, as epoch milliseconds. */
        this.Qi = Date.now(), this.reset();
    }
    /**
     * Resets the backoff delay.
     *
     * The very next backoffAndWait() will have no delay. If it is called again
     * (i.e. due to an error), initialDelayMs (plus jitter) will be used, and
     * subsequent ones will increase according to the backoffFactor.
     */    return t.prototype.reset = function() {
        this.qi = 0;
    }, 
    /**
     * Resets the backoff delay to the maximum delay (e.g. for use after a
     * RESOURCE_EXHAUSTED error).
     */
    t.prototype.Ki = function() {
        this.qi = this.Bi;
    }, 
    /**
     * Returns a promise that resolves after currentDelayMs, and increases the
     * delay for any subsequent attempts. If there was a pending backoff operation
     * already, it will be canceled.
     */
    t.prototype.ji = function(t) {
        var e = this;
        // Cancel any pending backoff operation.
                this.cancel();
        // First schedule using the current base (which may be 0 and should be
        // honored as such).
        var n = Math.floor(this.qi + this.Wi()), r = Math.max(0, Date.now() - this.Qi), i = Math.max(0, n - r);
        // Guard against lastAttemptTime being in the future due to a clock change.
                i > 0 && k("ExponentialBackoff", "Backing off for " + i + " ms (base delay: " + this.qi + " ms, delay with jitter: " + n + " ms, last attempt: " + r + " ms ago)"), 
        this.Ui = this.Se.enqueueAfterDelay(this.timerId, i, (function() {
            return e.Qi = Date.now(), t();
        })), 
        // Apply backoff factor to determine next delay and ensure it is within
        // bounds.
        this.qi *= this.Li, this.qi < this.Mi && (this.qi = this.Mi), this.qi > this.Bi && (this.qi = this.Bi);
    }, t.prototype.Gi = function() {
        null !== this.Ui && (this.Ui.skipDelay(), this.Ui = null);
    }, t.prototype.cancel = function() {
        null !== this.Ui && (this.Ui.cancel(), this.Ui = null);
    }, 
    /** Returns a random value in the range [-currentBaseMs/2, currentBaseMs/2] */ t.prototype.Wi = function() {
        return (Math.random() - .5) * this.qi;
    }, t;
}(), Co = /** @class */ function() {
    function t(t, e, n, r, i, o) {
        this.Se = t, this.zi = n, this.Hi = r, this.Ji = i, this.listener = o, this.state = 0 /* Initial */ , 
        /**
             * A close count that's incremented every time the stream is closed; used by
             * getCloseGuardedDispatcher() to invalidate callbacks that happen after
             * close.
             */
        this.Yi = 0, this.Xi = null, this.stream = null, this.Zi = new xo(t, e)
        /**
     * Returns true if start() has been called and no error has occurred. True
     * indicates the stream is open or in the process of opening (which
     * encompasses respecting backoff, getting auth tokens, and starting the
     * actual RPC). Use isOpen() to determine if the stream is open and ready for
     * outbound requests.
     */;
    }
    return t.prototype.tr = function() {
        return 1 /* Starting */ === this.state || 2 /* Open */ === this.state || 4 /* Backoff */ === this.state;
    }, 
    /**
     * Returns true if the underlying RPC is open (the onOpen() listener has been
     * called) and the stream is ready for outbound requests.
     */
    t.prototype.er = function() {
        return 2 /* Open */ === this.state;
    }, 
    /**
     * Starts the RPC. Only allowed if isStarted() returns false. The stream is
     * not immediately ready for use: onOpen() will be invoked when the RPC is
     * ready for outbound requests, at which point isOpen() will return true.
     *
     * When start returns, isStarted() will return true.
     */
    t.prototype.start = function() {
        3 /* Error */ !== this.state ? this.auth() : this.nr();
    }, 
    /**
     * Stops the RPC. This call is idempotent and allowed regardless of the
     * current isStarted() state.
     *
     * When stop returns, isStarted() and isOpen() will both return false.
     */
    t.prototype.stop = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                switch (t.label) {
                  case 0:
                    return this.tr() ? [ 4 /*yield*/ , this.close(0 /* Initial */) ] : [ 3 /*break*/ , 2 ];

                  case 1:
                    t.sent(), t.label = 2;

                  case 2:
                    return [ 2 /*return*/ ];
                }
            }));
        }));
    }, 
    /**
     * After an error the stream will usually back off on the next attempt to
     * start it. If the error warrants an immediate restart of the stream, the
     * sender can use this to indicate that the receiver should not back off.
     *
     * Each error will call the onClose() listener. That function can decide to
     * inhibit backoff if required.
     */
    t.prototype.sr = function() {
        this.state = 0 /* Initial */ , this.Zi.reset();
    }, 
    /**
     * Marks this stream as idle. If no further actions are performed on the
     * stream for one minute, the stream will automatically close itself and
     * notify the stream's onClose() handler with Status.OK. The stream will then
     * be in a !isStarted() state, requiring the caller to start the stream again
     * before further use.
     *
     * Only streams that are in state 'Open' can be marked idle, as all other
     * states imply pending network operations.
     */
    t.prototype.ir = function() {
        var t = this;
        // Starts the idle time if we are in state 'Open' and are not yet already
        // running a timer (in which case the previous idle timeout still applies).
                this.er() && null === this.Xi && (this.Xi = this.Se.enqueueAfterDelay(this.zi, 6e4, (function() {
            return t.rr();
        })));
    }, 
    /** Sends a message to the underlying stream. */ t.prototype.cr = function(t) {
        this.ur(), this.stream.send(t);
    }, 
    /** Called by the idle timer when the stream should close due to inactivity. */ t.prototype.rr = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                return this.er() ? [ 2 /*return*/ , this.close(0 /* Initial */) ] : [ 2 /*return*/ ];
            }));
        }));
    }, 
    /** Marks the stream as active again. */ t.prototype.ur = function() {
        this.Xi && (this.Xi.cancel(), this.Xi = null);
    }, 
    /**
     * Closes the stream and cleans up as necessary:
     *
     * * closes the underlying GRPC stream;
     * * calls the onClose handler with the given 'error';
     * * sets internal stream state to 'finalState';
     * * adjusts the backoff timer based on the error
     *
     * A new stream can be opened by calling start().
     *
     * @param finalState - the intended state of the stream after closing.
     * @param error - the error the connection was closed with.
     */
    t.prototype.close = function(t, e) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                switch (n.label) {
                  case 0:
                    // Notify the listener that the stream closed.
                    // Cancel any outstanding timers (they're guaranteed not to execute).
                    return this.ur(), this.Zi.cancel(), 
                    // Invalidates any stream-related callbacks (e.g. from auth or the
                    // underlying stream), guaranteeing they won't execute.
                    this.Yi++, 3 /* Error */ !== t ? 
                    // If this is an intentional close ensure we don't delay our next connection attempt.
                    this.Zi.reset() : e && e.code === S.RESOURCE_EXHAUSTED ? (
                    // Log the error. (Probably either 'quota exceeded' or 'max queue length reached'.)
                    x(e.toString()), x("Using maximum backoff delay to prevent overloading the backend."), 
                    this.Zi.Ki()) : e && e.code === S.UNAUTHENTICATED && 
                    // "unauthenticated" error means the token was rejected. Try force refreshing it in case it
                    // just expired.
                    this.Ji.invalidateToken(), 
                    // Clean up the underlying stream because we are no longer interested in events.
                    null !== this.stream && (this.ar(), this.stream.close(), this.stream = null), 
                    // This state must be assigned before calling onClose() to allow the callback to
                    // inhibit backoff or otherwise manipulate the state in its non-started state.
                    this.state = t, [ 4 /*yield*/ , this.listener.Ri(e) ];

                  case 1:
                    // Cancel any outstanding timers (they're guaranteed not to execute).
                    // Notify the listener that the stream closed.
                    return n.sent(), [ 2 /*return*/ ];
                }
            }));
        }));
    }, 
    /**
     * Can be overridden to perform additional cleanup before the stream is closed.
     * Calling super.tearDown() is not required.
     */
    t.prototype.ar = function() {}, t.prototype.auth = function() {
        var t = this;
        this.state = 1 /* Starting */;
        var e = this.hr(this.Yi), n = this.Yi;
        // TODO(mikelehen): Just use dispatchIfNotClosed, but see TODO below.
                this.Ji.getToken().then((function(e) {
            // Stream can be stopped while waiting for authentication.
            // TODO(mikelehen): We really should just use dispatchIfNotClosed
            // and let this dispatch onto the queue, but that opened a spec test can
            // of worms that I don't want to deal with in this PR.
            t.Yi === n && 
            // Normally we'd have to schedule the callback on the AsyncQueue.
            // However, the following calls are safe to be called outside the
            // AsyncQueue since they don't chain asynchronous calls
            t.lr(e);
        }), (function(n) {
            e((function() {
                var e = new N(S.UNKNOWN, "Fetching auth token failed: " + n.message);
                return t.dr(e);
            }));
        }));
    }, t.prototype.lr = function(t) {
        var e = this, n = this.hr(this.Yi);
        this.stream = this.wr(t), this.stream.Ii((function() {
            n((function() {
                return e.state = 2 /* Open */ , e.listener.Ii();
            }));
        })), this.stream.Ri((function(t) {
            n((function() {
                return e.dr(t);
            }));
        })), this.stream.onMessage((function(t) {
            n((function() {
                return e.onMessage(t);
            }));
        }));
    }, t.prototype.nr = function() {
        var t = this;
        this.state = 4 /* Backoff */ , this.Zi.ji((function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(t, void 0, void 0, (function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                    return this.state = 0 /* Initial */ , this.start(), [ 2 /*return*/ ];
                }));
            }));
        }));
    }, 
    // Visible for tests
    t.prototype.dr = function(t) {
        // In theory the stream could close cleanly, however, in our current model
        // we never expect this to happen because if we stop a stream ourselves,
        // this callback will never be called. To prevent cases where we retry
        // without a backoff accidentally, we set the stream to error in all cases.
        return k("PersistentStream", "close with error: " + t), this.stream = null, this.close(3 /* Error */ , t);
    }, 
    /**
     * Returns a "dispatcher" function that dispatches operations onto the
     * AsyncQueue but only runs them if closeCount remains unchanged. This allows
     * us to turn auth / stream callbacks into no-ops if the stream is closed /
     * re-opened, etc.
     */
    t.prototype.hr = function(t) {
        var e = this;
        return function(n) {
            e.Se.enqueueAndForget((function() {
                return e.Yi === t ? n() : (k("PersistentStream", "stream callback skipped by getCloseGuardedDispatcher."), 
                Promise.resolve());
            }));
        };
    }, t;
}(), Ro = /** @class */ function(t) {
    function e(e, n, r, i, o) {
        var s = this;
        return (s = t.call(this, e, "listen_stream_connection_backoff" /* ListenStreamConnectionBackoff */ , "listen_stream_idle" /* ListenStreamIdle */ , n, r, o) || this).R = i, 
        s;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.wr = function(t) {
        return this.Hi.Oi("Listen", t);
    }, e.prototype.onMessage = function(t) {
        // A successful response means the stream is healthy
        this.Zi.reset();
        var e = function(t, e) {
            var n;
            if ("targetChange" in e) {
                e.targetChange;
                // proto3 default value is unset in JSON (undefined), so use 'NO_CHANGE'
                // if unset
                var r = function(t) {
                    return "NO_CHANGE" === t ? 0 /* NoChange */ : "ADD" === t ? 1 /* Added */ : "REMOVE" === t ? 2 /* Removed */ : "CURRENT" === t ? 3 /* Current */ : "RESET" === t ? 4 /* Reset */ : L();
                }(e.targetChange.targetChangeType || "NO_CHANGE"), i = e.targetChange.targetIds || [], o = function(t, e) {
                    return t.I ? (O(void 0 === e || "string" == typeof e), X.fromBase64String(e || "")) : (O(void 0 === e || e instanceof Uint8Array), 
                    X.fromUint8Array(e || new Uint8Array));
                }(t, e.targetChange.resumeToken), s = (u = e.targetChange.cause) && function(t) {
                    var e = void 0 === t.code ? S.UNKNOWN : Qe(t.code);
                    return new N(e, t.message || "");
                }(u);
                n = new ln(r, i, o, s || null);
            } else if ("documentChange" in e) {
                e.documentChange, (r = e.documentChange).document, r.document.name, r.document.updateTime, 
                i = Dn(t, r.document.name), o = En(r.document.updateTime);
                var u = new Et({
                    mapValue: {
                        fields: r.document.fields
                    }
                }), a = (s = St.newFoundDocument(i, o, u), r.targetIds || []), c = r.removedTargetIds || [];
                n = new hn(a, c, s.key, s);
            } else if ("documentDelete" in e) e.documentDelete, (r = e.documentDelete).document, 
            i = Dn(t, r.document), o = r.readTime ? En(r.readTime) : j.min(), u = St.newNoDocument(i, o), 
            s = r.removedTargetIds || [], n = new hn([], s, u.key, u); else if ("documentRemove" in e) e.documentRemove, 
            (r = e.documentRemove).document, i = Dn(t, r.document), o = r.removedTargetIds || [], 
            n = new hn([], o, i, null); else {
                if (!("filter" in e)) return L();
                e.filter;
                var h = e.filter;
                h.targetId, r = h.count || 0, i = new Ke(r), o = h.targetId, n = new fn(o, i);
            }
            return n;
        }(this.R, t), n = function(t) {
            // We have only reached a consistent snapshot for the entire stream if there
            // is a read_time set and it applies to all targets (i.e. the list of
            // targets is empty). The backend is guaranteed to send such responses.
            if (!("targetChange" in t)) return j.min();
            var e = t.targetChange;
            return e.targetIds && e.targetIds.length ? j.min() : e.readTime ? En(e.readTime) : j.min();
        }(t);
        return this.listener._r(e, n);
    }, 
    /**
     * Registers interest in the results of the given target. If the target
     * includes a resumeToken it will be included in the request. Results that
     * affect the target will be streamed back as WatchChange messages that
     * reference the targetId.
     */
    e.prototype.mr = function(t) {
        var e = {};
        e.database = xn(this.R), e.addTarget = function(t, e) {
            var n, r = e.target;
            return (n = xt(r) ? {
                documents: Fn(t, r)
            } : {
                query: Mn(t, r)
            }).targetId = e.targetId, e.resumeToken.approximateByteSize() > 0 ? n.resumeToken = In(t, e.resumeToken) : e.snapshotVersion.compareTo(j.min()) > 0 && (
            // TODO(wuandy): Consider removing above check because it is most likely true.
            // Right now, many tests depend on this behaviour though (leaving min() out
            // of serialization).
            n.readTime = bn(t, e.snapshotVersion.toTimestamp())), n;
        }(this.R, t);
        var n = function(t, e) {
            var n = function(t, e) {
                switch (e) {
                  case 0 /* Listen */ :
                    return null;

                  case 1 /* ExistenceFilterMismatch */ :
                    return "existence-filter-mismatch";

                  case 2 /* LimboResolution */ :
                    return "limbo-document";

                  default:
                    return L();
                }
            }(0, e.purpose);
            return null == n ? null : {
                "goog-listen-tags": n
            };
        }(this.R, t);
        n && (e.labels = n), this.cr(e);
    }, 
    /**
     * Unregisters interest in the results of the target associated with the
     * given targetId.
     */
    e.prototype.yr = function(t) {
        var e = {};
        e.database = xn(this.R), e.removeTarget = t, this.cr(e);
    }, e;
}(Co), Lo = /** @class */ function(t) {
    function e(e, n, r, i, o) {
        var s = this;
        return (s = t.call(this, e, "write_stream_connection_backoff" /* WriteStreamConnectionBackoff */ , "write_stream_idle" /* WriteStreamIdle */ , n, r, o) || this).R = i, 
        s.gr = !1, s;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), Object.defineProperty(e.prototype, "pr", {
        /**
         * Tracks whether or not a handshake has been successfully exchanged and
         * the stream is ready to accept mutations.
         */
        get: function() {
            return this.gr;
        },
        enumerable: !1,
        configurable: !0
    }), 
    // Override of PersistentStream.start
    e.prototype.start = function() {
        this.gr = !1, this.lastStreamToken = void 0, t.prototype.start.call(this);
    }, e.prototype.ar = function() {
        this.gr && this.Er([]);
    }, e.prototype.wr = function(t) {
        return this.Hi.Oi("Write", t);
    }, e.prototype.onMessage = function(t) {
        if (
        // Always capture the last stream token.
        O(!!t.streamToken), this.lastStreamToken = t.streamToken, this.gr) {
            // A successful first write response means the stream is healthy,
            // Note, that we could consider a successful handshake healthy, however,
            // the write itself might be causing an error we want to back off from.
            this.Zi.reset();
            var e = function(t, e) {
                return t && t.length > 0 ? (O(void 0 !== e), t.map((function(t) {
                    return function(t, e) {
                        // NOTE: Deletes don't have an updateTime.
                        var n = t.updateTime ? En(t.updateTime) : En(e);
                        return n.isEqual(j.min()) && (
                        // The Firestore Emulator currently returns an update time of 0 for
                        // deletes of non-existing documents (rather than null). This breaks the
                        // test "get deleted doc while offline with source=cache" as NoDocuments
                        // with version 0 are filtered by IndexedDb's RemoteDocumentCache.
                        // TODO(#2149): Remove this when Emulator is fixed
                        n = En(e)), new Se(n, t.transformResults || []);
                    }(t, e);
                }))) : [];
            }(t.writeResults, t.commitTime), n = En(t.commitTime);
            return this.listener.Tr(n, e);
        }
        // The first response is always the handshake response
                return O(!t.writeResults || 0 === t.writeResults.length), this.gr = !0, 
        this.listener.Ir();
    }, 
    /**
     * Sends an initial streamToken to the server, performing the handshake
     * required to make the StreamingWrite RPC work. Subsequent
     * calls should wait until onHandshakeComplete was called.
     */
    e.prototype.Ar = function() {
        // TODO(dimond): Support stream resumption. We intentionally do not set the
        // stream token on the handshake, ignoring any stream token we might have.
        var t = {};
        t.database = xn(this.R), this.cr(t);
    }, 
    /** Sends a group of mutations to the Firestore backend to apply. */ e.prototype.Er = function(t) {
        var e = this, n = {
            streamToken: this.lastStreamToken,
            writes: t.map((function(t) {
                return On(e.R, t);
            }))
        };
        this.cr(n);
    }, e;
}(Co), Oo = /** @class */ function(t) {
    function e(e, n, r) {
        var i = this;
        return (i = t.call(this) || this).credentials = e, i.Hi = n, i.R = r, i.Rr = !1, 
        i;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.br = function() {
        if (this.Rr) throw new N(S.FAILED_PRECONDITION, "The client has already been terminated.");
    }, 
    /** Gets an auth token and invokes the provided RPC. */ e.prototype.Ni = function(t, e, n) {
        var r = this;
        return this.br(), this.credentials.getToken().then((function(i) {
            return r.Hi.Ni(t, e, n, i);
        })).catch((function(t) {
            throw "FirebaseError" === t.name ? (t.code === S.UNAUTHENTICATED && r.credentials.invalidateToken(), 
            t) : new N(S.UNKNOWN, t.toString());
        }));
    }, 
    /** Gets an auth token and invokes the provided RPC with streamed results. */ e.prototype.$i = function(t, e, n) {
        var r = this;
        return this.br(), this.credentials.getToken().then((function(i) {
            return r.Hi.$i(t, e, n, i);
        })).catch((function(t) {
            throw "FirebaseError" === t.name ? (t.code === S.UNAUTHENTICATED && r.credentials.invalidateToken(), 
            t) : new N(S.UNKNOWN, t.toString());
        }));
    }, e.prototype.terminate = function() {
        this.Rr = !0;
    }, e;
}((function() {})), Po = /** @class */ function() {
    function t(t, e) {
        this.asyncQueue = t, this.onlineStateHandler = e, 
        /** The current OnlineState. */
        this.state = "Unknown" /* Unknown */ , 
        /**
             * A count of consecutive failures to open the stream. If it reaches the
             * maximum defined by MAX_WATCH_STREAM_FAILURES, we'll set the OnlineState to
             * Offline.
             */
        this.vr = 0, 
        /**
             * A timer that elapses after ONLINE_STATE_TIMEOUT_MS, at which point we
             * transition from OnlineState.Unknown to OnlineState.Offline without waiting
             * for the stream to actually fail (MAX_WATCH_STREAM_FAILURES times).
             */
        this.Pr = null, 
        /**
             * Whether the client should log a warning message if it fails to connect to
             * the backend (initially true, cleared after a successful stream, or if we've
             * logged the message already).
             */
        this.Vr = !0
        /**
     * Called by RemoteStore when a watch stream is started (including on each
     * backoff attempt).
     *
     * If this is the first attempt, it sets the OnlineState to Unknown and starts
     * the onlineStateTimer.
     */;
    }
    return t.prototype.Sr = function() {
        var t = this;
        0 === this.vr && (this.Dr("Unknown" /* Unknown */), this.Pr = this.asyncQueue.enqueueAfterDelay("online_state_timeout" /* OnlineStateTimeout */ , 1e4, (function() {
            return t.Pr = null, t.Cr("Backend didn't respond within 10 seconds."), t.Dr("Offline" /* Offline */), 
            Promise.resolve();
        })));
    }, 
    /**
     * Updates our OnlineState as appropriate after the watch stream reports a
     * failure. The first failure moves us to the 'Unknown' state. We then may
     * allow multiple failures (based on MAX_WATCH_STREAM_FAILURES) before we
     * actually transition to the 'Offline' state.
     */
    t.prototype.Nr = function(t) {
        "Online" /* Online */ === this.state ? this.Dr("Unknown" /* Unknown */) : (this.vr++, 
        this.vr >= 1 && (this.Fr(), this.Cr("Connection failed 1 times. Most recent error: " + t.toString()), 
        this.Dr("Offline" /* Offline */)));
    }, 
    /**
     * Explicitly sets the OnlineState to the specified state.
     *
     * Note that this resets our timers / failure counters, etc. used by our
     * Offline heuristics, so must not be used in place of
     * handleWatchStreamStart() and handleWatchStreamFailure().
     */
    t.prototype.set = function(t) {
        this.Fr(), this.vr = 0, "Online" /* Online */ === t && (
        // We've connected to watch at least once. Don't warn the developer
        // about being offline going forward.
        this.Vr = !1), this.Dr(t);
    }, t.prototype.Dr = function(t) {
        t !== this.state && (this.state = t, this.onlineStateHandler(t));
    }, t.prototype.Cr = function(t) {
        var e = "Could not reach Cloud Firestore backend. " + t + "\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.";
        this.Vr ? (x(e), this.Vr = !1) : k("OnlineStateTracker", e);
    }, t.prototype.Fr = function() {
        null !== this.Pr && (this.Pr.cancel(), this.Pr = null);
    }, t;
}(), Fo = function(
/**
     * The local store, used to fill the write pipeline with outbound mutations.
     */
t, 
/** The client-side proxy for interacting with the backend. */
e, n, r, i) {
    var o = this;
    this.localStore = t, this.datastore = e, this.asyncQueue = n, this.remoteSyncer = {}, 
    /**
             * A list of up to MAX_PENDING_WRITES writes that we have fetched from the
             * LocalStore via fillWritePipeline() and have or will send to the write
             * stream.
             *
             * Whenever writePipeline.length > 0 the RemoteStore will attempt to start or
             * restart the write stream. When the stream is established the writes in the
             * pipeline will be sent in order.
             *
             * Writes remain in writePipeline until they are acknowledged by the backend
             * and thus will automatically be re-sent if the stream is interrupted /
             * restarted before they're acknowledged.
             *
             * Write responses from the backend are linked to their originating request
             * purely based on order, and so we can just shift() writes from the front of
             * the writePipeline as we receive responses.
             */
    this.kr = [], 
    /**
             * A mapping of watched targets that the client cares about tracking and the
             * user has explicitly called a 'listen' for this target.
             *
             * These targets may or may not have been sent to or acknowledged by the
             * server. On re-establishing the listen stream, these targets should be sent
             * to the server. The targets removed with unlistens are removed eagerly
             * without waiting for confirmation from the listen stream.
             */
    this.$r = new Map, 
    /**
             * A set of reasons for why the RemoteStore may be offline. If empty, the
             * RemoteStore may start its network connections.
             */
    this.Or = new Set, 
    /**
             * Event handlers that get called when the network is disabled or enabled.
             *
             * PORTING NOTE: These functions are used on the Web client to create the
             * underlying streams (to support tree-shakeable streams). On Android and iOS,
             * the streams are created during construction of RemoteStore.
             */
    this.Mr = [], this.Lr = i, this.Lr.di((function(t) {
        n.enqueueAndForget((function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(o, void 0, void 0, (function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                    switch (t.label) {
                      case 0:
                        return Qo(this) ? (k("RemoteStore", "Restarting streams for network reachability change."), 
                        [ 4 /*yield*/ , function(t) {
                            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                                var e;
                                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                                    switch (n.label) {
                                      case 0:
                                        return (e = P(t)).Or.add(4 /* ConnectivityChange */), [ 4 /*yield*/ , Vo(e) ];

                                      case 1:
                                        return n.sent(), e.Br.set("Unknown" /* Unknown */), e.Or.delete(4 /* ConnectivityChange */), 
                                        [ 4 /*yield*/ , Mo(e) ];

                                      case 2:
                                        return n.sent(), [ 2 /*return*/ ];
                                    }
                                }));
                            }));
                        }(this) ]) : [ 3 /*break*/ , 2 ];

                      case 1:
                        t.sent(), t.label = 2;

                      case 2:
                        return [ 2 /*return*/ ];
                    }
                }));
            }));
        }));
    })), this.Br = new Po(n, r);
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A PersistentStream is an abstract base class that represents a streaming RPC
 * to the Firestore backend. It's built on top of the connections own support
 * for streaming RPCs, and adds several critical features for our clients:
 *
 *   - Exponential backoff on failure
 *   - Authentication via CredentialsProvider
 *   - Dispatching all callbacks into the shared worker queue
 *   - Closing idle streams after 60 seconds of inactivity
 *
 * Subclasses of PersistentStream implement serialization of models to and
 * from the JSON representation of the protocol buffers for a specific
 * streaming RPC.
 *
 * ## Starting and Stopping
 *
 * Streaming RPCs are stateful and need to be start()ed before messages can
 * be sent and received. The PersistentStream will call the onOpen() function
 * of the listener once the stream is ready to accept requests.
 *
 * Should a start() fail, PersistentStream will call the registered onClose()
 * listener with a FirestoreError indicating what went wrong.
 *
 * A PersistentStream can be started and stopped repeatedly.
 *
 * Generic types:
 *  SendType: The type of the outgoing message of the underlying
 *    connection stream
 *  ReceiveType: The type of the incoming message of the underlying
 *    connection stream
 *  ListenerType: The type of the listener that will be used for callbacks
 */ function Mo(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var e, n;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
            switch (r.label) {
              case 0:
                if (!Qo(t)) return [ 3 /*break*/ , 4 ];
                e = 0, n = t.Mr, r.label = 1;

              case 1:
                return e < n.length ? [ 4 /*yield*/ , (0, n[e])(/* enabled= */ !0) ] : [ 3 /*break*/ , 4 ];

              case 2:
                r.sent(), r.label = 3;

              case 3:
                return e++, [ 3 /*break*/ , 1 ];

              case 4:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Temporarily disables the network. The network can be re-enabled using
 * enableNetwork().
 */ function Vo(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var e, n;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
            switch (r.label) {
              case 0:
                e = 0, n = t.Mr, r.label = 1;

              case 1:
                return e < n.length ? [ 4 /*yield*/ , (0, n[e])(/* enabled= */ !1) ] : [ 3 /*break*/ , 4 ];

              case 2:
                r.sent(), r.label = 3;

              case 3:
                return e++, [ 3 /*break*/ , 1 ];

              case 4:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Starts new listen for the given target. Uses resume token if provided. It
 * is a no-op if the target of given `TargetData` is already being listened to.
 */ function qo(t, e) {
    var n = P(t);
    n.$r.has(e.targetId) || (
    // Mark this as something the client is currently listening for.
    n.$r.set(e.targetId, e), Go(n) ? 
    // The listen will be sent in onWatchStreamOpen
    Ko(n) : ss(n).er() && Bo(n, e));
}

/**
 * Removes the listen from server. It is a no-op if the given target id is
 * not being listened to.
 */ function Uo(t, e) {
    var n = P(t), r = ss(n);
    n.$r.delete(e), r.er() && jo(n, e), 0 === n.$r.size && (r.er() ? r.ir() : Qo(n) && 
    // Revert to OnlineState.Unknown if the watch stream is not open and we
    // have no listeners, since without any listens to send we cannot
    // confirm if the stream is healthy and upgrade to OnlineState.Online.
    n.Br.set("Unknown" /* Unknown */));
}

/**
 * We need to increment the the expected number of pending responses we're due
 * from watch so we wait for the ack to process any messages from this target.
 */ function Bo(t, e) {
    t.qr.U(e.targetId), ss(t).mr(e)
    /**
 * We need to increment the expected number of pending responses we're due
 * from watch so we wait for the removal on the server before we process any
 * messages from this target.
 */;
}

function jo(t, e) {
    t.qr.U(e), ss(t).yr(e);
}

function Ko(t) {
    t.qr = new pn({
        getRemoteKeysForTarget: function(e) {
            return t.remoteSyncer.getRemoteKeysForTarget(e);
        },
        lt: function(e) {
            return t.$r.get(e) || null;
        }
    }), ss(t).start(), t.Br.Sr()
    /**
 * Returns whether the watch stream should be started because it's necessary
 * and has not yet been started.
 */;
}

function Go(t) {
    return Qo(t) && !ss(t).tr() && t.$r.size > 0;
}

function Qo(t) {
    return 0 === P(t).Or.size;
}

function zo(t) {
    t.qr = void 0;
}

function Wo(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
            return t.$r.forEach((function(e, n) {
                Bo(t, e);
            })), [ 2 /*return*/ ];
        }));
    }));
}

function Ho(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
            return zo(t), 
            // If we still need the watch stream, retry the connection.
            Go(t) ? (t.Br.Nr(e), Ko(t)) : 
            // No need to restart watch stream because there are no active targets.
            // The online state is set to unknown because there is no active attempt
            // at establishing a connection
            t.Br.set("Unknown" /* Unknown */), [ 2 /*return*/ ];
        }));
    }));
}

function Yo(t, e, n) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var r, i, o;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(s) {
            switch (s.label) {
              case 0:
                if (t.Br.set("Online" /* Online */), !(e instanceof ln && 2 /* Removed */ === e.state && e.cause)) 
                // Mark the client as online since we got a message from the server
                return [ 3 /*break*/ , 6 ];
                s.label = 1;

              case 1:
                return s.trys.push([ 1, 3, , 5 ]), [ 4 /*yield*/ , 
                /** Handles an error on a target */
                function(t, e) {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                        var n, r, i, o;
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(s) {
                            switch (s.label) {
                              case 0:
                                n = e.cause, r = 0, i = e.targetIds, s.label = 1;

                              case 1:
                                return r < i.length ? (o = i[r], t.$r.has(o) ? [ 4 /*yield*/ , t.remoteSyncer.rejectListen(o, n) ] : [ 3 /*break*/ , 3 ]) : [ 3 /*break*/ , 5 ];

                              case 2:
                                s.sent(), t.$r.delete(o), t.qr.removeTarget(o), s.label = 3;

                              case 3:
                                s.label = 4;

                              case 4:
                                return r++, [ 3 /*break*/ , 1 ];

                              case 5:
                                return [ 2 /*return*/ ];
                            }
                        }));
                    }));
                }(t, e) ];

              case 2:
                return s.sent(), [ 3 /*break*/ , 5 ];

              case 3:
                return r = s.sent(), k("RemoteStore", "Failed to remove targets %s: %s ", e.targetIds.join(","), r), 
                [ 4 /*yield*/ , $o(t, r) ];

              case 4:
                return s.sent(), [ 3 /*break*/ , 5 ];

              case 5:
                return [ 3 /*break*/ , 13 ];

              case 6:
                if (e instanceof hn ? t.qr.X(e) : e instanceof fn ? t.qr.rt(e) : t.qr.et(e), n.isEqual(j.min())) return [ 3 /*break*/ , 13 ];
                s.label = 7;

              case 7:
                return s.trys.push([ 7, 11, , 13 ]), [ 4 /*yield*/ , ji(t.localStore) ];

              case 8:
                return i = s.sent(), n.compareTo(i) >= 0 ? [ 4 /*yield*/ , 
                /**
                 * Takes a batch of changes from the Datastore, repackages them as a
                 * RemoteEvent, and passes that on to the listener, which is typically the
                 * SyncEngine.
                 */
                function(t, e) {
                    var n = t.qr.ut(e);
                    // Update in-memory resume tokens. LocalStore will update the
                    // persistent view of these when applying the completed RemoteEvent.
                                        return n.targetChanges.forEach((function(n, r) {
                        if (n.resumeToken.approximateByteSize() > 0) {
                            var i = t.$r.get(r);
                            // A watched target might have been removed already.
                                                        i && t.$r.set(r, i.withResumeToken(n.resumeToken, e));
                        }
                    })), 
                    // Re-establish listens for the targets that have been invalidated by
                    // existence filter mismatches.
                    n.targetMismatches.forEach((function(e) {
                        var n = t.$r.get(e);
                        if (n) {
                            // Clear the resume token for the target, since we're in a known mismatch
                            // state.
                            t.$r.set(e, n.withResumeToken(X.EMPTY_BYTE_STRING, n.snapshotVersion)), 
                            // Cause a hard reset by unwatching and rewatching immediately, but
                            // deliberately don't send a resume token so that we get a full update.
                            jo(t, e);
                            // Mark the target we send as being on behalf of an existence filter
                            // mismatch, but don't actually retain that in listenTargets. This ensures
                            // that we flag the first re-listen this way without impacting future
                            // listens of this target (that might happen e.g. on reconnect).
                            var r = new Or(n.target, e, 1 /* ExistenceFilterMismatch */ , n.sequenceNumber);
                            Bo(t, r);
                        }
                    })), t.remoteSyncer.applyRemoteEvent(n);
                }(t, n) ] : [ 3 /*break*/ , 10 ];

                // We have received a target change with a global snapshot if the snapshot
                // version is not equal to SnapshotVersion.min().
                              case 9:
                // We have received a target change with a global snapshot if the snapshot
                // version is not equal to SnapshotVersion.min().
                s.sent(), s.label = 10;

              case 10:
                return [ 3 /*break*/ , 13 ];

              case 11:
                return k("RemoteStore", "Failed to raise snapshot:", o = s.sent()), [ 4 /*yield*/ , $o(t, o) ];

              case 12:
                return s.sent(), [ 3 /*break*/ , 13 ];

              case 13:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Recovery logic for IndexedDB errors that takes the network offline until
 * `op` succeeds. Retries are scheduled with backoff using
 * `enqueueRetryable()`. If `op()` is not provided, IndexedDB access is
 * validated via a generic operation.
 *
 * The returned Promise is resolved once the network is disabled and before
 * any retry attempt.
 */ function $o(t, e, n) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var r = this;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
            switch (i.label) {
              case 0:
                if (!Sr(e)) throw e;
                // Disable network and raise offline snapshots
                return t.Or.add(1 /* IndexedDbFailed */), [ 4 /*yield*/ , Vo(t) ];

              case 1:
                // Disable network and raise offline snapshots
                return i.sent(), t.Br.set("Offline" /* Offline */), n || (
                // Use a simple read operation to determine if IndexedDB recovered.
                // Ideally, we would expose a health check directly on SimpleDb, but
                // RemoteStore only has access to persistence through LocalStore.
                n = function() {
                    return ji(t.localStore);
                }), 
                // Probe IndexedDB periodically and re-enable network
                t.asyncQueue.enqueueRetryable((function() {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(r, void 0, void 0, (function() {
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                            switch (e.label) {
                              case 0:
                                return k("RemoteStore", "Retrying IndexedDB access"), [ 4 /*yield*/ , n() ];

                              case 1:
                                return e.sent(), t.Or.delete(1 /* IndexedDbFailed */), [ 4 /*yield*/ , Mo(t) ];

                              case 2:
                                return e.sent(), [ 2 /*return*/ ];
                            }
                        }));
                    }));
                })), [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Executes `op`. If `op` fails, takes the network offline until `op`
 * succeeds. Returns after the first attempt.
 */ function Xo(t, e) {
    return e().catch((function(n) {
        return $o(t, n, e);
    }));
}

function Jo(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var e, n, r, i, o;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(s) {
            switch (s.label) {
              case 0:
                e = P(t), n = us(e), r = e.kr.length > 0 ? e.kr[e.kr.length - 1].batchId : -1, s.label = 1;

              case 1:
                if (!
                /**
 * Returns true if we can add to the write pipeline (i.e. the network is
 * enabled and the write pipeline is not full).
 */
                function(t) {
                    return Qo(t) && t.kr.length < 10;
                }
                /**
 * Queues additional writes to be sent to the write stream, sending them
 * immediately if the write stream is established.
 */ (e)) return [ 3 /*break*/ , 7 ];
                s.label = 2;

              case 2:
                return s.trys.push([ 2, 4, , 6 ]), [ 4 /*yield*/ , Qi(e.localStore, r) ];

              case 3:
                return null === (i = s.sent()) ? (0 === e.kr.length && n.ir(), [ 3 /*break*/ , 7 ]) : (r = i.batchId, 
                function(t, e) {
                    t.kr.push(e);
                    var n = us(t);
                    n.er() && n.pr && n.Er(e.mutations);
                }(e, i), [ 3 /*break*/ , 6 ]);

              case 4:
                return o = s.sent(), [ 4 /*yield*/ , $o(e, o) ];

              case 5:
                return s.sent(), [ 3 /*break*/ , 6 ];

              case 6:
                return [ 3 /*break*/ , 1 ];

              case 7:
                return Zo(e) && ts(e), [ 2 /*return*/ ];
            }
        }));
    }));
}

function Zo(t) {
    return Qo(t) && !us(t).tr() && t.kr.length > 0;
}

function ts(t) {
    us(t).start();
}

function es(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
            return us(t).Ar(), [ 2 /*return*/ ];
        }));
    }));
}

function ns(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var e, n, r, i;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
            // Send the write pipeline now that the stream is established.
            for (e = us(t), n = 0, r = t.kr; n < r.length; n++) i = r[n], e.Er(i.mutations);
            return [ 2 /*return*/ ];
        }));
    }));
}

function rs(t, e, n) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var r, i;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
            switch (o.label) {
              case 0:
                return r = t.kr.shift(), i = Lr.from(r, e, n), [ 4 /*yield*/ , Xo(t, (function() {
                    return t.remoteSyncer.applySuccessfulWrite(i);
                })) ];

              case 1:
                // It's possible that with the completion of this mutation another
                // slot has freed up.
                return o.sent(), [ 4 /*yield*/ , Jo(t) ];

              case 2:
                // It's possible that with the completion of this mutation another
                // slot has freed up.
                return o.sent(), [ 2 /*return*/ ];
            }
        }));
    }));
}

function is(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
            switch (n.label) {
              case 0:
                return e && us(t).pr ? [ 4 /*yield*/ , function(t, e) {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                        var n, r;
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
                            switch (i.label) {
                              case 0:
                                return Ge(r = e.code) && r !== S.ABORTED ? (n = t.kr.shift(), 
                                // In this case it's also unlikely that the server itself is melting
                                // down -- this was just a bad request so inhibit backoff on the next
                                // restart.
                                us(t).sr(), [ 4 /*yield*/ , Xo(t, (function() {
                                    return t.remoteSyncer.rejectFailedWrite(n.batchId, e);
                                })) ]) : [ 3 /*break*/ , 3 ];

                              case 1:
                                // It's possible that with the completion of this mutation
                                // another slot has freed up.
                                return i.sent(), [ 4 /*yield*/ , Jo(t) ];

                              case 2:
                                // In this case it's also unlikely that the server itself is melting
                                // down -- this was just a bad request so inhibit backoff on the next
                                // restart.
                                // It's possible that with the completion of this mutation
                                // another slot has freed up.
                                i.sent(), i.label = 3;

                              case 3:
                                return [ 2 /*return*/ ];
                            }
                        }));
                    }));
                }(t, e) ] : [ 3 /*break*/ , 2 ];

                // This error affects the actual write.
                              case 1:
                // This error affects the actual write.
                n.sent(), n.label = 2;

              case 2:
                // If the write stream closed after the write handshake completes, a write
                // operation failed and we fail the pending operation.
                // The write stream might have been started by refilling the write
                // pipeline for failed writes
                return Zo(t) && ts(t), [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Toggles the network state when the client gains or loses its primary lease.
 */ function os(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
            switch (i.label) {
              case 0:
                return n = P(t), e ? (n.Or.delete(2 /* IsSecondary */), [ 4 /*yield*/ , Mo(n) ]) : [ 3 /*break*/ , 2 ];

              case 1:
                return i.sent(), [ 3 /*break*/ , 5 ];

              case 2:
                return (r = e) ? [ 3 /*break*/ , 4 ] : (n.Or.add(2 /* IsSecondary */), [ 4 /*yield*/ , Vo(n) ]);

              case 3:
                i.sent(), r = n.Br.set("Unknown" /* Unknown */), i.label = 4;

              case 4:
                r, i.label = 5;

              case 5:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * If not yet initialized, registers the WatchStream and its network state
 * callback with `remoteStoreImpl`. Returns the existing stream if one is
 * already available.
 *
 * PORTING NOTE: On iOS and Android, the WatchStream gets registered on startup.
 * This is not done on Web to allow it to be tree-shaken.
 */ function ss(t) {
    var e = this;
    return t.Ur || (
    // Create stream (but note that it is not started yet).
    t.Ur = function(t, e, n) {
        var r = P(t);
        return r.br(), new Ro(e, r.Hi, r.credentials, r.R, n);
    }(t.datastore, t.asyncQueue, {
        Ii: Wo.bind(null, t),
        Ri: Ho.bind(null, t),
        _r: Yo.bind(null, t)
    }), t.Mr.push((function(n) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                switch (e.label) {
                  case 0:
                    return n ? (t.Ur.sr(), Go(t) ? Ko(t) : t.Br.set("Unknown" /* Unknown */), [ 3 /*break*/ , 3 ]) : [ 3 /*break*/ , 1 ];

                  case 1:
                    return [ 4 /*yield*/ , t.Ur.stop() ];

                  case 2:
                    e.sent(), zo(t), e.label = 3;

                  case 3:
                    return [ 2 /*return*/ ];
                }
            }));
        }));
    }))), t.Ur
    /**
 * If not yet initialized, registers the WriteStream and its network state
 * callback with `remoteStoreImpl`. Returns the existing stream if one is
 * already available.
 *
 * PORTING NOTE: On iOS and Android, the WriteStream gets registered on startup.
 * This is not done on Web to allow it to be tree-shaken.
 */;
}

function us(t) {
    var e = this;
    return t.Qr || (
    // Create stream (but note that it is not started yet).
    t.Qr = function(t, e, n) {
        var r = P(t);
        return r.br(), new Lo(e, r.Hi, r.credentials, r.R, n);
    }(t.datastore, t.asyncQueue, {
        Ii: es.bind(null, t),
        Ri: is.bind(null, t),
        Ir: ns.bind(null, t),
        Tr: rs.bind(null, t)
    }), t.Mr.push((function(n) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                switch (e.label) {
                  case 0:
                    return n ? (t.Qr.sr(), [ 4 /*yield*/ , Jo(t) ]) : [ 3 /*break*/ , 2 ];

                  case 1:
                    // This will start the write stream if necessary.
                    return e.sent(), [ 3 /*break*/ , 4 ];

                  case 2:
                    return [ 4 /*yield*/ , t.Qr.stop() ];

                  case 3:
                    e.sent(), t.kr.length > 0 && (k("RemoteStore", "Stopping write stream with " + t.kr.length + " pending writes"), 
                    t.kr = []), e.label = 4;

                  case 4:
                    return [ 2 /*return*/ ];
                }
            }));
        }));
    }))), t.Qr
    /**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    /**
 * Represents an operation scheduled to be run in the future on an AsyncQueue.
 *
 * It is created via DelayedOperation.createAndSchedule().
 *
 * Supports cancellation (via cancel()) and early execution (via skipDelay()).
 *
 * Note: We implement `PromiseLike` instead of `Promise`, as the `Promise` type
 * in newer versions of TypeScript defines `finally`, which is not available in
 * IE.
 */;
}

var as = /** @class */ function() {
    function t(t, e, n, r, i) {
        this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = i, 
        this.deferred = new wr, this.then = this.deferred.promise.then.bind(this.deferred.promise), 
        // It's normal for the deferred promise to be canceled (due to cancellation)
        // and so we attach a dummy catch callback to avoid
        // 'UnhandledPromiseRejectionWarning' log spam.
        this.deferred.promise.catch((function(t) {}))
        /**
     * Creates and returns a DelayedOperation that has been scheduled to be
     * executed on the provided asyncQueue after the provided delayMs.
     *
     * @param asyncQueue - The queue to schedule the operation on.
     * @param id - A Timer ID identifying the type of operation this is.
     * @param delayMs - The delay (ms) before the operation should be scheduled.
     * @param op - The operation to run.
     * @param removalCallback - A callback to be called synchronously once the
     *   operation is executed or canceled, notifying the AsyncQueue to remove it
     *   from its delayedOperations list.
     *   PORTING NOTE: This exists to prevent making removeDelayedOperation() and
     *   the DelayedOperation class public.
     */;
    }
    return t.createAndSchedule = function(e, n, r, i, o) {
        var s = new t(e, n, Date.now() + r, i, o);
        return s.start(r), s;
    }, 
    /**
     * Starts the timer. This is called immediately after construction by
     * createAndSchedule().
     */
    t.prototype.start = function(t) {
        var e = this;
        this.timerHandle = setTimeout((function() {
            return e.handleDelayElapsed();
        }), t);
    }, 
    /**
     * Queues the operation to run immediately (if it hasn't already been run or
     * canceled).
     */
    t.prototype.skipDelay = function() {
        return this.handleDelayElapsed();
    }, 
    /**
     * Cancels the operation if it hasn't already been executed or canceled. The
     * promise will be rejected.
     *
     * As long as the operation has not yet been run, calling cancel() provides a
     * guarantee that the operation will not be run.
     */
    t.prototype.cancel = function(t) {
        null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new N(S.CANCELLED, "Operation cancelled" + (t ? ": " + t : ""))));
    }, t.prototype.handleDelayElapsed = function() {
        var t = this;
        this.asyncQueue.enqueueAndForget((function() {
            return null !== t.timerHandle ? (t.clearTimeout(), t.op().then((function(e) {
                return t.deferred.resolve(e);
            }))) : Promise.resolve();
        }));
    }, t.prototype.clearTimeout = function() {
        null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), 
        this.timerHandle = null);
    }, t;
}();

/**
 * Returns a FirestoreError that can be surfaced to the user if the provided
 * error is an IndexedDbTransactionError. Re-throws the error otherwise.
 */ function cs(t, e) {
    if (x("AsyncQueue", e + ": " + t), Sr(t)) return new N(S.UNAVAILABLE, e + ": " + t);
    throw t;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * DocumentSet is an immutable (copy-on-write) collection that holds documents
 * in order specified by the provided comparator. We always add a document key
 * comparator on top of what is provided to guarantee document equality based on
 * the key.
 */ var hs = /** @class */ function() {
    /** The default ordering is by key if the comparator is omitted */
    function t(t) {
        // We are adding document key comparator to the end as it's the only
        // guaranteed unique property of a document.
        this.comparator = t ? function(e, n) {
            return t(e, n) || at.comparator(e.key, n.key);
        } : function(t, e) {
            return at.comparator(t.key, e.key);
        }, this.keyedMap = tn(), this.sortedSet = new ze(this.comparator)
        /**
     * Returns an empty copy of the existing DocumentSet, using the same
     * comparator.
     */;
    }
    return t.emptySet = function(e) {
        return new t(e.comparator);
    }, t.prototype.has = function(t) {
        return null != this.keyedMap.get(t);
    }, t.prototype.get = function(t) {
        return this.keyedMap.get(t);
    }, t.prototype.first = function() {
        return this.sortedSet.minKey();
    }, t.prototype.last = function() {
        return this.sortedSet.maxKey();
    }, t.prototype.isEmpty = function() {
        return this.sortedSet.isEmpty();
    }, 
    /**
     * Returns the index of the provided key in the document set, or -1 if the
     * document key is not present in the set;
     */
    t.prototype.indexOf = function(t) {
        var e = this.keyedMap.get(t);
        return e ? this.sortedSet.indexOf(e) : -1;
    }, Object.defineProperty(t.prototype, "size", {
        get: function() {
            return this.sortedSet.size;
        },
        enumerable: !1,
        configurable: !0
    }), 
    /** Iterates documents in order defined by "comparator" */ t.prototype.forEach = function(t) {
        this.sortedSet.inorderTraversal((function(e, n) {
            return t(e), !1;
        }));
    }, 
    /** Inserts or updates a document with the same key */ t.prototype.add = function(t) {
        // First remove the element if we have it.
        var e = this.delete(t.key);
        return e.copy(e.keyedMap.insert(t.key, t), e.sortedSet.insert(t, null));
    }, 
    /** Deletes a document with a given key */ t.prototype.delete = function(t) {
        var e = this.get(t);
        return e ? this.copy(this.keyedMap.remove(t), this.sortedSet.remove(e)) : this;
    }, t.prototype.isEqual = function(e) {
        if (!(e instanceof t)) return !1;
        if (this.size !== e.size) return !1;
        for (var n = this.sortedSet.getIterator(), r = e.sortedSet.getIterator(); n.hasNext(); ) {
            var i = n.getNext().key, o = r.getNext().key;
            if (!i.isEqual(o)) return !1;
        }
        return !0;
    }, t.prototype.toString = function() {
        var t = [];
        return this.forEach((function(e) {
            t.push(e.toString());
        })), 0 === t.length ? "DocumentSet ()" : "DocumentSet (\n  " + t.join("  \n") + "\n)";
    }, t.prototype.copy = function(e, n) {
        var r = new t;
        return r.comparator = this.comparator, r.keyedMap = e, r.sortedSet = n, r;
    }, t;
}(), fs = /** @class */ function() {
    function t() {
        this.Kr = new ze(at.comparator);
    }
    return t.prototype.track = function(t) {
        var e = t.doc.key, n = this.Kr.get(e);
        n ? 
        // Merge the new change with the existing change.
        0 /* Added */ !== t.type && 3 /* Metadata */ === n.type ? this.Kr = this.Kr.insert(e, t) : 3 /* Metadata */ === t.type && 1 /* Removed */ !== n.type ? this.Kr = this.Kr.insert(e, {
            type: n.type,
            doc: t.doc
        }) : 2 /* Modified */ === t.type && 2 /* Modified */ === n.type ? this.Kr = this.Kr.insert(e, {
            type: 2 /* Modified */ ,
            doc: t.doc
        }) : 2 /* Modified */ === t.type && 0 /* Added */ === n.type ? this.Kr = this.Kr.insert(e, {
            type: 0 /* Added */ ,
            doc: t.doc
        }) : 1 /* Removed */ === t.type && 0 /* Added */ === n.type ? this.Kr = this.Kr.remove(e) : 1 /* Removed */ === t.type && 2 /* Modified */ === n.type ? this.Kr = this.Kr.insert(e, {
            type: 1 /* Removed */ ,
            doc: n.doc
        }) : 0 /* Added */ === t.type && 1 /* Removed */ === n.type ? this.Kr = this.Kr.insert(e, {
            type: 2 /* Modified */ ,
            doc: t.doc
        }) : 
        // This includes these cases, which don't make sense:
        // Added->Added
        // Removed->Removed
        // Modified->Added
        // Removed->Modified
        // Metadata->Added
        // Removed->Metadata
        L() : this.Kr = this.Kr.insert(e, t);
    }, t.prototype.jr = function() {
        var t = [];
        return this.Kr.inorderTraversal((function(e, n) {
            t.push(n);
        })), t;
    }, t;
}(), ls = /** @class */ function() {
    function t(t, e, n, r, i, o, s, u) {
        this.query = t, this.docs = e, this.oldDocs = n, this.docChanges = r, this.mutatedKeys = i, 
        this.fromCache = o, this.syncStateChanged = s, this.excludesMetadataChanges = u
        /** Returns a view snapshot as if all documents in the snapshot were added. */;
    }
    return t.fromInitialDocuments = function(e, n, r, i) {
        var o = [];
        return n.forEach((function(t) {
            o.push({
                type: 0 /* Added */ ,
                doc: t
            });
        })), new t(e, n, hs.emptySet(n), o, r, i, 
        /* syncStateChanged= */ !0, 
        /* excludesMetadataChanges= */ !1);
    }, Object.defineProperty(t.prototype, "hasPendingWrites", {
        get: function() {
            return !this.mutatedKeys.isEmpty();
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.isEqual = function(t) {
        if (!(this.fromCache === t.fromCache && this.syncStateChanged === t.syncStateChanged && this.mutatedKeys.isEqual(t.mutatedKeys) && re(this.query, t.query) && this.docs.isEqual(t.docs) && this.oldDocs.isEqual(t.oldDocs))) return !1;
        var e = this.docChanges, n = t.docChanges;
        if (e.length !== n.length) return !1;
        for (var r = 0; r < e.length; r++) if (e[r].type !== n[r].type || !e[r].doc.isEqual(n[r].doc)) return !1;
        return !0;
    }, t;
}(), ds = function() {
    this.Wr = void 0, this.listeners = [];
}, ps = function() {
    this.queries = new bi((function(t) {
        return ie(t);
    }), re), this.onlineState = "Unknown" /* Unknown */ , this.Gr = new Set;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * DocumentChangeSet keeps track of a set of changes to docs in a query, merging
 * duplicate events for the same doc.
 */ function ys(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i, o, s, u, a;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(c) {
            switch (c.label) {
              case 0:
                if (n = P(t), r = e.query, i = !1, (o = n.queries.get(r)) || (i = !0, o = new ds), 
                !i) return [ 3 /*break*/ , 4 ];
                c.label = 1;

              case 1:
                return c.trys.push([ 1, 3, , 4 ]), s = o, [ 4 /*yield*/ , n.onListen(r) ];

              case 2:
                return s.Wr = c.sent(), [ 3 /*break*/ , 4 ];

              case 3:
                return u = c.sent(), a = cs(u, "Initialization of query '" + oe(e.query) + "' failed"), 
                [ 2 /*return*/ , void e.onError(a) ];

              case 4:
                return n.queries.set(r, o), o.listeners.push(e), 
                // Run global snapshot listeners if a consistent snapshot has been emitted.
                e.zr(n.onlineState), o.Wr && e.Hr(o.Wr) && ws(n), [ 2 /*return*/ ];
            }
        }));
    }));
}

function vs(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i, o, s;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(u) {
            return n = P(t), r = e.query, i = !1, (o = n.queries.get(r)) && (s = o.listeners.indexOf(e)) >= 0 && (o.listeners.splice(s, 1), 
            i = 0 === o.listeners.length), i ? [ 2 /*return*/ , (n.queries.delete(r), n.onUnlisten(r)) ] : [ 2 /*return*/ ];
        }));
    }));
}

function ms(t, e) {
    for (var n = P(t), r = !1, i = 0, o = e; i < o.length; i++) {
        var s = o[i], u = s.query, a = n.queries.get(u);
        if (a) {
            for (var c = 0, h = a.listeners; c < h.length; c++) {
                h[c].Hr(s) && (r = !0);
            }
            a.Wr = s;
        }
    }
    r && ws(n);
}

function gs(t, e, n) {
    var r = P(t), i = r.queries.get(e);
    if (i) for (var o = 0, s = i.listeners; o < s.length; o++) {
        s[o].onError(n);
    }
    // Remove all listeners. NOTE: We don't need to call syncEngine.unlisten()
    // after an error.
        r.queries.delete(e);
}

// Call all global snapshot listeners that have been set.
function ws(t) {
    t.Gr.forEach((function(t) {
        t.next();
    }));
}

/**
 * QueryListener takes a series of internal view snapshots and determines
 * when to raise the event.
 *
 * It uses an Observer to dispatch events.
 */ var bs = /** @class */ function() {
    function t(t, e, n) {
        this.query = t, this.Jr = e, 
        /**
             * Initial snapshots (e.g. from cache) may not be propagated to the wrapped
             * observer. This flag is set to true once we've actually raised an event.
             */
        this.Yr = !1, this.Xr = null, this.onlineState = "Unknown" /* Unknown */ , this.options = n || {}
        /**
     * Applies the new ViewSnapshot to this listener, raising a user-facing event
     * if applicable (depending on what changed, whether the user has opted into
     * metadata-only changes, etc.). Returns true if a user-facing event was
     * indeed raised.
     */;
    }
    return t.prototype.Hr = function(t) {
        if (!this.options.includeMetadataChanges) {
            for (
            // Remove the metadata only changes.
            var e = [], n = 0, r = t.docChanges; n < r.length; n++) {
                var i = r[n];
                3 /* Metadata */ !== i.type && e.push(i);
            }
            t = new ls(t.query, t.docs, t.oldDocs, e, t.mutatedKeys, t.fromCache, t.syncStateChanged, 
            /* excludesMetadataChanges= */ !0);
        }
        var o = !1;
        return this.Yr ? this.Zr(t) && (this.Jr.next(t), o = !0) : this.eo(t, this.onlineState) && (this.no(t), 
        o = !0), this.Xr = t, o;
    }, t.prototype.onError = function(t) {
        this.Jr.error(t);
    }, 
    /** Returns whether a snapshot was raised. */ t.prototype.zr = function(t) {
        this.onlineState = t;
        var e = !1;
        return this.Xr && !this.Yr && this.eo(this.Xr, t) && (this.no(this.Xr), e = !0), 
        e;
    }, t.prototype.eo = function(t, e) {
        // Always raise the first event when we're synced
        if (!t.fromCache) return !0;
        // NOTE: We consider OnlineState.Unknown as online (it should become Offline
        // or Online if we wait long enough).
                var n = "Offline" /* Offline */ !== e;
        // Don't raise the event if we're online, aren't synced yet (checked
        // above) and are waiting for a sync.
                return !(this.options.so && n || t.docs.isEmpty() && "Offline" /* Offline */ !== e);
        // Raise data from cache if we have any documents or we are offline
        }, t.prototype.Zr = function(t) {
        // We don't need to handle includeDocumentMetadataChanges here because
        // the Metadata only changes have already been stripped out if needed.
        // At this point the only changes we will see are the ones we should
        // propagate.
        if (t.docChanges.length > 0) return !0;
        var e = this.Xr && this.Xr.hasPendingWrites !== t.hasPendingWrites;
        return !(!t.syncStateChanged && !e) && !0 === this.options.includeMetadataChanges;
        // Generally we should have hit one of the cases above, but it's possible
        // to get here if there were only metadata docChanges and they got
        // stripped out.
        }, t.prototype.no = function(t) {
        t = ls.fromInitialDocuments(t.query, t.docs, t.mutatedKeys, t.fromCache), this.Yr = !0, 
        this.Jr.next(t);
    }, t;
}(), Is = /** @class */ function() {
    function t(t, 
    // How many bytes this element takes to store in the bundle.
    e) {
        this.payload = t, this.byteLength = e;
    }
    return t.prototype.io = function() {
        return "metadata" in this.payload;
    }, t;
}(), Ts = /** @class */ function() {
    function t(t) {
        this.R = t;
    }
    return t.prototype.qn = function(t) {
        return Dn(this.R, t);
    }, 
    /**
     * Converts a BundleDocument to a MutableDocument.
     */
    t.prototype.Un = function(t) {
        return t.metadata.exists ? Ln(this.R, t.document, !1) : St.newNoDocument(this.qn(t.metadata.name), this.Qn(t.metadata.readTime));
    }, t.prototype.Qn = function(t) {
        return En(t);
    }, t;
}(), Es = /** @class */ function() {
    function t(t, e, n) {
        this.ro = t, this.localStore = e, this.R = n, 
        /** Batched queries to be saved into storage */
        this.queries = [], 
        /** Batched documents to be saved into storage */
        this.documents = [], this.progress = _s(t)
        /**
     * Adds an element from the bundle to the loader.
     *
     * Returns a new progress if adding the element leads to a new progress,
     * otherwise returns null.
     */;
    }
    return t.prototype.oo = function(t) {
        this.progress.bytesLoaded += t.byteLength;
        var e = this.progress.documentsLoaded;
        return t.payload.namedQuery ? this.queries.push(t.payload.namedQuery) : t.payload.documentMetadata ? (this.documents.push({
            metadata: t.payload.documentMetadata
        }), t.payload.documentMetadata.exists || ++e) : t.payload.document && (this.documents[this.documents.length - 1].document = t.payload.document, 
        ++e), e !== this.progress.documentsLoaded ? (this.progress.documentsLoaded = e, 
        Object.assign({}, this.progress)) : null;
    }, t.prototype.co = function(t) {
        for (var e = new Map, n = new Ts(this.R), r = 0, i = t; r < i.length; r++) {
            var o = i[r];
            if (o.metadata.queries) for (var s = n.qn(o.metadata.name), u = 0, a = o.metadata.queries; u < a.length; u++) {
                var c = a[u], h = (e.get(c) || on()).add(s);
                e.set(c, h);
            }
        }
        return e;
    }, 
    /**
     * Update the progress to 'Success' and return the updated progress.
     */
    t.prototype.complete = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var t, e, n, r, i;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
                switch (o.label) {
                  case 0:
                    return [ 4 /*yield*/ , Ji(this.localStore, new Ts(this.R), this.documents, this.ro.id) ];

                  case 1:
                    t = o.sent(), e = this.co(this.documents), n = 0, r = this.queries, o.label = 2;

                  case 2:
                    return n < r.length ? (i = r[n], [ 4 /*yield*/ , Zi(this.localStore, i, e.get(i.name)) ]) : [ 3 /*break*/ , 5 ];

                  case 3:
                    o.sent(), o.label = 4;

                  case 4:
                    return n++, [ 3 /*break*/ , 2 ];

                  case 5:
                    return [ 2 /*return*/ , (this.progress.taskState = "Success", new Oi(Object.assign({}, this.progress), t)) ];
                }
            }));
        }));
    }, t;
}();

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A complete element in the bundle stream, together with the byte length it
 * occupies in the stream.
 */
/**
 * Returns a `LoadBundleTaskProgress` representing the initial progress of
 * loading a bundle.
 */
function _s(t) {
    return {
        taskState: "Running",
        documentsLoaded: 0,
        bytesLoaded: 0,
        totalDocuments: t.totalDocuments,
        totalBytes: t.totalBytes
    };
}

/**
 * Returns a `LoadBundleTaskProgress` representing the progress that the loading
 * has succeeded.
 */
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ var Ss = function(t) {
    this.key = t;
}, Ns = function(t) {
    this.key = t;
}, Ds = /** @class */ function() {
    function t(t, 
    /** Documents included in the remote target */
    e) {
        this.query = t, this.uo = e, this.ao = null, 
        /**
             * A flag whether the view is current with the backend. A view is considered
             * current after it has seen the current flag from the backend and did not
             * lose consistency within the watch stream (e.g. because of an existence
             * filter mismatch).
             */
        this.current = !1, 
        /** Documents in the view but not in the remote target */
        this.ho = on(), 
        /** Document Keys that have local changes */
        this.mutatedKeys = on(), this.lo = ue(t), this.fo = new hs(this.lo);
    }
    return Object.defineProperty(t.prototype, "wo", {
        /**
         * The set of remote documents that the server has told us belongs to the target associated with
         * this view.
         */
        get: function() {
            return this.uo;
        },
        enumerable: !1,
        configurable: !0
    }), 
    /**
     * Iterates over a set of doc changes, applies the query limit, and computes
     * what the new results should be, what the changes were, and whether we may
     * need to go back to the local cache for more results. Does not make any
     * changes to the view.
     * @param docChanges - The doc changes to apply to this view.
     * @param previousChanges - If this is being called with a refill, then start
     *        with this set of docs and changes instead of the current view.
     * @returns a new set of docs, changes, and refill flag.
     */
    t.prototype._o = function(t, e) {
        var n = this, r = e ? e.mo : new fs, i = e ? e.fo : this.fo, o = e ? e.mutatedKeys : this.mutatedKeys, s = i, u = !1, a = Yt(this.query) && i.size === this.query.limit ? i.last() : null, c = $t(this.query) && i.size === this.query.limit ? i.first() : null;
        // Drop documents out to meet limit/limitToLast requirement.
        if (t.inorderTraversal((function(t, e) {
            var h = i.get(t), f = se(n.query, e) ? e : null, l = !!h && n.mutatedKeys.has(h.key), d = !!f && (f.hasLocalMutations || 
            // We only consider committed mutations for documents that were
            // mutated during the lifetime of the view.
            n.mutatedKeys.has(f.key) && f.hasCommittedMutations), p = !1;
            // Calculate change
            h && f ? h.data.isEqual(f.data) ? l !== d && (r.track({
                type: 3 /* Metadata */ ,
                doc: f
            }), p = !0) : n.yo(h, f) || (r.track({
                type: 2 /* Modified */ ,
                doc: f
            }), p = !0, (a && n.lo(f, a) > 0 || c && n.lo(f, c) < 0) && (
            // This doc moved from inside the limit to outside the limit.
            // That means there may be some other doc in the local cache
            // that should be included instead.
            u = !0)) : !h && f ? (r.track({
                type: 0 /* Added */ ,
                doc: f
            }), p = !0) : h && !f && (r.track({
                type: 1 /* Removed */ ,
                doc: h
            }), p = !0, (a || c) && (
            // A doc was removed from a full limit query. We'll need to
            // requery from the local cache to see if we know about some other
            // doc that should be in the results.
            u = !0)), p && (f ? (s = s.add(f), o = d ? o.add(t) : o.delete(t)) : (s = s.delete(t), 
            o = o.delete(t)));
        })), Yt(this.query) || $t(this.query)) for (;s.size > this.query.limit; ) {
            var h = Yt(this.query) ? s.last() : s.first();
            s = s.delete(h.key), o = o.delete(h.key), r.track({
                type: 1 /* Removed */ ,
                doc: h
            });
        }
        return {
            fo: s,
            mo: r,
            Nn: u,
            mutatedKeys: o
        };
    }, t.prototype.yo = function(t, e) {
        // We suppress the initial change event for documents that were modified as
        // part of a write acknowledgment (e.g. when the value of a server transform
        // is applied) as Watch will send us the same document again.
        // By suppressing the event, we only raise two user visible events (one with
        // `hasPendingWrites` and the final state of the document) instead of three
        // (one with `hasPendingWrites`, the modified document with
        // `hasPendingWrites` and the final state of the document).
        return t.hasLocalMutations && e.hasCommittedMutations && !e.hasLocalMutations;
    }, 
    /**
     * Updates the view with the given ViewDocumentChanges and optionally updates
     * limbo docs and sync state from the provided target change.
     * @param docChanges - The set of changes to make to the view's docs.
     * @param updateLimboDocuments - Whether to update limbo documents based on
     *        this change.
     * @param targetChange - A target change to apply for computing limbo docs and
     *        sync state.
     * @returns A new ViewChange with the given docs, changes, and sync state.
     */
    // PORTING NOTE: The iOS/Android clients always compute limbo document changes.
    t.prototype.applyChanges = function(t, e, n) {
        var r = this, i = this.fo;
        this.fo = t.fo, this.mutatedKeys = t.mutatedKeys;
        // Sort changes based on type and query comparator
        var o = t.mo.jr();
        o.sort((function(t, e) {
            return function(t, e) {
                var n = function(t) {
                    switch (t) {
                      case 0 /* Added */ :
                        return 1;

                      case 2 /* Modified */ :
                      case 3 /* Metadata */ :
                        // A metadata change is converted to a modified change at the public
                        // api layer.  Since we sort by document key and then change type,
                        // metadata and modified changes must be sorted equivalently.
                        return 2;

                      case 1 /* Removed */ :
                        return 0;

                      default:
                        return L();
                    }
                };
                return n(t) - n(e);
            }(t.type, e.type) || r.lo(t.doc, e.doc);
        })), this.po(n);
        var s = e ? this.Eo() : [], u = 0 === this.ho.size && this.current ? 1 /* Synced */ : 0 /* Local */ , a = u !== this.ao;
        return this.ao = u, 0 !== o.length || a ? {
            snapshot: new ls(this.query, t.fo, i, o, t.mutatedKeys, 0 /* Local */ === u, a, 
            /* excludesMetadataChanges= */ !1),
            To: s
        } : {
            To: s
        };
        // no changes
        }, 
    /**
     * Applies an OnlineState change to the view, potentially generating a
     * ViewChange if the view's syncState changes as a result.
     */
    t.prototype.zr = function(t) {
        return this.current && "Offline" /* Offline */ === t ? (
        // If we're offline, set `current` to false and then call applyChanges()
        // to refresh our syncState and generate a ViewChange as appropriate. We
        // are guaranteed to get a new TargetChange that sets `current` back to
        // true once the client is back online.
        this.current = !1, this.applyChanges({
            fo: this.fo,
            mo: new fs,
            mutatedKeys: this.mutatedKeys,
            Nn: !1
        }, 
        /* updateLimboDocuments= */ !1)) : {
            To: []
        };
    }, 
    /**
     * Returns whether the doc for the given key should be in limbo.
     */
    t.prototype.Io = function(t) {
        // If the remote end says it's part of this query, it's not in limbo.
        return !this.uo.has(t) && 
        // The local store doesn't think it's a result, so it shouldn't be in limbo.
        !!this.fo.has(t) && !this.fo.get(t).hasLocalMutations;
    }, 
    /**
     * Updates syncedDocuments, current, and limbo docs based on the given change.
     * Returns the list of changes to which docs are in limbo.
     */
    t.prototype.po = function(t) {
        var e = this;
        t && (t.addedDocuments.forEach((function(t) {
            return e.uo = e.uo.add(t);
        })), t.modifiedDocuments.forEach((function(t) {})), t.removedDocuments.forEach((function(t) {
            return e.uo = e.uo.delete(t);
        })), this.current = t.current);
    }, t.prototype.Eo = function() {
        var t = this;
        // We can only determine limbo documents when we're in-sync with the server.
                if (!this.current) return [];
        // TODO(klimt): Do this incrementally so that it's not quadratic when
        // updating many documents.
                var e = this.ho;
        this.ho = on(), this.fo.forEach((function(e) {
            t.Io(e.key) && (t.ho = t.ho.add(e.key));
        }));
        // Diff the new limbo docs with the old limbo docs.
        var n = [];
        return e.forEach((function(e) {
            t.ho.has(e) || n.push(new Ns(e));
        })), this.ho.forEach((function(t) {
            e.has(t) || n.push(new Ss(t));
        })), n;
    }, 
    /**
     * Update the in-memory state of the current view with the state read from
     * persistence.
     *
     * We update the query view whenever a client's primary status changes:
     * - When a client transitions from primary to secondary, it can miss
     *   LocalStorage updates and its query views may temporarily not be
     *   synchronized with the state on disk.
     * - For secondary to primary transitions, the client needs to update the list
     *   of `syncedDocuments` since secondary clients update their query views
     *   based purely on synthesized RemoteEvents.
     *
     * @param queryResult.documents - The documents that match the query according
     * to the LocalStore.
     * @param queryResult.remoteKeys - The keys of the documents that match the
     * query according to the backend.
     *
     * @returns The ViewChange that resulted from this synchronization.
     */
    // PORTING NOTE: Multi-tab only.
    t.prototype.Ao = function(t) {
        this.uo = t.Bn, this.ho = on();
        var e = this._o(t.documents);
        return this.applyChanges(e, /*updateLimboDocuments=*/ !0);
    }, 
    /**
     * Returns a view snapshot as if this query was just listened to. Contains
     * a document add for every existing document and the `fromCache` and
     * `hasPendingWrites` status of the already established view.
     */
    // PORTING NOTE: Multi-tab only.
    t.prototype.Ro = function() {
        return ls.fromInitialDocuments(this.query, this.fo, this.mutatedKeys, 0 /* Local */ === this.ao);
    }, t;
}(), As = function(
/**
     * The query itself.
     */
t, 
/**
     * The target number created by the client that is used in the watch
     * stream to identify this query.
     */
e, 
/**
     * The view is responsible for computing the final merged truth of what
     * docs are in the query. It gets notified of local and remote changes,
     * and applies the query filters and limits to determine the most correct
     * possible results.
     */
n) {
    this.query = t, this.targetId = e, this.view = n;
}, ks = function(t) {
    this.key = t, 
    /**
             * Set to true once we've received a document. This is used in
             * getRemoteKeysForTarget() and ultimately used by WatchChangeAggregator to
             * decide whether it needs to manufacture a delete event for the target once
             * the target is CURRENT.
             */
    this.bo = !1;
}, xs = /** @class */ function() {
    function t(t, e, n, 
    // PORTING NOTE: Manages state synchronization in multi-tab environments.
    r, i, o) {
        this.localStore = t, this.remoteStore = e, this.eventManager = n, this.sharedClientState = r, 
        this.currentUser = i, this.maxConcurrentLimboResolutions = o, this.vo = {}, this.Po = new bi((function(t) {
            return ie(t);
        }), re), this.Vo = new Map, 
        /**
             * The keys of documents that are in limbo for which we haven't yet started a
             * limbo resolution query. The strings in this set are the result of calling
             * `key.path.canonicalString()` where `key` is a `DocumentKey` object.
             *
             * The `Set` type was chosen because it provides efficient lookup and removal
             * of arbitrary elements and it also maintains insertion order, providing the
             * desired queue-like FIFO semantics.
             */
        this.So = new Set, 
        /**
             * Keeps track of the target ID for each document that is in limbo with an
             * active target.
             */
        this.Do = new ze(at.comparator), 
        /**
             * Keeps track of the information about an active limbo resolution for each
             * active target ID that was started for the purpose of limbo resolution.
             */
        this.Co = new Map, this.No = new eo, 
        /** Stores user completion handlers, indexed by User and BatchId. */
        this.xo = {}, 
        /** Stores user callbacks waiting for all pending writes to be acknowledged. */
        this.Fo = new Map, this.ko = ai.Yt(), this.onlineState = "Unknown" /* Unknown */ , 
        // The primary state is set to `true` or `false` immediately after Firestore
        // startup. In the interim, a client should only be considered primary if
        // `isPrimary` is true.
        this.$o = void 0;
    }
    return Object.defineProperty(t.prototype, "isPrimaryClient", {
        get: function() {
            return !0 === this.$o;
        },
        enumerable: !1,
        configurable: !0
    }), t;
}();

/**
 * Initiates the new listen, resolves promise when listen enqueued to the
 * server. All the subsequent view snapshots or errors are sent to the
 * subscribed handlers. Returns the initial snapshot.
 */
function Cs(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i, o, s, u;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(a) {
            switch (a.label) {
              case 0:
                return n = su(t), (o = n.Po.get(e)) ? (
                // PORTING NOTE: With Multi-Tab Web, it is possible that a query view
                // already exists when EventManager calls us for the first time. This
                // happens when the primary tab is already listening to this query on
                // behalf of another tab and the user of the primary also starts listening
                // to the query. EventManager will not have an assigned target ID in this
                // case and calls `listen` to obtain this ID.
                r = o.targetId, n.sharedClientState.addLocalQueryTarget(r), i = o.view.Ro(), [ 3 /*break*/ , 4 ]) : [ 3 /*break*/ , 1 ];

              case 1:
                return [ 4 /*yield*/ , zi(n.localStore, ee(e)) ];

              case 2:
                return s = a.sent(), u = n.sharedClientState.addLocalQueryTarget(s.targetId), r = s.targetId, 
                [ 4 /*yield*/ , Rs(n, e, r, "current" === u) ];

              case 3:
                i = a.sent(), n.isPrimaryClient && qo(n.remoteStore, s), a.label = 4;

              case 4:
                return [ 2 /*return*/ , i ];
            }
        }));
    }));
}

/**
 * Registers a view for a previously unknown query and computes its initial
 * snapshot.
 */ function Rs(t, e, n, r) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var i, o, s, u, a, c;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(h) {
            switch (h.label) {
              case 0:
                // PORTING NOTE: On Web only, we inject the code that registers new Limbo
                // targets based on view changes. This allows us to only depend on Limbo
                // changes when user code includes queries.
                return t.Oo = function(e, n, r) {
                    return function(t, e, n, r) {
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                            var i, o, s;
                            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(u) {
                                switch (u.label) {
                                  case 0:
                                    return i = e.view._o(n), i.Nn ? [ 4 /*yield*/ , Hi(t.localStore, e.query, 
                                    /* usePreviousResults= */ !1).then((function(t) {
                                        var n = t.documents;
                                        return e.view._o(n, i);
                                    })) ] : [ 3 /*break*/ , 2 ];

                                  case 1:
                                    // The query has a limit and some docs were removed, so we need
                                    // to re-run the query against the local store to make sure we
                                    // didn't lose any good docs that had been past the limit.
                                    i = u.sent(), u.label = 2;

                                  case 2:
                                    return o = r && r.targetChanges.get(e.targetId), s = e.view.applyChanges(i, 
                                    /* updateLimboDocuments= */ t.isPrimaryClient, o), [ 2 /*return*/ , (Qs(t, e.targetId, s.To), 
                                    s.snapshot) ];
                                }
                            }));
                        }));
                    }(t, e, n, r);
                }, [ 4 /*yield*/ , Hi(t.localStore, e, 
                /* usePreviousResults= */ !0) ];

              case 1:
                return i = h.sent(), o = new Ds(e, i.Bn), s = o._o(i.documents), u = cn.createSynthesizedTargetChangeForCurrentChange(n, r && "Offline" /* Offline */ !== t.onlineState), 
                a = o.applyChanges(s, 
                /* updateLimboDocuments= */ t.isPrimaryClient, u), Qs(t, n, a.To), c = new As(e, n, o), 
                [ 2 /*return*/ , (t.Po.set(e, c), t.Vo.has(n) ? t.Vo.get(n).push(e) : t.Vo.set(n, [ e ]), 
                a.snapshot) ];
            }
        }));
    }));
}

/** Stops listening to the query. */ function Ls(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
            switch (o.label) {
              case 0:
                return n = P(t), r = n.Po.get(e), (i = n.Vo.get(r.targetId)).length > 1 ? [ 2 /*return*/ , (n.Vo.set(r.targetId, i.filter((function(t) {
                    return !re(t, e);
                }))), void n.Po.delete(e)) ] : n.isPrimaryClient ? (
                // We need to remove the local query target first to allow us to verify
                // whether any other client is still interested in this target.
                n.sharedClientState.removeLocalQueryTarget(r.targetId), n.sharedClientState.isActiveQueryTarget(r.targetId) ? [ 3 /*break*/ , 2 ] : [ 4 /*yield*/ , Wi(n.localStore, r.targetId, 
                /*keepPersistedTargetData=*/ !1).then((function() {
                    n.sharedClientState.clearQueryState(r.targetId), Uo(n.remoteStore, r.targetId), 
                    Ks(n, r.targetId);
                })).catch(di) ]) : [ 3 /*break*/ , 3 ];

              case 1:
                o.sent(), o.label = 2;

              case 2:
                return [ 3 /*break*/ , 5 ];

              case 3:
                return Ks(n, r.targetId), [ 4 /*yield*/ , Wi(n.localStore, r.targetId, 
                /*keepPersistedTargetData=*/ !0) ];

              case 4:
                o.sent(), o.label = 5;

              case 5:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Initiates the write of local mutation batch which involves adding the
 * writes to the mutation queue, notifying the remote store about new
 * mutations and raising events for any changes this write caused.
 *
 * The promise returned by this call is resolved when the above steps
 * have completed, *not* when the write was acked by the backend. The
 * userCallback is resolved once the write was acked/rejected by the
 * backend (or failed locally for any other reason).
 */ function Os(t, e, n) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var r, i, o, s;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(u) {
            switch (u.label) {
              case 0:
                r = uu(t), u.label = 1;

              case 1:
                return u.trys.push([ 1, 5, , 6 ]), [ 4 /*yield*/ , function(t, e) {
                    var n, r = P(t), i = B.now(), o = e.reduce((function(t, e) {
                        return t.add(e.key);
                    }), on());
                    return r.persistence.runTransaction("Locally write mutations", "readwrite", (function(t) {
                        return r.Mn.pn(t, o).next((function(o) {
                            n = o;
                            for (
                            // For non-idempotent mutations (such as `FieldValue.increment()`),
                            // we record the base state in a separate patch mutation. This is
                            // later used to guarantee consistent values and prevents flicker
                            // even if the backend sends us an update that already includes our
                            // transform.
                            var s = [], u = 0, a = e; u < a.length; u++) {
                                var c = a[u], h = Ce(c, n.get(c.key));
                                null != h && 
                                // NOTE: The base state should only be applied if there's some
                                // existing document to override, so use a Precondition of
                                // exists=true
                                s.push(new Pe(c.key, h, _t(h.value.mapValue), Ne.exists(!0)));
                            }
                            return r._n.addMutationBatch(t, i, s, e);
                        }));
                    })).then((function(t) {
                        return t.applyToLocalDocumentSet(n), {
                            batchId: t.batchId,
                            changes: n
                        };
                    }));
                }(r.localStore, e) ];

              case 2:
                return i = u.sent(), r.sharedClientState.addPendingMutation(i.batchId), function(t, e, n) {
                    var r = t.xo[t.currentUser.toKey()];
                    r || (r = new ze(V)), r = r.insert(e, n), t.xo[t.currentUser.toKey()] = r;
                }(r, i.batchId, n), [ 4 /*yield*/ , Hs(r, i.changes) ];

              case 3:
                return u.sent(), [ 4 /*yield*/ , Jo(r.remoteStore) ];

              case 4:
                return u.sent(), [ 3 /*break*/ , 6 ];

              case 5:
                return o = u.sent(), s = cs(o, "Failed to persist write"), n.reject(s), [ 3 /*break*/ , 6 ];

              case 6:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Applies one remote event to the sync engine, notifying any views of the
 * changes, and releasing any pending mutation batches that would become
 * visible because of the snapshot version the remote event contains.
 */ function Ps(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
            switch (i.label) {
              case 0:
                n = P(t), i.label = 1;

              case 1:
                return i.trys.push([ 1, 4, , 6 ]), [ 4 /*yield*/ , Ki(n.localStore, e) ];

              case 2:
                return r = i.sent(), 
                // Update `receivedDocument` as appropriate for any limbo targets.
                e.targetChanges.forEach((function(t, e) {
                    var r = n.Co.get(e);
                    r && (
                    // Since this is a limbo resolution lookup, it's for a single document
                    // and it could be added, modified, or removed, but not a combination.
                    O(t.addedDocuments.size + t.modifiedDocuments.size + t.removedDocuments.size <= 1), 
                    t.addedDocuments.size > 0 ? r.bo = !0 : t.modifiedDocuments.size > 0 ? O(r.bo) : t.removedDocuments.size > 0 && (O(r.bo), 
                    r.bo = !1));
                })), [ 4 /*yield*/ , Hs(n, r, e) ];

              case 3:
                // Update `receivedDocument` as appropriate for any limbo targets.
                return i.sent(), [ 3 /*break*/ , 6 ];

              case 4:
                return [ 4 /*yield*/ , di(i.sent()) ];

              case 5:
                return i.sent(), [ 3 /*break*/ , 6 ];

              case 6:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Applies an OnlineState change to the sync engine and notifies any views of
 * the change.
 */ function Fs(t, e, n) {
    var r = P(t);
    // If we are the secondary client, we explicitly ignore the remote store's
    // online state (the local client may go offline, even though the primary
    // tab remains online) and only apply the primary tab's online state from
    // SharedClientState.
        if (r.isPrimaryClient && 0 /* RemoteStore */ === n || !r.isPrimaryClient && 1 /* SharedClientState */ === n) {
        var i = [];
        r.Po.forEach((function(t, n) {
            var r = n.view.zr(e);
            r.snapshot && i.push(r.snapshot);
        })), function(t, e) {
            var n = P(t);
            n.onlineState = e;
            var r = !1;
            n.queries.forEach((function(t, n) {
                for (var i = 0, o = n.listeners; i < o.length; i++) {
                    // Run global snapshot listeners if a consistent snapshot has been emitted.
                    o[i].zr(e) && (r = !0);
                }
            })), r && ws(n);
        }(r.eventManager, e), i.length && r.vo._r(i), r.onlineState = e, r.isPrimaryClient && r.sharedClientState.setOnlineState(e);
    }
}

/**
 * Rejects the listen for the given targetID. This can be triggered by the
 * backend for any active target.
 *
 * @param syncEngine - The sync engine implementation.
 * @param targetId - The targetID corresponds to one previously initiated by the
 * user as part of TargetData passed to listen() on RemoteStore.
 * @param err - A description of the condition that has forced the rejection.
 * Nearly always this will be an indication that the user is no longer
 * authorized to see the data matching the target.
 */ function Ms(t, e, n) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var r, i, o, s, u, a;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(c) {
            switch (c.label) {
              case 0:
                // PORTING NOTE: Multi-tab only.
                return (r = P(t)).sharedClientState.updateQueryState(e, "rejected", n), i = r.Co.get(e), 
                (o = i && i.key) ? (s = (s = new ze(at.comparator)).insert(o, St.newNoDocument(o, j.min())), 
                u = on().add(o), a = new an(j.min(), 
                /* targetChanges= */ new Map, 
                /* targetMismatches= */ new Ye(V), s, u), [ 4 /*yield*/ , Ps(r, a) ]) : [ 3 /*break*/ , 2 ];

              case 1:
                return c.sent(), 
                // Since this query failed, we won't want to manually unlisten to it.
                // We only remove it from bookkeeping after we successfully applied the
                // RemoteEvent. If `applyRemoteEvent()` throws, we want to re-listen to
                // this query when the RemoteStore restarts the Watch stream, which should
                // re-trigger the target failure.
                r.Do = r.Do.remove(o), r.Co.delete(e), Ws(r), [ 3 /*break*/ , 4 ];

              case 2:
                return [ 4 /*yield*/ , Wi(r.localStore, e, 
                /* keepPersistedTargetData */ !1).then((function() {
                    return Ks(r, e, n);
                })).catch(di) ];

              case 3:
                c.sent(), c.label = 4;

              case 4:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

function Vs(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
            switch (o.label) {
              case 0:
                n = P(t), r = e.batch.batchId, o.label = 1;

              case 1:
                return o.trys.push([ 1, 4, , 6 ]), [ 4 /*yield*/ , Bi(n.localStore, e) ];

              case 2:
                return i = o.sent(), 
                // The local store may or may not be able to apply the write result and
                // raise events immediately (depending on whether the watcher is caught
                // up), so we raise user callbacks first so that they consistently happen
                // before listen events.
                js(n, r, /*error=*/ null), Bs(n, r), n.sharedClientState.updateMutationState(r, "acknowledged"), 
                [ 4 /*yield*/ , Hs(n, i) ];

              case 3:
                // The local store may or may not be able to apply the write result and
                // raise events immediately (depending on whether the watcher is caught
                // up), so we raise user callbacks first so that they consistently happen
                // before listen events.
                return o.sent(), [ 3 /*break*/ , 6 ];

              case 4:
                return [ 4 /*yield*/ , di(o.sent()) ];

              case 5:
                return o.sent(), [ 3 /*break*/ , 6 ];

              case 6:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

function qs(t, e, n) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var r, i;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
            switch (o.label) {
              case 0:
                r = P(t), o.label = 1;

              case 1:
                return o.trys.push([ 1, 4, , 6 ]), [ 4 /*yield*/ , function(t, e) {
                    var n = P(t);
                    return n.persistence.runTransaction("Reject batch", "readwrite-primary", (function(t) {
                        var r;
                        return n._n.lookupMutationBatch(t, e).next((function(e) {
                            return O(null !== e), r = e.keys(), n._n.removeMutationBatch(t, e);
                        })).next((function() {
                            return n._n.performConsistencyCheck(t);
                        })).next((function() {
                            return n.Mn.pn(t, r);
                        }));
                    }));
                }(r.localStore, e) ];

              case 2:
                return i = o.sent(), 
                // The local store may or may not be able to apply the write result and
                // raise events immediately (depending on whether the watcher is caught up),
                // so we raise user callbacks first so that they consistently happen before
                // listen events.
                js(r, e, n), Bs(r, e), r.sharedClientState.updateMutationState(e, "rejected", n), 
                [ 4 /*yield*/ , Hs(r, i) ];

              case 3:
                // The local store may or may not be able to apply the write result and
                // raise events immediately (depending on whether the watcher is caught up),
                // so we raise user callbacks first so that they consistently happen before
                // listen events.
                return o.sent(), [ 3 /*break*/ , 6 ];

              case 4:
                return [ 4 /*yield*/ , di(o.sent()) ];

              case 5:
                return o.sent(), [ 3 /*break*/ , 6 ];

              case 6:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Registers a user callback that resolves when all pending mutations at the moment of calling
 * are acknowledged .
 */ function Us(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i, o, s;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(u) {
            switch (u.label) {
              case 0:
                Qo((n = P(t)).remoteStore) || k("SyncEngine", "The network is disabled. The task returned by 'awaitPendingWrites()' will not complete until the network is enabled."), 
                u.label = 1;

              case 1:
                return u.trys.push([ 1, 3, , 4 ]), [ 4 /*yield*/ , function(t) {
                    var e = P(t);
                    return e.persistence.runTransaction("Get highest unacknowledged batch id", "readonly", (function(t) {
                        return e._n.getHighestUnacknowledgedBatchId(t);
                    }));
                }(n.localStore) ];

              case 2:
                return -1 === (r = u.sent()) ? [ 2 /*return*/ , void e.resolve() ] : ((i = n.Fo.get(r) || []).push(e), 
                n.Fo.set(r, i), [ 3 /*break*/ , 4 ]);

              case 3:
                return o = u.sent(), s = cs(o, "Initialization of waitForPendingWrites() operation failed"), 
                e.reject(s), [ 3 /*break*/ , 4 ];

              case 4:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/**
 * Triggers the callbacks that are waiting for this batch id to get acknowledged by server,
 * if there are any.
 */ function Bs(t, e) {
    (t.Fo.get(e) || []).forEach((function(t) {
        t.resolve();
    })), t.Fo.delete(e)
    /** Reject all outstanding callbacks waiting for pending writes to complete. */;
}

function js(t, e, n) {
    var r = P(t), i = r.xo[r.currentUser.toKey()];
    // NOTE: Mutations restored from persistence won't have callbacks, so it's
    // okay for there to be no callback for this ID.
    if (i) {
        var o = i.get(e);
        o && (n ? o.reject(n) : o.resolve(), i = i.remove(e)), r.xo[r.currentUser.toKey()] = i;
    }
}

function Ks(t, e, n) {
    void 0 === n && (n = null), t.sharedClientState.removeLocalQueryTarget(e);
    for (var r = 0, i = t.Vo.get(e); r < i.length; r++) {
        var o = i[r];
        t.Po.delete(o), n && t.vo.Mo(o, n);
    }
    t.Vo.delete(e), t.isPrimaryClient && t.No.Zn(e).forEach((function(e) {
        t.No.containsKey(e) || 
        // We removed the last reference for this key
        Gs(t, e);
    }));
}

function Gs(t, e) {
    t.So.delete(e.path.canonicalString());
    // It's possible that the target already got removed because the query failed. In that case,
    // the key won't exist in `limboTargetsByKey`. Only do the cleanup if we still have the target.
    var n = t.Do.get(e);
    null !== n && (Uo(t.remoteStore, n), t.Do = t.Do.remove(e), t.Co.delete(n), Ws(t));
}

function Qs(t, e, n) {
    for (var r = 0, i = n; r < i.length; r++) {
        var o = i[r];
        o instanceof Ss ? (t.No.addReference(o.key, e), zs(t, o)) : o instanceof Ns ? (k("SyncEngine", "Document no longer in limbo: " + o.key), 
        t.No.removeReference(o.key, e), t.No.containsKey(o.key) || 
        // We removed the last reference for this key
        Gs(t, o.key)) : L();
    }
}

function zs(t, e) {
    var n = e.key, r = n.path.canonicalString();
    t.Do.get(n) || t.So.has(r) || (k("SyncEngine", "New document in limbo: " + n), t.So.add(r), 
    Ws(t));
}

/**
 * Starts listens for documents in limbo that are enqueued for resolution,
 * subject to a maximum number of concurrent resolutions.
 *
 * Without bounding the number of concurrent resolutions, the server can fail
 * with "resource exhausted" errors which can lead to pathological client
 * behavior as seen in https://github.com/firebase/firebase-js-sdk/issues/2683.
 */ function Ws(t) {
    for (;t.So.size > 0 && t.Do.size < t.maxConcurrentLimboResolutions; ) {
        var e = t.So.values().next().value;
        t.So.delete(e);
        var n = new at(W.fromString(e)), r = t.ko.next();
        t.Co.set(r, new ks(n)), t.Do = t.Do.insert(n, r), qo(t.remoteStore, new Or(ee(Ht(n.path)), r, 2 /* LimboResolution */ , _.o));
    }
}

function Hs(t, e, n) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var r, i, o, s;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(u) {
            switch (u.label) {
              case 0:
                return r = P(t), i = [], o = [], s = [], r.Po.isEmpty() ? [ 3 /*break*/ , 3 ] : (r.Po.forEach((function(t, u) {
                    s.push(r.Oo(u, e, n).then((function(t) {
                        if (t) {
                            r.isPrimaryClient && r.sharedClientState.updateQueryState(u.targetId, t.fromCache ? "not-current" : "current"), 
                            i.push(t);
                            var e = Fi.Pn(u.targetId, t);
                            o.push(e);
                        }
                    })));
                })), [ 4 /*yield*/ , Promise.all(s) ]);

              case 1:
                return u.sent(), r.vo._r(i), [ 4 /*yield*/ , function(t, e) {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                        var n, r, i, o, s, u, a, c, h;
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(f) {
                            switch (f.label) {
                              case 0:
                                n = P(t), f.label = 1;

                              case 1:
                                return f.trys.push([ 1, 3, , 4 ]), [ 4 /*yield*/ , n.persistence.runTransaction("notifyLocalViewChanges", "readwrite", (function(t) {
                                    return br.forEach(e, (function(e) {
                                        return br.forEach(e.bn, (function(r) {
                                            return n.persistence.referenceDelegate.addReference(t, e.targetId, r);
                                        })).next((function() {
                                            return br.forEach(e.vn, (function(r) {
                                                return n.persistence.referenceDelegate.removeReference(t, e.targetId, r);
                                            }));
                                        }));
                                    }));
                                })) ];

                              case 2:
                                return f.sent(), [ 3 /*break*/ , 4 ];

                              case 3:
                                if (!Sr(r = f.sent())) throw r;
                                // If `notifyLocalViewChanges` fails, we did not advance the sequence
                                // number for the documents that were included in this transaction.
                                // This might trigger them to be deleted earlier than they otherwise
                                // would have, but it should not invalidate the integrity of the data.
                                                                return k("LocalStore", "Failed to update sequence numbers: " + r), 
                                [ 3 /*break*/ , 4 ];

                              case 4:
                                for (i = 0, o = e; i < o.length; i++) s = o[i], u = s.targetId, s.fromCache || (a = n.Fn.get(u), 
                                c = a.snapshotVersion, h = a.withLastLimboFreeSnapshotVersion(c), 
                                // Advance the last limbo free snapshot version
                                n.Fn = n.Fn.insert(u, h));
                                return [ 2 /*return*/ ];
                            }
                        }));
                    }));
                }(r.localStore, o) ];

              case 2:
                u.sent(), u.label = 3;

              case 3:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

function Ys(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
            switch (i.label) {
              case 0:
                return (n = P(t)).currentUser.isEqual(e) ? [ 3 /*break*/ , 3 ] : (k("SyncEngine", "User change. New user:", e.toKey()), 
                [ 4 /*yield*/ , Ui(n.localStore, e) ]);

              case 1:
                return r = i.sent(), n.currentUser = e, 
                // Fails tasks waiting for pending writes requested by previous user.
                function(t, e) {
                    t.Fo.forEach((function(t) {
                        t.forEach((function(t) {
                            t.reject(new N(S.CANCELLED, "'waitForPendingWrites' promise is rejected due to a user change."));
                        }));
                    })), t.Fo.clear();
                }(n), 
                // TODO(b/114226417): Consider calling this only in the primary tab.
                n.sharedClientState.handleUserChange(e, r.removedBatchIds, r.addedBatchIds), [ 4 /*yield*/ , Hs(n, r.Ln) ];

              case 2:
                i.sent(), i.label = 3;

              case 3:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

function $s(t, e) {
    var n = P(t), r = n.Co.get(e);
    if (r && r.bo) return on().add(r.key);
    var i = on(), o = n.Vo.get(e);
    if (!o) return i;
    for (var s = 0, u = o; s < u.length; s++) {
        var a = u[s], c = n.Po.get(a);
        i = i.unionWith(c.view.wo);
    }
    return i;
}

/**
 * Reconcile the list of synced documents in an existing view with those
 * from persistence.
 */ function Xs(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
            switch (o.label) {
              case 0:
                return [ 4 /*yield*/ , Hi((n = P(t)).localStore, e.query, 
                /* usePreviousResults= */ !0) ];

              case 1:
                return r = o.sent(), i = e.view.Ao(r), [ 2 /*return*/ , (n.isPrimaryClient && Qs(n, e.targetId, i.To), 
                i) ];
            }
        }));
    }));
}

/**
 * Retrieves newly changed documents from remote document cache and raises
 * snapshots if needed.
 */
// PORTING NOTE: Multi-Tab only.
function Js(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var e;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
            return [ 2 /*return*/ , $i((e = P(t)).localStore).then((function(t) {
                return Hs(e, t);
            })) ];
        }));
    }));
}

/** Applies a mutation state to an existing batch.  */
// PORTING NOTE: Multi-Tab only.
function Zs(t, e, n, r) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var i, o;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(s) {
            switch (s.label) {
              case 0:
                return [ 4 /*yield*/ , function(t, e) {
                    var n = P(t), r = P(n._n);
                    return n.persistence.runTransaction("Lookup mutation documents", "readonly", (function(t) {
                        return r.jt(t, e).next((function(e) {
                            return e ? n.Mn.pn(t, e) : br.resolve(null);
                        }));
                    }));
                }((i = P(t)).localStore, e) ];

              case 1:
                return null === (o = s.sent()) ? [ 3 /*break*/ , 6 ] : "pending" !== n ? [ 3 /*break*/ , 3 ] : [ 4 /*yield*/ , Jo(i.remoteStore) ];

              case 2:
                // If we are the primary client, we need to send this write to the
                // backend. Secondary clients will ignore these writes since their remote
                // connection is disabled.
                return s.sent(), [ 3 /*break*/ , 4 ];

              case 3:
                "acknowledged" === n || "rejected" === n ? (
                // NOTE: Both these methods are no-ops for batches that originated from
                // other clients.
                js(i, e, r || null), Bs(i, e), function(t, e) {
                    P(P(t)._n).Gt(e);
                }(i.localStore, e)) : L(), s.label = 4;

              case 4:
                return [ 4 /*yield*/ , Hs(i, o) ];

              case 5:
                return s.sent(), [ 3 /*break*/ , 7 ];

              case 6:
                // A throttled tab may not have seen the mutation before it was completed
                // and removed from the mutation queue, in which case we won't have cached
                // the affected documents. In this case we can safely ignore the update
                // since that means we didn't apply the mutation locally at all (if we
                // had, we would have cached the affected documents), and so we will just
                // see any resulting document changes via normal remote document updates
                // as applicable.
                k("SyncEngine", "Cannot apply mutation batch with id: " + e), s.label = 7;

              case 7:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/** Applies a query target change from a different tab. */
// PORTING NOTE: Multi-Tab only.
function tu(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i, o, s, u, a, c;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(h) {
            switch (h.label) {
              case 0:
                return su(n = P(t)), uu(n), !0 !== e || !0 === n.$o ? [ 3 /*break*/ , 3 ] : (r = n.sharedClientState.getAllActiveQueryTargets(), 
                [ 4 /*yield*/ , eu(n, r.toArray()) ]);

              case 1:
                return i = h.sent(), n.$o = !0, [ 4 /*yield*/ , os(n.remoteStore, !0) ];

              case 2:
                for (h.sent(), o = 0, s = i; o < s.length; o++) u = s[o], qo(n.remoteStore, u);
                return [ 3 /*break*/ , 7 ];

              case 3:
                return !1 !== e || !1 === n.$o ? [ 3 /*break*/ , 7 ] : (a = [], c = Promise.resolve(), 
                n.Vo.forEach((function(t, e) {
                    n.sharedClientState.isLocalQueryTarget(e) ? a.push(e) : c = c.then((function() {
                        return Ks(n, e), Wi(n.localStore, e, 
                        /*keepPersistedTargetData=*/ !0);
                    })), Uo(n.remoteStore, e);
                })), [ 4 /*yield*/ , c ]);

              case 4:
                return h.sent(), [ 4 /*yield*/ , eu(n, a) ];

              case 5:
                return h.sent(), 
                // PORTING NOTE: Multi-Tab only.
                function(t) {
                    var e = P(t);
                    e.Co.forEach((function(t, n) {
                        Uo(e.remoteStore, n);
                    })), e.No.ts(), e.Co = new Map, e.Do = new ze(at.comparator);
                }(n), n.$o = !1, [ 4 /*yield*/ , os(n.remoteStore, !1) ];

              case 6:
                h.sent(), h.label = 7;

              case 7:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

function eu(t, e, n) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i, o, s, u, a, c, h, f, l, d, p, y;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(v) {
            switch (v.label) {
              case 0:
                n = P(t), r = [], i = [], o = 0, s = e, v.label = 1;

              case 1:
                return o < s.length ? (u = s[o], a = void 0, (c = n.Vo.get(u)) && 0 !== c.length ? [ 4 /*yield*/ , zi(n.localStore, ee(c[0])) ] : [ 3 /*break*/ , 7 ]) : [ 3 /*break*/ , 13 ];

              case 2:
                // For queries that have a local View, we fetch their current state
                // from LocalStore (as the resume token and the snapshot version
                // might have changed) and reconcile their views with the persisted
                // state (the list of syncedDocuments may have gotten out of sync).
                a = v.sent(), h = 0, f = c, v.label = 3;

              case 3:
                return h < f.length ? (l = f[h], d = n.Po.get(l), [ 4 /*yield*/ , Xs(n, d) ]) : [ 3 /*break*/ , 6 ];

              case 4:
                (p = v.sent()).snapshot && i.push(p.snapshot), v.label = 5;

              case 5:
                return h++, [ 3 /*break*/ , 3 ];

              case 6:
                return [ 3 /*break*/ , 11 ];

              case 7:
                return [ 4 /*yield*/ , Yi(n.localStore, u) ];

              case 8:
                return y = v.sent(), [ 4 /*yield*/ , zi(n.localStore, y) ];

              case 9:
                return a = v.sent(), [ 4 /*yield*/ , Rs(n, nu(y), u, 
                /*current=*/ !1) ];

              case 10:
                v.sent(), v.label = 11;

              case 11:
                r.push(a), v.label = 12;

              case 12:
                return o++, [ 3 /*break*/ , 1 ];

              case 13:
                return [ 2 /*return*/ , (n.vo._r(i), r) ];
            }
        }));
    }));
}

/**
 * Creates a `Query` object from the specified `Target`. There is no way to
 * obtain the original `Query`, so we synthesize a `Query` from the `Target`
 * object.
 *
 * The synthesized result might be different from the original `Query`, but
 * since the synthesized `Query` should return the same results as the
 * original one (only the presentation of results might differ), the potential
 * difference will not cause issues.
 */
// PORTING NOTE: Multi-Tab only.
function nu(t) {
    return Wt(t.path, t.collectionGroup, t.orderBy, t.filters, t.limit, "F" /* First */ , t.startAt, t.endAt);
}

/** Returns the IDs of the clients that are currently active. */
// PORTING NOTE: Multi-Tab only.
function ru(t) {
    var e = P(t);
    return P(P(e.localStore).persistence).fn();
}

/** Applies a query target change from a different tab. */
// PORTING NOTE: Multi-Tab only.
function iu(t, e, n, r) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var i, o, s;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(u) {
            switch (u.label) {
              case 0:
                return (i = P(t)).$o ? (
                // If we receive a target state notification via WebStorage, we are
                // either already secondary or another tab has taken the primary lease.
                k("SyncEngine", "Ignoring unexpected query state notification."), [ 3 /*break*/ , 8 ]) : [ 3 /*break*/ , 1 ];

              case 1:
                if (!i.Vo.has(e)) return [ 3 /*break*/ , 8 ];
                switch (n) {
                  case "current":
                  case "not-current":
                    return [ 3 /*break*/ , 2 ];

                  case "rejected":
                    return [ 3 /*break*/ , 5 ];
                }
                return [ 3 /*break*/ , 7 ];

              case 2:
                return [ 4 /*yield*/ , $i(i.localStore) ];

              case 3:
                return o = u.sent(), s = an.createSynthesizedRemoteEventForCurrentChange(e, "current" === n), 
                [ 4 /*yield*/ , Hs(i, o, s) ];

              case 4:
                return u.sent(), [ 3 /*break*/ , 8 ];

              case 5:
                return [ 4 /*yield*/ , Wi(i.localStore, e, 
                /* keepPersistedTargetData */ !0) ];

              case 6:
                return u.sent(), Ks(i, e, r), [ 3 /*break*/ , 8 ];

              case 7:
                L(), u.label = 8;

              case 8:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

/** Adds or removes Watch targets for queries from different tabs. */ function ou(t, e, n) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var r, i, o, s, u, a, c, h, f, l;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(d) {
            switch (d.label) {
              case 0:
                if (!(r = su(t)).$o) return [ 3 /*break*/ , 10 ];
                i = 0, o = e, d.label = 1;

              case 1:
                return i < o.length ? (s = o[i], r.Vo.has(s) ? (
                // A target might have been added in a previous attempt
                k("SyncEngine", "Adding an already active target " + s), [ 3 /*break*/ , 5 ]) : [ 4 /*yield*/ , Yi(r.localStore, s) ]) : [ 3 /*break*/ , 6 ];

              case 2:
                return u = d.sent(), [ 4 /*yield*/ , zi(r.localStore, u) ];

              case 3:
                return a = d.sent(), [ 4 /*yield*/ , Rs(r, nu(u), a.targetId, 
                /*current=*/ !1) ];

              case 4:
                d.sent(), qo(r.remoteStore, a), d.label = 5;

              case 5:
                return i++, [ 3 /*break*/ , 1 ];

              case 6:
                c = function(t) {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                        switch (e.label) {
                          case 0:
                            return r.Vo.has(t) ? [ 4 /*yield*/ , Wi(r.localStore, t, 
                            /* keepPersistedTargetData */ !1).then((function() {
                                Uo(r.remoteStore, t), Ks(r, t);
                            })).catch(di) ] : [ 3 /*break*/ , 2 ];

                            // Release queries that are still active.
                                                      case 1:
                            // Release queries that are still active.
                            e.sent(), e.label = 2;

                          case 2:
                            return [ 2 /*return*/ ];
                        }
                    }));
                }, h = 0, f = n, d.label = 7;

              case 7:
                return h < f.length ? (l = f[h], [ 5 /*yield**/ , c(l) ]) : [ 3 /*break*/ , 10 ];

              case 8:
                d.sent(), d.label = 9;

              case 9:
                return h++, [ 3 /*break*/ , 7 ];

              case 10:
                return [ 2 /*return*/ ];
            }
        }));
    }));
}

function su(t) {
    var e = P(t);
    return e.remoteStore.remoteSyncer.applyRemoteEvent = Ps.bind(null, e), e.remoteStore.remoteSyncer.getRemoteKeysForTarget = $s.bind(null, e), 
    e.remoteStore.remoteSyncer.rejectListen = Ms.bind(null, e), e.vo._r = ms.bind(null, e.eventManager), 
    e.vo.Mo = gs.bind(null, e.eventManager), e;
}

function uu(t) {
    var e = P(t);
    return e.remoteStore.remoteSyncer.applySuccessfulWrite = Vs.bind(null, e), e.remoteStore.remoteSyncer.rejectFailedWrite = qs.bind(null, e), 
    e
    /**
 * Loads a Firestore bundle into the SDK. The returned promise resolves when
 * the bundle finished loading.
 *
 * @param syncEngine - SyncEngine to use.
 * @param bundleReader - Bundle to load into the SDK.
 * @param task - LoadBundleTask used to update the loading progress to public API.
 */;
}

function au(t, e, n) {
    var r = P(t);
    // eslint-disable-next-line @typescript-eslint/no-floating-promises
        (function(t, e, n) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var r, i, o, s, u, a;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(c) {
                switch (c.label) {
                  case 0:
                    return c.trys.push([ 0, 14, , 15 ]), [ 4 /*yield*/ , e.getMetadata() ];

                  case 1:
                    return r = c.sent(), [ 4 /*yield*/ , function(t, e) {
                        var n = P(t), r = En(e.createTime);
                        return n.persistence.runTransaction("hasNewerBundle", "readonly", (function(t) {
                            return n.Qe.getBundleMetadata(t, e.id);
                        })).then((function(t) {
                            return !!t && t.createTime.compareTo(r) >= 0;
                        }));
                    }(t.localStore, r) ];

                  case 2:
                    return c.sent() ? [ 4 /*yield*/ , e.close() ] : [ 3 /*break*/ , 4 ];

                  case 3:
                    return [ 2 /*return*/ , (c.sent(), void n._completeWith(function(t) {
                        return {
                            taskState: "Success",
                            documentsLoaded: t.totalDocuments,
                            bytesLoaded: t.totalBytes,
                            totalDocuments: t.totalDocuments,
                            totalBytes: t.totalBytes
                        };
                    }(r))) ];

                  case 4:
                    return n._updateProgress(_s(r)), i = new Es(r, t.localStore, e.R), [ 4 /*yield*/ , e.Lo() ];

                  case 5:
                    o = c.sent(), c.label = 6;

                  case 6:
                    return o ? [ 4 /*yield*/ , i.oo(o) ] : [ 3 /*break*/ , 10 ];

                  case 7:
                    return (s = c.sent()) && n._updateProgress(s), [ 4 /*yield*/ , e.Lo() ];

                  case 8:
                    o = c.sent(), c.label = 9;

                  case 9:
                    return [ 3 /*break*/ , 6 ];

                  case 10:
                    return [ 4 /*yield*/ , i.complete() ];

                  case 11:
                    // TODO(b/160876443): This currently raises snapshots with
                    // `fromCache=false` if users already listen to some queries and bundles
                    // has newer version.
                    return u = c.sent(), [ 4 /*yield*/ , Hs(t, u.wn, 
                    /* remoteEvent */ void 0) ];

                  case 12:
                    // Save metadata, so loading the same bundle will skip.
                    // TODO(b/160876443): This currently raises snapshots with
                    // `fromCache=false` if users already listen to some queries and bundles
                    // has newer version.
                    return c.sent(), [ 4 /*yield*/ , function(t, e) {
                        var n = P(t);
                        return n.persistence.runTransaction("Save bundle", "readwrite", (function(t) {
                            return n.Qe.saveBundleMetadata(t, e);
                        }));
                    }(t.localStore, r) ];

                  case 13:
                    // TODO(b/160876443): This currently raises snapshots with
                    // `fromCache=false` if users already listen to some queries and bundles
                    // has newer version.
                    // Save metadata, so loading the same bundle will skip.
                    return c.sent(), n._completeWith(u.progress), [ 3 /*break*/ , 15 ];

                  case 14:
                    return C("SyncEngine", "Loading bundle failed with " + (a = c.sent())), n._failWith(a), 
                    [ 3 /*break*/ , 15 ];

                  case 15:
                    return [ 2 /*return*/ ];
                }
            }));
        }));
    }
    /**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    /**
 * Provides all components needed for Firestore with in-memory persistence.
 * Uses EagerGC garbage collection.
 */)(r, e, n).then((function() {
        r.sharedClientState.notifyBundleLoaded();
    }));
}

var cu = /** @class */ function() {
    function t() {
        this.synchronizeTabs = !1;
    }
    return t.prototype.initialize = function(t) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                switch (e.label) {
                  case 0:
                    return this.R = ko(t.databaseInfo.databaseId), this.sharedClientState = this.Bo(t), 
                    this.persistence = this.qo(t), [ 4 /*yield*/ , this.persistence.start() ];

                  case 1:
                    return e.sent(), this.gcScheduler = this.Uo(t), this.localStore = this.Qo(t), [ 2 /*return*/ ];
                }
            }));
        }));
    }, t.prototype.Uo = function(t) {
        return null;
    }, t.prototype.Qo = function(t) {
        return qi(this.persistence, new Mi, t.initialUser, this.R);
    }, t.prototype.qo = function(t) {
        return new uo(co.bs, this.R);
    }, t.prototype.Bo = function(t) {
        return new Io;
    }, t.prototype.terminate = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                switch (t.label) {
                  case 0:
                    return this.gcScheduler && this.gcScheduler.stop(), [ 4 /*yield*/ , this.sharedClientState.shutdown() ];

                  case 1:
                    return t.sent(), [ 4 /*yield*/ , this.persistence.shutdown() ];

                  case 2:
                    return t.sent(), [ 2 /*return*/ ];
                }
            }));
        }));
    }, t;
}(), hu = /** @class */ function(t) {
    function e(e, n, r) {
        var i = this;
        return (i = t.call(this) || this).Ko = e, i.cacheSizeBytes = n, i.forceOwnership = r, 
        i.synchronizeTabs = !1, i;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.initialize = function(e) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                switch (n.label) {
                  case 0:
                    return [ 4 /*yield*/ , t.prototype.initialize.call(this, e) ];

                  case 1:
                    return n.sent(), [ 4 /*yield*/ , Xi(this.localStore) ];

                  case 2:
                    return n.sent(), [ 4 /*yield*/ , this.Ko.initialize(this, e) ];

                  case 3:
                    // Enqueue writes from a previous session
                    return n.sent(), [ 4 /*yield*/ , uu(this.Ko.syncEngine) ];

                  case 4:
                    // Enqueue writes from a previous session
                    return n.sent(), [ 4 /*yield*/ , Jo(this.Ko.remoteStore) ];

                  case 5:
                    return n.sent(), [ 2 /*return*/ ];
                }
            }));
        }));
    }, e.prototype.Qo = function(t) {
        return qi(this.persistence, new Mi, t.initialUser, this.R);
    }, e.prototype.Uo = function(t) {
        var e = this.persistence.referenceDelegate.garbageCollector;
        return new vi(e, t.asyncQueue);
    }, e.prototype.qo = function(t) {
        var e = Li(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey), n = void 0 !== this.cacheSizeBytes ? ti.withCacheSize(this.cacheSizeBytes) : ti.DEFAULT;
        return new xi(this.synchronizeTabs, e, t.clientId, n, t.asyncQueue, Do(), Ao(), this.R, this.sharedClientState, !!this.forceOwnership);
    }, e.prototype.Bo = function(t) {
        return new Io;
    }, e;
}(cu), fu = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this, e, n, /* forceOwnership= */ !1) || this).Ko = e, r.cacheSizeBytes = n, 
        r.synchronizeTabs = !0, r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.initialize = function(e) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var n, r = this;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
                switch (i.label) {
                  case 0:
                    return [ 4 /*yield*/ , t.prototype.initialize.call(this, e) ];

                  case 1:
                    return i.sent(), n = this.Ko.syncEngine, this.sharedClientState instanceof bo ? (this.sharedClientState.syncEngine = {
                        ui: Zs.bind(null, n),
                        ai: iu.bind(null, n),
                        hi: ou.bind(null, n),
                        fn: ru.bind(null, n),
                        ci: Js.bind(null, n)
                    }, [ 4 /*yield*/ , this.sharedClientState.start() ]) : [ 3 /*break*/ , 3 ];

                  case 2:
                    i.sent(), i.label = 3;

                  case 3:
                    // NOTE: This will immediately call the listener, so we make sure to
                    // set it after localStore / remoteStore are started.
                    return [ 4 /*yield*/ , this.persistence.He((function(t) {
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(r, void 0, void 0, (function() {
                            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                                switch (e.label) {
                                  case 0:
                                    return [ 4 /*yield*/ , tu(this.Ko.syncEngine, t) ];

                                  case 1:
                                    return e.sent(), this.gcScheduler && (t && !this.gcScheduler.started ? this.gcScheduler.start(this.localStore) : t || this.gcScheduler.stop()), 
                                    [ 2 /*return*/ ];
                                }
                            }));
                        }));
                    })) ];

                  case 4:
                    // NOTE: This will immediately call the listener, so we make sure to
                    // set it after localStore / remoteStore are started.
                    return i.sent(), [ 2 /*return*/ ];
                }
            }));
        }));
    }, e.prototype.Bo = function(t) {
        var e = Do();
        if (!bo.yt(e)) throw new N(S.UNIMPLEMENTED, "IndexedDB persistence is only available on platforms that support LocalStorage.");
        var n = Li(t.databaseInfo.databaseId, t.databaseInfo.persistenceKey);
        return new bo(e, t.asyncQueue, n, t.clientId, t.initialUser);
    }, e;
}(hu), lu = /** @class */ function() {
    function t() {}
    return t.prototype.initialize = function(t, e) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var n = this;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
                switch (r.label) {
                  case 0:
                    return this.localStore ? [ 3 /*break*/ , 2 ] : (this.localStore = t.localStore, 
                    this.sharedClientState = t.sharedClientState, this.datastore = this.createDatastore(e), 
                    this.remoteStore = this.createRemoteStore(e), this.eventManager = this.createEventManager(e), 
                    this.syncEngine = this.createSyncEngine(e, 
                    /* startAsPrimary=*/ !t.synchronizeTabs), this.sharedClientState.onlineStateHandler = function(t) {
                        return Fs(n.syncEngine, t, 1 /* SharedClientState */);
                    }, this.remoteStore.remoteSyncer.handleCredentialChange = Ys.bind(null, this.syncEngine), 
                    [ 4 /*yield*/ , os(this.remoteStore, this.syncEngine.isPrimaryClient) ]);

                  case 1:
                    r.sent(), r.label = 2;

                  case 2:
                    return [ 2 /*return*/ ];
                }
            }));
        }));
    }, t.prototype.createEventManager = function(t) {
        return new ps;
    }, t.prototype.createDatastore = function(t) {
        var e, n = ko(t.databaseInfo.databaseId), r = (e = t.databaseInfo, new No(e));
        /** Return the Platform-specific connectivity monitor. */ return function(t, e, n) {
            return new Oo(t, e, n);
        }(t.credentials, r, n);
    }, t.prototype.createRemoteStore = function(t) {
        var e, n, r, i, o, s = this;
        return e = this.localStore, n = this.datastore, r = t.asyncQueue, i = function(t) {
            return Fs(s.syncEngine, t, 0 /* RemoteStore */);
        }, o = Eo.yt() ? new Eo : new To, new Fo(e, n, r, i, o);
    }, t.prototype.createSyncEngine = function(t, e) {
        return function(t, e, n, 
        // PORTING NOTE: Manages state synchronization in multi-tab environments.
        r, i, o, s) {
            var u = new xs(t, e, n, r, i, o);
            return s && (u.$o = !0), u;
        }(this.localStore, this.remoteStore, this.eventManager, this.sharedClientState, t.initialUser, t.maxConcurrentLimboResolutions, e);
    }, t.prototype.terminate = function() {
        return function(t) {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                var e;
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                    switch (n.label) {
                      case 0:
                        return e = P(t), k("RemoteStore", "RemoteStore shutting down."), e.Or.add(5 /* Shutdown */), 
                        [ 4 /*yield*/ , Vo(e) ];

                      case 1:
                        return n.sent(), e.Lr.shutdown(), 
                        // Set the OnlineState to Unknown (rather than Offline) to avoid potentially
                        // triggering spurious listener events with cached data, etc.
                        e.Br.set("Unknown" /* Unknown */), [ 2 /*return*/ ];
                    }
                }));
            }));
        }(this.remoteStore);
    }, t;
}();

/**
 * Provides all components needed for Firestore with IndexedDB persistence.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * How many bytes to read each time when `ReadableStreamReader.read()` is
 * called. Only applicable for byte streams that we control (e.g. those backed
 * by an UInt8Array).
 */
/**
 * Builds a `ByteStreamReader` from a UInt8Array.
 * @param source - The data source to use.
 * @param bytesPerRead - How many bytes each `read()` from the returned reader
 *        will read.
 */
function du(t, e) {
    void 0 === e && (e = 10240);
    var n = 0;
    return {
        read: function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                var r;
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
                    return n < t.byteLength ? (r = {
                        value: t.slice(n, n + e),
                        done: !1
                    }, [ 2 /*return*/ , (n += e, r) ]) : [ 2 /*return*/ , {
                        done: !0
                    } ];
                }));
            }));
        },
        cancel: function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                    return [ 2 /*return*/ ];
                }));
            }));
        },
        releaseLock: function() {},
        closed: Promise.reject("unimplemented")
    };
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * On web, a `ReadableStream` is wrapped around by a `ByteStreamReader`.
 */
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * A wrapper implementation of Observer<T> that will dispatch events
 * asynchronously. To allow immediate silencing, a mute call is added which
 * causes events scheduled to no longer be raised.
 */ var pu = /** @class */ function() {
    function t(t) {
        this.observer = t, 
        /**
             * When set to true, will not raise future events. Necessary to deal with
             * async detachment of listener.
             */
        this.muted = !1;
    }
    return t.prototype.next = function(t) {
        this.observer.next && this.jo(this.observer.next, t);
    }, t.prototype.error = function(t) {
        this.observer.error ? this.jo(this.observer.error, t) : console.error("Uncaught Error in snapshot listener:", t);
    }, t.prototype.Wo = function() {
        this.muted = !0;
    }, t.prototype.jo = function(t, e) {
        var n = this;
        this.muted || setTimeout((function() {
            n.muted || t(e);
        }), 0);
    }, t;
}(), yu = /** @class */ function() {
    function t(
    /** The reader to read from underlying binary bundle data source. */
    t, e) {
        var n = this;
        this.Go = t, this.R = e, 
        /** Cached bundle metadata. */
        this.metadata = new wr, 
        /**
             * Internal buffer to hold bundle content, accumulating incomplete element
             * content.
             */
        this.buffer = new Uint8Array, this.zo = new TextDecoder("utf-8"), 
        // Read the metadata (which is the first element).
        this.Ho().then((function(t) {
            t && t.io() ? n.metadata.resolve(t.payload.metadata) : n.metadata.reject(new Error("The first element of the bundle is not a metadata, it is\n             " + JSON.stringify(null == t ? void 0 : t.payload)));
        }), (function(t) {
            return n.metadata.reject(t);
        }));
    }
    return t.prototype.close = function() {
        return this.Go.cancel();
    }, t.prototype.getMetadata = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                return [ 2 /*return*/ , this.metadata.promise ];
            }));
        }));
    }, t.prototype.Lo = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                switch (t.label) {
                  case 0:
                    return [ 4 /*yield*/ , this.getMetadata() ];

                  case 1:
                    // Makes sure metadata is read before proceeding.
                    return [ 2 /*return*/ , (t.sent(), this.Ho()) ];
                }
            }));
        }));
    }, 
    /**
     * Reads from the head of internal buffer, and pulling more data from
     * underlying stream if a complete element cannot be found, until an
     * element(including the prefixed length and the JSON string) is found.
     *
     * Once a complete element is read, it is dropped from internal buffer.
     *
     * Returns either the bundled element, or null if we have reached the end of
     * the stream.
     */
    t.prototype.Ho = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var t, e, n, r;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
                switch (i.label) {
                  case 0:
                    return [ 4 /*yield*/ , this.Jo() ];

                  case 1:
                    return null === (t = i.sent()) ? [ 2 /*return*/ , null ] : (e = this.zo.decode(t), 
                    n = Number(e), isNaN(n) && this.Yo("length string (" + e + ") is not valid number"), 
                    [ 4 /*yield*/ , this.Xo(n) ]);

                  case 2:
                    return r = i.sent(), [ 2 /*return*/ , new Is(JSON.parse(r), t.length + n) ];
                }
            }));
        }));
    }, 
    /** First index of '{' from the underlying buffer. */ t.prototype.Zo = function() {
        return this.buffer.findIndex((function(t) {
            return t === "{".charCodeAt(0);
        }));
    }, 
    /**
     * Reads from the beginning of the internal buffer, until the first '{', and
     * return the content.
     *
     * If reached end of the stream, returns a null.
     */
    t.prototype.Jo = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var t, e;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                switch (n.label) {
                  case 0:
                    return this.Zo() < 0 ? [ 4 /*yield*/ , this.tc() ] : [ 3 /*break*/ , 3 ];

                  case 1:
                    if (n.sent()) return [ 3 /*break*/ , 3 ];
                    n.label = 2;

                  case 2:
                    return [ 3 /*break*/ , 0 ];

                  case 3:
                    // Broke out of the loop because underlying stream is closed, and there
                    // happens to be no more data to process.
                    return 0 === this.buffer.length ? [ 2 /*return*/ , null ] : (
                    // Broke out of the loop because underlying stream is closed, but still
                    // cannot find an open bracket.
                    (t = this.Zo()) < 0 && this.Yo("Reached the end of bundle when a length string is expected."), 
                    e = this.buffer.slice(0, t), [ 2 /*return*/ , (this.buffer = this.buffer.slice(t), 
                    e) ]);
                }
            }));
        }));
    }, 
    /**
     * Reads from a specified position from the internal buffer, for a specified
     * number of bytes, pulling more data from the underlying stream if needed.
     *
     * Returns a string decoded from the read bytes.
     */
    t.prototype.Xo = function(t) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var e;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                switch (n.label) {
                  case 0:
                    return this.buffer.length < t ? [ 4 /*yield*/ , this.tc() ] : [ 3 /*break*/ , 3 ];

                  case 1:
                    n.sent() && this.Yo("Reached the end of bundle when more is expected."), n.label = 2;

                  case 2:
                    return [ 3 /*break*/ , 0 ];

                  case 3:
                    // Update the internal buffer to drop the read json string.
                    return e = this.zo.decode(this.buffer.slice(0, t)), [ 2 /*return*/ , (this.buffer = this.buffer.slice(t), 
                    e) ];
                }
            }));
        }));
    }, t.prototype.Yo = function(t) {
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        throw this.Go.cancel(), new Error("Invalid bundle format: " + t);
    }, 
    /**
     * Pulls more data from underlying stream to internal buffer.
     * Returns a boolean indicating whether the stream is finished.
     */
    t.prototype.tc = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var t, e;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                switch (n.label) {
                  case 0:
                    return [ 4 /*yield*/ , this.Go.read() ];

                  case 1:
                    return (t = n.sent()).done || ((e = new Uint8Array(this.buffer.length + t.value.length)).set(this.buffer), 
                    e.set(t.value, this.buffer.length), this.buffer = e), [ 2 /*return*/ , t.done ];
                }
            }));
        }));
    }, t;
}(), vu = /** @class */ function() {
    function t(t) {
        this.datastore = t, 
        // The version of each document that was read during this transaction.
        this.readVersions = new Map, this.mutations = [], this.committed = !1, 
        /**
             * A deferred usage error that occurred previously in this transaction that
             * will cause the transaction to fail once it actually commits.
             */
        this.lastWriteError = null, 
        /**
             * Set of documents that have been written in the transaction.
             *
             * When there's more than one write to the same key in a transaction, any
             * writes after the first are handled differently.
             */
        this.writtenDocs = new Set;
    }
    return t.prototype.lookup = function(t) {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var e, n = this;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
                switch (r.label) {
                  case 0:
                    if (this.ensureCommitNotCalled(), this.mutations.length > 0) throw new N(S.INVALID_ARGUMENT, "Firestore transactions require all reads to be executed before all writes.");
                    return [ 4 /*yield*/ , function(t, e) {
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                            var n, r, i, o, s, u;
                            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(a) {
                                switch (a.label) {
                                  case 0:
                                    return n = P(t), r = xn(n.R) + "/documents", i = {
                                        documents: e.map((function(t) {
                                            return Nn(n.R, t);
                                        }))
                                    }, [ 4 /*yield*/ , n.$i("BatchGetDocuments", r, i) ];

                                  case 1:
                                    return o = a.sent(), s = new Map, o.forEach((function(t) {
                                        var e = function(t, e) {
                                            return "found" in e ? function(t, e) {
                                                O(!!e.found), e.found.name, e.found.updateTime;
                                                var n = Dn(t, e.found.name), r = En(e.found.updateTime), i = new Et({
                                                    mapValue: {
                                                        fields: e.found.fields
                                                    }
                                                });
                                                return St.newFoundDocument(n, r, i);
                                            }(t, e) : "missing" in e ? function(t, e) {
                                                O(!!e.missing), O(!!e.readTime);
                                                var n = Dn(t, e.missing), r = En(e.readTime);
                                                return St.newNoDocument(n, r);
                                            }(t, e) : L();
                                        }(n.R, t);
                                        s.set(e.key.toString(), e);
                                    })), u = [], [ 2 /*return*/ , (e.forEach((function(t) {
                                        var e = s.get(t.toString());
                                        O(!!e), u.push(e);
                                    })), u) ];
                                }
                            }));
                        }));
                    }(this.datastore, t) ];

                  case 1:
                    return [ 2 /*return*/ , ((e = r.sent()).forEach((function(t) {
                        return n.recordVersion(t);
                    })), e) ];
                }
            }));
        }));
    }, t.prototype.set = function(t, e) {
        this.write(e.toMutation(t, this.precondition(t))), this.writtenDocs.add(t.toString());
    }, t.prototype.update = function(t, e) {
        try {
            this.write(e.toMutation(t, this.preconditionForUpdate(t)));
        } catch (t) {
            this.lastWriteError = t;
        }
        this.writtenDocs.add(t.toString());
    }, t.prototype.delete = function(t) {
        this.write(new Be(t, this.precondition(t))), this.writtenDocs.add(t.toString());
    }, t.prototype.commit = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var t, e = this;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                switch (n.label) {
                  case 0:
                    if (this.ensureCommitNotCalled(), this.lastWriteError) throw this.lastWriteError;
                    return t = this.readVersions, 
                    // For each mutation, note that the doc was written.
                    this.mutations.forEach((function(e) {
                        t.delete(e.key.toString());
                    })), 
                    // For each document that was read but not written to, we want to perform
                    // a `verify` operation.
                    t.forEach((function(t, n) {
                        var r = at.fromPath(n);
                        e.mutations.push(new je(r, e.precondition(r)));
                    })), [ 4 /*yield*/ , function(t, e) {
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                            var n, r, i;
                            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
                                switch (o.label) {
                                  case 0:
                                    return n = P(t), r = xn(n.R) + "/documents", i = {
                                        writes: e.map((function(t) {
                                            return On(n.R, t);
                                        }))
                                    }, [ 4 /*yield*/ , n.Ni("Commit", r, i) ];

                                  case 1:
                                    return o.sent(), [ 2 /*return*/ ];
                                }
                            }));
                        }));
                    }(this.datastore, this.mutations) ];

                  case 1:
                    // For each mutation, note that the doc was written.
                    return n.sent(), this.committed = !0, [ 2 /*return*/ ];
                }
            }));
        }));
    }, t.prototype.recordVersion = function(t) {
        var e;
        if (t.isFoundDocument()) e = t.version; else {
            if (!t.isNoDocument()) throw L();
            // For deleted docs, we must use baseVersion 0 when we overwrite them.
                        e = j.min();
        }
        var n = this.readVersions.get(t.key.toString());
        if (n) {
            if (!e.isEqual(n)) 
            // This transaction will fail no matter what.
            throw new N(S.ABORTED, "Document version changed between two reads.");
        } else this.readVersions.set(t.key.toString(), e);
    }, 
    /**
     * Returns the version of this document when it was read in this transaction,
     * as a precondition, or no precondition if it was not read.
     */
    t.prototype.precondition = function(t) {
        var e = this.readVersions.get(t.toString());
        return !this.writtenDocs.has(t.toString()) && e ? Ne.updateTime(e) : Ne.none();
    }, 
    /**
     * Returns the precondition for a document if the operation is an update.
     */
    t.prototype.preconditionForUpdate = function(t) {
        var e = this.readVersions.get(t.toString());
        // The first time a document is written, we want to take into account the
        // read time and existence
                if (!this.writtenDocs.has(t.toString()) && e) {
            if (e.isEqual(j.min())) 
            // The document doesn't exist, so fail the transaction.
            // This has to be validated locally because you can't send a
            // precondition that a document does not exist without changing the
            // semantics of the backend write to be an insert. This is the reverse
            // of what we want, since we want to assert that the document doesn't
            // exist but then send the update and have it fail. Since we can't
            // express that to the backend, we have to validate locally.
            // Note: this can change once we can send separate verify writes in the
            // transaction.
            throw new N(S.INVALID_ARGUMENT, "Can't update a document that doesn't exist.");
            // Document exists, base precondition on document update time.
                        return Ne.updateTime(e);
        }
        // Document was not read, so we just use the preconditions for a blind
        // update.
                return Ne.exists(!0);
    }, t.prototype.write = function(t) {
        this.ensureCommitNotCalled(), this.mutations.push(t);
    }, t.prototype.ensureCommitNotCalled = function() {}, t;
}(), mu = /** @class */ function() {
    function t(t, e, n, r) {
        this.asyncQueue = t, this.datastore = e, this.updateFunction = n, this.deferred = r, 
        this.ec = 5, this.Zi = new xo(this.asyncQueue, "transaction_retry" /* TransactionRetry */)
        /** Runs the transaction and sets the result on deferred. */;
    }
    return t.prototype.run = function() {
        this.nc();
    }, t.prototype.nc = function() {
        var t = this;
        this.Zi.ji((function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(t, void 0, void 0, (function() {
                var t, e, n = this;
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
                    return t = new vu(this.datastore), (e = this.sc(t)) && e.then((function(e) {
                        n.asyncQueue.enqueueAndForget((function() {
                            return t.commit().then((function() {
                                n.deferred.resolve(e);
                            })).catch((function(t) {
                                n.ic(t);
                            }));
                        }));
                    })).catch((function(t) {
                        n.ic(t);
                    })), [ 2 /*return*/ ];
                }));
            }));
        }));
    }, t.prototype.sc = function(t) {
        try {
            var e = this.updateFunction(t);
            return !ot(e) && e.catch && e.then ? e : (this.deferred.reject(Error("Transaction callback must return a Promise")), 
            null);
        } catch (t) {
            // Do not retry errors thrown by user provided updateFunction.
            return this.deferred.reject(t), null;
        }
    }, t.prototype.ic = function(t) {
        var e = this;
        this.ec > 0 && this.rc(t) ? (this.ec -= 1, this.asyncQueue.enqueueAndForget((function() {
            return e.nc(), Promise.resolve();
        }))) : this.deferred.reject(t);
    }, t.prototype.rc = function(t) {
        if ("FirebaseError" === t.name) {
            // In transactions, the backend will fail outdated reads with FAILED_PRECONDITION and
            // non-matching document versions with ABORTED. These errors should be retried.
            var e = t.code;
            return "aborted" === e || "failed-precondition" === e || !Ge(e);
        }
        return !1;
    }, t;
}(), gu = /** @class */ function() {
    function t(t, 
    /**
     * Asynchronous queue responsible for all of our internal processing. When
     * we get incoming work from the user (via public API) or the network
     * (incoming GRPC messages), we should always schedule onto this queue.
     * This ensures all of our work is properly serialized (e.g. we don't
     * start processing a new operation while the previous one is waiting for
     * an async I/O to complete).
     */
    e, n) {
        var r = this;
        this.credentials = t, this.asyncQueue = e, this.databaseInfo = n, this.user = ho.UNAUTHENTICATED, 
        this.clientId = M.u(), this.credentialListener = function() {
            return Promise.resolve();
        }, this.credentials.setChangeListener(e, (function(t) {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(r, void 0, void 0, (function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                    switch (e.label) {
                      case 0:
                        return k("FirestoreClient", "Received user=", t.uid), [ 4 /*yield*/ , this.credentialListener(t) ];

                      case 1:
                        return e.sent(), this.user = t, [ 2 /*return*/ ];
                    }
                }));
            }));
        }));
    }
    return t.prototype.getConfiguration = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                return [ 2 /*return*/ , {
                    asyncQueue: this.asyncQueue,
                    databaseInfo: this.databaseInfo,
                    clientId: this.clientId,
                    credentials: this.credentials,
                    initialUser: this.user,
                    maxConcurrentLimboResolutions: 100
                } ];
            }));
        }));
    }, t.prototype.setCredentialChangeListener = function(t) {
        this.credentialListener = t;
    }, 
    /**
     * Checks that the client has not been terminated. Ensures that other methods on
     * this class cannot be called after the client is terminated.
     */
    t.prototype.verifyNotTerminated = function() {
        if (this.asyncQueue.isShuttingDown) throw new N(S.FAILED_PRECONDITION, "The client has already been terminated.");
    }, t.prototype.terminate = function() {
        var t = this;
        this.asyncQueue.enterRestrictedMode();
        var e = new wr;
        return this.asyncQueue.enqueueAndForgetEvenWhileRestricted((function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(t, void 0, void 0, (function() {
                var t, n;
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
                    switch (r.label) {
                      case 0:
                        return r.trys.push([ 0, 5, , 6 ]), this.onlineComponents ? [ 4 /*yield*/ , this.onlineComponents.terminate() ] : [ 3 /*break*/ , 2 ];

                      case 1:
                        r.sent(), r.label = 2;

                      case 2:
                        return this.offlineComponents ? [ 4 /*yield*/ , this.offlineComponents.terminate() ] : [ 3 /*break*/ , 4 ];

                      case 3:
                        r.sent(), r.label = 4;

                      case 4:
                        // `removeChangeListener` must be called after shutting down the
                        // RemoteStore as it will prevent the RemoteStore from retrieving
                        // auth tokens.
                        return this.credentials.removeChangeListener(), e.resolve(), [ 3 /*break*/ , 6 ];

                      case 5:
                        return t = r.sent(), n = cs(t, "Failed to shutdown persistence"), e.reject(n), [ 3 /*break*/ , 6 ];

                      case 6:
                        return [ 2 /*return*/ ];
                    }
                }));
            }));
        })), e.promise;
    }, t;
}();

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A class representing a bundle.
 *
 * Takes a bundle stream or buffer, and presents abstractions to read bundled
 * elements out of the underlying content.
 */ function wu(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r, i = this;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
            switch (o.label) {
              case 0:
                return t.asyncQueue.verifyOperationInProgress(), k("FirestoreClient", "Initializing OfflineComponentProvider"), 
                [ 4 /*yield*/ , t.getConfiguration() ];

              case 1:
                return n = o.sent(), [ 4 /*yield*/ , e.initialize(n) ];

              case 2:
                return o.sent(), r = n.initialUser, t.setCredentialChangeListener((function(t) {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(i, void 0, void 0, (function() {
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                            switch (n.label) {
                              case 0:
                                return r.isEqual(t) ? [ 3 /*break*/ , 2 ] : [ 4 /*yield*/ , Ui(e.localStore, t) ];

                              case 1:
                                n.sent(), r = t, n.label = 2;

                              case 2:
                                return [ 2 /*return*/ ];
                            }
                        }));
                    }));
                })), 
                // When a user calls clearPersistence() in one client, all other clients
                // need to be terminated to allow the delete to succeed.
                e.persistence.setDatabaseDeletedListener((function() {
                    return t.terminate();
                })), t.offlineComponents = e, [ 2 /*return*/ ];
            }
        }));
    }));
}

function bu(t, e) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var n, r;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
            switch (i.label) {
              case 0:
                return t.asyncQueue.verifyOperationInProgress(), [ 4 /*yield*/ , Iu(t) ];

              case 1:
                return n = i.sent(), k("FirestoreClient", "Initializing OnlineComponentProvider"), 
                [ 4 /*yield*/ , t.getConfiguration() ];

              case 2:
                return r = i.sent(), [ 4 /*yield*/ , e.initialize(n, r) ];

              case 3:
                return i.sent(), 
                // The CredentialChangeListener of the online component provider takes
                // precedence over the offline component provider.
                t.setCredentialChangeListener((function(t) {
                    return function(t, e) {
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                            var n, r;
                            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
                                switch (i.label) {
                                  case 0:
                                    return (n = P(t)).asyncQueue.verifyOperationInProgress(), k("RemoteStore", "RemoteStore received new credentials"), 
                                    r = Qo(n), 
                                    // Tear down and re-create our network streams. This will ensure we get a
                                    // fresh auth token for the new user and re-fill the write pipeline with
                                    // new mutations from the LocalStore (since mutations are per-user).
                                    n.Or.add(3 /* CredentialChange */), [ 4 /*yield*/ , Vo(n) ];

                                  case 1:
                                    return i.sent(), r && 
                                    // Don't set the network status to Unknown if we are offline.
                                    n.Br.set("Unknown" /* Unknown */), [ 4 /*yield*/ , n.remoteSyncer.handleCredentialChange(e) ];

                                  case 2:
                                    return i.sent(), n.Or.delete(3 /* CredentialChange */), [ 4 /*yield*/ , Mo(n) ];

                                  case 3:
                                    // Tear down and re-create our network streams. This will ensure we get a
                                    // fresh auth token for the new user and re-fill the write pipeline with
                                    // new mutations from the LocalStore (since mutations are per-user).
                                    return i.sent(), [ 2 /*return*/ ];
                                }
                            }));
                        }));
                    }(e.remoteStore, t);
                })), t.onlineComponents = e, [ 2 /*return*/ ];
            }
        }));
    }));
}

function Iu(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
            switch (e.label) {
              case 0:
                return t.offlineComponents ? [ 3 /*break*/ , 2 ] : (k("FirestoreClient", "Using default OfflineComponentProvider"), 
                [ 4 /*yield*/ , wu(t, new cu) ]);

              case 1:
                e.sent(), e.label = 2;

              case 2:
                return [ 2 /*return*/ , t.offlineComponents ];
            }
        }));
    }));
}

function Tu(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
            switch (e.label) {
              case 0:
                return t.onlineComponents ? [ 3 /*break*/ , 2 ] : (k("FirestoreClient", "Using default OnlineComponentProvider"), 
                [ 4 /*yield*/ , bu(t, new lu) ]);

              case 1:
                e.sent(), e.label = 2;

              case 2:
                return [ 2 /*return*/ , t.onlineComponents ];
            }
        }));
    }));
}

function Eu(t) {
    return Iu(t).then((function(t) {
        return t.persistence;
    }));
}

function _u(t) {
    return Iu(t).then((function(t) {
        return t.localStore;
    }));
}

function Su(t) {
    return Tu(t).then((function(t) {
        return t.remoteStore;
    }));
}

function Nu(t) {
    return Tu(t).then((function(t) {
        return t.syncEngine;
    }));
}

function Du(t) {
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
        var e, n;
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
            switch (r.label) {
              case 0:
                return [ 4 /*yield*/ , Tu(t) ];

              case 1:
                return e = r.sent(), [ 2 /*return*/ , ((n = e.eventManager).onListen = Cs.bind(null, e.syncEngine), 
                n.onUnlisten = Ls.bind(null, e.syncEngine), n) ];
            }
        }));
    }));
}

/** Enables the network connection and re-enqueues all pending operations. */ function Au(t, e, n) {
    var r = this;
    void 0 === n && (n = {});
    var i = new wr;
    return t.asyncQueue.enqueueAndForget((function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(r, void 0, void 0, (function() {
            var r;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
                switch (o.label) {
                  case 0:
                    return r = function(t, e, n, r, i) {
                        var o = new pu({
                            next: function(o) {
                                // Remove query first before passing event to user to avoid
                                // user actions affecting the now stale query.
                                e.enqueueAndForget((function() {
                                    return vs(t, s);
                                }));
                                var u = o.docs.has(n);
                                !u && o.fromCache ? 
                                // TODO(dimond): If we're online and the document doesn't
                                // exist then we resolve with a doc.exists set to false. If
                                // we're offline however, we reject the Promise in this
                                // case. Two options: 1) Cache the negative response from
                                // the server so we can deliver that even when you're
                                // offline 2) Actually reject the Promise in the online case
                                // if the document doesn't exist.
                                i.reject(new N(S.UNAVAILABLE, "Failed to get document because the client is offline.")) : u && o.fromCache && r && "server" === r.source ? i.reject(new N(S.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)')) : i.resolve(o);
                            },
                            error: function(t) {
                                return i.reject(t);
                            }
                        }), s = new bs(Ht(n.path), o, {
                            includeMetadataChanges: !0,
                            so: !0
                        });
                        return ys(t, s);
                    }, [ 4 /*yield*/ , Du(t) ];

                  case 1:
                    return [ 2 /*return*/ , r.apply(void 0, [ o.sent(), t.asyncQueue, e, n, i ]) ];
                }
            }));
        }));
    })), i.promise;
}

function ku(t, e, n) {
    var r = this;
    void 0 === n && (n = {});
    var i = new wr;
    return t.asyncQueue.enqueueAndForget((function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(r, void 0, void 0, (function() {
            var r;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
                switch (o.label) {
                  case 0:
                    return r = function(t, e, n, r, i) {
                        var o = new pu({
                            next: function(n) {
                                // Remove query first before passing event to user to avoid
                                // user actions affecting the now stale query.
                                e.enqueueAndForget((function() {
                                    return vs(t, s);
                                })), n.fromCache && "server" === r.source ? i.reject(new N(S.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)')) : i.resolve(n);
                            },
                            error: function(t) {
                                return i.reject(t);
                            }
                        }), s = new bs(n, o, {
                            includeMetadataChanges: !0,
                            so: !0
                        });
                        return ys(t, s);
                    }, [ 4 /*yield*/ , Du(t) ];

                  case 1:
                    return [ 2 /*return*/ , r.apply(void 0, [ o.sent(), t.asyncQueue, e, n, i ]) ];
                }
            }));
        }));
    })), i.promise;
}

var xu = 
/**
     * Constructs a DatabaseInfo using the provided host, databaseId and
     * persistenceKey.
     *
     * @param databaseId - The database to use.
     * @param appId - The Firebase App Id.
     * @param persistenceKey - A unique identifier for this Firestore's local
     * storage (used in conjunction with the databaseId).
     * @param host - The Firestore backend host to connect to.
     * @param ssl - Whether to use SSL when connecting.
     * @param forceLongPolling - Whether to use the forceLongPolling option
     * when using WebChannel as the network transport.
     * @param autoDetectLongPolling - Whether to use the detectBufferingProxy
     * option when using WebChannel as the network transport.
     * @param useFetchStreams Whether to use the Fetch API instead of
     * XMLHTTPRequest
     */
function(t, e, n, r, i, o, s, u) {
    this.databaseId = t, this.appId = e, this.persistenceKey = n, this.host = r, this.ssl = i, 
    this.forceLongPolling = o, this.autoDetectLongPolling = s, this.useFetchStreams = u;
}, Cu = /** @class */ function() {
    function t(t, e) {
        this.projectId = t, this.database = e || "(default)";
    }
    return Object.defineProperty(t.prototype, "isDefaultDatabase", {
        get: function() {
            return "(default)" === this.database;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.isEqual = function(e) {
        return e instanceof t && e.projectId === this.projectId && e.database === this.database;
    }, t;
}(), Ru = new Map, Lu = function(t, e) {
    this.user = e, this.type = "OAuth", this.authHeaders = {}, 
    // Set the headers using Object Literal notation to avoid minification
    this.authHeaders.Authorization = "Bearer " + t;
}, Ou = /** @class */ function() {
    function t() {
        /**
         * Stores the listener registered with setChangeListener()
         * This isn't actually necessary since the UID never changes, but we use this
         * to verify the listen contract is adhered to in tests.
         */
        this.changeListener = null;
    }
    return t.prototype.getToken = function() {
        return Promise.resolve(null);
    }, t.prototype.invalidateToken = function() {}, t.prototype.setChangeListener = function(t, e) {
        this.changeListener = e, 
        // Fire with initial user.
        t.enqueueRetryable((function() {
            return e(ho.UNAUTHENTICATED);
        }));
    }, t.prototype.removeChangeListener = function() {
        this.changeListener = null;
    }, t;
}(), Pu = /** @class */ function() {
    function t(t) {
        this.token = t, 
        /**
             * Stores the listener registered with setChangeListener()
             * This isn't actually necessary since the UID never changes, but we use this
             * to verify the listen contract is adhered to in tests.
             */
        this.changeListener = null;
    }
    return t.prototype.getToken = function() {
        return Promise.resolve(this.token);
    }, t.prototype.invalidateToken = function() {}, t.prototype.setChangeListener = function(t, e) {
        var n = this;
        this.changeListener = e, 
        // Fire with initial user.
        t.enqueueRetryable((function() {
            return e(n.token.user);
        }));
    }, t.prototype.removeChangeListener = function() {
        this.changeListener = null;
    }, t;
}(), Fu = /** @class */ function() {
    function t(t) {
        var e = this;
        /** Tracks the current User. */        this.currentUser = ho.UNAUTHENTICATED, 
        /** Promise that allows blocking on the first `tokenListener` event. */
        this.oc = new wr, 
        /**
             * Counter used to detect if the token changed while a getToken request was
             * outstanding.
             */
        this.cc = 0, 
        /** The listener registered with setChangeListener(). */
        this.changeListener = function() {
            return Promise.resolve();
        }, this.uc = !1, this.forceRefresh = !1, this.auth = null, this.asyncQueue = null, 
        this.ac = function() {
            e.cc++, e.currentUser = e.hc(), e.oc.resolve(), e.uc && e.asyncQueue.enqueueRetryable((function() {
                return e.changeListener(e.currentUser);
            }));
        };
        var n = function(t) {
            k("FirebaseCredentialsProvider", "Auth detected"), e.auth = t, e.lc(), e.auth.addAuthTokenListener(e.ac);
        };
        t.onInit((function(t) {
            return n(t);
        })), 
        // Our users can initialize Auth right after Firestore, so we give it
        // a chance to register itself with the component framework before we
        // determine whether to start up in unauthenticated mode.
        setTimeout((function() {
            if (!e.auth) {
                var r = t.getImmediate({
                    optional: !0
                });
                r ? n(r) : e.uc && (
                // If auth is still not available, invoke the change listener once
                // with null token
                k("FirebaseCredentialsProvider", "Auth not yet detected"), e.asyncQueue.enqueueRetryable((function() {
                    return e.changeListener(e.currentUser);
                })));
            }
        }), 0);
    }
    return t.prototype.getToken = function() {
        var t = this, e = this.cc, n = this.forceRefresh;
        // Take note of the current value of the tokenCounter so that this method
        // can fail (with an ABORTED error) if there is a token change while the
        // request is outstanding.
                return this.forceRefresh = !1, this.auth ? this.auth.getToken(n).then((function(n) {
            // Cancel the request since the token changed while the request was
            // outstanding so the response is potentially for a previous user (which
            // user, we can't be sure).
            return t.cc !== e ? (k("FirebaseCredentialsProvider", "getToken aborted due to token change."), 
            t.getToken()) : n ? (O("string" == typeof n.accessToken), new Lu(n.accessToken, t.currentUser)) : null;
        })) : Promise.resolve(null);
    }, t.prototype.invalidateToken = function() {
        this.forceRefresh = !0;
    }, t.prototype.setChangeListener = function(t, e) {
        this.uc = !0, this.asyncQueue = t, this.changeListener = e;
    }, t.prototype.removeChangeListener = function() {
        this.auth && this.auth.removeAuthTokenListener(this.ac), this.changeListener = function() {
            return Promise.resolve();
        };
    }, 
    // Auth.getUid() can return null even with a user logged in. It is because
    // getUid() is synchronous, but the auth code populating Uid is asynchronous.
    // This method should only be called in the AuthTokenListener callback
    // to guarantee to get the actual user.
    t.prototype.hc = function() {
        var t = this.auth && this.auth.getUid();
        return O(null === t || "string" == typeof t), new ho(t);
    }, 
    /**
     * Blocks the AsyncQueue until the next user is available. This function also
     * invokes `this.changeListener` immediately once the token is available.
     */
    t.prototype.lc = function() {
        var t = this;
        this.uc && (this.uc = !1, // Prevent double-firing of the listener
        this.asyncQueue.enqueueRetryable((function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(t, void 0, void 0, (function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(t) {
                    switch (t.label) {
                      case 0:
                        return [ 4 /*yield*/ , this.oc.promise ];

                      case 1:
                        return t.sent(), [ 4 /*yield*/ , this.changeListener(this.currentUser) ];

                      case 2:
                        return t.sent(), this.uc = !0, [ 2 /*return*/ ];
                    }
                }));
            }));
        })));
    }, t;
}(), Mu = /** @class */ function() {
    function t(t, e, n) {
        this.fc = t, this.dc = e, this.wc = n, this.type = "FirstParty", this.user = ho.FIRST_PARTY;
    }
    return Object.defineProperty(t.prototype, "authHeaders", {
        get: function() {
            var t = {
                "X-Goog-AuthUser": this.dc
            }, e = this.fc.auth.getAuthHeaderValueForFirstParty([]);
            // Use array notation to prevent minification
                        return e && (t.Authorization = e), this.wc && (t["X-Goog-Iam-Authorization-Token"] = this.wc), 
            t;
        },
        enumerable: !1,
        configurable: !0
    }), t;
}(), Vu = /** @class */ function() {
    function t(t, e, n) {
        this.fc = t, this.dc = e, this.wc = n;
    }
    return t.prototype.getToken = function() {
        return Promise.resolve(new Mu(this.fc, this.dc, this.wc));
    }, t.prototype.setChangeListener = function(t, e) {
        // Fire with initial uid.
        t.enqueueRetryable((function() {
            return e(ho.FIRST_PARTY);
        }));
    }, t.prototype.removeChangeListener = function() {}, t.prototype.invalidateToken = function() {}, 
    t;
}();

/** The default database name for a project. */
/** Represents the database ID a Firestore client is associated with. */
/**
 * Builds a CredentialsProvider depending on the type of
 * the credentials passed in.
 */
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function qu(t, e, n) {
    if (!n) throw new N(S.INVALID_ARGUMENT, "Function " + t + "() cannot be called with an empty " + e + ".");
}

function Uu(t, e) {
    if (void 0 === e) return {
        merge: !1
    };
    if (void 0 !== e.mergeFields && void 0 !== e.merge) throw new N(S.INVALID_ARGUMENT, "Invalid options passed to function " + t + '(): You cannot specify both "merge" and "mergeFields".');
    return e;
}

/**
 * Validates that two boolean options are not set at the same time.
 */ function Bu(t, e, n, r) {
    if (!0 === e && !0 === r) throw new N(S.INVALID_ARGUMENT, t + " and " + n + " cannot be used together.");
}

/**
 * Validates that `path` refers to a document (indicated by the fact it contains
 * an even numbers of segments).
 */ function ju(t) {
    if (!at.isDocumentKey(t)) throw new N(S.INVALID_ARGUMENT, "Invalid document reference. Document references must have an even number of segments, but " + t + " has " + t.length + ".");
}

/**
 * Validates that `path` refers to a collection (indicated by the fact it
 * contains an odd numbers of segments).
 */ function Ku(t) {
    if (at.isDocumentKey(t)) throw new N(S.INVALID_ARGUMENT, "Invalid collection reference. Collection references must have an odd number of segments, but " + t + " has " + t.length + ".");
}

/**
 * Returns true if it's a non-null object without a custom prototype
 * (i.e. excludes Array, Date, etc.).
 */
/** Returns a string describing the type / value of the provided input. */ function Gu(t) {
    if (void 0 === t) return "undefined";
    if (null === t) return "null";
    if ("string" == typeof t) return t.length > 20 && (t = t.substring(0, 20) + "..."), 
    JSON.stringify(t);
    if ("number" == typeof t || "boolean" == typeof t) return "" + t;
    if ("object" == typeof t) {
        if (t instanceof Array) return "an array";
        var e = 
        /** Hacky method to try to get the constructor name for an object. */
        function(t) {
            if (t.constructor) {
                var e = /function\s+([^\s(]+)\s*\(/.exec(t.constructor.toString());
                if (e && e.length > 1) return e[1];
            }
            return null;
        }(t);
        return e ? "a custom " + e + " object" : "an object";
    }
    return "function" == typeof t ? "a function" : L();
}

function Qu(t, 
// eslint-disable-next-line @typescript-eslint/no-explicit-any
e) {
    if ("_delegate" in t && (
    // Unwrap Compat types
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    t = t._delegate), !(t instanceof e)) {
        if (e.name === t.constructor.name) throw new N(S.INVALID_ARGUMENT, "Type does not match the expected instance. Did you pass a reference from a different Firestore SDK?");
        var n = Gu(t);
        throw new N(S.INVALID_ARGUMENT, "Expected type '" + e.name + "', but it was: " + n);
    }
    return t;
}

function zu(t, e) {
    if (e <= 0) throw new N(S.INVALID_ARGUMENT, "Function " + t + "() requires a positive number, but it was: " + e + ".");
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// settings() defaults:
/**
 * A concrete type describing all the values that can be applied via a
 * user-supplied firestore.Settings object. This is a separate type so that
 * defaults can be supplied and the value can be checked for equality.
 */ var Wu = /** @class */ function() {
    function t(t) {
        var e;
        if (void 0 === t.host) {
            if (void 0 !== t.ssl) throw new N(S.INVALID_ARGUMENT, "Can't provide ssl option if host option is not set");
            this.host = "firestore.googleapis.com", this.ssl = !0;
        } else this.host = t.host, this.ssl = null === (e = t.ssl) || void 0 === e || e;
        if (this.credentials = t.credentials, this.ignoreUndefinedProperties = !!t.ignoreUndefinedProperties, 
        void 0 === t.cacheSizeBytes) this.cacheSizeBytes = 41943040; else {
            if (-1 !== t.cacheSizeBytes && t.cacheSizeBytes < 1048576) throw new N(S.INVALID_ARGUMENT, "cacheSizeBytes must be at least 1048576");
            this.cacheSizeBytes = t.cacheSizeBytes;
        }
        this.experimentalForceLongPolling = !!t.experimentalForceLongPolling, this.experimentalAutoDetectLongPolling = !!t.experimentalAutoDetectLongPolling, 
        this.useFetchStreams = !!t.useFetchStreams, Bu("experimentalForceLongPolling", t.experimentalForceLongPolling, "experimentalAutoDetectLongPolling", t.experimentalAutoDetectLongPolling);
    }
    return t.prototype.isEqual = function(t) {
        return this.host === t.host && this.ssl === t.ssl && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.experimentalForceLongPolling === t.experimentalForceLongPolling && this.experimentalAutoDetectLongPolling === t.experimentalAutoDetectLongPolling && this.ignoreUndefinedProperties === t.ignoreUndefinedProperties && this.useFetchStreams === t.useFetchStreams;
    }, t;
}(), Hu = /** @class */ function() {
    /** @hideconstructor */
    function t(t, e) {
        this.type = "firestore-lite", this._persistenceKey = "(lite)", this._settings = new Wu({}), 
        this._settingsFrozen = !1, t instanceof Cu ? (this._databaseId = t, this._credentials = new Ou) : (this._app = t, 
        this._databaseId = function(t) {
            if (!Object.prototype.hasOwnProperty.apply(t.options, [ "projectId" ])) throw new N(S.INVALID_ARGUMENT, '"projectId" not provided in firebase.initializeApp.');
            return new Cu(t.options.projectId);
        }(t), this._credentials = new Fu(e));
    }
    return Object.defineProperty(t.prototype, "app", {
        /**
         * The {@link @firebase/app#FirebaseApp} associated with this `Firestore` service
         * instance.
         */
        get: function() {
            if (!this._app) throw new N(S.FAILED_PRECONDITION, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
            return this._app;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "_initialized", {
        get: function() {
            return this._settingsFrozen;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "_terminated", {
        get: function() {
            return void 0 !== this._terminateTask;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype._setSettings = function(t) {
        if (this._settingsFrozen) throw new N(S.FAILED_PRECONDITION, "Firestore has already been started and its settings can no longer be changed. You can only modify settings before calling any other methods on a Firestore object.");
        this._settings = new Wu(t), void 0 !== t.credentials && (this._credentials = function(t) {
            if (!t) return new Ou;
            switch (t.type) {
              case "gapi":
                var e = t.client;
                // Make sure this really is a Gapi client.
                                return O(!("object" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty)), 
                new Vu(e, t.sessionIndex || "0", t.iamToken || null);

              case "provider":
                return t.client;

              default:
                throw new N(S.INVALID_ARGUMENT, "makeCredentialsProvider failed due to invalid credential type");
            }
        }(t.credentials));
    }, t.prototype._getSettings = function() {
        return this._settings;
    }, t.prototype._freezeSettings = function() {
        return this._settingsFrozen = !0, this._settings;
    }, t.prototype._delete = function() {
        return this._terminateTask || (this._terminateTask = this._terminate()), this._terminateTask;
    }, 
    /** Returns a JSON-serializable representation of this Firestore instance. */ t.prototype.toJSON = function() {
        return {
            app: this._app,
            databaseId: this._databaseId,
            settings: this._settings
        };
    }, 
    /**
     * Terminates all components used by this client. Subclasses can override
     * this method to clean up their own dependencies, but must also call this
     * method.
     *
     * Only ever called once.
     */
    t.prototype._terminate = function() {
        /**
 * Removes all components associated with the provided instance. Must be called
 * when the `Firestore` instance is terminated.
 */
        return t = this, (e = Ru.get(t)) && (k("ComponentProvider", "Removing Datastore"), 
        Ru.delete(t), e.terminate()), Promise.resolve();
        var t, e;
    }, t;
}(), Yu = /** @class */ function() {
    /** @hideconstructor */
    function t(t, 
    /**
     * If provided, the `FirestoreDataConverter` associated with this instance.
     */
    e, n) {
        this.converter = e, this._key = n, 
        /** The type of this Firestore reference. */
        this.type = "document", this.firestore = t;
    }
    return Object.defineProperty(t.prototype, "_path", {
        get: function() {
            return this._key.path;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "id", {
        /**
         * The document's identifier within its collection.
         */
        get: function() {
            return this._key.path.lastSegment();
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "path", {
        /**
         * A string representing the path of the referenced document (relative
         * to the root of the database).
         */
        get: function() {
            return this._key.path.canonicalString();
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "parent", {
        /**
         * The collection this `DocumentReference` belongs to.
         */
        get: function() {
            return new Xu(this.firestore, this.converter, this._key.path.popLast());
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.withConverter = function(e) {
        return new t(this.firestore, e, this._key);
    }, t;
}(), $u = /** @class */ function() {
    // This is the lite version of the Query class in the main SDK.
    /** @hideconstructor protected */
    function t(t, 
    /**
     * If provided, the `FirestoreDataConverter` associated with this instance.
     */
    e, n) {
        this.converter = e, this._query = n, 
        /** The type of this Firestore reference. */
        this.type = "query", this.firestore = t;
    }
    return t.prototype.withConverter = function(e) {
        return new t(this.firestore, e, this._query);
    }, t;
}(), Xu = /** @class */ function(t) {
    /** @hideconstructor */
    function e(e, n, r) {
        var i = this;
        return (i = t.call(this, e, n, Ht(r)) || this)._path = r, 
        /** The type of this Firestore reference. */
        i.type = "collection", i;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), Object.defineProperty(e.prototype, "id", {
        /** The collection's identifier. */ get: function() {
            return this._query.path.lastSegment();
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(e.prototype, "path", {
        /**
         * A string representing the path of the referenced collection (relative
         * to the root of the database).
         */
        get: function() {
            return this._query.path.canonicalString();
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(e.prototype, "parent", {
        /**
         * A reference to the containing `DocumentReference` if this is a
         * subcollection. If this isn't a subcollection, the reference is null.
         */
        get: function() {
            var t = this._path.popLast();
            return t.isEmpty() ? null : new Yu(this.firestore, 
            /* converter= */ null, new at(t));
        },
        enumerable: !1,
        configurable: !0
    }), e.prototype.withConverter = function(t) {
        return new e(this.firestore, t, this._path);
    }, e;
}($u);

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The Cloud Firestore service interface.
 *
 * Do not call this constructor directly. Instead, use {@link getFirestore}.
 */ function Ju(t, e) {
    for (var n, r = [], i = 2; i < arguments.length; i++) r[i - 2] = arguments[i];
    if (t = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(t), qu("collection", "path", e), t instanceof Hu) return Ku(n = W.fromString.apply(W, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ e ], r))), 
    new Xu(t, /* converter= */ null, n);
    if (!(t instanceof Yu || t instanceof Xu)) throw new N(S.INVALID_ARGUMENT, "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");
    return Ku(n = W.fromString.apply(W, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ t.path ], r)).child(W.fromString(e))), new Xu(t.firestore, 
    /* converter= */ null, n);
}

// TODO(firestorelite): Consider using ErrorFactory -
// https://github.com/firebase/firebase-js-sdk/blob/0131e1f/packages/util/src/errors.ts#L106
/**
 * Creates and returns a new `Query` instance that includes all documents in the
 * database that are contained in a collection or subcollection with the
 * given `collectionId`.
 *
 * @param firestore - A reference to the root Firestore instance.
 * @param collectionId - Identifies the collections to query over. Every
 * collection or subcollection with this ID as the last segment of its path
 * will be included. Cannot contain a slash.
 * @returns The created `Query`.
 */ function Zu(t, e) {
    for (var n, r = [], i = 2; i < arguments.length; i++) r[i - 2] = arguments[i];
    if (t = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(t), 
    // We allow omission of 'pathString' but explicitly prohibit passing in both
    // 'undefined' and 'null'.
    1 === arguments.length && (e = M.u()), qu("doc", "path", e), t instanceof Hu) return ju(n = W.fromString.apply(W, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ e ], r))), 
    new Yu(t, 
    /* converter= */ null, new at(n));
    if (!(t instanceof Yu || t instanceof Xu)) throw new N(S.INVALID_ARGUMENT, "Expected first argument to collection() to be a CollectionReference, a DocumentReference or FirebaseFirestore");
    return ju(n = t._path.child(W.fromString.apply(W, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ e ], r)))), new Yu(t.firestore, t instanceof Xu ? t.converter : null, new at(n));
}

/**
 * Returns true if the provided references are equal.
 *
 * @param left - A reference to compare.
 * @param right - A reference to compare.
 * @returns true if the references point to the same location in the same
 * Firestore database.
 */ function ta(t, e) {
    return t = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(t), e = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(e), (t instanceof Yu || t instanceof Xu) && (e instanceof Yu || e instanceof Xu) && t.firestore === e.firestore && t.path === e.path && t.converter === e.converter
    /**
 * Returns true if the provided queries point to the same collection and apply
 * the same constraints.
 *
 * @param left - A `Query` to compare.
 * @param right - A `Query` to compare.
 * @returns true if the references point to the same location in the same
 * Firestore database.
 */;
}

function ea(t, e) {
    return t = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(t), e = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(e), t instanceof $u && e instanceof $u && t.firestore === e.firestore && re(t._query, e._query) && t.converter === e.converter
    /**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */;
}

var na = /** @class */ function() {
    function t() {
        var t = this;
        // The last promise in the queue.
                this._c = Promise.resolve(), 
        // A list of retryable operations. Retryable operations are run in order and
        // retried with backoff.
        this.mc = [], 
        // Is this AsyncQueue being shut down? Once it is set to true, it will not
        // be changed again.
        this.yc = !1, 
        // Operations scheduled to be queued in the future. Operations are
        // automatically removed after they are run or canceled.
        this.gc = [], 
        // visible for testing
        this.Ec = null, 
        // Flag set while there's an outstanding AsyncQueue operation, used for
        // assertion sanity-checks.
        this.Tc = !1, 
        // List of TimerIds to fast-forward delays for.
        this.Ic = [], 
        // Backoff timer used to schedule retries for retryable operations
        this.Zi = new xo(this, "async_queue_retry" /* AsyncQueueRetry */), 
        // Visibility handler that triggers an immediate retry of all retryable
        // operations. Meant to speed up recovery when we regain file system access
        // after page comes into foreground.
        this.Ac = function() {
            var e = Ao();
            e && k("AsyncQueue", "Visibility state changed to " + e.visibilityState), t.Zi.Gi();
        };
        var e = Ao();
        e && "function" == typeof e.addEventListener && e.addEventListener("visibilitychange", this.Ac);
    }
    return Object.defineProperty(t.prototype, "isShuttingDown", {
        get: function() {
            return this.yc;
        },
        enumerable: !1,
        configurable: !0
    }), 
    /**
     * Adds a new operation to the queue without waiting for it to complete (i.e.
     * we ignore the Promise result).
     */
    t.prototype.enqueueAndForget = function(t) {
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.enqueue(t);
    }, t.prototype.enqueueAndForgetEvenWhileRestricted = function(t) {
        this.Rc(), 
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.bc(t);
    }, t.prototype.enterRestrictedMode = function() {
        if (!this.yc) {
            this.yc = !0;
            var t = Ao();
            t && "function" == typeof t.removeEventListener && t.removeEventListener("visibilitychange", this.Ac);
        }
    }, t.prototype.enqueue = function(t) {
        return this.Rc(), this.yc ? new Promise((function(t) {})) : this.bc(t);
    }, t.prototype.enqueueRetryable = function(t) {
        var e = this;
        this.enqueueAndForget((function() {
            return e.mc.push(t), e.vc();
        }));
    }, 
    /**
     * Runs the next operation from the retryable queue. If the operation fails,
     * reschedules with backoff.
     */
    t.prototype.vc = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var t, e = this;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                switch (n.label) {
                  case 0:
                    if (0 === this.mc.length) return [ 3 /*break*/ , 5 ];
                    n.label = 1;

                  case 1:
                    return n.trys.push([ 1, 3, , 4 ]), [ 4 /*yield*/ , this.mc[0]() ];

                  case 2:
                    return n.sent(), this.mc.shift(), this.Zi.reset(), [ 3 /*break*/ , 4 ];

                  case 3:
                    if (!Sr(t = n.sent())) throw t;
                    // Failure will be handled by AsyncQueue
                                        return k("AsyncQueue", "Operation failed with retryable error: " + t), 
                    [ 3 /*break*/ , 4 ];

                  case 4:
                    this.mc.length > 0 && 
                    // If there are additional operations, we re-schedule `retryNextOp()`.
                    // This is necessary to run retryable operations that failed during
                    // their initial attempt since we don't know whether they are already
                    // enqueued. If, for example, `op1`, `op2`, `op3` are enqueued and `op1`
                    // needs to  be re-run, we will run `op1`, `op1`, `op2` using the
                    // already enqueued calls to `retryNextOp()`. `op3()` will then run in the
                    // call scheduled here.
                    // Since `backoffAndRun()` cancels an existing backoff and schedules a
                    // new backoff on every call, there is only ever a single additional
                    // operation in the queue.
                    this.Zi.ji((function() {
                        return e.vc();
                    })), n.label = 5;

                  case 5:
                    return [ 2 /*return*/ ];
                }
            }));
        }));
    }, t.prototype.bc = function(t) {
        var e = this, n = this._c.then((function() {
            return e.Tc = !0, t().catch((function(t) {
                // Re-throw the error so that this.tail becomes a rejected Promise and
                // all further attempts to chain (via .then) will just short-circuit
                // and return the rejected Promise.
                throw e.Ec = t, e.Tc = !1, x("INTERNAL UNHANDLED ERROR: ", 
                /**
 * Chrome includes Error.message in Error.stack. Other browsers do not.
 * This returns expected output of message + stack when available.
 * @param error - Error or FirestoreError
 */
                function(t) {
                    var e = t.message || "";
                    return t.stack && (e = t.stack.includes(t.message) ? t.stack : t.message + "\n" + t.stack), 
                    e;
                }(t)), t;
            })).then((function(t) {
                return e.Tc = !1, t;
            }));
        }));
        return this._c = n, n;
    }, t.prototype.enqueueAfterDelay = function(t, e, n) {
        var r = this;
        this.Rc(), 
        // Fast-forward delays for timerIds that have been overriden.
        this.Ic.indexOf(t) > -1 && (e = 0);
        var i = as.createAndSchedule(this, t, e, n, (function(t) {
            return r.Pc(t);
        }));
        return this.gc.push(i), i;
    }, t.prototype.Rc = function() {
        this.Ec && L();
    }, t.prototype.verifyOperationInProgress = function() {}, 
    /**
     * Waits until all currently queued tasks are finished executing. Delayed
     * operations are not run.
     */
    t.prototype.Vc = function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
            var t;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(e) {
                switch (e.label) {
                  case 0:
                    return [ 4 /*yield*/ , t = this._c ];

                  case 1:
                    e.sent(), e.label = 2;

                  case 2:
                    if (t !== this._c) return [ 3 /*break*/ , 0 ];
                    e.label = 3;

                  case 3:
                    return [ 2 /*return*/ ];
                }
            }));
        }));
    }, 
    /**
     * For Tests: Determine if a delayed operation with a particular TimerId
     * exists.
     */
    t.prototype.Sc = function(t) {
        for (var e = 0, n = this.gc; e < n.length; e++) {
            if (n[e].timerId === t) return !0;
        }
        return !1;
    }, 
    /**
     * For Tests: Runs some or all delayed operations early.
     *
     * @param lastTimerId - Delayed operations up to and including this TimerId
     * will be drained. Pass TimerId.All to run all delayed operations.
     * @returns a Promise that resolves once all operations have been run.
     */
    t.prototype.Dc = function(t) {
        var e = this;
        // Note that draining may generate more delayed ops, so we do that first.
                return this.Vc().then((function() {
            // Run ops in the same order they'd run if they ran naturally.
            e.gc.sort((function(t, e) {
                return t.targetTimeMs - e.targetTimeMs;
            }));
            for (var n = 0, r = e.gc; n < r.length; n++) {
                var i = r[n];
                if (i.skipDelay(), "all" /* All */ !== t && i.timerId === t) break;
            }
            return e.Vc();
        }));
    }, 
    /**
     * For Tests: Skip all subsequent delays for a timer id.
     */
    t.prototype.Cc = function(t) {
        this.Ic.push(t);
    }, 
    /** Called once a DelayedOperation is run or canceled. */ t.prototype.Pc = function(t) {
        // NOTE: indexOf / slice are O(n), but delayedOperations is expected to be small.
        var e = this.gc.indexOf(t);
        this.gc.splice(e, 1);
    }, t;
}();

function ra(t) {
    /**
 * Returns true if obj is an object and contains at least one of the specified
 * methods.
 */
    return function(t, e) {
        if ("object" != typeof t || null === t) return !1;
        for (var n = t, r = 0, i = [ "next", "error", "complete" ]; r < i.length; r++) {
            var o = i[r];
            if (o in n && "function" == typeof n[o]) return !0;
        }
        return !1;
    }(t);
}

var ia = /** @class */ function() {
    function t() {
        this._progressObserver = {}, this._taskCompletionResolver = new wr, this._lastProgress = {
            taskState: "Running",
            totalBytes: 0,
            totalDocuments: 0,
            bytesLoaded: 0,
            documentsLoaded: 0
        }
        /**
     * Registers functions to listen to bundle loading progress events.
     * @param next - Called when there is a progress update from bundle loading. Typically `next` calls occur
     *   each time a Firestore document is loaded from the bundle.
     * @param error - Called when an error occurs during bundle loading. The task aborts after reporting the
     *   error, and there should be no more updates after this.
     * @param complete - Called when the loading task is complete.
     */;
    }
    return t.prototype.onProgress = function(t, e, n) {
        this._progressObserver = {
            next: t,
            error: e,
            complete: n
        };
    }, 
    /**
     * Implements the `Promise<LoadBundleTaskProgress>.catch` interface.
     *
     * @param onRejected - Called when an error occurs during bundle loading.
     */
    t.prototype.catch = function(t) {
        return this._taskCompletionResolver.promise.catch(t);
    }, 
    /**
     * Implements the `Promise<LoadBundleTaskProgress>.then` interface.
     *
     * @param onFulfilled - Called on the completion of the loading task with a final `LoadBundleTaskProgress` update.
     *   The update will always have its `taskState` set to `"Success"`.
     * @param onRejected - Called when an error occurs during bundle loading.
     */
    t.prototype.then = function(t, e) {
        return this._taskCompletionResolver.promise.then(t, e);
    }, 
    /**
     * Notifies all observers that bundle loading has completed, with a provided
     * `LoadBundleTaskProgress` object.
     *
     * @private
     */
    t.prototype._completeWith = function(t) {
        this._updateProgress(t), this._progressObserver.complete && this._progressObserver.complete(), 
        this._taskCompletionResolver.resolve(t);
    }, 
    /**
     * Notifies all observers that bundle loading has failed, with a provided
     * `Error` as the reason.
     *
     * @private
     */
    t.prototype._failWith = function(t) {
        this._lastProgress.taskState = "Error", this._progressObserver.next && this._progressObserver.next(this._lastProgress), 
        this._progressObserver.error && this._progressObserver.error(t), this._taskCompletionResolver.reject(t);
    }, 
    /**
     * Notifies a progress update of loading a bundle.
     * @param progress - The new progress.
     *
     * @private
     */
    t.prototype._updateProgress = function(t) {
        this._lastProgress = t, this._progressObserver.next && this._progressObserver.next(t);
    }, t;
}(), oa = -1, sa = /** @class */ function(t) {
    /** @hideconstructor */
    function e(e, n) {
        var r = this;
        return (r = t.call(this, e, n) || this).type = "firestore", r._queue = new na, r._persistenceKey = "name" in e ? e.name : "[DEFAULT]", 
        r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._terminate = function() {
        return this._firestoreClient || 
        // The client must be initialized to ensure that all subsequent API
        // usage throws an exception.
        aa(this), this._firestoreClient.terminate();
    }, e;
}(Hu);

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** DOMException error code constants. */
/**
 * @internal
 */
function ua(t) {
    return t._firestoreClient || aa(t), t._firestoreClient.verifyNotTerminated(), t._firestoreClient;
}

function aa(t) {
    var e, n = t._freezeSettings(), r = function(t, e, n, r) {
        return new xu(t, e, n, r.host, r.ssl, r.experimentalForceLongPolling, r.experimentalAutoDetectLongPolling, r.useFetchStreams);
    }(t._databaseId, (null === (e = t._app) || void 0 === e ? void 0 : e.options.appId) || "", t._persistenceKey, n);
    t._firestoreClient = new gu(t._credentials, t._queue, r);
}

/**
 * Attempts to enable persistent storage, if possible.
 *
 * Must be called before any other functions (other than
 * {@link initializeFirestore}, {@link getFirestore} or
 * {@link clearIndexedDbPersistence}.
 *
 * If this fails, `enableIndexedDbPersistence()` will reject the promise it
 * returns. Note that even after this failure, the `Firestore` instance will
 * remain usable, however offline persistence will be disabled.
 *
 * There are several reasons why this can fail, which can be identified by
 * the `code` on the error.
 *
 *   * failed-precondition: The app is already open in another browser tab.
 *   * unimplemented: The browser is incompatible with the offline
 *     persistence implementation.
 *
 * @param firestore - The `Firestore` instance to enable persistence for.
 * @param persistenceSettings - Optional settings object to configure
 * persistence.
 * @returns A promise that represents successfully enabling persistent storage.
 */
/**
 * Registers both the `OfflineComponentProvider` and `OnlineComponentProvider`.
 * If the operation fails with a recoverable error (see
 * `canRecoverFromIndexedDbError()` below), the returned Promise is rejected
 * but the client remains usable.
 */ function ca(t, e, n) {
    var r = this, i = new wr;
    return t.asyncQueue.enqueue((function() {
        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(r, void 0, void 0, (function() {
            var r;
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
                switch (o.label) {
                  case 0:
                    return o.trys.push([ 0, 3, , 4 ]), [ 4 /*yield*/ , wu(t, n) ];

                  case 1:
                    return o.sent(), [ 4 /*yield*/ , bu(t, e) ];

                  case 2:
                    return o.sent(), i.resolve(), [ 3 /*break*/ , 4 ];

                  case 3:
                    if (!
                    /**
         * Decides whether the provided error allows us to gracefully disable
         * persistence (as opposed to crashing the client).
         */
                    function(t) {
                        return "FirebaseError" === t.name ? t.code === S.FAILED_PRECONDITION || t.code === S.UNIMPLEMENTED : !("undefined" != typeof DOMException && t instanceof DOMException) || (22 === t.code || 20 === t.code || 
                        // Firefox Private Browsing mode disables IndexedDb and returns
                        // INVALID_STATE for any usage.
                        11 === t.code);
                    }(r = o.sent())) throw r;
                    return console.warn("Error enabling offline persistence. Falling back to persistence disabled: " + r), 
                    i.reject(r), [ 3 /*break*/ , 4 ];

                  case 4:
                    return [ 2 /*return*/ ];
                }
            }));
        }));
    })).then((function() {
        return i.promise;
    }));
}

/**
 * Re-enables use of the network for this Firestore instance after a prior
 * call to {@link disableNetwork}.
 *
 * @returns A promise that is resolved once the network has been enabled.
 */
function ha(t) {
    if (t._initialized || t._terminated) throw new N(S.FAILED_PRECONDITION, "Firestore has already been started and persistence can no longer be enabled. You can only enable persistence before calling any other methods on a Firestore object.");
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A `FieldPath` refers to a field in a document. The path may consist of a
 * single field name (referring to a top-level field in the document), or a
 * list of field names (referring to a nested field in the document).
 *
 * Create a `FieldPath` by providing field names. If more than one field
 * name is provided, the path will point to a nested field in a document.
 */ var fa = /** @class */ function() {
    /**
     * Creates a FieldPath from the provided field names. If more than one field
     * name is provided, the path will point to a nested field in a document.
     *
     * @param fieldNames - A list of field names.
     */
    function t() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        for (var n = 0; n < t.length; ++n) if (0 === t[n].length) throw new N(S.INVALID_ARGUMENT, "Invalid field name at argument $(i + 1). Field names must not be empty.");
        this._internalPath = new Y(t);
    }
    /**
     * Returns true if this `FieldPath` is equal to the provided one.
     *
     * @param other - The `FieldPath` to compare against.
     * @returns true if this `FieldPath` is equal to the provided one.
     */    return t.prototype.isEqual = function(t) {
        return this._internalPath.isEqual(t._internalPath);
    }, t;
}(), la = /** @class */ function() {
    /** @hideconstructor */
    function t(t) {
        this._byteString = t;
    }
    /**
     * Creates a new `Bytes` object from the given Base64 string, converting it to
     * bytes.
     *
     * @param base64 - The Base64 string used to create the `Bytes` object.
     */    return t.fromBase64String = function(e) {
        try {
            return new t(X.fromBase64String(e));
        } catch (e) {
            throw new N(S.INVALID_ARGUMENT, "Failed to construct data from Base64 string: " + e);
        }
    }, 
    /**
     * Creates a new `Bytes` object from the given Uint8Array.
     *
     * @param array - The Uint8Array used to create the `Bytes` object.
     */
    t.fromUint8Array = function(e) {
        return new t(X.fromUint8Array(e));
    }, 
    /**
     * Returns the underlying bytes as a Base64-encoded string.
     *
     * @returns The Base64-encoded string created from the `Bytes` object.
     */
    t.prototype.toBase64 = function() {
        return this._byteString.toBase64();
    }, 
    /**
     * Returns the underlying bytes in a new `Uint8Array`.
     *
     * @returns The Uint8Array created from the `Bytes` object.
     */
    t.prototype.toUint8Array = function() {
        return this._byteString.toUint8Array();
    }, 
    /**
     * Returns a string representation of the `Bytes` object.
     *
     * @returns A string representation of the `Bytes` object.
     */
    t.prototype.toString = function() {
        return "Bytes(base64: " + this.toBase64() + ")";
    }, 
    /**
     * Returns true if this `Bytes` object is equal to the provided one.
     *
     * @param other - The `Bytes` object to compare against.
     * @returns true if this `Bytes` object is equal to the provided one.
     */
    t.prototype.isEqual = function(t) {
        return this._byteString.isEqual(t._byteString);
    }, t;
}(), da = 
/**
     * @param _methodName - The public API endpoint that returns this class.
     * @hideconstructor
     */
function(t) {
    this._methodName = t;
}, pa = /** @class */ function() {
    /**
     * Creates a new immutable `GeoPoint` object with the provided latitude and
     * longitude values.
     * @param latitude - The latitude as number between -90 and 90.
     * @param longitude - The longitude as number between -180 and 180.
     */
    function t(t, e) {
        if (!isFinite(t) || t < -90 || t > 90) throw new N(S.INVALID_ARGUMENT, "Latitude must be a number between -90 and 90, but was: " + t);
        if (!isFinite(e) || e < -180 || e > 180) throw new N(S.INVALID_ARGUMENT, "Longitude must be a number between -180 and 180, but was: " + e);
        this._lat = t, this._long = e;
    }
    return Object.defineProperty(t.prototype, "latitude", {
        /**
         * The latitude of this `GeoPoint` instance.
         */
        get: function() {
            return this._lat;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "longitude", {
        /**
         * The longitude of this `GeoPoint` instance.
         */
        get: function() {
            return this._long;
        },
        enumerable: !1,
        configurable: !0
    }), 
    /**
     * Returns true if this `GeoPoint` is equal to the provided one.
     *
     * @param other - The `GeoPoint` to compare against.
     * @returns true if this `GeoPoint` is equal to the provided one.
     */
    t.prototype.isEqual = function(t) {
        return this._lat === t._lat && this._long === t._long;
    }, 
    /** Returns a JSON-serializable representation of this GeoPoint. */ t.prototype.toJSON = function() {
        return {
            latitude: this._lat,
            longitude: this._long
        };
    }, 
    /**
     * Actually private to JS consumers of our API, so this function is prefixed
     * with an underscore.
     */
    t.prototype._compareTo = function(t) {
        return V(this._lat, t._lat) || V(this._long, t._long);
    }, t;
}(), ya = /^__.*__$/, va = /** @class */ function() {
    function t(t, e, n) {
        this.data = t, this.fieldMask = e, this.fieldTransforms = n;
    }
    return t.prototype.toMutation = function(t, e) {
        return null !== this.fieldMask ? new Pe(t, this.data, this.fieldMask, e, this.fieldTransforms) : new Oe(t, this.data, e, this.fieldTransforms);
    }, t;
}(), ma = /** @class */ function() {
    function t(t, 
    // The fieldMask does not include document transforms.
    e, n) {
        this.data = t, this.fieldMask = e, this.fieldTransforms = n;
    }
    return t.prototype.toMutation = function(t, e) {
        return new Pe(t, this.data, this.fieldMask, e, this.fieldTransforms);
    }, t;
}();

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * An immutable object representing an array of bytes.
 */ function ga(t) {
    switch (t) {
      case 0 /* Set */ :
 // fall through
              case 2 /* MergeSet */ :
 // fall through
              case 1 /* Update */ :
        return !0;

      case 3 /* Argument */ :
      case 4 /* ArrayArgument */ :
        return !1;

      default:
        throw L();
    }
}

/** A "context" object passed around while parsing user data. */ var wa = /** @class */ function() {
    /**
     * Initializes a ParseContext with the given source and path.
     *
     * @param settings - The settings for the parser.
     * @param databaseId - The database ID of the Firestore instance.
     * @param serializer - The serializer to use to generate the Value proto.
     * @param ignoreUndefinedProperties - Whether to ignore undefined properties
     * rather than throw.
     * @param fieldTransforms - A mutable list of field transforms encountered
     * while parsing the data.
     * @param fieldMask - A mutable list of field paths encountered while parsing
     * the data.
     *
     * TODO(b/34871131): We don't support array paths right now, so path can be
     * null to indicate the context represents any location within an array (in
     * which case certain features will not work and errors will be somewhat
     * compromised).
     */
    function t(t, e, n, r, i, o) {
        this.settings = t, this.databaseId = e, this.R = n, this.ignoreUndefinedProperties = r, 
        // Minor hack: If fieldTransforms is undefined, we assume this is an
        // external call and we need to validate the entire path.
        void 0 === i && this.Nc(), this.fieldTransforms = i || [], this.fieldMask = o || [];
    }
    return Object.defineProperty(t.prototype, "path", {
        get: function() {
            return this.settings.path;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "xc", {
        get: function() {
            return this.settings.xc;
        },
        enumerable: !1,
        configurable: !0
    }), 
    /** Returns a new context with the specified settings overwritten. */ t.prototype.Fc = function(e) {
        return new t(Object.assign(Object.assign({}, this.settings), e), this.databaseId, this.R, this.ignoreUndefinedProperties, this.fieldTransforms, this.fieldMask);
    }, t.prototype.kc = function(t) {
        var e, n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.Fc({
            path: n,
            $c: !1
        });
        return r.Oc(t), r;
    }, t.prototype.Mc = function(t) {
        var e, n = null === (e = this.path) || void 0 === e ? void 0 : e.child(t), r = this.Fc({
            path: n,
            $c: !1
        });
        return r.Nc(), r;
    }, t.prototype.Lc = function(t) {
        // TODO(b/34871131): We don't support array paths right now; so make path
        // undefined.
        return this.Fc({
            path: void 0,
            $c: !0
        });
    }, t.prototype.Bc = function(t) {
        return qa(t, this.settings.methodName, this.settings.qc || !1, this.path, this.settings.Uc);
    }, 
    /** Returns 'true' if 'fieldPath' was traversed when creating this context. */ t.prototype.contains = function(t) {
        return void 0 !== this.fieldMask.find((function(e) {
            return t.isPrefixOf(e);
        })) || void 0 !== this.fieldTransforms.find((function(e) {
            return t.isPrefixOf(e.field);
        }));
    }, t.prototype.Nc = function() {
        // TODO(b/34871131): Remove null check once we have proper paths for fields
        // within arrays.
        if (this.path) for (var t = 0; t < this.path.length; t++) this.Oc(this.path.get(t));
    }, t.prototype.Oc = function(t) {
        if (0 === t.length) throw this.Bc("Document fields must not be empty");
        if (ga(this.xc) && ya.test(t)) throw this.Bc('Document fields cannot begin and end with "__"');
    }, t;
}(), ba = /** @class */ function() {
    function t(t, e, n) {
        this.databaseId = t, this.ignoreUndefinedProperties = e, this.R = n || ko(t)
        /** Creates a new top-level parse context. */;
    }
    return t.prototype.Qc = function(t, e, n, r) {
        return void 0 === r && (r = !1), new wa({
            xc: t,
            methodName: e,
            Uc: n,
            path: Y.emptyPath(),
            $c: !1,
            qc: r
        }, this.databaseId, this.R, this.ignoreUndefinedProperties);
    }, t;
}();

/**
 * Helper for parsing raw user input (provided via the API) into internal model
 * classes.
 */ function Ia(t) {
    var e = t._freezeSettings(), n = ko(t._databaseId);
    return new ba(t._databaseId, !!e.ignoreUndefinedProperties, n);
}

/** Parse document data from a set() call. */ function Ta(t, e, n, r, i, o) {
    void 0 === o && (o = {});
    var s = t.Qc(o.merge || o.mergeFields ? 2 /* MergeSet */ : 0 /* Set */ , e, n, i);
    Pa("Data must be an object, but it was:", s, r);
    var u, a, c = La(r, s);
    if (o.merge) u = new $(s.fieldMask), a = s.fieldTransforms; else if (o.mergeFields) {
        for (var h = [], f = 0, l = o.mergeFields; f < l.length; f++) {
            var d = Fa(e, l[f], n);
            if (!s.contains(d)) throw new N(S.INVALID_ARGUMENT, "Field '" + d + "' is specified in your field mask but missing from your input data.");
            Ua(h, d) || h.push(d);
        }
        u = new $(h), a = s.fieldTransforms.filter((function(t) {
            return u.covers(t.field);
        }));
    } else u = null, a = s.fieldTransforms;
    return new va(new Et(c), u, a);
}

var Ea = /** @class */ function(t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._toFieldTransform = function(t) {
        if (2 /* MergeSet */ !== t.xc) throw 1 /* Update */ === t.xc ? t.Bc(this._methodName + "() can only appear at the top level of your update data") : t.Bc(this._methodName + "() cannot be used with set() unless you pass {merge:true}");
        // No transform to add for a delete, but we need to add it to our
        // fieldMask so it gets deleted.
                return t.fieldMask.push(t.path), null;
    }, e.prototype.isEqual = function(t) {
        return t instanceof e;
    }, e;
}(da);

/**
 * Creates a child context for parsing SerializableFieldValues.
 *
 * This is different than calling `ParseContext.contextWith` because it keeps
 * the fieldTransforms and fieldMask separate.
 *
 * The created context has its `dataSource` set to `UserDataSource.Argument`.
 * Although these values are used with writes, any elements in these FieldValues
 * are not considered writes since they cannot contain any FieldValue sentinels,
 * etc.
 *
 * @param fieldValue - The sentinel FieldValue for which to create a child
 *     context.
 * @param context - The parent context.
 * @param arrayElement - Whether or not the FieldValue has an array.
 */ function _a(t, e, n) {
    return new wa({
        xc: 3 /* Argument */ ,
        Uc: e.settings.Uc,
        methodName: t._methodName,
        $c: n
    }, e.databaseId, e.R, e.ignoreUndefinedProperties);
}

var Sa = /** @class */ function(t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._toFieldTransform = function(t) {
        return new _e(t.path, new ve);
    }, e.prototype.isEqual = function(t) {
        return t instanceof e;
    }, e;
}(da), Na = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this, e) || this).Kc = n, r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._toFieldTransform = function(t) {
        var e = _a(this, t, 
        /*array=*/ !0), n = this.Kc.map((function(t) {
            return Ra(t, e);
        })), r = new me(n);
        return new _e(t.path, r);
    }, e.prototype.isEqual = function(t) {
        // TODO(mrschmidt): Implement isEquals
        return this === t;
    }, e;
}(da), Da = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this, e) || this).Kc = n, r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._toFieldTransform = function(t) {
        var e = _a(this, t, 
        /*array=*/ !0), n = this.Kc.map((function(t) {
            return Ra(t, e);
        })), r = new we(n);
        return new _e(t.path, r);
    }, e.prototype.isEqual = function(t) {
        // TODO(mrschmidt): Implement isEquals
        return this === t;
    }, e;
}(da), Aa = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this, e) || this).jc = n, r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._toFieldTransform = function(t) {
        var e = new Ie(t.R, fe(t.R, this.jc));
        return new _e(t.path, e);
    }, e.prototype.isEqual = function(t) {
        // TODO(mrschmidt): Implement isEquals
        return this === t;
    }, e;
}(da);

/** Parse update data from an update() call. */ function ka(t, e, n, r) {
    var i = t.Qc(1 /* Update */ , e, n);
    Pa("Data must be an object, but it was:", i, r);
    var o = [], s = Et.empty();
    G(r, (function(t, r) {
        var a = Va(e, t, n);
        // For Compat types, we have to "extract" the underlying types before
        // performing validation.
                r = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(r);
        var c = i.Mc(a);
        if (r instanceof Ea) 
        // Add it to the field mask, but don't add anything to updateData.
        o.push(a); else {
            var h = Ra(r, c);
            null != h && (o.push(a), s.set(a, h));
        }
    }));
    var a = new $(o);
    return new ma(s, a, i.fieldTransforms);
}

/** Parse update data from a list of field/value arguments. */ function xa(t, e, n, r, i, o) {
    var s = t.Qc(1 /* Update */ , e, n), a = [ Fa(e, r, n) ], c = [ i ];
    if (o.length % 2 != 0) throw new N(S.INVALID_ARGUMENT, "Function " + e + "() needs to be called with an even number of arguments that alternate between field names and values.");
    for (var h = 0; h < o.length; h += 2) a.push(Fa(e, o[h])), c.push(o[h + 1]);
    // We iterate in reverse order to pick the last value for a field if the
    // user specified the field multiple times.
    for (var f = [], l = Et.empty(), d = a.length - 1; d >= 0; --d) if (!Ua(f, a[d])) {
        var p = a[d], y = c[d];
        // For Compat types, we have to "extract" the underlying types before
        // performing validation.
        y = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(y);
        var v = s.Mc(p);
        if (y instanceof Ea) 
        // Add it to the field mask, but don't add anything to updateData.
        f.push(p); else {
            var m = Ra(y, v);
            null != m && (f.push(p), l.set(p, m));
        }
    }
    var g = new $(f);
    return new ma(l, g, s.fieldTransforms);
}

/**
 * Parse a "query value" (e.g. value in a where filter or a value in a cursor
 * bound).
 *
 * @param allowArrays - Whether the query value is an array that may directly
 * contain additional arrays (e.g. the operand of an `in` query).
 */ function Ca(t, e, n, r) {
    return void 0 === r && (r = !1), Ra(n, t.Qc(r ? 4 /* ArrayArgument */ : 3 /* Argument */ , e));
}

/**
 * Parses user data to Protobuf Values.
 *
 * @param input - Data to be parsed.
 * @param context - A context object representing the current path being parsed,
 * the source of the data being parsed, etc.
 * @returns The parsed value, or null if the value was a FieldValue sentinel
 * that should not be included in the resulting parsed data.
 */ function Ra(t, e) {
    if (Oa(
    // Unwrap the API type from the Compat SDK. This will return the API type
    // from firestore-exp.
    t = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(t))) return Pa("Unsupported field value:", e, t), La(t, e);
    if (t instanceof da) 
    // FieldValues usually parse into transforms (except FieldValue.delete())
    // in which case we do not want to include this field in our parsed data
    // (as doing so will overwrite the field directly prior to the transform
    // trying to transform it). So we don't add this location to
    // context.fieldMask and we return null as our parsing result.
    /**
     * "Parses" the provided FieldValueImpl, adding any necessary transforms to
     * context.fieldTransforms.
     */
    return function(t, e) {
        // Sentinels are only supported with writes, and not within arrays.
        if (!ga(e.xc)) throw e.Bc(t._methodName + "() can only be used with update() and set()");
        if (!e.path) throw e.Bc(t._methodName + "() is not currently supported inside arrays");
        var n = t._toFieldTransform(e);
        n && e.fieldTransforms.push(n);
    }(t, e), null;
    if (void 0 === t && e.ignoreUndefinedProperties) 
    // If the input is undefined it can never participate in the fieldMask, so
    // don't handle this below. If `ignoreUndefinedProperties` is false,
    // `parseScalarValue` will reject an undefined value.
    return null;
    if (
    // If context.path is null we are inside an array and we don't support
    // field mask paths more granular than the top-level array.
    e.path && e.fieldMask.push(e.path), t instanceof Array) {
        // TODO(b/34871131): Include the path containing the array in the error
        // message.
        // In the case of IN queries, the parsed data is an array (representing
        // the set of values to be included for the IN query) that may directly
        // contain additional arrays (each representing an individual field
        // value), so we disable this validation.
        if (e.settings.$c && 4 /* ArrayArgument */ !== e.xc) throw e.Bc("Nested arrays are not supported");
        return function(t, e) {
            for (var n = [], r = 0, i = 0, o = t; i < o.length; i++) {
                var s = Ra(o[i], e.Lc(r));
                null == s && (
                // Just include nulls in the array for fields being replaced with a
                // sentinel.
                s = {
                    nullValue: "NULL_VALUE"
                }), n.push(s), r++;
            }
            return {
                arrayValue: {
                    values: n
                }
            };
        }(t, e);
    }
    return function(t, e) {
        if (null === (t = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(t))) return {
            nullValue: "NULL_VALUE"
        };
        if ("number" == typeof t) return fe(e.R, t);
        if ("boolean" == typeof t) return {
            booleanValue: t
        };
        if ("string" == typeof t) return {
            stringValue: t
        };
        if (t instanceof Date) {
            var n = B.fromDate(t);
            return {
                timestampValue: bn(e.R, n)
            };
        }
        if (t instanceof B) {
            // Firestore backend truncates precision down to microseconds. To ensure
            // offline mode works the same with regards to truncation, perform the
            // truncation immediately without waiting for the backend to do that.
            n = new B(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3));
            return {
                timestampValue: bn(e.R, n)
            };
        }
        if (t instanceof pa) return {
            geoPointValue: {
                latitude: t.latitude,
                longitude: t.longitude
            }
        };
        if (t instanceof la) return {
            bytesValue: In(e.R, t._byteString)
        };
        if (t instanceof Yu) {
            n = e.databaseId;
            var r = t.firestore._databaseId;
            if (!r.isEqual(n)) throw e.Bc("Document reference is for database " + r.projectId + "/" + r.database + " but should be for database " + n.projectId + "/" + n.database);
            return {
                referenceValue: _n(t.firestore._databaseId || e.databaseId, t._key.path)
            };
        }
        throw e.Bc("Unsupported field value: " + Gu(t));
    }(t, e);
}

function La(t, e) {
    var n = {};
    return Q(t) ? 
    // If we encounter an empty object, we explicitly add it to the update
    // mask to ensure that the server creates a map entry.
    e.path && e.path.length > 0 && e.fieldMask.push(e.path) : G(t, (function(t, r) {
        var i = Ra(r, e.kc(t));
        null != i && (n[t] = i);
    })), {
        mapValue: {
            fields: n
        }
    };
}

function Oa(t) {
    return !("object" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof B || t instanceof pa || t instanceof la || t instanceof Yu || t instanceof da);
}

function Pa(t, e, n) {
    if (!Oa(n) || !function(t) {
        return "object" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));
    }(n)) {
        var r = Gu(n);
        throw "an object" === r ? e.Bc(t + " a custom object") : e.Bc(t + " " + r);
    }
}

/**
 * Helper that calls fromDotSeparatedString() but wraps any error thrown.
 */ function Fa(t, e, n) {
    if (
    // If required, replace the FieldPath Compat class with with the firestore-exp
    // FieldPath.
    (e = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(e)) instanceof fa) return e._internalPath;
    if ("string" == typeof e) return Va(t, e);
    throw qa("Field path arguments must be of type string or FieldPath.", t, 
    /* hasConverter= */ !1, 
    /* path= */ void 0, n);
}

/**
 * Matches any characters in a field path string that are reserved.
 */ var Ma = new RegExp("[~\\*/\\[\\]]");

/**
 * Wraps fromDotSeparatedString with an error message about the method that
 * was thrown.
 * @param methodName - The publicly visible method name
 * @param path - The dot-separated string form of a field path which will be
 * split on dots.
 * @param targetDoc - The document against which the field path will be
 * evaluated.
 */ function Va(t, e, n) {
    if (e.search(Ma) >= 0) throw qa("Invalid field path (" + e + "). Paths must not contain '~', '*', '/', '[', or ']'", t, 
    /* hasConverter= */ !1, 
    /* path= */ void 0, n);
    try {
        return (new (fa.bind.apply(fa, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ void 0 ], e.split(".")))))._internalPath;
    } catch (r) {
        throw qa("Invalid field path (" + e + "). Paths must not be empty, begin with '.', end with '.', or contain '..'", t, 
        /* hasConverter= */ !1, 
        /* path= */ void 0, n);
    }
}

function qa(t, e, n, r, i) {
    var o = r && !r.isEmpty(), s = void 0 !== i, u = "Function " + e + "() called with invalid data";
    n && (u += " (via `toFirestore()`)");
    var a = "";
    return (o || s) && (a += " (found", o && (a += " in field " + r), s && (a += " in document " + i), 
    a += ")"), new N(S.INVALID_ARGUMENT, (u += ". ") + t + a)
    /** Checks `haystack` if FieldPath `needle` is present. Runs in O(n). */;
}

function Ua(t, e) {
    return t.some((function(t) {
        return t.isEqual(e);
    }));
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A `DocumentSnapshot` contains data read from a document in your Firestore
 * database. The data can be extracted with `.data()` or `.get(<field>)` to
 * get a specific field.
 *
 * For a `DocumentSnapshot` that points to a non-existing document, any data
 * access will return 'undefined'. You can use the `exists()` method to
 * explicitly verify a document's existence.
 */ var Ba = /** @class */ function() {
    // Note: This class is stripped down version of the DocumentSnapshot in
    // the legacy SDK. The changes are:
    // - No support for SnapshotMetadata.
    // - No support for SnapshotOptions.
    /** @hideconstructor protected */
    function t(t, e, n, r, i) {
        this._firestore = t, this._userDataWriter = e, this._key = n, this._document = r, 
        this._converter = i;
    }
    return Object.defineProperty(t.prototype, "id", {
        /** Property of the `DocumentSnapshot` that provides the document's ID. */ get: function() {
            return this._key.path.lastSegment();
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "ref", {
        /**
         * The `DocumentReference` for the document included in the `DocumentSnapshot`.
         */
        get: function() {
            return new Yu(this._firestore, this._converter, this._key);
        },
        enumerable: !1,
        configurable: !0
    }), 
    /**
     * Signals whether or not the document at the snapshot's location exists.
     *
     * @returns true if the document exists.
     */
    t.prototype.exists = function() {
        return null !== this._document;
    }, 
    /**
     * Retrieves all fields in the document as an `Object`. Returns `undefined` if
     * the document doesn't exist.
     *
     * @returns An `Object` containing all fields in the document or `undefined`
     * if the document doesn't exist.
     */
    t.prototype.data = function() {
        if (this._document) {
            if (this._converter) {
                // We only want to use the converter and create a new DocumentSnapshot
                // if a converter has been provided.
                var t = new ja(this._firestore, this._userDataWriter, this._key, this._document, 
                /* converter= */ null);
                return this._converter.fromFirestore(t);
            }
            return this._userDataWriter.convertValue(this._document.data.value);
        }
    }, 
    /**
     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the
     * document or field doesn't exist.
     *
     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific
     * field.
     * @returns The data at the specified field location or undefined if no such
     * field exists in the document.
     */
    // We are using `any` here to avoid an explicit cast by our users.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    t.prototype.get = function(t) {
        if (this._document) {
            var e = this._document.data.field(Ka("DocumentSnapshot.get", t));
            if (null !== e) return this._userDataWriter.convertValue(e);
        }
    }, t;
}(), ja = /** @class */ function(t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this;
    }
    /**
     * Retrieves all fields in the document as an `Object`.
     *
     * @override
     * @returns An `Object` containing all fields in the document.
     */    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.data = function() {
        return t.prototype.data.call(this);
    }, e;
}(Ba);

/**
 * A `QueryDocumentSnapshot` contains data read from a document in your
 * Firestore database as part of a query. The document is guaranteed to exist
 * and its data can be extracted with `.data()` or `.get(<field>)` to get a
 * specific field.
 *
 * A `QueryDocumentSnapshot` offers the same API surface as a
 * `DocumentSnapshot`. Since query results contain only existing documents, the
 * `exists` property will always be true and `data()` will never return
 * 'undefined'.
 */
/**
 * Helper that calls fromDotSeparatedString() but wraps any error thrown.
 */
function Ka(t, e) {
    return "string" == typeof e ? Va(t, e) : e instanceof fa ? e._internalPath : e._delegate._internalPath;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Metadata about a snapshot, describing the state of the snapshot.
 */ var Ga = /** @class */ function() {
    /** @hideconstructor */
    function t(t, e) {
        this.hasPendingWrites = t, this.fromCache = e
        /**
     * Returns true if this `SnapshotMetadata` is equal to the provided one.
     *
     * @param other - The `SnapshotMetadata` to compare against.
     * @returns true if this `SnapshotMetadata` is equal to the provided one.
     */;
    }
    return t.prototype.isEqual = function(t) {
        return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;
    }, t;
}(), Qa = /** @class */ function(t) {
    /** @hideconstructor protected */
    function e(e, n, r, i, o, s) {
        var u = this;
        return (u = t.call(this, e, n, r, i, s) || this)._firestore = e, u._firestoreImpl = e, 
        u.metadata = o, u;
    }
    /**
     * Property of the `DocumentSnapshot` that signals whether or not the data
     * exists. True if the document exists.
     */    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.exists = function() {
        return t.prototype.exists.call(this);
    }, 
    /**
     * Retrieves all fields in the document as an `Object`. Returns `undefined` if
     * the document doesn't exist.
     *
     * By default, `FieldValue.serverTimestamp()` values that have not yet been
     * set to their final value will be returned as `null`. You can override
     * this by passing an options object.
     *
     * @param options - An options object to configure how data is retrieved from
     * the snapshot (for example the desired behavior for server timestamps that
     * have not yet been set to their final value).
     * @returns An `Object` containing all fields in the document or `undefined` if
     * the document doesn't exist.
     */
    e.prototype.data = function(t) {
        if (void 0 === t && (t = {}), this._document) {
            if (this._converter) {
                // We only want to use the converter and create a new DocumentSnapshot
                // if a converter has been provided.
                var e = new za(this._firestore, this._userDataWriter, this._key, this._document, this.metadata, 
                /* converter= */ null);
                return this._converter.fromFirestore(e, t);
            }
            return this._userDataWriter.convertValue(this._document.data.value, t.serverTimestamps);
        }
    }, 
    /**
     * Retrieves the field specified by `fieldPath`. Returns `undefined` if the
     * document or field doesn't exist.
     *
     * By default, a `FieldValue.serverTimestamp()` that has not yet been set to
     * its final value will be returned as `null`. You can override this by
     * passing an options object.
     *
     * @param fieldPath - The path (for example 'foo' or 'foo.bar') to a specific
     * field.
     * @param options - An options object to configure how the field is retrieved
     * from the snapshot (for example the desired behavior for server timestamps
     * that have not yet been set to their final value).
     * @returns The data at the specified field location or undefined if no such
     * field exists in the document.
     */
    // We are using `any` here to avoid an explicit cast by our users.
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    e.prototype.get = function(t, e) {
        if (void 0 === e && (e = {}), this._document) {
            var n = this._document.data.field(Ka("DocumentSnapshot.get", t));
            if (null !== n) return this._userDataWriter.convertValue(n, e.serverTimestamps);
        }
    }, e;
}(Ba), za = /** @class */ function(t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this;
    }
    /**
     * Retrieves all fields in the document as an `Object`.
     *
     * By default, `FieldValue.serverTimestamp()` values that have not yet been
     * set to their final value will be returned as `null`. You can override
     * this by passing an options object.
     *
     * @override
     * @param options - An options object to configure how data is retrieved from
     * the snapshot (for example the desired behavior for server timestamps that
     * have not yet been set to their final value).
     * @returns An `Object` containing all fields in the document.
     */    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.data = function(e) {
        return void 0 === e && (e = {}), t.prototype.data.call(this, e);
    }, e;
}(Qa), Wa = /** @class */ function() {
    /** @hideconstructor */
    function t(t, e, n, r) {
        this._firestore = t, this._userDataWriter = e, this._snapshot = r, this.metadata = new Ga(r.hasPendingWrites, r.fromCache), 
        this.query = n;
    }
    return Object.defineProperty(t.prototype, "docs", {
        /** An array of all the documents in the `QuerySnapshot`. */ get: function() {
            var t = [];
            return this.forEach((function(e) {
                return t.push(e);
            })), t;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "size", {
        /** The number of documents in the `QuerySnapshot`. */ get: function() {
            return this._snapshot.docs.size;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "empty", {
        /** True if there are no documents in the `QuerySnapshot`. */ get: function() {
            return 0 === this.size;
        },
        enumerable: !1,
        configurable: !0
    }), 
    /**
     * Enumerates all of the documents in the `QuerySnapshot`.
     *
     * @param callback - A callback to be called with a `QueryDocumentSnapshot` for
     * each document in the snapshot.
     * @param thisArg - The `this` binding for the callback.
     */
    t.prototype.forEach = function(t, e) {
        var n = this;
        this._snapshot.docs.forEach((function(r) {
            t.call(e, new za(n._firestore, n._userDataWriter, r.key, r, new Ga(n._snapshot.mutatedKeys.has(r.key), n._snapshot.fromCache), n.query.converter));
        }));
    }, 
    /**
     * Returns an array of the documents changes since the last snapshot. If this
     * is the first snapshot, all documents will be in the list as 'added'
     * changes.
     *
     * @param options - `SnapshotListenOptions` that control whether metadata-only
     * changes (i.e. only `DocumentSnapshot.metadata` changed) should trigger
     * snapshot events.
     */
    t.prototype.docChanges = function(t) {
        void 0 === t && (t = {});
        var e = !!t.includeMetadataChanges;
        if (e && this._snapshot.excludesMetadataChanges) throw new N(S.INVALID_ARGUMENT, "To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().");
        return this._cachedChanges && this._cachedChangesIncludeMetadataChanges === e || (this._cachedChanges = 
        /** Calculates the array of DocumentChanges for a given ViewSnapshot. */
        function(t, e) {
            if (t._snapshot.oldDocs.isEmpty()) {
                // Special case the first snapshot because index calculation is easy and
                // fast
                var n = 0;
                return t._snapshot.docChanges.map((function(e) {
                    var r = new za(t._firestore, t._userDataWriter, e.doc.key, e.doc, new Ga(t._snapshot.mutatedKeys.has(e.doc.key), t._snapshot.fromCache), t.query.converter);
                    return e.doc, {
                        type: "added",
                        doc: r,
                        oldIndex: -1,
                        newIndex: n++
                    };
                }));
            }
            // A DocumentSet that is updated incrementally as changes are applied to use
            // to lookup the index of a document.
            var r = t._snapshot.oldDocs;
            return t._snapshot.docChanges.filter((function(t) {
                return e || 3 /* Metadata */ !== t.type;
            })).map((function(e) {
                var n = new za(t._firestore, t._userDataWriter, e.doc.key, e.doc, new Ga(t._snapshot.mutatedKeys.has(e.doc.key), t._snapshot.fromCache), t.query.converter), i = -1, o = -1;
                return 0 /* Added */ !== e.type && (i = r.indexOf(e.doc.key), r = r.delete(e.doc.key)), 
                1 /* Removed */ !== e.type && (o = (r = r.add(e.doc)).indexOf(e.doc.key)), {
                    type: Ha(e.type),
                    doc: n,
                    oldIndex: i,
                    newIndex: o
                };
            }));
        }(this, e), this._cachedChangesIncludeMetadataChanges = e), this._cachedChanges;
    }, t;
}();

/**
 * A `DocumentSnapshot` contains data read from a document in your Firestore
 * database. The data can be extracted with `.data()` or `.get(<field>)` to
 * get a specific field.
 *
 * For a `DocumentSnapshot` that points to a non-existing document, any data
 * access will return 'undefined'. You can use the `exists()` method to
 * explicitly verify a document's existence.
 */ function Ha(t) {
    switch (t) {
      case 0 /* Added */ :
        return "added";

      case 2 /* Modified */ :
      case 3 /* Metadata */ :
        return "modified";

      case 1 /* Removed */ :
        return "removed";

      default:
        return L();
    }
}

// TODO(firestoreexp): Add tests for snapshotEqual with different snapshot
// metadata
/**
 * Returns true if the provided snapshots are equal.
 *
 * @param left - A snapshot to compare.
 * @param right - A snapshot to compare.
 * @returns true if the snapshots are equal.
 */ function Ya(t, e) {
    return t instanceof Qa && e instanceof Qa ? t._firestore === e._firestore && t._key.isEqual(e._key) && (null === t._document ? null === e._document : t._document.isEqual(e._document)) && t._converter === e._converter : t instanceof Wa && e instanceof Wa && t._firestore === e._firestore && ea(t.query, e.query) && t.metadata.isEqual(e.metadata) && t._snapshot.isEqual(e._snapshot);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */ function $a(t) {
    if ($t(t) && 0 === t.explicitOrderBy.length) throw new N(S.UNIMPLEMENTED, "limitToLast() queries require specifying at least one orderBy() clause");
}

/**
 * A `QueryConstraint` is used to narrow the set of documents returned by a
 * Firestore query. `QueryConstraint`s are created by invoking {@link where},
 * {@link orderBy}, {@link (startAt:1)}, {@link (startAfter:1)}, {@link
 * endBefore:1}, {@link (endAt:1)}, {@link limit} or {@link limitToLast} and
 * can then be passed to {@link query} to create a new query instance that
 * also contains this `QueryConstraint`.
 */ var Xa = function() {};

/**
 * Creates a new immutable instance of `Query` that is extended to also include
 * additional query constraints.
 *
 * @param query - The Query instance to use as a base for the new constraints.
 * @param queryConstraints - The list of `QueryConstraint`s to apply.
 * @throws if any of the provided query constraints cannot be combined with the
 * existing or new constraints.
 */ function Ja(t) {
    for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
    for (var r = 0, i = e; r < i.length; r++) {
        var o = i[r];
        t = o._apply(t);
    }
    return t;
}

var Za = /** @class */ function(t) {
    function e(e, n, r) {
        var i = this;
        return (i = t.call(this) || this).Wc = e, i.Gc = n, i.zc = r, i.type = "where", 
        i;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._apply = function(t) {
        var e = Ia(t.firestore), n = function(t, e, n, r, i, o, s) {
            var u;
            if (i.isKeyField()) {
                if ("array-contains" /* ARRAY_CONTAINS */ === o || "array-contains-any" /* ARRAY_CONTAINS_ANY */ === o) throw new N(S.INVALID_ARGUMENT, "Invalid Query. You can't perform '" + o + "' queries on FieldPath.documentId().");
                if ("in" /* IN */ === o || "not-in" /* NOT_IN */ === o) {
                    sc(s, o);
                    for (var a = [], c = 0, h = s; c < h.length; c++) {
                        var f = h[c];
                        a.push(oc(r, t, f));
                    }
                    u = {
                        arrayValue: {
                            values: a
                        }
                    };
                } else u = oc(r, t, s);
            } else "in" /* IN */ !== o && "not-in" /* NOT_IN */ !== o && "array-contains-any" /* ARRAY_CONTAINS_ANY */ !== o || sc(s, o), 
            u = Ca(n, "where", s, 
            /* allowArrays= */ "in" /* IN */ === o || "not-in" /* NOT_IN */ === o);
            var l = Ct.create(i, o, u);
            return function(t, e) {
                if (e.g()) {
                    var n = Jt(t);
                    if (null !== n && !n.isEqual(e.field)) throw new N(S.INVALID_ARGUMENT, "Invalid query. All where filters with an inequality (<, <=, !=, not-in, >, or >=) must be on the same field. But you have inequality filters on '" + n.toString() + "' and '" + e.field.toString() + "'");
                    var r = Xt(t);
                    null !== r && uc(t, e.field, r);
                }
                var i = function(t, e) {
                    for (var n = 0, r = t.filters; n < r.length; n++) {
                        var i = r[n];
                        if (e.indexOf(i.op) >= 0) return i.op;
                    }
                    return null;
                }(t, 
                /**
 * Given an operator, returns the set of operators that cannot be used with it.
 *
 * Operators in a query must adhere to the following set of rules:
 * 1. Only one array operator is allowed.
 * 2. Only one disjunctive operator is allowed.
 * 3. NOT_EQUAL cannot be used with another NOT_EQUAL operator.
 * 4. NOT_IN cannot be used with array, disjunctive, or NOT_EQUAL operators.
 *
 * Array operators: ARRAY_CONTAINS, ARRAY_CONTAINS_ANY
 * Disjunctive operators: IN, ARRAY_CONTAINS_ANY, NOT_IN
 */
                function(t) {
                    switch (t) {
                      case "!=" /* NOT_EQUAL */ :
                        return [ "!=" /* NOT_EQUAL */ , "not-in" /* NOT_IN */ ];

                      case "array-contains" /* ARRAY_CONTAINS */ :
                        return [ "array-contains" /* ARRAY_CONTAINS */ , "array-contains-any" /* ARRAY_CONTAINS_ANY */ , "not-in" /* NOT_IN */ ];

                      case "in" /* IN */ :
                        return [ "array-contains-any" /* ARRAY_CONTAINS_ANY */ , "in" /* IN */ , "not-in" /* NOT_IN */ ];

                      case "array-contains-any" /* ARRAY_CONTAINS_ANY */ :
                        return [ "array-contains" /* ARRAY_CONTAINS */ , "array-contains-any" /* ARRAY_CONTAINS_ANY */ , "in" /* IN */ , "not-in" /* NOT_IN */ ];

                      case "not-in" /* NOT_IN */ :
                        return [ "array-contains" /* ARRAY_CONTAINS */ , "array-contains-any" /* ARRAY_CONTAINS_ANY */ , "in" /* IN */ , "not-in" /* NOT_IN */ , "!=" /* NOT_EQUAL */ ];

                      default:
                        return [];
                    }
                }(e.op));
                if (null !== i) 
                // Special case when it's a duplicate op to give a slightly clearer error message.
                throw i === e.op ? new N(S.INVALID_ARGUMENT, "Invalid query. You cannot use more than one '" + e.op.toString() + "' filter.") : new N(S.INVALID_ARGUMENT, "Invalid query. You cannot use '" + e.op.toString() + "' filters with '" + i.toString() + "' filters.");
            }(t, l), l;
        }(t._query, 0, e, t.firestore._databaseId, this.Wc, this.Gc, this.zc);
        return new $u(t.firestore, t.converter, function(t, e) {
            var n = t.filters.concat([ e ]);
            return new zt(t.path, t.collectionGroup, t.explicitOrderBy.slice(), n, t.limit, t.limitType, t.startAt, t.endAt);
        }(t._query, n));
    }, e;
}(Xa), tc = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this) || this).Wc = e, r.Hc = n, r.type = "orderBy", r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._apply = function(t) {
        var e = function(t, e, n) {
            if (null !== t.startAt) throw new N(S.INVALID_ARGUMENT, "Invalid query. You must not call startAt() or startAfter() before calling orderBy().");
            if (null !== t.endAt) throw new N(S.INVALID_ARGUMENT, "Invalid query. You must not call endAt() or endBefore() before calling orderBy().");
            var r = new jt(e, n);
            return function(t, e) {
                if (null === Xt(t)) {
                    // This is the first order by. It must match any inequality.
                    var n = Jt(t);
                    null !== n && uc(t, n, e.field);
                }
            }(t, r), r;
        }(t._query, this.Wc, this.Hc);
        return new $u(t.firestore, t.converter, function(t, e) {
            // TODO(dimond): validate that orderBy does not list the same key twice.
            var n = t.explicitOrderBy.concat([ e ]);
            return new zt(t.path, t.collectionGroup, n, t.filters.slice(), t.limit, t.limitType, t.startAt, t.endAt);
        }(t._query, e));
    }, e;
}(Xa), ec = /** @class */ function(t) {
    function e(e, n, r) {
        var i = this;
        return (i = t.call(this) || this).type = e, i.Jc = n, i.Yc = r, i;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._apply = function(t) {
        return new $u(t.firestore, t.converter, ne(t._query, this.Jc, this.Yc));
    }, e;
}(Xa), nc = /** @class */ function(t) {
    function e(e, n, r) {
        var i = this;
        return (i = t.call(this) || this).type = e, i.Xc = n, i.Zc = r, i;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._apply = function(t) {
        var e = ic(t, this.type, this.Xc, this.Zc);
        return new $u(t.firestore, t.converter, function(t, e) {
            return new zt(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, e, t.endAt);
        }(t._query, e));
    }, e;
}(Xa), rc = /** @class */ function(t) {
    function e(e, n, r) {
        var i = this;
        return (i = t.call(this) || this).type = e, i.Xc = n, i.Zc = r, i;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype._apply = function(t) {
        var e = ic(t, this.type, this.Xc, this.Zc);
        return new $u(t.firestore, t.converter, function(t, e) {
            return new zt(t.path, t.collectionGroup, t.explicitOrderBy.slice(), t.filters.slice(), t.limit, t.limitType, t.startAt, e);
        }(t._query, e));
    }, e;
}(Xa);

/**
 * Creates a `QueryConstraint` that enforces that documents must contain the
 * specified field and that the value should satisfy the relation constraint
 * provided.
 *
 * @param fieldPath - The path to compare
 * @param opStr - The operation string (e.g "&lt;", "&lt;=", "==", "&lt;",
 *   "&lt;=", "!=").
 * @param value - The value for comparison
 * @returns The created `Query`.
 */
/** Helper function to create a bound from a document or fields */
function ic(t, e, n, r) {
    if (n[0] = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(n[0]), n[0] instanceof Ba) return function(t, e, n, r, i) {
        if (!r) throw new N(S.NOT_FOUND, "Can't use a DocumentSnapshot that doesn't exist for " + n + "().");
        // Because people expect to continue/end a query at the exact document
        // provided, we need to use the implicit sort order rather than the explicit
        // sort order, because it's guaranteed to contain the document key. That way
        // the position becomes unambiguous and the query continues/ends exactly at
        // the provided document. Without the key (by using the explicit sort
        // orders), multiple documents could match the position, yielding duplicate
        // results.
        for (var o = [], s = 0, u = te(t); s < u.length; s++) {
            var a = u[s];
            if (a.field.isKeyField()) o.push(vt(e, r.key)); else {
                var c = r.data.field(a.field);
                if (nt(c)) throw new N(S.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field "' + a.field + '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');
                if (null === c) {
                    var h = a.field.canonicalString();
                    throw new N(S.INVALID_ARGUMENT, "Invalid query. You are trying to start or end a query using a document for which the field '" + h + "' (used as the orderBy) does not exist.");
                }
                o.push(c);
            }
        }
        return new Ut(o, i);
    }(t._query, t.firestore._databaseId, e, n[0]._document, r);
    var i = Ia(t.firestore);
    return function(t, e, n, r, i, o) {
        // Use explicit order by's because it has to match the query the user made
        var s = t.explicitOrderBy;
        if (i.length > s.length) throw new N(S.INVALID_ARGUMENT, "Too many arguments provided to " + r + "(). The number of arguments must be less than or equal to the number of orderBy() clauses");
        for (var u = [], a = 0; a < i.length; a++) {
            var c = i[a];
            if (s[a].field.isKeyField()) {
                if ("string" != typeof c) throw new N(S.INVALID_ARGUMENT, "Invalid query. Expected a string for document ID in " + r + "(), but got a " + typeof c);
                if (!Zt(t) && -1 !== c.indexOf("/")) throw new N(S.INVALID_ARGUMENT, "Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to " + r + "() must be a plain document ID, but '" + c + "' contains a slash.");
                var h = t.path.child(W.fromString(c));
                if (!at.isDocumentKey(h)) throw new N(S.INVALID_ARGUMENT, "Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to " + r + "() must result in a valid document path, but '" + h + "' is not because it contains an odd number of segments.");
                var f = new at(h);
                u.push(vt(e, f));
            } else {
                var l = Ca(n, r, c);
                u.push(l);
            }
        }
        return new Ut(u, o);
    }(t._query, t.firestore._databaseId, i, e, n, r);
}

function oc(t, e, n) {
    if ("string" == typeof (n = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(n))) {
        if ("" === n) throw new N(S.INVALID_ARGUMENT, "Invalid query. When querying with FieldPath.documentId(), you must provide a valid document ID, but it was an empty string.");
        if (!Zt(e) && -1 !== n.indexOf("/")) throw new N(S.INVALID_ARGUMENT, "Invalid query. When querying a collection by FieldPath.documentId(), you must provide a plain document ID, but '" + n + "' contains a '/' character.");
        var r = e.path.child(W.fromString(n));
        if (!at.isDocumentKey(r)) throw new N(S.INVALID_ARGUMENT, "Invalid query. When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '" + r + "' is not because it has an odd number of segments (" + r.length + ").");
        return vt(t, new at(r));
    }
    if (n instanceof Yu) return vt(t, n._key);
    throw new N(S.INVALID_ARGUMENT, "Invalid query. When querying with FieldPath.documentId(), you must provide a valid string or a DocumentReference, but it was: " + Gu(n) + ".");
}

/**
 * Validates that the value passed into a disjunctive filter satisfies all
 * array requirements.
 */ function sc(t, e) {
    if (!Array.isArray(t) || 0 === t.length) throw new N(S.INVALID_ARGUMENT, "Invalid Query. A non-empty array is required for '" + e.toString() + "' filters.");
    if (t.length > 10) throw new N(S.INVALID_ARGUMENT, "Invalid Query. '" + e.toString() + "' filters support a maximum of 10 elements in the value array.");
}

function uc(t, e, n) {
    if (!n.isEqual(e)) throw new N(S.INVALID_ARGUMENT, "Invalid query. You have a where filter with an inequality (<, <=, !=, not-in, >, or >=) on field '" + e.toString() + "' and so you must also use '" + e.toString() + "' as your first argument to orderBy(), but your first orderBy() is on field '" + n.toString() + "' instead.");
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Converts Firestore's internal types to the JavaScript types that we expose
 * to the user.
 *
 * @internal
 */ var ac = /** @class */ function() {
    function t() {}
    return t.prototype.convertValue = function(t, e) {
        switch (void 0 === e && (e = "none"), ct(t)) {
          case 0 /* NullValue */ :
            return null;

          case 1 /* BooleanValue */ :
            return t.booleanValue;

          case 2 /* NumberValue */ :
            return tt(t.integerValue || t.doubleValue);

          case 3 /* TimestampValue */ :
            return this.convertTimestamp(t.timestampValue);

          case 4 /* ServerTimestampValue */ :
            return this.convertServerTimestamp(t, e);

          case 5 /* StringValue */ :
            return t.stringValue;

          case 6 /* BlobValue */ :
            return this.convertBytes(et(t.bytesValue));

          case 7 /* RefValue */ :
            return this.convertReference(t.referenceValue);

          case 8 /* GeoPointValue */ :
            return this.convertGeoPoint(t.geoPointValue);

          case 9 /* ArrayValue */ :
            return this.convertArray(t.arrayValue, e);

          case 10 /* ObjectValue */ :
            return this.convertObject(t.mapValue, e);

          default:
            throw L();
        }
    }, t.prototype.convertObject = function(t, e) {
        var n = this, r = {};
        return G(t.fields, (function(t, i) {
            r[t] = n.convertValue(i, e);
        })), r;
    }, t.prototype.convertGeoPoint = function(t) {
        return new pa(tt(t.latitude), tt(t.longitude));
    }, t.prototype.convertArray = function(t, e) {
        var n = this;
        return (t.values || []).map((function(t) {
            return n.convertValue(t, e);
        }));
    }, t.prototype.convertServerTimestamp = function(t, e) {
        switch (e) {
          case "previous":
            var n = rt(t);
            return null == n ? null : this.convertValue(n, e);

          case "estimate":
            return this.convertTimestamp(it(t));

          default:
            return null;
        }
    }, t.prototype.convertTimestamp = function(t) {
        var e = Z(t);
        return new B(e.seconds, e.nanos);
    }, t.prototype.convertDocumentKey = function(t, e) {
        var n = W.fromString(t);
        O(Yn(n));
        var r = new Cu(n.get(1), n.get(3)), i = new at(n.popFirst(5));
        return r.isEqual(e) || 
        // TODO(b/64130202): Somehow support foreign references.
        x("Document " + i + " contains a document reference within a different database (" + r.projectId + "/" + r.database + ") which is not supported. It will be treated as a reference in the current database (" + e.projectId + "/" + e.database + ") instead."), 
        i;
    }, t;
}();

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Converts custom model object of type T into DocumentData by applying the
 * converter if it exists.
 *
 * This function is used when converting user objects to DocumentData
 * because we want to provide the user with a more specific error message if
 * their set() or fails due to invalid data originating from a toFirestore()
 * call.
 */ function cc(t, e, n) {
    // Cast to `any` in order to satisfy the union type constraint on
    // toFirestore().
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return t ? n && (n.merge || n.mergeFields) ? t.toFirestore(e, n) : t.toFirestore(e) : e;
}

var hc = /** @class */ function(t) {
    function e(e) {
        var n = this;
        return (n = t.call(this) || this).firestore = e, n;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.convertBytes = function(t) {
        return new la(t);
    }, e.prototype.convertReference = function(t) {
        var e = this.convertDocumentKey(t, this.firestore._databaseId);
        return new Yu(this.firestore, /* converter= */ null, e);
    }, e;
}(ac), fc = /** @class */ function() {
    /** @hideconstructor */
    function t(t, e) {
        this._firestore = t, this._commitHandler = e, this._mutations = [], this._committed = !1, 
        this._dataReader = Ia(t);
    }
    return t.prototype.set = function(t, e, n) {
        this._verifyNotCommitted();
        var r = lc(t, this._firestore), i = cc(r.converter, e, n), o = Ta(this._dataReader, "WriteBatch.set", r._key, i, null !== r.converter, n);
        return this._mutations.push(o.toMutation(r._key, Ne.none())), this;
    }, t.prototype.update = function(t, e, n) {
        for (var r = [], i = 3; i < arguments.length; i++) r[i - 3] = arguments[i];
        this._verifyNotCommitted();
        var o, s = lc(t, this._firestore);
        // For Compat types, we have to "extract" the underlying types before
        // performing validation.
                return o = "string" == typeof (e = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(e)) || e instanceof fa ? xa(this._dataReader, "WriteBatch.update", s._key, e, n, r) : ka(this._dataReader, "WriteBatch.update", s._key, e), 
        this._mutations.push(o.toMutation(s._key, Ne.exists(!0))), this;
    }, 
    /**
     * Deletes the document referred to by the provided {@link DocumentReference}.
     *
     * @param documentRef - A reference to the document to be deleted.
     * @returns This `WriteBatch` instance. Used for chaining method calls.
     */
    t.prototype.delete = function(t) {
        this._verifyNotCommitted();
        var e = lc(t, this._firestore);
        return this._mutations = this._mutations.concat(new Be(e._key, Ne.none())), this;
    }, 
    /**
     * Commits all of the writes in this write batch as a single atomic unit.
     *
     * The result of these writes will only be reflected in document reads that
     * occur after the returned Promise resolves. If the client is offline, the
     * write fails. If you would like to see local modifications or buffer writes
     * until the client is online, use the full Firestore SDK.
     *
     * @returns A Promise resolved once all of the writes in the batch have been
     * successfully written to the backend as an atomic unit (note that it won't
     * resolve while you're offline).
     */
    t.prototype.commit = function() {
        return this._verifyNotCommitted(), this._committed = !0, this._mutations.length > 0 ? this._commitHandler(this._mutations) : Promise.resolve();
    }, t.prototype._verifyNotCommitted = function() {
        if (this._committed) throw new N(S.FAILED_PRECONDITION, "A write batch can no longer be used after commit() has been called.");
    }, t;
}();

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A write batch, used to perform multiple writes as a single atomic unit.
 *
 * A `WriteBatch` object can be acquired by calling {@link writeBatch}. It
 * provides methods for adding writes to the write batch. None of the writes
 * will be committed (or visible locally) until {@link WriteBatch.commit} is
 * called.
 */ function lc(t, e) {
    if ((t = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(t)).firestore !== e) throw new N(S.INVALID_ARGUMENT, "Provided document reference is from a different Firestore instance.");
    return t;
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// TODO(mrschmidt) Consider using `BaseTransaction` as the base class in the
// legacy SDK.
/**
 * A reference to a transaction.
 *
 * The `Transaction` object passed to a transaction's `updateFunction` provides
 * the methods to read and write data within the transaction context. See
 * {@link runTransaction}.
 */ var dc = /** @class */ function(t) {
    function e(e) {
        var n = this;
        return (n = t.call(this) || this).firestore = e, n;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.convertBytes = function(t) {
        return new la(t);
    }, e.prototype.convertReference = function(t) {
        var e = this.convertDocumentKey(t, this.firestore._databaseId);
        return new Yu(this.firestore, /* converter= */ null, e);
    }, e;
}(ac);

/**
 * Reads the document referred to by this `DocumentReference` from cache.
 * Returns an error if the document is not currently cached.
 *
 * @returns A Promise resolved with a `DocumentSnapshot` containing the
 * current document contents.
 */ function pc(t, e, n) {
    for (var r = [], i = 3; i < arguments.length; i++) r[i - 3] = arguments[i];
    t = Qu(t, Yu);
    var o = Qu(t.firestore, sa), s = Ia(o);
    return vc(o, [ ("string" == typeof (
    // For Compat types, we have to "extract" the underlying types before
    // performing validation.
    e = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(e)) || e instanceof fa ? xa(s, "updateDoc", t._key, e, n, r) : ka(s, "updateDoc", t._key, e)).toMutation(t._key, Ne.exists(!0)) ]);
}

/**
 * Deletes the document referred to by the specified `DocumentReference`.
 *
 * @param reference - A reference to the document to delete.
 * @returns A Promise resolved once the document has been successfully
 * deleted from the backend (note that it won't resolve while you're offline).
 */ function yc(t) {
    for (var e, n, r, i = [], o = 1; o < arguments.length; o++) i[o - 1] = arguments[o];
    t = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(t);
    var s = {
        includeMetadataChanges: !1
    }, a = 0;
    "object" != typeof i[a] || ra(i[a]) || (s = i[a], a++);
    var c, h, f, l = {
        includeMetadataChanges: s.includeMetadataChanges
    };
    if (ra(i[a])) {
        var d = i[a];
        i[a] = null === (e = d.next) || void 0 === e ? void 0 : e.bind(d), i[a + 1] = null === (n = d.error) || void 0 === n ? void 0 : n.bind(d), 
        i[a + 2] = null === (r = d.complete) || void 0 === r ? void 0 : r.bind(d);
    }
    if (t instanceof Yu) h = Qu(t.firestore, sa), f = Ht(t._key.path), c = {
        next: function(e) {
            i[a] && i[a](mc(h, t, e));
        },
        error: i[a + 1],
        complete: i[a + 2]
    }; else {
        var p = Qu(t, $u);
        h = Qu(p.firestore, sa), f = p._query;
        var y = new dc(h);
        c = {
            next: function(t) {
                i[a] && i[a](new Wa(h, y, p, t));
            },
            error: i[a + 1],
            complete: i[a + 2]
        }, $a(t._query);
    }
    return function(t, e, n, r) {
        var i = this, o = new pu(r), s = new bs(e, o, n);
        return t.asyncQueue.enqueueAndForget((function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(i, void 0, void 0, (function() {
                var e;
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                    switch (n.label) {
                      case 0:
                        return e = ys, [ 4 /*yield*/ , Du(t) ];

                      case 1:
                        return [ 2 /*return*/ , e.apply(void 0, [ n.sent(), s ]) ];
                    }
                }));
            }));
        })), function() {
            o.Wo(), t.asyncQueue.enqueueAndForget((function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(i, void 0, void 0, (function() {
                    var e;
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                        switch (n.label) {
                          case 0:
                            return e = vs, [ 4 /*yield*/ , Du(t) ];

                          case 1:
                            return [ 2 /*return*/ , e.apply(void 0, [ n.sent(), s ]) ];
                        }
                    }));
                }));
            }));
        };
    }(ua(h), f, l, c);
}

/**
 * Locally writes `mutations` on the async queue.
 * @internal
 */ function vc(t, e) {
    return function(t, e) {
        var n = this, r = new wr;
        return t.asyncQueue.enqueueAndForget((function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(n, void 0, void 0, (function() {
                var n;
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
                    switch (i.label) {
                      case 0:
                        return n = Os, [ 4 /*yield*/ , Nu(t) ];

                      case 1:
                        return [ 2 /*return*/ , n.apply(void 0, [ i.sent(), e, r ]) ];
                    }
                }));
            }));
        })), r.promise;
    }(ua(t), e);
}

/**
 * Converts a ViewSnapshot that contains the single document specified by `ref`
 * to a DocumentSnapshot.
 */ function mc(t, e, n) {
    var r = n.docs.get(e._key), i = new dc(t);
    return new Qa(t, i, e._key, r, new Ga(n.hasPendingWrites, n.fromCache), e.converter);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A reference to a transaction.
 *
 * The `Transaction` object passed to a transaction's `updateFunction` provides
 * the methods to read and write data within the transaction context. See
 * {@link runTransaction}.
 */ var gc = /** @class */ function(t) {
    // This class implements the same logic as the Transaction API in the Lite SDK
    // but is subclassed in order to return its own DocumentSnapshot types.
    /** @hideconstructor */
    function e(e, n) {
        var r = this;
        return (r = t.call(this, e, n) || this)._firestore = e, r;
    }
    /**
     * Reads the document referenced by the provided {@link DocumentReference}.
     *
     * @param documentRef - A reference to the document to be read.
     * @returns A `DocumentSnapshot` with the read data.
     */    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.get = function(e) {
        var n = this, r = lc(e, this._firestore), i = new dc(this._firestore);
        return t.prototype.get.call(this, e).then((function(t) {
            return new Qa(n._firestore, i, r._key, t._document, new Ga(
            /* hasPendingWrites= */ !1, 
            /* fromCache= */ !1), r.converter);
        }));
    }, e;
}(/** @class */ function() {
    /** @hideconstructor */
    function t(t, e) {
        this._firestore = t, this._transaction = e, this._dataReader = Ia(t)
        /**
     * Reads the document referenced by the provided {@link DocumentReference}.
     *
     * @param documentRef - A reference to the document to be read.
     * @returns A `DocumentSnapshot` with the read data.
     */;
    }
    return t.prototype.get = function(t) {
        var e = this, n = lc(t, this._firestore), r = new hc(this._firestore);
        return this._transaction.lookup([ n._key ]).then((function(t) {
            if (!t || 1 !== t.length) return L();
            var i = t[0];
            if (i.isFoundDocument()) return new Ba(e._firestore, r, i.key, i, n.converter);
            if (i.isNoDocument()) return new Ba(e._firestore, r, n._key, null, n.converter);
            throw L();
        }));
    }, t.prototype.set = function(t, e, n) {
        var r = lc(t, this._firestore), i = cc(r.converter, e, n), o = Ta(this._dataReader, "Transaction.set", r._key, i, null !== r.converter, n);
        return this._transaction.set(r._key, o), this;
    }, t.prototype.update = function(t, e, n) {
        for (var r = [], i = 3; i < arguments.length; i++) r[i - 3] = arguments[i];
        var o, s = lc(t, this._firestore);
        // For Compat types, we have to "extract" the underlying types before
        // performing validation.
                return o = "string" == typeof (e = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(e)) || e instanceof fa ? xa(this._dataReader, "Transaction.update", s._key, e, n, r) : ka(this._dataReader, "Transaction.update", s._key, e), 
        this._transaction.update(s._key, o), this;
    }, 
    /**
     * Deletes the document referred to by the provided {@link DocumentReference}.
     *
     * @param documentRef - A reference to the document to be deleted.
     * @returns This `Transaction` instance. Used for chaining method calls.
     */
    t.prototype.delete = function(t) {
        var e = lc(t, this._firestore);
        return this._transaction.delete(e._key), this;
    }, t;
}());

/**
 * Executes the given `updateFunction` and then attempts to commit the changes
 * applied within the transaction. If any document read within the transaction
 * has changed, Cloud Firestore retries the `updateFunction`. If it fails to
 * commit after 5 attempts, the transaction fails.
 *
 * The maximum number of writes allowed in a single transaction is 500.
 *
 * @param firestore - A reference to the Firestore database to run this
 * transaction against.
 * @param updateFunction - The function to execute within the transaction
 * context.
 * @returns If the transaction completed successfully or was explicitly aborted
 * (the `updateFunction` returned a failed promise), the promise returned by the
 * `updateFunction `is returned here. Otherwise, if the transaction failed, a
 * rejected promise with the corresponding failure error is returned.
 */
/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/** Helper function to assert Uint8Array is available at runtime. */ function wc() {
    if ("undefined" == typeof Uint8Array) throw new N(S.UNIMPLEMENTED, "Uint8Arrays are not available in this environment.");
}

/** Helper function to assert Base64 functions are available at runtime. */ function bc() {
    if ("undefined" == typeof atob) throw new N(S.UNIMPLEMENTED, "Blobs are unavailable in Firestore in this environment.");
}

/** Immutable class holding a blob (binary data) */ var Ic = /** @class */ function() {
    function t(t) {
        this._delegate = t;
    }
    return t.fromBase64String = function(e) {
        return bc(), new t(la.fromBase64String(e));
    }, t.fromUint8Array = function(e) {
        return wc(), new t(la.fromUint8Array(e));
    }, t.prototype.toBase64 = function() {
        return bc(), this._delegate.toBase64();
    }, t.prototype.toUint8Array = function() {
        return wc(), this._delegate.toUint8Array();
    }, t.prototype.isEqual = function(t) {
        return this._delegate.isEqual(t._delegate);
    }, t.prototype.toString = function() {
        return "Blob(base64: " + this.toBase64() + ")";
    }, t;
}(), Tc = /** @class */ function() {
    function t() {}
    return t.prototype.enableIndexedDbPersistence = function(t, e) {
        return function(t, e) {
            ha(t = Qu(t, sa));
            var n = ua(t), r = t._freezeSettings(), i = new lu;
            return ca(n, i, new hu(i, r.cacheSizeBytes, null == e ? void 0 : e.forceOwnership));
        }(t._delegate, {
            forceOwnership: e
        });
    }, t.prototype.enableMultiTabIndexedDbPersistence = function(t) {
        return function(t) {
            ha(t = Qu(t, sa));
            var e = ua(t), n = t._freezeSettings(), r = new lu;
            return ca(e, r, new fu(r, n.cacheSizeBytes));
        }(t._delegate);
    }, t.prototype.clearIndexedDbPersistence = function(t) {
        return function(t) {
            var e = this;
            if (t._initialized && !t._terminated) throw new N(S.FAILED_PRECONDITION, "Persistence can only be cleared before a Firestore instance is initialized or after it is terminated.");
            var n = new wr;
            return t._queue.enqueueAndForgetEvenWhileRestricted((function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
                    var e;
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
                        switch (r.label) {
                          case 0:
                            return r.trys.push([ 0, 2, , 3 ]), [ 4 /*yield*/ , function(t) {
                                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                                    var e;
                                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                                        switch (n.label) {
                                          case 0:
                                            return Tr.yt() ? (e = t + "main", [ 4 /*yield*/ , Tr.delete(e) ]) : [ 2 /*return*/ , Promise.resolve() ];

                                          case 1:
                                            return n.sent(), [ 2 /*return*/ ];
                                        }
                                    }));
                                }));
                            }(Li(t._databaseId, t._persistenceKey)) ];

                          case 1:
                            return r.sent(), n.resolve(), [ 3 /*break*/ , 3 ];

                          case 2:
                            return e = r.sent(), n.reject(e), [ 3 /*break*/ , 3 ];

                          case 3:
                            return [ 2 /*return*/ ];
                        }
                    }));
                }));
            })), n.promise
            /**
 * Waits until all currently pending writes for the active user have been
 * acknowledged by the backend.
 *
 * The returned Promise resolves immediately if there are no outstanding writes.
 * Otherwise, the Promise waits for all previously issued writes (including
 * those written in a previous app session), but it does not wait for writes
 * that were added after the function is called. If you want to wait for
 * additional writes, call `waitForPendingWrites()` again.
 *
 * Any outstanding `waitForPendingWrites()` Promises are rejected during user
 * changes.
 *
 * @returns A Promise which resolves when all currently pending writes have been
 * acknowledged by the backend.
 */;
        }(t._delegate);
    }, t;
}(), Ec = /** @class */ function() {
    function t(t, e, n) {
        var r = this;
        this._delegate = e, this.tu = n, this.INTERNAL = {
            delete: function() {
                return r.terminate();
            }
        }, t instanceof Cu || (this.eu = t);
    }
    return Object.defineProperty(t.prototype, "_databaseId", {
        get: function() {
            return this._delegate._databaseId;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.settings = function(t) {
        var e = this._delegate._getSettings();
        t.merge || e.host === t.host || C("You are overriding the original host. If you did not intend to override your settings, use {merge: true}."), 
        t.merge && 
        // Remove the property from the settings once the merge is completed
        delete (t = Object.assign(Object.assign({}, e), t)).merge, this._delegate._setSettings(t);
    }, t.prototype.useEmulator = function(t, e, n) {
        void 0 === n && (n = {}), function(t, e, n, r) {
            void 0 === r && (r = {});
            var i = (t = Qu(t, Hu))._getSettings();
            if ("firestore.googleapis.com" !== i.host && i.host !== e && C("Host has been set in both settings() and useEmulator(), emulator host will be used"), 
            t._setSettings(Object.assign(Object.assign({}, i), {
                host: e + ":" + n,
                ssl: !1
            })), r.mockUserToken) {
                // Let createMockUserToken validate first (catches common mistakes like
                // invalid field "uid" and missing field "sub" / "user_id".)
                var o = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.createMockUserToken)(r.mockUserToken), s = r.mockUserToken.sub || r.mockUserToken.user_id;
                if (!s) throw new N(S.INVALID_ARGUMENT, "mockUserToken must contain 'sub' or 'user_id' field!");
                t._credentials = new Pu(new Lu(o, new ho(s)));
            }
        }(this._delegate, t, e, n);
    }, t.prototype.enableNetwork = function() {
        return function(t) {
            var e = this;
            return t.asyncQueue.enqueue((function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
                    var e, n;
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
                        switch (r.label) {
                          case 0:
                            return [ 4 /*yield*/ , Eu(t) ];

                          case 1:
                            return e = r.sent(), [ 4 /*yield*/ , Su(t) ];

                          case 2:
                            return n = r.sent(), [ 2 /*return*/ , (e.setNetworkEnabled(!0), function(t) {
                                var e = P(t);
                                return e.Or.delete(0 /* UserDisabled */), Mo(e);
                            }(n)) ];
                        }
                    }));
                }));
            }));
        }
        /** Disables the network connection. Pending operations will not complete. */ (ua(Qu(this._delegate, sa)));
    }, t.prototype.disableNetwork = function() {
        return function(t) {
            var e = this;
            return t.asyncQueue.enqueue((function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
                    var e, n;
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
                        switch (r.label) {
                          case 0:
                            return [ 4 /*yield*/ , Eu(t) ];

                          case 1:
                            return e = r.sent(), [ 4 /*yield*/ , Su(t) ];

                          case 2:
                            return n = r.sent(), [ 2 /*return*/ , (e.setNetworkEnabled(!1), function(t) {
                                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                                    var e;
                                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                                        switch (n.label) {
                                          case 0:
                                            return (e = P(t)).Or.add(0 /* UserDisabled */), [ 4 /*yield*/ , Vo(e) ];

                                          case 1:
                                            return n.sent(), 
                                            // Set the OnlineState to Offline so get()s return from cache, etc.
                                            e.Br.set("Offline" /* Offline */), [ 2 /*return*/ ];
                                        }
                                    }));
                                }));
                            }(n)) ];
                        }
                    }));
                }));
            }));
        }
        /**
 * Returns a Promise that resolves when all writes that were pending at the time
 * this method was called received server acknowledgement. An acknowledgement
 * can be either acceptance or rejection.
 */ (ua(Qu(this._delegate, sa)));
    }, t.prototype.enablePersistence = function(t) {
        var e = !1, n = !1;
        return t && Bu("synchronizeTabs", e = !!t.synchronizeTabs, "experimentalForceOwningTab", n = !!t.experimentalForceOwningTab), 
        e ? this.tu.enableMultiTabIndexedDbPersistence(this) : this.tu.enableIndexedDbPersistence(this, n);
    }, t.prototype.clearPersistence = function() {
        return this.tu.clearIndexedDbPersistence(this);
    }, t.prototype.terminate = function() {
        return this.eu && (this.eu._removeServiceInstance("firestore"), this.eu._removeServiceInstance("firestore-exp")), 
        this._delegate._delete();
    }, t.prototype.waitForPendingWrites = function() {
        return function(t) {
            var e = this, n = new wr;
            return t.asyncQueue.enqueueAndForget((function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(e, void 0, void 0, (function() {
                    var e;
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
                        switch (r.label) {
                          case 0:
                            return e = Us, [ 4 /*yield*/ , Nu(t) ];

                          case 1:
                            return [ 2 /*return*/ , e.apply(void 0, [ r.sent(), n ]) ];
                        }
                    }));
                }));
            })), n.promise;
        }(ua(Qu(this._delegate, sa)));
    }, t.prototype.onSnapshotsInSync = function(t) {
        return function(t, e) {
            return function(t, e) {
                var n = this, r = new pu(e);
                return t.asyncQueue.enqueueAndForget((function() {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(n, void 0, void 0, (function() {
                        var e;
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                            switch (n.label) {
                              case 0:
                                return e = function(t, e) {
                                    P(t).Gr.add(e), 
                                    // Immediately fire an initial event, indicating all existing listeners
                                    // are in-sync.
                                    e.next();
                                }, [ 4 /*yield*/ , Du(t) ];

                              case 1:
                                return [ 2 /*return*/ , e.apply(void 0, [ n.sent(), r ]) ];
                            }
                        }));
                    }));
                })), function() {
                    r.Wo(), t.asyncQueue.enqueueAndForget((function() {
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(n, void 0, void 0, (function() {
                            var e;
                            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                                switch (n.label) {
                                  case 0:
                                    return e = function(t, e) {
                                        P(t).Gr.delete(e);
                                    }, [ 4 /*yield*/ , Du(t) ];

                                  case 1:
                                    return [ 2 /*return*/ , e.apply(void 0, [ n.sent(), r ]) ];
                                }
                            }));
                        }));
                    }));
                }
                /**
 * Takes an updateFunction in which a set of reads and writes can be performed
 * atomically. In the updateFunction, the client can read and write values
 * using the supplied transaction object. After the updateFunction, all
 * changes will be committed. If a retryable error occurs (ex: some other
 * client has changed any of the data referenced), then the updateFunction
 * will be called again after a backoff. If the updateFunction still fails
 * after all retries, then the transaction will be rejected.
 *
 * The transaction object passed to the updateFunction contains methods for
 * accessing documents and collections. Unlike other datastore access, data
 * accessed with the transaction will not reflect local changes that have not
 * been committed. For this reason, it is required that all reads are
 * performed before any writes. Transactions must be performed while online.
 */;
            }(ua(t = Qu(t, sa)), ra(e) ? e : {
                next: e
            });
        }(this._delegate, t);
    }, Object.defineProperty(t.prototype, "app", {
        get: function() {
            if (!this.eu) throw new N(S.FAILED_PRECONDITION, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
            return this.eu;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.collection = function(t) {
        try {
            return new Vc(this, Ju(this._delegate, t));
        } catch (t) {
            throw xc(t, "collection()", "Firestore.collection()");
        }
    }, t.prototype.doc = function(t) {
        try {
            return new kc(this, Zu(this._delegate, t));
        } catch (t) {
            throw xc(t, "doc()", "Firestore.doc()");
        }
    }, t.prototype.collectionGroup = function(t) {
        try {
            return new Pc(this, function(t, e) {
                if (t = Qu(t, Hu), qu("collectionGroup", "collection id", e), e.indexOf("/") >= 0) throw new N(S.INVALID_ARGUMENT, "Invalid collection ID '" + e + "' passed to function collectionGroup(). Collection IDs must not contain '/'.");
                return new $u(t, 
                /* converter= */ null, 
                /**
 * Creates a new Query for a collection group query that matches all documents
 * within the provided collection group.
 */
                function(t) {
                    return new zt(W.emptyPath(), t);
                }(e));
            }(this._delegate, t));
        } catch (t) {
            throw xc(t, "collectionGroup()", "Firestore.collectionGroup()");
        }
    }, t.prototype.runTransaction = function(t) {
        var e = this;
        return function(t, e) {
            return function(t, e) {
                var n = this, r = new wr;
                return t.asyncQueue.enqueueAndForget((function() {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(n, void 0, void 0, (function() {
                        var n;
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
                            switch (i.label) {
                              case 0:
                                return [ 4 /*yield*/ , function(t) {
                                    return Tu(t).then((function(t) {
                                        return t.datastore;
                                    }));
                                }(t) ];

                              case 1:
                                return n = i.sent(), new mu(t.asyncQueue, n, e, r).run(), [ 2 /*return*/ ];
                            }
                        }));
                    }));
                })), r.promise;
            }(ua(t), (function(n) {
                return e(new gc(t, n));
            }));
        }(this._delegate, (function(n) {
            return t(new Nc(e, n));
        }));
    }, t.prototype.batch = function() {
        var t = this;
        return ua(this._delegate), new Dc(new fc(this._delegate, (function(e) {
            return vc(t._delegate, e);
        })));
    }, t.prototype.loadBundle = function(t) {
        throw new N(S.FAILED_PRECONDITION, '"loadBundle()" does not exist, have you imported "firebase/firestore/bundle"?');
    }, t.prototype.namedQuery = function(t) {
        throw new N(S.FAILED_PRECONDITION, '"namedQuery()" does not exist, have you imported "firebase/firestore/bundle"?');
    }, t;
}(), _c = /** @class */ function(t) {
    function e(e) {
        var n = this;
        return (n = t.call(this) || this).firestore = e, n;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.convertBytes = function(t) {
        return new Ic(new la(t));
    }, e.prototype.convertReference = function(t) {
        var e = this.convertDocumentKey(t, this.firestore._databaseId);
        return kc.nu(e, this.firestore, /* converter= */ null);
    }, e;
}(ac);

/**
 * The persistence provider included with the full Firestore SDK.
 */ function Sc(t) {
    var e;
    e = t, D.setLogLevel(e);
}

/**
 * A reference to a transaction.
 */ var Nc = /** @class */ function() {
    function t(t, e) {
        this._firestore = t, this._delegate = e, this._userDataWriter = new _c(t);
    }
    return t.prototype.get = function(t) {
        var e = this, n = qc(t);
        return this._delegate.get(n).then((function(t) {
            return new Lc(e._firestore, new Qa(e._firestore._delegate, e._userDataWriter, t._key, t._document, t.metadata, n.converter));
        }));
    }, t.prototype.set = function(t, e, n) {
        var r = qc(t);
        return n ? (Uu("Transaction.set", n), this._delegate.set(r, e, n)) : this._delegate.set(r, e), 
        this;
    }, t.prototype.update = function(t, e, n) {
        for (var r, i = [], o = 3; o < arguments.length; o++) i[o - 3] = arguments[o];
        var s = qc(t);
        return 2 === arguments.length ? this._delegate.update(s, e) : (r = this._delegate).update.apply(r, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ s, e, n ], i)), 
        this;
    }, t.prototype.delete = function(t) {
        var e = qc(t);
        return this._delegate.delete(e), this;
    }, t;
}(), Dc = /** @class */ function() {
    function t(t) {
        this._delegate = t;
    }
    return t.prototype.set = function(t, e, n) {
        var r = qc(t);
        return n ? (Uu("WriteBatch.set", n), this._delegate.set(r, e, n)) : this._delegate.set(r, e), 
        this;
    }, t.prototype.update = function(t, e, n) {
        for (var r, i = [], o = 3; o < arguments.length; o++) i[o - 3] = arguments[o];
        var s = qc(t);
        return 2 === arguments.length ? this._delegate.update(s, e) : (r = this._delegate).update.apply(r, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ s, e, n ], i)), 
        this;
    }, t.prototype.delete = function(t) {
        var e = qc(t);
        return this._delegate.delete(e), this;
    }, t.prototype.commit = function() {
        return this._delegate.commit();
    }, t;
}(), Ac = /** @class */ function() {
    function t(t, e, n) {
        this._firestore = t, this._userDataWriter = e, this._delegate = n;
    }
    return t.prototype.fromFirestore = function(t, e) {
        var n = new za(this._firestore._delegate, this._userDataWriter, t._key, t._document, t.metadata, 
        /* converter= */ null);
        return this._delegate.fromFirestore(new Oc(this._firestore, n), null != e ? e : {});
    }, t.prototype.toFirestore = function(t, e) {
        return e ? this._delegate.toFirestore(t, e) : this._delegate.toFirestore(t);
    }, 
    // Use the same instance of `FirestoreDataConverter` for the given instances
    // of `Firestore` and `PublicFirestoreDataConverter` so that isEqual() will
    // compare equal for two objects created with the same converter instance.
    t.su = function(e, n) {
        var r = t.iu, i = r.get(e);
        i || (i = new WeakMap, r.set(e, i));
        var o = i.get(n);
        return o || (o = new t(e, new _c(e), n), i.set(n, o)), o;
    }, t;
}();

Ac.iu = new WeakMap;

/**
 * A reference to a particular document in a collection in the database.
 */
var kc = /** @class */ function() {
    function t(t, e) {
        this.firestore = t, this._delegate = e, this._userDataWriter = new _c(t);
    }
    return t.ru = function(e, n, r) {
        if (e.length % 2 != 0) throw new N(S.INVALID_ARGUMENT, "Invalid document reference. Document references must have an even number of segments, but " + e.canonicalString() + " has " + e.length);
        return new t(n, new Yu(n._delegate, r, new at(e)));
    }, t.nu = function(e, n, r) {
        return new t(n, new Yu(n._delegate, r, e));
    }, Object.defineProperty(t.prototype, "id", {
        get: function() {
            return this._delegate.id;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "parent", {
        get: function() {
            return new Vc(this.firestore, this._delegate.parent);
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "path", {
        get: function() {
            return this._delegate.path;
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.collection = function(t) {
        try {
            return new Vc(this.firestore, Ju(this._delegate, t));
        } catch (t) {
            throw xc(t, "collection()", "DocumentReference.collection()");
        }
    }, t.prototype.isEqual = function(t) {
        return (t = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(t)) instanceof Yu && ta(this._delegate, t);
    }, t.prototype.set = function(t, e) {
        e = Uu("DocumentReference.set", e);
        try {
            return function(t, e, n) {
                t = Qu(t, Yu);
                var r = Qu(t.firestore, sa), i = cc(t.converter, e, n);
                return vc(r, [ Ta(Ia(r), "setDoc", t._key, i, null !== t.converter, n).toMutation(t._key, Ne.none()) ]);
            }(this._delegate, t, e);
        } catch (t) {
            throw xc(t, "setDoc()", "DocumentReference.set()");
        }
    }, t.prototype.update = function(t, e) {
        for (var n = [], r = 2; r < arguments.length; r++) n[r - 2] = arguments[r];
        try {
            return 1 === arguments.length ? pc(this._delegate, t) : pc.apply(void 0, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ this._delegate, t, e ], n));
        } catch (t) {
            throw xc(t, "updateDoc()", "DocumentReference.update()");
        }
    }, t.prototype.delete = function() {
        return vc(Qu((t = this._delegate).firestore, sa), [ new Be(t._key, Ne.none()) ]);
        var t;
        /**
 * Add a new document to specified `CollectionReference` with the given data,
 * assigning it a document ID automatically.
 *
 * @param reference - A reference to the collection to add this document to.
 * @param data - An Object containing the data for the new document.
 * @returns A Promise resolved with a `DocumentReference` pointing to the
 * newly created document after it has been written to the backend (Note that it
 * won't resolve while you're offline).
 */    }, t.prototype.onSnapshot = function() {
        for (var t = this, e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
        var r = Cc(e), i = Rc(e, (function(e) {
            return new Lc(t.firestore, new Qa(t.firestore._delegate, t._userDataWriter, e._key, e._document, e.metadata, t._delegate.converter));
        }));
        return yc(this._delegate, r, i);
    }, t.prototype.get = function(t) {
        var e = this;
        return ("cache" === (null == t ? void 0 : t.source) ? function(t) {
            t = Qu(t, Yu);
            var e = Qu(t.firestore, sa), n = ua(e), r = new dc(e);
            return function(t, e) {
                var n = this, r = new wr;
                return t.asyncQueue.enqueueAndForget((function() {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(n, void 0, void 0, (function() {
                        var n;
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
                            switch (i.label) {
                              case 0:
                                return n = function(t, e, n) {
                                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                                        var r, i;
                                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(o) {
                                            switch (o.label) {
                                              case 0:
                                                return o.trys.push([ 0, 2, , 3 ]), [ 4 /*yield*/ , function(t, e) {
                                                    var n = P(t);
                                                    return n.persistence.runTransaction("read document", "readonly", (function(t) {
                                                        return n.Mn.mn(t, e);
                                                    }));
                                                }(t, e) ];

                                              case 1:
                                                return (i = o.sent()).isFoundDocument() ? n.resolve(i) : i.isNoDocument() ? n.resolve(null) : n.reject(new N(S.UNAVAILABLE, "Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)")), 
                                                [ 3 /*break*/ , 3 ];

                                              case 2:
                                                return r = o.sent(), i = cs(r, "Failed to get document '" + e + " from cache"), 
                                                n.reject(i), [ 3 /*break*/ , 3 ];

                                              case 3:
                                                return [ 2 /*return*/ ];
                                            }
                                        }));
                                    }));
                                }, [ 4 /*yield*/ , _u(t) ];

                              case 1:
                                return [ 2 /*return*/ , n.apply(void 0, [ i.sent(), e, r ]) ];
                            }
                        }));
                    }));
                })), r.promise;
            }(n, t._key).then((function(n) {
                return new Qa(e, r, t._key, n, new Ga(null !== n && n.hasLocalMutations, 
                /* fromCache= */ !0), t.converter);
            }));
        }(this._delegate) : "server" === (null == t ? void 0 : t.source) ? function(t) {
            t = Qu(t, Yu);
            var e = Qu(t.firestore, sa);
            return Au(ua(e), t._key, {
                source: "server"
            }).then((function(n) {
                return mc(e, t, n);
            }));
        }(this._delegate) : function(t) {
            t = Qu(t, Yu);
            var e = Qu(t.firestore, sa);
            return Au(ua(e), t._key).then((function(n) {
                return mc(e, t, n);
            }));
        }(this._delegate)).then((function(t) {
            return new Lc(e.firestore, new Qa(e.firestore._delegate, e._userDataWriter, t._key, t._document, t.metadata, e._delegate.converter));
        }));
    }, t.prototype.withConverter = function(e) {
        return new t(this.firestore, e ? this._delegate.withConverter(Ac.su(this.firestore, e)) : this._delegate.withConverter(null));
    }, t;
}();

/**
 * Replaces the function name in an error thrown by the firestore-exp API
 * with the function names used in the classic API.
 */ function xc(t, e, n) {
    return t.message = t.message.replace(e, n), t
    /**
 * Iterates the list of arguments from an `onSnapshot` call and returns the
 * first argument that may be an `SnapshotListenOptions` object. Returns an
 * empty object if none is found.
 */;
}

function Cc(t) {
    for (var e = 0, n = t; e < n.length; e++) {
        var r = n[e];
        if ("object" == typeof r && !ra(r)) return r;
    }
    return {};
}

/**
 * Creates an observer that can be passed to the firestore-exp SDK. The
 * observer converts all observed values into the format expected by the classic
 * SDK.
 *
 * @param args - The list of arguments from an `onSnapshot` call.
 * @param wrapper - The function that converts the firestore-exp type into the
 * type used by this shim.
 */ function Rc(t, e) {
    var n, r, i;
    return {
        next: function(t) {
            i.next && i.next(e(t));
        },
        error: null === (n = (i = ra(t[0]) ? t[0] : ra(t[1]) ? t[1] : "function" == typeof t[0] ? {
            next: t[0],
            error: t[1],
            complete: t[2]
        } : {
            next: t[1],
            error: t[2],
            complete: t[3]
        }).error) || void 0 === n ? void 0 : n.bind(i),
        complete: null === (r = i.complete) || void 0 === r ? void 0 : r.bind(i)
    };
}

var Lc = /** @class */ function() {
    function t(t, e) {
        this._firestore = t, this._delegate = e;
    }
    return Object.defineProperty(t.prototype, "ref", {
        get: function() {
            return new kc(this._firestore, this._delegate.ref);
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "id", {
        get: function() {
            return this._delegate.id;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "metadata", {
        get: function() {
            return this._delegate.metadata;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "exists", {
        get: function() {
            return this._delegate.exists();
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.data = function(t) {
        return this._delegate.data(t);
    }, t.prototype.get = function(t, e) {
        return this._delegate.get(t, e);
    }, t.prototype.isEqual = function(t) {
        return Ya(this._delegate, t._delegate);
    }, t;
}(), Oc = /** @class */ function(t) {
    function e() {
        return null !== t && t.apply(this, arguments) || this;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), e.prototype.data = function(t) {
        return this._delegate.data(t);
    }, e;
}(Lc), Pc = /** @class */ function() {
    function t(t, e) {
        this.firestore = t, this._delegate = e, this._userDataWriter = new _c(t);
    }
    return t.prototype.where = function(e, n, r) {
        try {
            // The "as string" cast is a little bit of a hack. `where` accepts the
            // FieldPath Compat type as input, but is not typed as such in order to
            // not expose this via our public typings file.
            return new t(this.firestore, Ja(this._delegate, function(t, e, n) {
                var r = e, i = Ka("where", t);
                return new Za(i, r, n);
            }(e, n, r)));
        } catch (e) {
            throw xc(e, /(orderBy|where)\(\)/, "Query.$1()");
        }
    }, t.prototype.orderBy = function(e, n) {
        try {
            // The "as string" cast is a little bit of a hack. `orderBy` accepts the
            // FieldPath Compat type as input, but is not typed as such in order to
            // not expose this via our public typings file.
            return new t(this.firestore, Ja(this._delegate, function(t, e) {
                void 0 === e && (e = "asc");
                var n = e, r = Ka("orderBy", t);
                return new tc(r, n);
            }(e, n)));
        } catch (e) {
            throw xc(e, /(orderBy|where)\(\)/, "Query.$1()");
        }
    }, t.prototype.limit = function(e) {
        try {
            return new t(this.firestore, Ja(this._delegate, function(t) {
                return zu("limit", t), new ec("limit", t, "F" /* First */);
            }(e)));
        } catch (e) {
            throw xc(e, "limit()", "Query.limit()");
        }
    }, t.prototype.limitToLast = function(e) {
        try {
            return new t(this.firestore, Ja(this._delegate, function(t) {
                return zu("limitToLast", t), new ec("limitToLast", t, "L" /* Last */);
            }(e)));
        } catch (e) {
            throw xc(e, "limitToLast()", "Query.limitToLast()");
        }
    }, t.prototype.startAt = function() {
        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
        try {
            return new t(this.firestore, Ja(this._delegate, function() {
                for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
                return new nc("startAt", t, /*before=*/ !0);
            }.apply(void 0, e)));
        } catch (e) {
            throw xc(e, "startAt()", "Query.startAt()");
        }
    }, t.prototype.startAfter = function() {
        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
        try {
            return new t(this.firestore, Ja(this._delegate, function() {
                for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
                return new nc("startAfter", t, 
                /*before=*/ !1);
            }.apply(void 0, e)));
        } catch (e) {
            throw xc(e, "startAfter()", "Query.startAfter()");
        }
    }, t.prototype.endBefore = function() {
        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
        try {
            return new t(this.firestore, Ja(this._delegate, function() {
                for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
                return new rc("endBefore", t, /*before=*/ !0);
            }.apply(void 0, e)));
        } catch (e) {
            throw xc(e, "endBefore()", "Query.endBefore()");
        }
    }, t.prototype.endAt = function() {
        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
        try {
            return new t(this.firestore, Ja(this._delegate, function() {
                for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
                return new rc("endAt", t, /*before=*/ !1);
            }.apply(void 0, e)));
        } catch (e) {
            throw xc(e, "endAt()", "Query.endAt()");
        }
    }, t.prototype.isEqual = function(t) {
        return ea(this._delegate, t._delegate);
    }, t.prototype.get = function(t) {
        var e = this;
        return ("cache" === (null == t ? void 0 : t.source) ? 
        /**
     * Executes the query and returns the results as a `QuerySnapshot` from cache.
     * Returns an error if the document is not currently cached.
     *
     * @returns A Promise that will be resolved with the results of the query.
     */
        function(t) {
            t = Qu(t, $u);
            var e = Qu(t.firestore, sa), n = ua(e), r = new dc(e);
            return function(t, e) {
                var n = this, r = new wr;
                return t.asyncQueue.enqueueAndForget((function() {
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(n, void 0, void 0, (function() {
                        var n;
                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(i) {
                            switch (i.label) {
                              case 0:
                                return n = function(t, e, n) {
                                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(this, void 0, void 0, (function() {
                                        var r, i, o, s, u;
                                        return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(a) {
                                            switch (a.label) {
                                              case 0:
                                                return a.trys.push([ 0, 2, , 3 ]), [ 4 /*yield*/ , Hi(t, e, 
                                                /* usePreviousResults= */ !0) ];

                                              case 1:
                                                return u = a.sent(), r = new Ds(e, u.Bn), i = r._o(u.documents), o = r.applyChanges(i, 
                                                /* updateLimboDocuments= */ !1), n.resolve(o.snapshot), [ 3 /*break*/ , 3 ];

                                              case 2:
                                                return s = a.sent(), u = cs(s, "Failed to execute query '" + e + " against cache"), 
                                                n.reject(u), [ 3 /*break*/ , 3 ];

                                              case 3:
                                                return [ 2 /*return*/ ];
                                            }
                                        }));
                                    }));
                                }, [ 4 /*yield*/ , _u(t) ];

                              case 1:
                                return [ 2 /*return*/ , n.apply(void 0, [ i.sent(), e, r ]) ];
                            }
                        }));
                    }));
                })), r.promise;
            }(n, t._query).then((function(n) {
                return new Wa(e, r, t, n);
            }));
        }(this._delegate) : "server" === (null == t ? void 0 : t.source) ? function(t) {
            t = Qu(t, $u);
            var e = Qu(t.firestore, sa), n = ua(e), r = new dc(e);
            return ku(n, t._query, {
                source: "server"
            }).then((function(n) {
                return new Wa(e, r, t, n);
            }));
        }(this._delegate) : function(t) {
            t = Qu(t, $u);
            var e = Qu(t.firestore, sa), n = ua(e), r = new dc(e);
            return $a(t._query), ku(n, t._query).then((function(n) {
                return new Wa(e, r, t, n);
            }));
        }(this._delegate)).then((function(t) {
            return new Mc(e.firestore, new Wa(e.firestore._delegate, e._userDataWriter, e._delegate, t._snapshot));
        }));
    }, t.prototype.onSnapshot = function() {
        for (var t = this, e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
        var r = Cc(e), i = Rc(e, (function(e) {
            return new Mc(t.firestore, new Wa(t.firestore._delegate, t._userDataWriter, t._delegate, e._snapshot));
        }));
        return yc(this._delegate, r, i);
    }, t.prototype.withConverter = function(e) {
        return new t(this.firestore, e ? this._delegate.withConverter(Ac.su(this.firestore, e)) : this._delegate.withConverter(null));
    }, t;
}(), Fc = /** @class */ function() {
    function t(t, e) {
        this._firestore = t, this._delegate = e;
    }
    return Object.defineProperty(t.prototype, "type", {
        get: function() {
            return this._delegate.type;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "doc", {
        get: function() {
            return new Oc(this._firestore, this._delegate.doc);
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "oldIndex", {
        get: function() {
            return this._delegate.oldIndex;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "newIndex", {
        get: function() {
            return this._delegate.newIndex;
        },
        enumerable: !1,
        configurable: !0
    }), t;
}(), Mc = /** @class */ function() {
    function t(t, e) {
        this._firestore = t, this._delegate = e;
    }
    return Object.defineProperty(t.prototype, "query", {
        get: function() {
            return new Pc(this._firestore, this._delegate.query);
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "metadata", {
        get: function() {
            return this._delegate.metadata;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "size", {
        get: function() {
            return this._delegate.size;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "empty", {
        get: function() {
            return this._delegate.empty;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(t.prototype, "docs", {
        get: function() {
            var t = this;
            return this._delegate.docs.map((function(e) {
                return new Oc(t._firestore, e);
            }));
        },
        enumerable: !1,
        configurable: !0
    }), t.prototype.docChanges = function(t) {
        var e = this;
        return this._delegate.docChanges(t).map((function(t) {
            return new Fc(e._firestore, t);
        }));
    }, t.prototype.forEach = function(t, e) {
        var n = this;
        this._delegate.forEach((function(r) {
            t.call(e, new Oc(n._firestore, r));
        }));
    }, t.prototype.isEqual = function(t) {
        return Ya(this._delegate, t._delegate);
    }, t;
}(), Vc = /** @class */ function(t) {
    function e(e, n) {
        var r = this;
        return (r = t.call(this, e, n) || this).firestore = e, r._delegate = n, r;
    }
    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__extends)(e, t), Object.defineProperty(e.prototype, "id", {
        get: function() {
            return this._delegate.id;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(e.prototype, "path", {
        get: function() {
            return this._delegate.path;
        },
        enumerable: !1,
        configurable: !0
    }), Object.defineProperty(e.prototype, "parent", {
        get: function() {
            var t = this._delegate.parent;
            return t ? new kc(this.firestore, t) : null;
        },
        enumerable: !1,
        configurable: !0
    }), e.prototype.doc = function(t) {
        try {
            return new kc(this.firestore, void 0 === t ? Zu(this._delegate) : Zu(this._delegate, t));
        } catch (t) {
            throw xc(t, "doc()", "CollectionReference.doc()");
        }
    }, e.prototype.add = function(t) {
        var e = this;
        return function(t, e) {
            var n = Qu(t.firestore, sa), r = Zu(t), i = cc(t.converter, e);
            return vc(n, [ Ta(Ia(t.firestore), "addDoc", r._key, i, null !== t.converter, {}).toMutation(r._key, Ne.exists(!1)) ]).then((function() {
                return r;
            }));
        }(this._delegate, t).then((function(t) {
            return new kc(e.firestore, t);
        }));
    }, e.prototype.isEqual = function(t) {
        return ta(this._delegate, t._delegate);
    }, e.prototype.withConverter = function(t) {
        return new e(this.firestore, t ? this._delegate.withConverter(Ac.su(this.firestore, t)) : this._delegate.withConverter(null));
    }, e;
}(Pc);

function qc(t) {
    return Qu(t, Yu);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// The objects that are a part of this API are exposed to third-parties as
// compiled javascript so we want to flag our private members with a leading
// underscore to discourage their use.
/**
 * A `FieldPath` refers to a field in a document. The path may consist of a
 * single field name (referring to a top-level field in the document), or a list
 * of field names (referring to a nested field in the document).
 */ var Uc = /** @class */ function() {
    /**
     * Creates a FieldPath from the provided field names. If more than one field
     * name is provided, the path will point to a nested field in a document.
     *
     * @param fieldNames - A list of field names.
     */
    function t() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
        this._delegate = new (fa.bind.apply(fa, (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__spreadArray)([ void 0 ], t)));
    }
    return t.documentId = function() {
        /**
         * Internal Note: The backend doesn't technically support querying by
         * document ID. Instead it queries by the entire document name (full path
         * included), but in the cases we currently support documentId(), the net
         * effect is the same.
         */
        return new t(Y.keyField().canonicalString());
    }, t.prototype.isEqual = function(t) {
        return (t = (0,_firebase_util__WEBPACK_IMPORTED_MODULE_0__.getModularInstance)(t)) instanceof fa && this._delegate._internalPath.isEqual(t._internalPath);
    }, t;
}(), Bc = /** @class */ function() {
    function t(t) {
        this._delegate = t;
    }
    return t.serverTimestamp = function() {
        var e = new Sa("serverTimestamp");
        return e._methodName = "FieldValue.serverTimestamp", new t(e);
    }, t.delete = function() {
        var e = new Ea("deleteField");
        return e._methodName = "FieldValue.delete", new t(e);
    }, t.arrayUnion = function() {
        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
        var r = 
        /**
 * Returns a special value that can be used with {@link @firebase/firestore/lite#(setDoc:1)} or {@link
 * @firebase/firestore/lite#(updateDoc:1)} that tells the server to union the given elements with any array
 * value that already exists on the server. Each specified element that doesn't
 * already exist in the array will be added to the end. If the field being
 * modified is not already an array it will be overwritten with an array
 * containing exactly the specified elements.
 *
 * @param elements - The elements to union into the array.
 * @returns The `FieldValue` sentinel for use in a call to `setDoc()` or
 * `updateDoc()`.
 */
        function() {
            for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
            // NOTE: We don't actually parse the data until it's used in set() or
            // update() since we'd need the Firestore instance to do this.
                        return new Na("arrayUnion", t);
        }.apply(void 0, e);
        return r._methodName = "FieldValue.arrayUnion", new t(r);
    }, t.arrayRemove = function() {
        for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
        var r = function() {
            for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
            // NOTE: We don't actually parse the data until it's used in set() or
            // update() since we'd need the Firestore instance to do this.
                        return new Da("arrayRemove", t);
        }.apply(void 0, e);
        return r._methodName = "FieldValue.arrayRemove", new t(r);
    }, t.increment = function(e) {
        var n = function(t) {
            return new Aa("increment", t);
        }(e);
        return n._methodName = "FieldValue.increment", new t(n);
    }, t.prototype.isEqual = function(t) {
        return this._delegate.isEqual(t._delegate);
    }, t;
}();

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function jc(t) {
    /**
 * Loads a Firestore bundle into the local cache.
 *
 * @param firestore - The `Firestore` instance to load bundles for for.
 * @param bundleData - An object representing the bundle to be loaded. Valid objects are
 *   `ArrayBuffer`, `ReadableStream<Uint8Array>` or `string`.
 *
 * @returns
 *   A `LoadBundleTask` object, which notifies callers with progress updates, and completion
 *   or error events. It can be used as a `Promise<LoadBundleTaskProgress>`.
 */
    return function(t, e) {
        var n = ua(t = Qu(t, sa)), r = new ia;
        return function(t, e, n, r) {
            var i = this, o = function(t, e) {
                return function(t, e) {
                    return new yu(t, e);
                }(function(t, e) {
                    if (t instanceof Uint8Array) return du(t, e);
                    if (t instanceof ArrayBuffer) return du(new Uint8Array(t), e);
                    if (t instanceof ReadableStream) return t.getReader();
                    throw new Error("Source of `toByteStreamReader` has to be a ArrayBuffer or ReadableStream");
                }("string" == typeof t ? (new TextEncoder).encode(t) : t), e);
            }(n, ko(e));
            t.asyncQueue.enqueueAndForget((function() {
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(i, void 0, void 0, (function() {
                    var e;
                    return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(n) {
                        switch (n.label) {
                          case 0:
                            return e = au, [ 4 /*yield*/ , Nu(t) ];

                          case 1:
                            return e.apply(void 0, [ n.sent(), o, r ]), [ 2 /*return*/ ];
                        }
                    }));
                }));
            }));
        }(n, t._databaseId, e, r), r;
    }(this._delegate, t);
}

function Kc(t) {
    var e, n, r = this;
    return (e = this._delegate, n = t, function(t, e) {
        var n = this;
        return t.asyncQueue.enqueue((function() {
            return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__awaiter)(n, void 0, void 0, (function() {
                var n;
                return (0,tslib__WEBPACK_IMPORTED_MODULE_3__.__generator)(this, (function(r) {
                    switch (r.label) {
                      case 0:
                        return n = function(t, e) {
                            var n = P(t);
                            return n.persistence.runTransaction("Get named query", "readonly", (function(t) {
                                return n.Qe.getNamedQuery(t, e);
                            }));
                        }, [ 4 /*yield*/ , _u(t) ];

                      case 1:
                        return [ 2 /*return*/ , n.apply(void 0, [ r.sent(), e ]) ];
                    }
                }));
            }));
        }));
    }(ua(e = Qu(e, sa)), n).then((function(t) {
        return t ? new $u(e, null, t.query) : null;
    }))).then((function(t) {
        return t ? new Pc(r, t) : null;
    }));
}


//# sourceMappingURL=prebuilt-109c6673-0f51e182.js.map


/***/ }),

/***/ "./node_modules/@firebase/logger/dist/index.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@firebase/logger/dist/index.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "LogLevel": () => (/* binding */ LogLevel),
/* harmony export */   "Logger": () => (/* binding */ Logger),
/* harmony export */   "setLogLevel": () => (/* binding */ setLogLevel),
/* harmony export */   "setUserLogHandler": () => (/* binding */ setUserLogHandler)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */

function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
/**
 * A container for all of the Logger instances
 */
var instances = [];
/**
 * The JS SDK supports 5 log levels and also allows a user the ability to
 * silence the logs altogether.
 *
 * The order is a follows:
 * DEBUG < VERBOSE < INFO < WARN < ERROR
 *
 * All of the log types above the current log level will be captured (i.e. if
 * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and
 * `VERBOSE` logs will not)
 */
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
    LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
    LogLevel[LogLevel["INFO"] = 2] = "INFO";
    LogLevel[LogLevel["WARN"] = 3] = "WARN";
    LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
    LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
})(LogLevel || (LogLevel = {}));
var levelStringToEnum = {
    'debug': LogLevel.DEBUG,
    'verbose': LogLevel.VERBOSE,
    'info': LogLevel.INFO,
    'warn': LogLevel.WARN,
    'error': LogLevel.ERROR,
    'silent': LogLevel.SILENT
};
/**
 * The default log level
 */
var defaultLogLevel = LogLevel.INFO;
/**
 * By default, `console.debug` is not displayed in the developer console (in
 * chrome). To avoid forcing users to have to opt-in to these logs twice
 * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
 * logs to the `console.log` function.
 */
var ConsoleMethod = (_a = {},
    _a[LogLevel.DEBUG] = 'log',
    _a[LogLevel.VERBOSE] = 'log',
    _a[LogLevel.INFO] = 'info',
    _a[LogLevel.WARN] = 'warn',
    _a[LogLevel.ERROR] = 'error',
    _a);
/**
 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
 * messages on to their corresponding console counterparts (if the log method
 * is supported by the current log level)
 */
var defaultLogHandler = function (instance, logType) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    if (logType < instance.logLevel) {
        return;
    }
    var now = new Date().toISOString();
    var method = ConsoleMethod[logType];
    if (method) {
        console[method].apply(console, __spreadArrays(["[" + now + "]  " + instance.name + ":"], args));
    }
    else {
        throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
    }
};
var Logger = /** @class */ (function () {
    /**
     * Gives you an instance of a Logger to capture messages according to
     * Firebase's logging scheme.
     *
     * @param name The name that the logs will be associated with
     */
    function Logger(name) {
        this.name = name;
        /**
         * The log level of the given Logger instance.
         */
        this._logLevel = defaultLogLevel;
        /**
         * The main (internal) log handler for the Logger instance.
         * Can be set to a new function in internal package code but not by user.
         */
        this._logHandler = defaultLogHandler;
        /**
         * The optional, additional, user-defined log handler for the Logger instance.
         */
        this._userLogHandler = null;
        /**
         * Capture the current instance for later use
         */
        instances.push(this);
    }
    Object.defineProperty(Logger.prototype, "logLevel", {
        get: function () {
            return this._logLevel;
        },
        set: function (val) {
            if (!(val in LogLevel)) {
                throw new TypeError("Invalid value \"" + val + "\" assigned to `logLevel`");
            }
            this._logLevel = val;
        },
        enumerable: false,
        configurable: true
    });
    // Workaround for setter/getter having to be the same type.
    Logger.prototype.setLogLevel = function (val) {
        this._logLevel = typeof val === 'string' ? levelStringToEnum[val] : val;
    };
    Object.defineProperty(Logger.prototype, "logHandler", {
        get: function () {
            return this._logHandler;
        },
        set: function (val) {
            if (typeof val !== 'function') {
                throw new TypeError('Value assigned to `logHandler` must be a function');
            }
            this._logHandler = val;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(Logger.prototype, "userLogHandler", {
        get: function () {
            return this._userLogHandler;
        },
        set: function (val) {
            this._userLogHandler = val;
        },
        enumerable: false,
        configurable: true
    });
    /**
     * The functions below are all based on the `console` interface
     */
    Logger.prototype.debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.DEBUG], args));
    };
    Logger.prototype.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.VERBOSE], args));
    };
    Logger.prototype.info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.INFO], args));
    };
    Logger.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.WARN], args));
    };
    Logger.prototype.error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._userLogHandler && this._userLogHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));
        this._logHandler.apply(this, __spreadArrays([this, LogLevel.ERROR], args));
    };
    return Logger;
}());
function setLogLevel(level) {
    instances.forEach(function (inst) {
        inst.setLogLevel(level);
    });
}
function setUserLogHandler(logCallback, options) {
    var _loop_1 = function (instance) {
        var customLogLevel = null;
        if (options && options.level) {
            customLogLevel = levelStringToEnum[options.level];
        }
        if (logCallback === null) {
            instance.userLogHandler = null;
        }
        else {
            instance.userLogHandler = function (instance, level) {
                var args = [];
                for (var _i = 2; _i < arguments.length; _i++) {
                    args[_i - 2] = arguments[_i];
                }
                var message = args
                    .map(function (arg) {
                    if (arg == null) {
                        return null;
                    }
                    else if (typeof arg === 'string') {
                        return arg;
                    }
                    else if (typeof arg === 'number' || typeof arg === 'boolean') {
                        return arg.toString();
                    }
                    else if (arg instanceof Error) {
                        return arg.message;
                    }
                    else {
                        try {
                            return JSON.stringify(arg);
                        }
                        catch (ignored) {
                            return null;
                        }
                    }
                })
                    .filter(function (arg) { return arg; })
                    .join(' ');
                if (level >= (customLogLevel !== null && customLogLevel !== void 0 ? customLogLevel : instance.logLevel)) {
                    logCallback({
                        level: LogLevel[level].toLowerCase(),
                        message: message,
                        args: args,
                        type: instance.name
                    });
                }
            };
        }
    };
    for (var _i = 0, instances_1 = instances; _i < instances_1.length; _i++) {
        var instance = instances_1[_i];
        _loop_1(instance);
    }
}


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/util/dist/index.esm.js":
/*!*******************************************************!*\
  !*** ./node_modules/@firebase/util/dist/index.esm.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CONSTANTS": () => (/* binding */ CONSTANTS),
/* harmony export */   "Deferred": () => (/* binding */ Deferred),
/* harmony export */   "ErrorFactory": () => (/* binding */ ErrorFactory),
/* harmony export */   "FirebaseError": () => (/* binding */ FirebaseError),
/* harmony export */   "MAX_VALUE_MILLIS": () => (/* binding */ MAX_VALUE_MILLIS),
/* harmony export */   "RANDOM_FACTOR": () => (/* binding */ RANDOM_FACTOR),
/* harmony export */   "Sha1": () => (/* binding */ Sha1),
/* harmony export */   "areCookiesEnabled": () => (/* binding */ areCookiesEnabled),
/* harmony export */   "assert": () => (/* binding */ assert),
/* harmony export */   "assertionError": () => (/* binding */ assertionError),
/* harmony export */   "async": () => (/* binding */ async),
/* harmony export */   "base64": () => (/* binding */ base64),
/* harmony export */   "base64Decode": () => (/* binding */ base64Decode),
/* harmony export */   "base64Encode": () => (/* binding */ base64Encode),
/* harmony export */   "calculateBackoffMillis": () => (/* binding */ calculateBackoffMillis),
/* harmony export */   "contains": () => (/* binding */ contains),
/* harmony export */   "createMockUserToken": () => (/* binding */ createMockUserToken),
/* harmony export */   "createSubscribe": () => (/* binding */ createSubscribe),
/* harmony export */   "decode": () => (/* binding */ decode),
/* harmony export */   "deepCopy": () => (/* binding */ deepCopy),
/* harmony export */   "deepExtend": () => (/* binding */ deepExtend),
/* harmony export */   "errorPrefix": () => (/* binding */ errorPrefix),
/* harmony export */   "extractQuerystring": () => (/* binding */ extractQuerystring),
/* harmony export */   "getGlobal": () => (/* binding */ getGlobal),
/* harmony export */   "getModularInstance": () => (/* binding */ getModularInstance),
/* harmony export */   "getUA": () => (/* binding */ getUA),
/* harmony export */   "isAdmin": () => (/* binding */ isAdmin),
/* harmony export */   "isBrowser": () => (/* binding */ isBrowser),
/* harmony export */   "isBrowserExtension": () => (/* binding */ isBrowserExtension),
/* harmony export */   "isElectron": () => (/* binding */ isElectron),
/* harmony export */   "isEmpty": () => (/* binding */ isEmpty),
/* harmony export */   "isIE": () => (/* binding */ isIE),
/* harmony export */   "isIndexedDBAvailable": () => (/* binding */ isIndexedDBAvailable),
/* harmony export */   "isMobileCordova": () => (/* binding */ isMobileCordova),
/* harmony export */   "isNode": () => (/* binding */ isNode),
/* harmony export */   "isNodeSdk": () => (/* binding */ isNodeSdk),
/* harmony export */   "isReactNative": () => (/* binding */ isReactNative),
/* harmony export */   "isSafari": () => (/* binding */ isSafari),
/* harmony export */   "isUWP": () => (/* binding */ isUWP),
/* harmony export */   "isValidFormat": () => (/* binding */ isValidFormat),
/* harmony export */   "isValidTimestamp": () => (/* binding */ isValidTimestamp),
/* harmony export */   "issuedAtTime": () => (/* binding */ issuedAtTime),
/* harmony export */   "jsonEval": () => (/* binding */ jsonEval),
/* harmony export */   "map": () => (/* binding */ map),
/* harmony export */   "ordinal": () => (/* binding */ ordinal),
/* harmony export */   "querystring": () => (/* binding */ querystring),
/* harmony export */   "querystringDecode": () => (/* binding */ querystringDecode),
/* harmony export */   "safeGet": () => (/* binding */ safeGet),
/* harmony export */   "stringLength": () => (/* binding */ stringLength),
/* harmony export */   "stringToByteArray": () => (/* binding */ stringToByteArray$1),
/* harmony export */   "stringify": () => (/* binding */ stringify),
/* harmony export */   "validateArgCount": () => (/* binding */ validateArgCount),
/* harmony export */   "validateCallback": () => (/* binding */ validateCallback),
/* harmony export */   "validateContextObject": () => (/* binding */ validateContextObject),
/* harmony export */   "validateIndexedDBOpenable": () => (/* binding */ validateIndexedDBOpenable),
/* harmony export */   "validateNamespace": () => (/* binding */ validateNamespace)
/* harmony export */ });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");


/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */
var CONSTANTS = {
    /**
     * @define {boolean} Whether this is the client Node.js SDK.
     */
    NODE_CLIENT: false,
    /**
     * @define {boolean} Whether this is the Admin Node.js SDK.
     */
    NODE_ADMIN: false,
    /**
     * Firebase SDK Version
     */
    SDK_VERSION: '${JSCORE_VERSION}'
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Throws an error if the provided assertion is falsy
 */
var assert = function (assertion, message) {
    if (!assertion) {
        throw assertionError(message);
    }
};
/**
 * Returns an Error object suitable for throwing.
 */
var assertionError = function (message) {
    return new Error('Firebase Database (' +
        CONSTANTS.SDK_VERSION +
        ') INTERNAL ASSERT FAILED: ' +
        message);
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var stringToByteArray = function (str) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if ((c & 0xfc00) === 0xd800 &&
            i + 1 < str.length &&
            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            // Surrogate Pair
            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param bytes Array of numbers representing characters.
 * @return Stringification of the array.
 */
var byteArrayToString = function (bytes) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var pos = 0, c = 0;
    while (pos < bytes.length) {
        var c1 = bytes[pos++];
        if (c1 < 128) {
            out[c++] = String.fromCharCode(c1);
        }
        else if (c1 > 191 && c1 < 224) {
            var c2 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
        }
        else if (c1 > 239 && c1 < 365) {
            // Surrogate Pair
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            var c4 = bytes[pos++];
            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -
                0x10000;
            out[c++] = String.fromCharCode(0xd800 + (u >> 10));
            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
        }
        else {
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
        }
    }
    return out.join('');
};
// We define it as an object literal instead of a class because a class compiled down to es5 can't
// be treeshaked. https://github.com/rollup/rollup/issues/1691
// Static lookup maps, lazily populated by init_()
var base64 = {
    /**
     * Maps bytes to characters.
     */
    byteToCharMap_: null,
    /**
     * Maps characters to bytes.
     */
    charToByteMap_: null,
    /**
     * Maps bytes to websafe characters.
     * @private
     */
    byteToCharMapWebSafe_: null,
    /**
     * Maps websafe characters to bytes.
     * @private
     */
    charToByteMapWebSafe_: null,
    /**
     * Our default alphabet, shared between
     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
     */
    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
    /**
     * Our default alphabet. Value 64 (=) is special; it means "nothing."
     */
    get ENCODED_VALS() {
        return this.ENCODED_VALS_BASE + '+/=';
    },
    /**
     * Our websafe alphabet.
     */
    get ENCODED_VALS_WEBSAFE() {
        return this.ENCODED_VALS_BASE + '-_.';
    },
    /**
     * Whether this browser supports the atob and btoa functions. This extension
     * started at Mozilla but is now implemented by many browsers. We use the
     * ASSUME_* variables to avoid pulling in the full useragent detection library
     * but still allowing the standard per-browser compilations.
     *
     */
    HAS_NATIVE_SUPPORT: typeof atob === 'function',
    /**
     * Base64-encode an array of bytes.
     *
     * @param input An array of bytes (numbers with
     *     value in [0, 255]) to encode.
     * @param webSafe Boolean indicating we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeByteArray: function (input, webSafe) {
        if (!Array.isArray(input)) {
            throw Error('encodeByteArray takes an array as a parameter');
        }
        this.init_();
        var byteToCharMap = webSafe
            ? this.byteToCharMapWebSafe_
            : this.byteToCharMap_;
        var output = [];
        for (var i = 0; i < input.length; i += 3) {
            var byte1 = input[i];
            var haveByte2 = i + 1 < input.length;
            var byte2 = haveByte2 ? input[i + 1] : 0;
            var haveByte3 = i + 2 < input.length;
            var byte3 = haveByte3 ? input[i + 2] : 0;
            var outByte1 = byte1 >> 2;
            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);
            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);
            var outByte4 = byte3 & 0x3f;
            if (!haveByte3) {
                outByte4 = 64;
                if (!haveByte2) {
                    outByte3 = 64;
                }
            }
            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
        }
        return output.join('');
    },
    /**
     * Base64-encode a string.
     *
     * @param input A string to encode.
     * @param webSafe If true, we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return btoa(input);
        }
        return this.encodeByteArray(stringToByteArray(input), webSafe);
    },
    /**
     * Base64-decode a string.
     *
     * @param input to decode.
     * @param webSafe True if we should use the
     *     alternative alphabet.
     * @return string representing the decoded value.
     */
    decodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return atob(input);
        }
        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
    },
    /**
     * Base64-decode a string.
     *
     * In base-64 decoding, groups of four characters are converted into three
     * bytes.  If the encoder did not apply padding, the input length may not
     * be a multiple of 4.
     *
     * In this case, the last group will have fewer than 4 characters, and
     * padding will be inferred.  If the group has one or two characters, it decodes
     * to one byte.  If the group has three characters, it decodes to two bytes.
     *
     * @param input Input to decode.
     * @param webSafe True if we should use the web-safe alphabet.
     * @return bytes representing the decoded value.
     */
    decodeStringToByteArray: function (input, webSafe) {
        this.init_();
        var charToByteMap = webSafe
            ? this.charToByteMapWebSafe_
            : this.charToByteMap_;
        var output = [];
        for (var i = 0; i < input.length;) {
            var byte1 = charToByteMap[input.charAt(i++)];
            var haveByte2 = i < input.length;
            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
            ++i;
            var haveByte3 = i < input.length;
            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            var haveByte4 = i < input.length;
            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
                throw Error();
            }
            var outByte1 = (byte1 << 2) | (byte2 >> 4);
            output.push(outByte1);
            if (byte3 !== 64) {
                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);
                output.push(outByte2);
                if (byte4 !== 64) {
                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;
                    output.push(outByte3);
                }
            }
        }
        return output;
    },
    /**
     * Lazy static initialization function. Called before
     * accessing any of the static map variables.
     * @private
     */
    init_: function () {
        if (!this.byteToCharMap_) {
            this.byteToCharMap_ = {};
            this.charToByteMap_ = {};
            this.byteToCharMapWebSafe_ = {};
            this.charToByteMapWebSafe_ = {};
            // We want quick mappings back and forth, so we precompute two maps.
            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
                this.charToByteMap_[this.byteToCharMap_[i]] = i;
                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
                // Be forgiving when decoding and correctly decode both encodings.
                if (i >= this.ENCODED_VALS_BASE.length) {
                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
                }
            }
        }
    }
};
/**
 * URL-safe base64 encoding
 */
var base64Encode = function (str) {
    var utf8Bytes = stringToByteArray(str);
    return base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param str To be decoded
 * @return Decoded result, if possible
 */
var base64Decode = function (str) {
    try {
        return base64.decodeString(str, true);
    }
    catch (e) {
        console.error('base64Decode failed: ', e);
    }
    return null;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */
function deepCopy(value) {
    return deepExtend(undefined, value);
}
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 *
 * Note: we don't merge __proto__ to prevent prototype pollution
 */
function deepExtend(target, source) {
    if (!(source instanceof Object)) {
        return source;
    }
    switch (source.constructor) {
        case Date:
            // Treat Dates like scalars; if the target date object had any child
            // properties - they will be lost!
            var dateValue = source;
            return new Date(dateValue.getTime());
        case Object:
            if (target === undefined) {
                target = {};
            }
            break;
        case Array:
            // Always copy the array source and overwrite the target.
            target = [];
            break;
        default:
            // Not a plain Object - treat it as a scalar.
            return source;
    }
    for (var prop in source) {
        // use isValidKey to guard against prototype pollution. See https://snyk.io/vuln/SNYK-JS-LODASH-450202
        if (!source.hasOwnProperty(prop) || !isValidKey(prop)) {
            continue;
        }
        target[prop] = deepExtend(target[prop], source[prop]);
    }
    return target;
}
function isValidKey(key) {
    return key !== '__proto__';
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Deferred = /** @class */ (function () {
    function Deferred() {
        var _this = this;
        this.reject = function () { };
        this.resolve = function () { };
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    /**
     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
     * and returns a node-style callback which will resolve or reject the Deferred's promise.
     */
    Deferred.prototype.wrapCallback = function (callback) {
        var _this = this;
        return function (error, value) {
            if (error) {
                _this.reject(error);
            }
            else {
                _this.resolve(value);
            }
            if (typeof callback === 'function') {
                // Attaching noop handler just in case developer wasn't expecting
                // promises
                _this.promise.catch(function () { });
                // Some of our callbacks don't expect a value and our own tests
                // assert that the parameter length is 1
                if (callback.length === 1) {
                    callback(error);
                }
                else {
                    callback(error, value);
                }
            }
        };
    };
    return Deferred;
}());

/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function createMockUserToken(token, projectId) {
    if (token.uid) {
        throw new Error('The "uid" field is no longer supported by mockUserToken. Please use "sub" instead for Firebase Auth User ID.');
    }
    // Unsecured JWTs use "none" as the algorithm.
    var header = {
        alg: 'none',
        type: 'JWT'
    };
    var project = projectId || 'demo-project';
    var iat = token.iat || 0;
    var sub = token.sub || token.user_id;
    if (!sub) {
        throw new Error("mockUserToken must contain 'sub' or 'user_id' field!");
    }
    var payload = (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__assign)({ 
        // Set all required fields to decent defaults
        iss: "https://securetoken.google.com/" + project, aud: project, iat: iat, exp: iat + 3600, auth_time: iat, sub: sub, user_id: sub, firebase: {
            sign_in_provider: 'custom',
            identities: {}
        } }, token);
    // Unsecured JWTs use the empty string as a signature.
    var signature = '';
    return [
        base64.encodeString(JSON.stringify(header), /*webSafe=*/ false),
        base64.encodeString(JSON.stringify(payload), /*webSafe=*/ false),
        signature
    ].join('.');
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */
function getUA() {
    if (typeof navigator !== 'undefined' &&
        typeof navigator['userAgent'] === 'string') {
        return navigator['userAgent'];
    }
    else {
        return '';
    }
}
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */
function isMobileCordova() {
    return (typeof window !== 'undefined' &&
        // @ts-ignore Setting up an broadly applicable index signature for Window
        // just to deal with this case would probably be a bad idea.
        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&
        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));
}
/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */
// Node detection logic from: https://github.com/iliakan/detect-node/
function isNode() {
    try {
        return (Object.prototype.toString.call(__webpack_require__.g.process) === '[object process]');
    }
    catch (e) {
        return false;
    }
}
/**
 * Detect Browser Environment
 */
function isBrowser() {
    return typeof self === 'object' && self.self === self;
}
function isBrowserExtension() {
    var runtime = typeof chrome === 'object'
        ? chrome.runtime
        : typeof browser === 'object'
            ? browser.runtime
            : undefined;
    return typeof runtime === 'object' && runtime.id !== undefined;
}
/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */
function isReactNative() {
    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');
}
/** Detects Electron apps. */
function isElectron() {
    return getUA().indexOf('Electron/') >= 0;
}
/** Detects Internet Explorer. */
function isIE() {
    var ua = getUA();
    return ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;
}
/** Detects Universal Windows Platform apps. */
function isUWP() {
    return getUA().indexOf('MSAppHost/') >= 0;
}
/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */
function isNodeSdk() {
    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
}
/** Returns true if we are running in Safari. */
function isSafari() {
    return (!isNode() &&
        navigator.userAgent.includes('Safari') &&
        !navigator.userAgent.includes('Chrome'));
}
/**
 * This method checks if indexedDB is supported by current browser/service worker context
 * @return true if indexedDB is supported by current browser/service worker context
 */
function isIndexedDBAvailable() {
    return 'indexedDB' in self && indexedDB != null;
}
/**
 * This method validates browser/sw context for indexedDB by opening a dummy indexedDB database and reject
 * if errors occur during the database open operation.
 *
 * @throws exception if current browser/sw context can't run idb.open (ex: Safari iframe, Firefox
 * private browsing)
 */
function validateIndexedDBOpenable() {
    return new Promise(function (resolve, reject) {
        try {
            var preExist_1 = true;
            var DB_CHECK_NAME_1 = 'validate-browser-context-for-indexeddb-analytics-module';
            var request_1 = self.indexedDB.open(DB_CHECK_NAME_1);
            request_1.onsuccess = function () {
                request_1.result.close();
                // delete database only when it doesn't pre-exist
                if (!preExist_1) {
                    self.indexedDB.deleteDatabase(DB_CHECK_NAME_1);
                }
                resolve(true);
            };
            request_1.onupgradeneeded = function () {
                preExist_1 = false;
            };
            request_1.onerror = function () {
                var _a;
                reject(((_a = request_1.error) === null || _a === void 0 ? void 0 : _a.message) || '');
            };
        }
        catch (error) {
            reject(error);
        }
    });
}
/**
 *
 * This method checks whether cookie is enabled within current browser
 * @return true if cookie is enabled within current browser
 */
function areCookiesEnabled() {
    if (!navigator || !navigator.cookieEnabled) {
        return false;
    }
    return true;
}
/**
 * Polyfill for `globalThis` object.
 * @returns the `globalThis` object for the given environment.
 */
function getGlobal() {
    if (typeof self !== 'undefined') {
        return self;
    }
    if (typeof window !== 'undefined') {
        return window;
    }
    if (typeof __webpack_require__.g !== 'undefined') {
        return __webpack_require__.g;
    }
    throw new Error('Unable to locate global object.');
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ERROR_NAME = 'FirebaseError';
// Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
var FirebaseError = /** @class */ (function (_super) {
    (0,tslib__WEBPACK_IMPORTED_MODULE_0__.__extends)(FirebaseError, _super);
    function FirebaseError(code, message, customData) {
        var _this = _super.call(this, message) || this;
        _this.code = code;
        _this.customData = customData;
        _this.name = ERROR_NAME;
        // Fix For ES5
        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
        Object.setPrototypeOf(_this, FirebaseError.prototype);
        // Maintains proper stack trace for where our error was thrown.
        // Only available on V8.
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, ErrorFactory.prototype.create);
        }
        return _this;
    }
    return FirebaseError;
}(Error));
var ErrorFactory = /** @class */ (function () {
    function ErrorFactory(service, serviceName, errors) {
        this.service = service;
        this.serviceName = serviceName;
        this.errors = errors;
    }
    ErrorFactory.prototype.create = function (code) {
        var data = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            data[_i - 1] = arguments[_i];
        }
        var customData = data[0] || {};
        var fullCode = this.service + "/" + code;
        var template = this.errors[code];
        var message = template ? replaceTemplate(template, customData) : 'Error';
        // Service Name: Error message (service/code).
        var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
        var error = new FirebaseError(fullCode, fullMessage, customData);
        return error;
    };
    return ErrorFactory;
}());
function replaceTemplate(template, data) {
    return template.replace(PATTERN, function (_, key) {
        var value = data[key];
        return value != null ? String(value) : "<" + key + "?>";
    });
}
var PATTERN = /\{\$([^}]+)}/g;

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */
function jsonEval(str) {
    return JSON.parse(str);
}
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */
function stringify(data) {
    return JSON.stringify(data);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var decode = function (token) {
    var header = {}, claims = {}, data = {}, signature = '';
    try {
        var parts = token.split('.');
        header = jsonEval(base64Decode(parts[0]) || '');
        claims = jsonEval(base64Decode(parts[1]) || '');
        signature = parts[2];
        data = claims['d'] || {};
        delete claims['d'];
    }
    catch (e) { }
    return {
        header: header,
        claims: claims,
        data: data,
        signature: signature
    };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidTimestamp = function (token) {
    var claims = decode(token).claims;
    var now = Math.floor(new Date().getTime() / 1000);
    var validSince = 0, validUntil = 0;
    if (typeof claims === 'object') {
        if (claims.hasOwnProperty('nbf')) {
            validSince = claims['nbf'];
        }
        else if (claims.hasOwnProperty('iat')) {
            validSince = claims['iat'];
        }
        if (claims.hasOwnProperty('exp')) {
            validUntil = claims['exp'];
        }
        else {
            // token will expire after 24h by default
            validUntil = validSince + 86400;
        }
    }
    return (!!now &&
        !!validSince &&
        !!validUntil &&
        now >= validSince &&
        now <= validUntil);
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var issuedAtTime = function (token) {
    var claims = decode(token).claims;
    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
        return claims['iat'];
    }
    return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidFormat = function (token) {
    var decoded = decode(token), claims = decoded.claims;
    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isAdmin = function (token) {
    var claims = decode(token).claims;
    return typeof claims === 'object' && claims['admin'] === true;
};

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function contains(obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
}
function safeGet(obj, key) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) {
        return obj[key];
    }
    else {
        return undefined;
    }
}
function isEmpty(obj) {
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            return false;
        }
    }
    return true;
}
function map(obj, fn, contextObj) {
    var res = {};
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            res[key] = fn.call(contextObj, obj[key], key, obj);
        }
    }
    return res;
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a
 * params object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */
function querystring(querystringParams) {
    var params = [];
    var _loop_1 = function (key, value) {
        if (Array.isArray(value)) {
            value.forEach(function (arrayVal) {
                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
            });
        }
        else {
            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
        }
    };
    for (var _i = 0, _a = Object.entries(querystringParams); _i < _a.length; _i++) {
        var _b = _a[_i], key = _b[0], value = _b[1];
        _loop_1(key, value);
    }
    return params.length ? '&' + params.join('&') : '';
}
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object
 * (e.g. {arg: 'val', arg2: 'val2'})
 */
function querystringDecode(querystring) {
    var obj = {};
    var tokens = querystring.replace(/^\?/, '').split('&');
    tokens.forEach(function (token) {
        if (token) {
            var _a = token.split('='), key = _a[0], value = _a[1];
            obj[decodeURIComponent(key)] = decodeURIComponent(value);
        }
    });
    return obj;
}
/**
 * Extract the query string part of a URL, including the leading question mark (if present).
 */
function extractQuerystring(url) {
    var queryStart = url.indexOf('?');
    if (!queryStart) {
        return '';
    }
    var fragmentStart = url.indexOf('#', queryStart);
    return url.substring(queryStart, fragmentStart > 0 ? fragmentStart : undefined);
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */
/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */
var Sha1 = /** @class */ (function () {
    function Sha1() {
        /**
         * Holds the previous values of accumulated variables a-e in the compress_
         * function.
         * @private
         */
        this.chain_ = [];
        /**
         * A buffer holding the partially computed hash result.
         * @private
         */
        this.buf_ = [];
        /**
         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
         * as the message schedule in the docs.
         * @private
         */
        this.W_ = [];
        /**
         * Contains data needed to pad messages less than 64 bytes.
         * @private
         */
        this.pad_ = [];
        /**
         * @private {number}
         */
        this.inbuf_ = 0;
        /**
         * @private {number}
         */
        this.total_ = 0;
        this.blockSize = 512 / 8;
        this.pad_[0] = 128;
        for (var i = 1; i < this.blockSize; ++i) {
            this.pad_[i] = 0;
        }
        this.reset();
    }
    Sha1.prototype.reset = function () {
        this.chain_[0] = 0x67452301;
        this.chain_[1] = 0xefcdab89;
        this.chain_[2] = 0x98badcfe;
        this.chain_[3] = 0x10325476;
        this.chain_[4] = 0xc3d2e1f0;
        this.inbuf_ = 0;
        this.total_ = 0;
    };
    /**
     * Internal compress helper function.
     * @param buf Block to compress.
     * @param offset Offset of the block in the buffer.
     * @private
     */
    Sha1.prototype.compress_ = function (buf, offset) {
        if (!offset) {
            offset = 0;
        }
        var W = this.W_;
        // get 16 big endian words
        if (typeof buf === 'string') {
            for (var i = 0; i < 16; i++) {
                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
                // have a bug that turns the post-increment ++ operator into pre-increment
                // during JIT compilation.  We have code that depends heavily on SHA-1 for
                // correctness and which is affected by this bug, so I've removed all uses
                // of post-increment ++ in which the result value is used.  We can revert
                // this change once the Safari bug
                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
                // most clients have been updated.
                W[i] =
                    (buf.charCodeAt(offset) << 24) |
                        (buf.charCodeAt(offset + 1) << 16) |
                        (buf.charCodeAt(offset + 2) << 8) |
                        buf.charCodeAt(offset + 3);
                offset += 4;
            }
        }
        else {
            for (var i = 0; i < 16; i++) {
                W[i] =
                    (buf[offset] << 24) |
                        (buf[offset + 1] << 16) |
                        (buf[offset + 2] << 8) |
                        buf[offset + 3];
                offset += 4;
            }
        }
        // expand to 80 words
        for (var i = 16; i < 80; i++) {
            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;
        }
        var a = this.chain_[0];
        var b = this.chain_[1];
        var c = this.chain_[2];
        var d = this.chain_[3];
        var e = this.chain_[4];
        var f, k;
        // TODO(user): Try to unroll this loop to speed up the computation.
        for (var i = 0; i < 80; i++) {
            if (i < 40) {
                if (i < 20) {
                    f = d ^ (b & (c ^ d));
                    k = 0x5a827999;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0x6ed9eba1;
                }
            }
            else {
                if (i < 60) {
                    f = (b & c) | (d & (b | c));
                    k = 0x8f1bbcdc;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0xca62c1d6;
                }
            }
            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;
            e = d;
            d = c;
            c = ((b << 30) | (b >>> 2)) & 0xffffffff;
            b = a;
            a = t;
        }
        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;
        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;
        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;
        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;
        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;
    };
    Sha1.prototype.update = function (bytes, length) {
        // TODO(johnlenz): tighten the function signature and remove this check
        if (bytes == null) {
            return;
        }
        if (length === undefined) {
            length = bytes.length;
        }
        var lengthMinusBlock = length - this.blockSize;
        var n = 0;
        // Using local instead of member variables gives ~5% speedup on Firefox 16.
        var buf = this.buf_;
        var inbuf = this.inbuf_;
        // The outer while loop should execute at most twice.
        while (n < length) {
            // When we have no data in the block to top up, we can directly process the
            // input buffer (assuming it contains sufficient data). This gives ~25%
            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
            // the data is provided in large chunks (or in multiples of 64 bytes).
            if (inbuf === 0) {
                while (n <= lengthMinusBlock) {
                    this.compress_(bytes, n);
                    n += this.blockSize;
                }
            }
            if (typeof bytes === 'string') {
                while (n < length) {
                    buf[inbuf] = bytes.charCodeAt(n);
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
            else {
                while (n < length) {
                    buf[inbuf] = bytes[n];
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
        }
        this.inbuf_ = inbuf;
        this.total_ += length;
    };
    /** @override */
    Sha1.prototype.digest = function () {
        var digest = [];
        var totalBits = this.total_ * 8;
        // Add pad 0x80 0x00*.
        if (this.inbuf_ < 56) {
            this.update(this.pad_, 56 - this.inbuf_);
        }
        else {
            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
        }
        // Add # bits.
        for (var i = this.blockSize - 1; i >= 56; i--) {
            this.buf_[i] = totalBits & 255;
            totalBits /= 256; // Don't use bit-shifting here!
        }
        this.compress_(this.buf_);
        var n = 0;
        for (var i = 0; i < 5; i++) {
            for (var j = 24; j >= 0; j -= 8) {
                digest[n] = (this.chain_[i] >> j) & 255;
                ++n;
            }
        }
        return digest;
    };
    return Sha1;
}());

/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */
function createSubscribe(executor, onNoObservers) {
    var proxy = new ObserverProxy(executor, onNoObservers);
    return proxy.subscribe.bind(proxy);
}
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */
var ObserverProxy = /** @class */ (function () {
    /**
     * @param executor Function which can make calls to a single Observer
     *     as a proxy.
     * @param onNoObservers Callback when count of Observers goes to zero.
     */
    function ObserverProxy(executor, onNoObservers) {
        var _this = this;
        this.observers = [];
        this.unsubscribes = [];
        this.observerCount = 0;
        // Micro-task scheduling by calling task.then().
        this.task = Promise.resolve();
        this.finalized = false;
        this.onNoObservers = onNoObservers;
        // Call the executor asynchronously so subscribers that are called
        // synchronously after the creation of the subscribe function
        // can still receive the very first value generated in the executor.
        this.task
            .then(function () {
            executor(_this);
        })
            .catch(function (e) {
            _this.error(e);
        });
    }
    ObserverProxy.prototype.next = function (value) {
        this.forEachObserver(function (observer) {
            observer.next(value);
        });
    };
    ObserverProxy.prototype.error = function (error) {
        this.forEachObserver(function (observer) {
            observer.error(error);
        });
        this.close(error);
    };
    ObserverProxy.prototype.complete = function () {
        this.forEachObserver(function (observer) {
            observer.complete();
        });
        this.close();
    };
    /**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */
    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
        var _this = this;
        var observer;
        if (nextOrObserver === undefined &&
            error === undefined &&
            complete === undefined) {
            throw new Error('Missing Observer.');
        }
        // Assemble an Observer object when passed as callback functions.
        if (implementsAnyMethods(nextOrObserver, [
            'next',
            'error',
            'complete'
        ])) {
            observer = nextOrObserver;
        }
        else {
            observer = {
                next: nextOrObserver,
                error: error,
                complete: complete
            };
        }
        if (observer.next === undefined) {
            observer.next = noop;
        }
        if (observer.error === undefined) {
            observer.error = noop;
        }
        if (observer.complete === undefined) {
            observer.complete = noop;
        }
        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
        // Attempt to subscribe to a terminated Observable - we
        // just respond to the Observer with the final error or complete
        // event.
        if (this.finalized) {
            // eslint-disable-next-line @typescript-eslint/no-floating-promises
            this.task.then(function () {
                try {
                    if (_this.finalError) {
                        observer.error(_this.finalError);
                    }
                    else {
                        observer.complete();
                    }
                }
                catch (e) {
                    // nothing
                }
                return;
            });
        }
        this.observers.push(observer);
        return unsub;
    };
    // Unsubscribe is synchronous - we guarantee that no events are sent to
    // any unsubscribed Observer.
    ObserverProxy.prototype.unsubscribeOne = function (i) {
        if (this.observers === undefined || this.observers[i] === undefined) {
            return;
        }
        delete this.observers[i];
        this.observerCount -= 1;
        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
            this.onNoObservers(this);
        }
    };
    ObserverProxy.prototype.forEachObserver = function (fn) {
        if (this.finalized) {
            // Already closed by previous event....just eat the additional values.
            return;
        }
        // Since sendOne calls asynchronously - there is no chance that
        // this.observers will become undefined.
        for (var i = 0; i < this.observers.length; i++) {
            this.sendOne(i, fn);
        }
    };
    // Call the Observer via one of it's callback function. We are careful to
    // confirm that the observe has not been unsubscribed since this asynchronous
    // function had been queued.
    ObserverProxy.prototype.sendOne = function (i, fn) {
        var _this = this;
        // Execute the callback asynchronously
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
                try {
                    fn(_this.observers[i]);
                }
                catch (e) {
                    // Ignore exceptions raised in Observers or missing methods of an
                    // Observer.
                    // Log error to console. b/31404806
                    if (typeof console !== 'undefined' && console.error) {
                        console.error(e);
                    }
                }
            }
        });
    };
    ObserverProxy.prototype.close = function (err) {
        var _this = this;
        if (this.finalized) {
            return;
        }
        this.finalized = true;
        if (err !== undefined) {
            this.finalError = err;
        }
        // Proxy is no longer needed - garbage collect references
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this.task.then(function () {
            _this.observers = undefined;
            _this.onNoObservers = undefined;
        });
    };
    return ObserverProxy;
}());
/** Turn synchronous function into one called asynchronously. */
// eslint-disable-next-line @typescript-eslint/ban-types
function async(fn, onError) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        Promise.resolve(true)
            .then(function () {
            fn.apply(void 0, args);
        })
            .catch(function (error) {
            if (onError) {
                onError(error);
            }
        });
    };
}
/**
 * Return true if the object passed in implements any of the named methods.
 */
function implementsAnyMethods(obj, methods) {
    if (typeof obj !== 'object' || obj === null) {
        return false;
    }
    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
        var method = methods_1[_i];
        if (method in obj && typeof obj[method] === 'function') {
            return true;
        }
    }
    return false;
}
function noop() {
    // do nothing
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */
var validateArgCount = function (fnName, minCount, maxCount, argCount) {
    var argError;
    if (argCount < minCount) {
        argError = 'at least ' + minCount;
    }
    else if (argCount > maxCount) {
        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
    }
    if (argError) {
        var error = fnName +
            ' failed: Was called with ' +
            argCount +
            (argCount === 1 ? ' argument.' : ' arguments.') +
            ' Expects ' +
            argError +
            '.';
        throw new Error(error);
    }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argName The name of the argument
 * @return The prefix to add to the error thrown for validation.
 */
function errorPrefix(fnName, argName) {
    return fnName + " failed: " + argName + " argument ";
}
/**
 * @param fnName
 * @param argumentNumber
 * @param namespace
 * @param optional
 */
function validateNamespace(fnName, namespace, optional) {
    if (optional && !namespace) {
        return;
    }
    if (typeof namespace !== 'string') {
        //TODO: I should do more validation here. We only allow certain chars in namespaces.
        throw new Error(errorPrefix(fnName, 'namespace') + 'must be a valid firebase namespace.');
    }
}
function validateCallback(fnName, argumentName, 
// eslint-disable-next-line @typescript-eslint/ban-types
callback, optional) {
    if (optional && !callback) {
        return;
    }
    if (typeof callback !== 'function') {
        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid function.');
    }
}
function validateContextObject(fnName, argumentName, context, optional) {
    if (optional && !context) {
        return;
    }
    if (typeof context !== 'object' || context === null) {
        throw new Error(errorPrefix(fnName, argumentName) + 'must be a valid context object.');
    }
}

/**
 * @license
 * Copyright 2017 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
/**
 * @param {string} str
 * @return {Array}
 */
var stringToByteArray$1 = function (str) {
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        // Is this the lead surrogate in a surrogate pair?
        if (c >= 0xd800 && c <= 0xdbff) {
            var high = c - 0xd800; // the high 10 bits.
            i++;
            assert(i < str.length, 'Surrogate pair missing trail surrogate.');
            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
            c = 0x10000 + (high << 10) + low;
        }
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if (c < 65536) {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */
var stringLength = function (str) {
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            p++;
        }
        else if (c < 2048) {
            p += 2;
        }
        else if (c >= 0xd800 && c <= 0xdbff) {
            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
            p += 4;
            i++; // skip trail surrogate.
        }
        else {
            p += 3;
        }
    }
    return p;
};

/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * The amount of milliseconds to exponentially increase.
 */
var DEFAULT_INTERVAL_MILLIS = 1000;
/**
 * The factor to backoff by.
 * Should be a number greater than 1.
 */
var DEFAULT_BACKOFF_FACTOR = 2;
/**
 * The maximum milliseconds to increase to.
 *
 * <p>Visible for testing
 */
var MAX_VALUE_MILLIS = 4 * 60 * 60 * 1000; // Four hours, like iOS and Android.
/**
 * The percentage of backoff time to randomize by.
 * See
 * http://go/safe-client-behavior#step-1-determine-the-appropriate-retry-interval-to-handle-spike-traffic
 * for context.
 *
 * <p>Visible for testing
 */
var RANDOM_FACTOR = 0.5;
/**
 * Based on the backoff method from
 * https://github.com/google/closure-library/blob/master/closure/goog/math/exponentialbackoff.js.
 * Extracted here so we don't need to pass metadata and a stateful ExponentialBackoff object around.
 */
function calculateBackoffMillis(backoffCount, intervalMillis, backoffFactor) {
    if (intervalMillis === void 0) { intervalMillis = DEFAULT_INTERVAL_MILLIS; }
    if (backoffFactor === void 0) { backoffFactor = DEFAULT_BACKOFF_FACTOR; }
    // Calculates an exponentially increasing value.
    // Deviation: calculates value from count and a constant interval, so we only need to save value
    // and count to restore state.
    var currBaseValue = intervalMillis * Math.pow(backoffFactor, backoffCount);
    // A random "fuzz" to avoid waves of retries.
    // Deviation: randomFactor is required.
    var randomWait = Math.round(
    // A fraction of the backoff value to add/subtract.
    // Deviation: changes multiplication order to improve readability.
    RANDOM_FACTOR *
        currBaseValue *
        // A random float (rounded to int by Math.round above) in the range [-1, 1]. Determines
        // if we add or subtract.
        (Math.random() - 0.5) *
        2);
    // Limits backoff to max to avoid effectively permanent backoff.
    return Math.min(MAX_VALUE_MILLIS, currBaseValue + randomWait);
}

/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Provide English ordinal letters after a number
 */
function ordinal(i) {
    if (!Number.isFinite(i)) {
        return "" + i;
    }
    return i + indicator(i);
}
function indicator(i) {
    i = Math.abs(i);
    var cent = i % 100;
    if (cent >= 10 && cent <= 20) {
        return 'th';
    }
    var dec = i % 10;
    if (dec === 1) {
        return 'st';
    }
    if (dec === 2) {
        return 'nd';
    }
    if (dec === 3) {
        return 'rd';
    }
    return 'th';
}

/**
 * @license
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function getModularInstance(service) {
    if (service && service._delegate) {
        return service._delegate;
    }
    else {
        return service;
    }
}


//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/@firebase/webchannel-wrapper/dist/index.esm.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@firebase/webchannel-wrapper/dist/index.esm.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "ErrorCode": () => (/* binding */ ErrorCode),
/* harmony export */   "Event": () => (/* binding */ Event),
/* harmony export */   "EventType": () => (/* binding */ EventType),
/* harmony export */   "FetchXmlHttpFactory": () => (/* binding */ FetchXmlHttpFactory),
/* harmony export */   "Stat": () => (/* binding */ Stat),
/* harmony export */   "WebChannel": () => (/* binding */ WebChannel),
/* harmony export */   "XhrIo": () => (/* binding */ XhrIo),
/* harmony export */   "createWebChannelTransport": () => (/* binding */ createWebChannelTransport),
/* harmony export */   "getStatEventTarget": () => (/* binding */ getStatEventTarget)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};

var g, goog = goog || {}, k = commonjsGlobal || self;
function aa() { }
function ba(a) { var b = typeof a; b = "object" != b ? b : a ? Array.isArray(a) ? "array" : b : "null"; return "array" == b || "object" == b && "number" == typeof a.length; }
function n(a) { var b = typeof a; return "object" == b && null != a || "function" == b; }
function ca(a) { return Object.prototype.hasOwnProperty.call(a, da) && a[da] || (a[da] = ++ea); }
var da = "closure_uid_" + (1E9 * Math.random() >>> 0), ea = 0;
function fa(a, b, c) { return a.call.apply(a.bind, arguments); }
function ha(a, b, c) { if (!a)
    throw Error(); if (2 < arguments.length) {
    var d = Array.prototype.slice.call(arguments, 2);
    return function () { var e = Array.prototype.slice.call(arguments); Array.prototype.unshift.apply(e, d); return a.apply(b, e); };
} return function () { return a.apply(b, arguments); }; }
function p(a, b, c) { Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? p = fa : p = ha; return p.apply(null, arguments); }
function ia(a, b) { var c = Array.prototype.slice.call(arguments, 1); return function () { var d = c.slice(); d.push.apply(d, arguments); return a.apply(this, d); }; }
function q() { return Date.now(); }
function r(a, b) { function c() { } c.prototype = b.prototype; a.X = b.prototype; a.prototype = new c; a.prototype.constructor = a; a.Pb = function (d, e, f) { for (var h = Array(arguments.length - 2), m = 2; m < arguments.length; m++)
    h[m - 2] = arguments[m]; return b.prototype[e].apply(d, h); }; }
function t() { this.j = this.j; this.i = this.i; }
var ka = 0;
t.prototype.j = !1;
t.prototype.ka = function () { if (!this.j && (this.j = !0, this.H(), 0 != ka)) {
    var a = ca(this);
} };
t.prototype.H = function () { if (this.i)
    for (; this.i.length;)
        this.i.shift()(); };
var ma = Array.prototype.indexOf ? function (a, b) { return Array.prototype.indexOf.call(a, b, void 0); } : function (a, b) { if ("string" === typeof a)
    return "string" !== typeof b || 1 != b.length ? -1 : a.indexOf(b, 0); for (var c = 0; c < a.length; c++)
    if (c in a && a[c] === b)
        return c; return -1; }, na = Array.prototype.forEach ? function (a, b, c) { Array.prototype.forEach.call(a, b, c); } : function (a, b, c) { for (var d = a.length, e = "string" === typeof a ? a.split("") : a, f = 0; f < d; f++)
    f in e && b.call(c, e[f], f, a); };
function oa(a) { a: {
    var b = pa;
    for (var c = a.length, d = "string" === typeof a ? a.split("") : a, e = 0; e < c; e++)
        if (e in d && b.call(void 0, d[e], e, a)) {
            b = e;
            break a;
        }
    b = -1;
} return 0 > b ? null : "string" === typeof a ? a.charAt(b) : a[b]; }
function qa(a) { return Array.prototype.concat.apply([], arguments); }
function ra(a) { var b = a.length; if (0 < b) {
    for (var c = Array(b), d = 0; d < b; d++)
        c[d] = a[d];
    return c;
} return []; }
function sa(a) { return /^[\s\xa0]*$/.test(a); }
var ta = String.prototype.trim ? function (a) { return a.trim(); } : function (a) { return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(a)[1]; };
function u(a, b) { return -1 != a.indexOf(b); }
function ua(a, b) { return a < b ? -1 : a > b ? 1 : 0; }
var w;
a: {
    var va = k.navigator;
    if (va) {
        var wa = va.userAgent;
        if (wa) {
            w = wa;
            break a;
        }
    }
    w = "";
}
function xa(a, b, c) { for (var d in a)
    b.call(c, a[d], d, a); }
function ya(a) { var b = {}; for (var c in a)
    b[c] = a[c]; return b; }
var za = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");
function Ca(a, b) { var c, d; for (var e = 1; e < arguments.length; e++) {
    d = arguments[e];
    for (c in d)
        a[c] = d[c];
    for (var f = 0; f < za.length; f++)
        c = za[f], Object.prototype.hasOwnProperty.call(d, c) && (a[c] = d[c]);
} }
function Da(a) { Da[" "](a); return a; }
Da[" "] = aa;
function Ea(a, b) { var c = Fa; return Object.prototype.hasOwnProperty.call(c, a) ? c[a] : c[a] = b(a); }
var Ga = u(w, "Opera"), x = u(w, "Trident") || u(w, "MSIE"), Ha = u(w, "Edge"), Ia = Ha || x, Ja = u(w, "Gecko") && !(u(w.toLowerCase(), "webkit") && !u(w, "Edge")) && !(u(w, "Trident") || u(w, "MSIE")) && !u(w, "Edge"), Ka = u(w.toLowerCase(), "webkit") && !u(w, "Edge");
function La() { var a = k.document; return a ? a.documentMode : void 0; }
var Ma;
a: {
    var Na = "", Oa = function () { var a = w; if (Ja)
        return /rv:([^\);]+)(\)|;)/.exec(a); if (Ha)
        return /Edge\/([\d\.]+)/.exec(a); if (x)
        return /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(a); if (Ka)
        return /WebKit\/(\S+)/.exec(a); if (Ga)
        return /(?:Version)[ \/]?(\S+)/.exec(a); }();
    Oa && (Na = Oa ? Oa[1] : "");
    if (x) {
        var Pa = La();
        if (null != Pa && Pa > parseFloat(Na)) {
            Ma = String(Pa);
            break a;
        }
    }
    Ma = Na;
}
var Fa = {};
function Qa(a) { return Ea(a, function () { {
    var b = 0;
    var e = ta(String(Ma)).split("."), f = ta(String(a)).split("."), h = Math.max(e.length, f.length);
    for (var m = 0; 0 == b && m < h; m++) {
        var c = e[m] || "", d = f[m] || "";
        do {
            c = /(\d*)(\D*)(.*)/.exec(c) || ["", "", "", ""];
            d = /(\d*)(\D*)(.*)/.exec(d) || ["", "", "", ""];
            if (0 == c[0].length && 0 == d[0].length)
                break;
            b = ua(0 == c[1].length ? 0 : parseInt(c[1], 10), 0 == d[1].length ? 0 : parseInt(d[1], 10)) || ua(0 == c[2].length, 0 == d[2].length) || ua(c[2], d[2]);
            c = c[3];
            d = d[3];
        } while (0 == b);
    }
} return 0 <= b; }); }
var Ra;
if (k.document && x) {
    var Sa = La();
    Ra = Sa ? Sa : parseInt(Ma, 10) || void 0;
}
else
    Ra = void 0;
var Ta = Ra;
var Ua = !x || 9 <= Number(Ta), Va = x && !Qa("9"), Wa = function () { if (!k.addEventListener || !Object.defineProperty)
    return !1; var a = !1, b = Object.defineProperty({}, "passive", { get: function () { a = !0; } }); try {
    k.addEventListener("test", aa, b), k.removeEventListener("test", aa, b);
}
catch (c) { } return a; }();
function y(a, b) { this.type = a; this.a = this.target = b; this.defaultPrevented = !1; }
y.prototype.b = function () { this.defaultPrevented = !0; };
function z(a, b) {
    y.call(this, a ? a.type : "");
    this.relatedTarget = this.a = this.target = null;
    this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0;
    this.key = "";
    this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1;
    this.pointerId = 0;
    this.pointerType = "";
    this.c = null;
    if (a) {
        var c = this.type = a.type, d = a.changedTouches && a.changedTouches.length ? a.changedTouches[0] : null;
        this.target = a.target || a.srcElement;
        this.a = b;
        if (b = a.relatedTarget) {
            if (Ja) {
                a: {
                    try {
                        Da(b.nodeName);
                        var e = !0;
                        break a;
                    }
                    catch (f) { }
                    e = !1;
                }
                e || (b = null);
            }
        }
        else
            "mouseover" ==
                c ? b = a.fromElement : "mouseout" == c && (b = a.toElement);
        this.relatedTarget = b;
        d ? (this.clientX = void 0 !== d.clientX ? d.clientX : d.pageX, this.clientY = void 0 !== d.clientY ? d.clientY : d.pageY, this.screenX = d.screenX || 0, this.screenY = d.screenY || 0) : (this.clientX = void 0 !== a.clientX ? a.clientX : a.pageX, this.clientY = void 0 !== a.clientY ? a.clientY : a.pageY, this.screenX = a.screenX || 0, this.screenY = a.screenY || 0);
        this.button = a.button;
        this.key = a.key || "";
        this.ctrlKey = a.ctrlKey;
        this.altKey = a.altKey;
        this.shiftKey = a.shiftKey;
        this.metaKey =
            a.metaKey;
        this.pointerId = a.pointerId || 0;
        this.pointerType = "string" === typeof a.pointerType ? a.pointerType : Xa[a.pointerType] || "";
        this.c = a;
        a.defaultPrevented && this.b();
    }
}
r(z, y);
var Xa = { 2: "touch", 3: "pen", 4: "mouse" };
z.prototype.b = function () { z.X.b.call(this); var a = this.c; if (a.preventDefault)
    a.preventDefault();
else if (a.returnValue = !1, Va)
    try {
        if (a.ctrlKey || 112 <= a.keyCode && 123 >= a.keyCode)
            a.keyCode = -1;
    }
    catch (b) { } };
var A = "closure_listenable_" + (1E6 * Math.random() | 0), Ya = 0;
function Za(a, b, c, d, e) { this.listener = a; this.proxy = null; this.src = b; this.type = c; this.capture = !!d; this.da = e; this.key = ++Ya; this.Y = this.Z = !1; }
function $a(a) { a.Y = !0; a.listener = null; a.proxy = null; a.src = null; a.da = null; }
function ab(a) { this.src = a; this.a = {}; this.b = 0; }
ab.prototype.add = function (a, b, c, d, e) { var f = a.toString(); a = this.a[f]; a || (a = this.a[f] = [], this.b++); var h = bb(a, b, d, e); -1 < h ? (b = a[h], c || (b.Z = !1)) : (b = new Za(b, this.src, f, !!d, e), b.Z = c, a.push(b)); return b; };
function cb(a, b) { var c = b.type; if (c in a.a) {
    var d = a.a[c], e = ma(d, b), f;
    (f = 0 <= e) && Array.prototype.splice.call(d, e, 1);
    f && ($a(b), 0 == a.a[c].length && (delete a.a[c], a.b--));
} }
function bb(a, b, c, d) { for (var e = 0; e < a.length; ++e) {
    var f = a[e];
    if (!f.Y && f.listener == b && f.capture == !!c && f.da == d)
        return e;
} return -1; }
var db = "closure_lm_" + (1E6 * Math.random() | 0), eb = {};
function gb(a, b, c, d, e) { if (d && d.once)
    return hb(a, b, c, d, e); if (Array.isArray(b)) {
    for (var f = 0; f < b.length; f++)
        gb(a, b[f], c, d, e);
    return null;
} c = ib(c); return a && a[A] ? a.wa(b, c, n(d) ? !!d.capture : !!d, e) : jb(a, b, c, !1, d, e); }
function jb(a, b, c, d, e, f) {
    if (!b)
        throw Error("Invalid event type");
    var h = n(e) ? !!e.capture : !!e;
    if (h && !Ua)
        return null;
    var m = kb(a);
    m || (a[db] = m = new ab(a));
    c = m.add(b, c, d, h, f);
    if (c.proxy)
        return c;
    d = lb();
    c.proxy = d;
    d.src = a;
    d.listener = c;
    if (a.addEventListener)
        Wa || (e = h), void 0 === e && (e = !1), a.addEventListener(b.toString(), d, e);
    else if (a.attachEvent)
        a.attachEvent(mb(b.toString()), d);
    else if (a.addListener && a.removeListener)
        a.addListener(d);
    else
        throw Error("addEventListener and attachEvent are unavailable.");
    return c;
}
function lb() { var a = nb, b = Ua ? function (c) { return a.call(b.src, b.listener, c); } : function (c) { c = a.call(b.src, b.listener, c); if (!c)
    return c; }; return b; }
function hb(a, b, c, d, e) { if (Array.isArray(b)) {
    for (var f = 0; f < b.length; f++)
        hb(a, b[f], c, d, e);
    return null;
} c = ib(c); return a && a[A] ? a.xa(b, c, n(d) ? !!d.capture : !!d, e) : jb(a, b, c, !0, d, e); }
function ob(a, b, c, d, e) { if (Array.isArray(b))
    for (var f = 0; f < b.length; f++)
        ob(a, b[f], c, d, e);
else
    (d = n(d) ? !!d.capture : !!d, c = ib(c), a && a[A]) ? (a = a.c, b = String(b).toString(), b in a.a && (f = a.a[b], c = bb(f, c, d, e), -1 < c && ($a(f[c]), Array.prototype.splice.call(f, c, 1), 0 == f.length && (delete a.a[b], a.b--)))) : a && (a = kb(a)) && (b = a.a[b.toString()], a = -1, b && (a = bb(b, c, d, e)), (c = -1 < a ? b[a] : null) && pb(c)); }
function pb(a) { if ("number" !== typeof a && a && !a.Y) {
    var b = a.src;
    if (b && b[A])
        cb(b.c, a);
    else {
        var c = a.type, d = a.proxy;
        b.removeEventListener ? b.removeEventListener(c, d, a.capture) : b.detachEvent ? b.detachEvent(mb(c), d) : b.addListener && b.removeListener && b.removeListener(d);
        (c = kb(b)) ? (cb(c, a), 0 == c.b && (c.src = null, b[db] = null)) : $a(a);
    }
} }
function mb(a) { return a in eb ? eb[a] : eb[a] = "on" + a; }
function qb(a, b) { var c = a.listener, d = a.da || a.src; a.Z && pb(a); return c.call(d, b); }
function nb(a, b) { if (a.Y)
    return !0; if (!Ua) {
    if (!b)
        a: {
            b = ["window", "event"];
            for (var c = k, d = 0; d < b.length; d++)
                if (c = c[b[d]], null == c) {
                    b = null;
                    break a;
                }
            b = c;
        }
    b = new z(b, this);
    return qb(a, b);
} return qb(a, new z(b, this)); }
function kb(a) { a = a[db]; return a instanceof ab ? a : null; }
var rb = "__closure_events_fn_" + (1E9 * Math.random() >>> 0);
function ib(a) { if ("function" === typeof a)
    return a; a[rb] || (a[rb] = function (b) { return a.handleEvent(b); }); return a[rb]; }
function D() { t.call(this); this.c = new ab(this); this.J = this; this.D = null; }
r(D, t);
D.prototype[A] = !0;
g = D.prototype;
g.addEventListener = function (a, b, c, d) { gb(this, a, b, c, d); };
g.removeEventListener = function (a, b, c, d) { ob(this, a, b, c, d); };
function E(a, b) { var c, d = a.D; if (d)
    for (c = []; d; d = d.D)
        c.push(d); a = a.J; d = b.type || b; if ("string" === typeof b)
    b = new y(b, a);
else if (b instanceof y)
    b.target = b.target || a;
else {
    var e = b;
    b = new y(d, a);
    Ca(b, e);
} e = !0; if (c)
    for (var f = c.length - 1; 0 <= f; f--) {
        var h = b.a = c[f];
        e = sb(h, d, !0, b) && e;
    } h = b.a = a; e = sb(h, d, !0, b) && e; e = sb(h, d, !1, b) && e; if (c)
    for (f = 0; f < c.length; f++)
        h = b.a = c[f], e = sb(h, d, !1, b) && e; }
g.H = function () { D.X.H.call(this); if (this.c) {
    var a = this.c, c;
    for (c in a.a) {
        for (var d = a.a[c], e = 0; e < d.length; e++)
            $a(d[e]);
        delete a.a[c];
        a.b--;
    }
} this.D = null; };
g.wa = function (a, b, c, d) { return this.c.add(String(a), b, !1, c, d); };
g.xa = function (a, b, c, d) { return this.c.add(String(a), b, !0, c, d); };
function sb(a, b, c, d) { b = a.c.a[String(b)]; if (!b)
    return !0; b = b.concat(); for (var e = !0, f = 0; f < b.length; ++f) {
    var h = b[f];
    if (h && !h.Y && h.capture == c) {
        var m = h.listener, l = h.da || h.src;
        h.Z && cb(a.c, h);
        e = !1 !== m.call(l, d) && e;
    }
} return e && !d.defaultPrevented; }
var tb = k.JSON.stringify;
function ub() { this.b = this.a = null; }
var wb = new /** @class */ (function () {
    function class_1(a, b) {
        this.c = a;
        this.f = b;
        this.b = 0;
        this.a = null;
    }
    class_1.prototype.get = function () { var a; 0 < this.b ? (this.b--, a = this.a, this.a = a.next, a.next = null) : a = this.c(); return a; };
    return class_1;
}())(function () { return new vb; }, function (a) { a.reset(); });
ub.prototype.add = function (a, b) { var c = wb.get(); c.set(a, b); this.b ? this.b.next = c : this.a = c; this.b = c; };
function xb() { var a = zb, b = null; a.a && (b = a.a, a.a = a.a.next, a.a || (a.b = null), b.next = null); return b; }
function vb() { this.next = this.b = this.a = null; }
vb.prototype.set = function (a, b) { this.a = a; this.b = b; this.next = null; };
vb.prototype.reset = function () { this.next = this.b = this.a = null; };
function Ab(a) { k.setTimeout(function () { throw a; }, 0); }
function Bb(a, b) { Cb || Db(); Eb || (Cb(), Eb = !0); zb.add(a, b); }
var Cb;
function Db() { var a = k.Promise.resolve(void 0); Cb = function () { a.then(Fb); }; }
var Eb = !1, zb = new ub;
function Fb() { for (var a; a = xb();) {
    try {
        a.a.call(a.b);
    }
    catch (c) {
        Ab(c);
    }
    var b = wb;
    b.f(a);
    100 > b.b && (b.b++, a.next = b.a, b.a = a);
} Eb = !1; }
function Gb(a, b) { D.call(this); this.b = a || 1; this.a = b || k; this.f = p(this.eb, this); this.g = q(); }
r(Gb, D);
g = Gb.prototype;
g.aa = !1;
g.M = null;
g.eb = function () { if (this.aa) {
    var a = q() - this.g;
    0 < a && a < .8 * this.b ? this.M = this.a.setTimeout(this.f, this.b - a) : (this.M && (this.a.clearTimeout(this.M), this.M = null), E(this, "tick"), this.aa && (Hb(this), this.start()));
} };
g.start = function () { this.aa = !0; this.M || (this.M = this.a.setTimeout(this.f, this.b), this.g = q()); };
function Hb(a) { a.aa = !1; a.M && (a.a.clearTimeout(a.M), a.M = null); }
g.H = function () { Gb.X.H.call(this); Hb(this); delete this.a; };
function Ib(a, b, c) { if ("function" === typeof a)
    c && (a = p(a, c));
else if (a && "function" == typeof a.handleEvent)
    a = p(a.handleEvent, a);
else
    throw Error("Invalid listener argument"); return 2147483647 < Number(b) ? -1 : k.setTimeout(a, b || 0); }
function Jb(a) { a.a = Ib(function () { a.a = null; a.c && (a.c = !1, Jb(a)); }, a.h); var b = a.b; a.b = null; a.g.apply(null, b); }
var Kb = /** @class */ (function (_super) {
    __extends(Kb, _super);
    function Kb(a, b) {
        var _this = _super.call(this) || this;
        _this.g = a;
        _this.h = b;
        _this.b = null;
        _this.c = !1;
        _this.a = null;
        return _this;
    }
    Kb.prototype.f = function (a) { this.b = arguments; this.a ? this.c = !0 : Jb(this); };
    Kb.prototype.H = function () { _super.prototype.H.call(this); this.a && (k.clearTimeout(this.a), this.a = null, this.c = !1, this.b = null); };
    return Kb;
}(t));
function F(a) { t.call(this); this.b = a; this.a = {}; }
r(F, t);
var Lb = [];
function Mb(a, b, c, d) { Array.isArray(c) || (c && (Lb[0] = c.toString()), c = Lb); for (var e = 0; e < c.length; e++) {
    var f = gb(b, c[e], d || a.handleEvent, !1, a.b || a);
    if (!f)
        break;
    a.a[f.key] = f;
} }
function Nb(a) { xa(a.a, function (b, c) { this.a.hasOwnProperty(c) && pb(b); }, a); a.a = {}; }
F.prototype.H = function () { F.X.H.call(this); Nb(this); };
F.prototype.handleEvent = function () { throw Error("EventHandler.handleEvent not implemented"); };
function Ob() { this.a = !0; }
function Pb(a, b, c, d, e, f) { a.info(function () { if (a.a)
    if (f) {
        var h = "";
        for (var m = f.split("&"), l = 0; l < m.length; l++) {
            var v = m[l].split("=");
            if (1 < v.length) {
                var C = v[0];
                v = v[1];
                var B = C.split("_");
                h = 2 <= B.length && "type" == B[1] ? h + (C + "=" + v + "&") : h + (C + "=redacted&");
            }
        }
    }
    else
        h = null;
else
    h = f; return "XMLHTTP REQ (" + d + ") [attempt " + e + "]: " + b + "\n" + c + "\n" + h; }); }
function Qb(a, b, c, d, e, f, h) { a.info(function () { return "XMLHTTP RESP (" + d + ") [ attempt " + e + "]: " + b + "\n" + c + "\n" + f + " " + h; }); }
function G(a, b, c, d) { a.info(function () { return "XMLHTTP TEXT (" + b + "): " + Rb(a, c) + (d ? " " + d : ""); }); }
function Sb(a, b) { a.info(function () { return "TIMEOUT: " + b; }); }
Ob.prototype.info = function () { };
function Rb(a, b) { if (!a.a)
    return b; if (!b)
    return null; try {
    var c = JSON.parse(b);
    if (c)
        for (a = 0; a < c.length; a++)
            if (Array.isArray(c[a])) {
                var d = c[a];
                if (!(2 > d.length)) {
                    var e = d[1];
                    if (Array.isArray(e) && !(1 > e.length)) {
                        var f = e[0];
                        if ("noop" != f && "stop" != f && "close" != f)
                            for (var h = 1; h < e.length; h++)
                                e[h] = "";
                    }
                }
            }
    return tb(c);
}
catch (m) {
    return b;
} }
var H = {}, Tb = null;
function Ub() { return Tb = Tb || new D; }
H.Ga = "serverreachability";
function Vb(a) { y.call(this, H.Ga, a); }
r(Vb, y);
function I(a) { var b = Ub(); E(b, new Vb(b, a)); }
H.STAT_EVENT = "statevent";
function Wb(a, b) { y.call(this, H.STAT_EVENT, a); this.stat = b; }
r(Wb, y);
function J(a) { var b = Ub(); E(b, new Wb(b, a)); }
H.Ha = "timingevent";
function Xb(a) { y.call(this, H.Ha, a); }
r(Xb, y);
function K(a, b) { if ("function" !== typeof a)
    throw Error("Fn must not be null and must be a function"); return k.setTimeout(function () { a(); }, b); }
var Yb = { NO_ERROR: 0, fb: 1, sb: 2, rb: 3, mb: 4, qb: 5, tb: 6, Ea: 7, TIMEOUT: 8, wb: 9 };
var Zb = { kb: "complete", Gb: "success", Fa: "error", Ea: "abort", yb: "ready", zb: "readystatechange", TIMEOUT: "timeout", ub: "incrementaldata", xb: "progress", nb: "downloadprogress", Ob: "uploadprogress" };
function $b() { }
$b.prototype.b = null;
function ac(a) { return a.b || (a.b = a.c()); }
function bc() { }
var L = { OPEN: "a", jb: "b", Fa: "c", vb: "d" };
function cc() { y.call(this, "d"); }
r(cc, y);
function dc() { y.call(this, "c"); }
r(dc, y);
var ec;
function fc() { }
r(fc, $b);
fc.prototype.a = function () { return new XMLHttpRequest; };
fc.prototype.c = function () { return {}; };
ec = new fc;
function M(a, b, c, d) { this.g = a; this.c = b; this.f = c; this.S = d || 1; this.J = new F(this); this.P = gc; a = Ia ? 125 : void 0; this.R = new Gb(a); this.B = null; this.b = !1; this.j = this.l = this.i = this.G = this.u = this.T = this.o = null; this.s = []; this.a = null; this.D = 0; this.h = this.m = null; this.N = -1; this.A = !1; this.O = 0; this.F = null; this.V = this.C = this.U = this.I = !1; }
var gc = 45E3, hc = {}, ic = {};
g = M.prototype;
g.setTimeout = function (a) { this.P = a; };
function jc(a, b, c) { a.G = 1; a.i = kc(N(b)); a.j = c; a.I = !0; lc(a, null); }
function lc(a, b) { a.u = q(); mc(a); a.l = N(a.i); var c = a.l, d = a.S; Array.isArray(d) || (d = [String(d)]); nc(c.b, "t", d); a.D = 0; a.a = oc(a.g, a.g.C ? b : null); 0 < a.O && (a.F = new Kb(p(a.Da, a, a.a), a.O)); Mb(a.J, a.a, "readystatechange", a.bb); b = a.B ? ya(a.B) : {}; a.j ? (a.m || (a.m = "POST"), b["Content-Type"] = "application/x-www-form-urlencoded", a.a.ba(a.l, a.m, a.j, b)) : (a.m = "GET", a.a.ba(a.l, a.m, null, b)); I(1); Pb(a.c, a.m, a.l, a.f, a.S, a.j); }
g.bb = function (a) { a = a.target; var b = this.F; b && 3 == O(a) ? b.f() : this.Da(a); };
g.Da = function (a) {
    try {
        if (a == this.a)
            a: {
                var b = O(this.a), c = this.a.va(), d = this.a.W();
                if (!(3 > b || 3 == b && !Ia && !this.a.$())) {
                    this.A || 4 != b || 7 == c || (8 == c || 0 >= d ? I(3) : I(2));
                    pc(this);
                    var e = this.a.W();
                    this.N = e;
                    var f = this.a.$();
                    this.b = 200 == e;
                    Qb(this.c, this.m, this.l, this.f, this.S, b, e);
                    if (this.b) {
                        if (this.U && !this.C) {
                            b: {
                                if (this.a) {
                                    var h, m = this.a;
                                    if ((h = m.a ? m.a.getResponseHeader("X-HTTP-Initial-Response") : null) && !sa(h)) {
                                        var l = h;
                                        break b;
                                    }
                                }
                                l = null;
                            }
                            if (l)
                                G(this.c, this.f, l, "Initial handshake response via X-HTTP-Initial-Response"),
                                    this.C = !0, qc(this, l);
                            else {
                                this.b = !1;
                                this.h = 3;
                                J(12);
                                P(this);
                                rc(this);
                                break a;
                            }
                        }
                        this.I ? (sc(this, b, f), Ia && this.b && 3 == b && (Mb(this.J, this.R, "tick", this.ab), this.R.start())) : (G(this.c, this.f, f, null), qc(this, f));
                        4 == b && P(this);
                        this.b && !this.A && (4 == b ? tc(this.g, this) : (this.b = !1, mc(this)));
                    }
                    else
                        400 == e && 0 < f.indexOf("Unknown SID") ? (this.h = 3, J(12)) : (this.h = 0, J(13)), P(this), rc(this);
                }
            }
    }
    catch (v) { }
    finally { }
};
function sc(a, b, c) { for (var d = !0; !a.A && a.D < c.length;) {
    var e = uc(a, c);
    if (e == ic) {
        4 == b && (a.h = 4, J(14), d = !1);
        G(a.c, a.f, null, "[Incomplete Response]");
        break;
    }
    else if (e == hc) {
        a.h = 4;
        J(15);
        G(a.c, a.f, c, "[Invalid Chunk]");
        d = !1;
        break;
    }
    else
        G(a.c, a.f, e, null), qc(a, e);
} 4 == b && 0 == c.length && (a.h = 1, J(16), d = !1); a.b = a.b && d; d ? 0 < c.length && !a.V && (a.V = !0, b = a.g, b.a == a && b.U && !b.F && (b.c.info("Great, no buffering proxy detected. Bytes received: " + c.length), vc(b), b.F = !0, J(11))) : (G(a.c, a.f, c, "[Invalid Chunked Response]"), P(a), rc(a)); }
g.ab = function () { if (this.a) {
    var a = O(this.a), b = this.a.$();
    this.D < b.length && (pc(this), sc(this, a, b), this.b && 4 != a && mc(this));
} };
function uc(a, b) { var c = a.D, d = b.indexOf("\n", c); if (-1 == d)
    return ic; c = Number(b.substring(c, d)); if (isNaN(c))
    return hc; d += 1; if (d + c > b.length)
    return ic; b = b.substr(d, c); a.D = d + c; return b; }
g.cancel = function () { this.A = !0; P(this); };
function mc(a) { a.T = q() + a.P; wc(a, a.P); }
function wc(a, b) { if (null != a.o)
    throw Error("WatchDog timer not null"); a.o = K(p(a.$a, a), b); }
function pc(a) { a.o && (k.clearTimeout(a.o), a.o = null); }
g.$a = function () { this.o = null; var a = q(); 0 <= a - this.T ? (Sb(this.c, this.l), 2 != this.G && (I(3), J(17)), P(this), this.h = 2, rc(this)) : wc(this, this.T - a); };
function rc(a) { 0 == a.g.v || a.A || tc(a.g, a); }
function P(a) { pc(a); var b = a.F; b && "function" == typeof b.ka && b.ka(); a.F = null; Hb(a.R); Nb(a.J); a.a && (b = a.a, a.a = null, b.abort(), b.ka()); }
function qc(a, b) {
    try {
        var c = a.g;
        if (0 != c.v && (c.a == a || xc(c.b, a)))
            if (c.I = a.N, !a.C && xc(c.b, a) && 3 == c.v) {
                try {
                    var d = c.la.a.parse(b);
                }
                catch (yc) {
                    d = null;
                }
                if (Array.isArray(d) && 3 == d.length) {
                    var e = d;
                    if (0 == e[0])
                        a: {
                            if (!c.j) {
                                if (c.a)
                                    if (c.a.u + 3E3 < a.u)
                                        zc(c), Ac(c);
                                    else
                                        break a;
                                Bc(c);
                                J(18);
                            }
                        }
                    else
                        c.pa = e[1], 0 < c.pa - c.P && 37500 > e[2] && c.G && 0 == c.o && !c.m && (c.m = K(p(c.Xa, c), 6E3));
                    if (1 >= Dc(c.b) && c.fa) {
                        try {
                            c.fa();
                        }
                        catch (yc) { }
                        c.fa = void 0;
                    }
                }
                else
                    Q(c, 11);
            }
            else if ((a.C || c.a == a) && zc(c), !sa(b))
                for (b = d = c.la.a.parse(b), d = 0; d < b.length; d++)
                    if (e =
                        b[d], c.P = e[0], e = e[1], 2 == c.v)
                        if ("c" == e[0]) {
                            c.J = e[1];
                            c.ha = e[2];
                            var f = e[3];
                            null != f && (c.ia = f, c.c.info("VER=" + c.ia));
                            var h = e[4];
                            null != h && (c.qa = h, c.c.info("SVER=" + c.qa));
                            var m = e[5];
                            if (null != m && "number" === typeof m && 0 < m) {
                                var l = 1.5 * m;
                                c.D = l;
                                c.c.info("backChannelRequestTimeoutMs_=" + l);
                            }
                            l = c;
                            var v = a.a;
                            if (v) {
                                var C = v.a ? v.a.getResponseHeader("X-Client-Wire-Protocol") : null;
                                if (C) {
                                    var B = l.b;
                                    !B.a && (u(C, "spdy") || u(C, "quic") || u(C, "h2")) && (B.f = B.g, B.a = new Set, B.b && (Ec(B, B.b), B.b = null));
                                }
                                if (l.A) {
                                    var yb = v.a ? v.a.getResponseHeader("X-HTTP-Session-Id") :
                                        null;
                                    yb && (l.oa = yb, R(l.B, l.A, yb));
                                }
                            }
                            c.v = 3;
                            c.f && c.f.ua();
                            c.U && (c.N = q() - a.u, c.c.info("Handshake RTT: " + c.N + "ms"));
                            l = c;
                            var Aa = a;
                            l.ma = Fc(l, l.C ? l.ha : null, l.ga);
                            if (Aa.C) {
                                Gc(l.b, Aa);
                                var Ba = Aa, Cc = l.D;
                                Cc && Ba.setTimeout(Cc);
                                Ba.o && (pc(Ba), mc(Ba));
                                l.a = Aa;
                            }
                            else
                                Hc(l);
                            0 < c.g.length && Ic(c);
                        }
                        else
                            "stop" != e[0] && "close" != e[0] || Q(c, 7);
                    else
                        3 == c.v && ("stop" == e[0] || "close" == e[0] ? "stop" == e[0] ? Q(c, 7) : Jc(c) : "noop" != e[0] && c.f && c.f.ta(e), c.o = 0);
        I(4);
    }
    catch (yc) { }
}
function Kc(a) { if (a.K && "function" == typeof a.K)
    return a.K(); if ("string" === typeof a)
    return a.split(""); if (ba(a)) {
    for (var b = [], c = a.length, d = 0; d < c; d++)
        b.push(a[d]);
    return b;
} b = []; c = 0; for (d in a)
    b[c++] = a[d]; return a = b; }
function Lc(a, b) { if (a.forEach && "function" == typeof a.forEach)
    a.forEach(b, void 0);
else if (ba(a) || "string" === typeof a)
    na(a, b, void 0);
else {
    if (a.L && "function" == typeof a.L)
        var c = a.L();
    else if (a.K && "function" == typeof a.K)
        c = void 0;
    else if (ba(a) || "string" === typeof a) {
        c = [];
        for (var d = a.length, e = 0; e < d; e++)
            c.push(e);
    }
    else
        for (e in c = [], d = 0, a)
            c[d++] = e;
    d = Kc(a);
    e = d.length;
    for (var f = 0; f < e; f++)
        b.call(void 0, d[f], c && c[f], a);
} }
function S(a, b) { this.b = {}; this.a = []; this.c = 0; var c = arguments.length; if (1 < c) {
    if (c % 2)
        throw Error("Uneven number of arguments");
    for (var d = 0; d < c; d += 2)
        this.set(arguments[d], arguments[d + 1]);
}
else if (a)
    if (a instanceof S)
        for (c = a.L(), d = 0; d < c.length; d++)
            this.set(c[d], a.get(c[d]));
    else
        for (d in a)
            this.set(d, a[d]); }
g = S.prototype;
g.K = function () { Mc(this); for (var a = [], b = 0; b < this.a.length; b++)
    a.push(this.b[this.a[b]]); return a; };
g.L = function () { Mc(this); return this.a.concat(); };
function Mc(a) { if (a.c != a.a.length) {
    for (var b = 0, c = 0; b < a.a.length;) {
        var d = a.a[b];
        T(a.b, d) && (a.a[c++] = d);
        b++;
    }
    a.a.length = c;
} if (a.c != a.a.length) {
    var e = {};
    for (c = b = 0; b < a.a.length;)
        d = a.a[b], T(e, d) || (a.a[c++] = d, e[d] = 1), b++;
    a.a.length = c;
} }
g.get = function (a, b) { return T(this.b, a) ? this.b[a] : b; };
g.set = function (a, b) { T(this.b, a) || (this.c++, this.a.push(a)); this.b[a] = b; };
g.forEach = function (a, b) { for (var c = this.L(), d = 0; d < c.length; d++) {
    var e = c[d], f = this.get(e);
    a.call(b, f, e, this);
} };
function T(a, b) { return Object.prototype.hasOwnProperty.call(a, b); }
var Nc = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^\\/?#]*)@)?([^\\/?#]*?)(?::([0-9]+))?(?=[\\/?#]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;
function Oc(a, b) { if (a) {
    a = a.split("&");
    for (var c = 0; c < a.length; c++) {
        var d = a[c].indexOf("="), e = null;
        if (0 <= d) {
            var f = a[c].substring(0, d);
            e = a[c].substring(d + 1);
        }
        else
            f = a[c];
        b(f, e ? decodeURIComponent(e.replace(/\+/g, " ")) : "");
    }
} }
function U(a, b) { this.c = this.j = this.f = ""; this.h = null; this.i = this.g = ""; this.a = !1; if (a instanceof U) {
    this.a = void 0 !== b ? b : a.a;
    Pc(this, a.f);
    this.j = a.j;
    Qc(this, a.c);
    Rc(this, a.h);
    this.g = a.g;
    b = a.b;
    var c = new Sc;
    c.c = b.c;
    b.a && (c.a = new S(b.a), c.b = b.b);
    Tc(this, c);
    this.i = a.i;
}
else
    a && (c = String(a).match(Nc)) ? (this.a = !!b, Pc(this, c[1] || "", !0), this.j = Uc(c[2] || ""), Qc(this, c[3] || "", !0), Rc(this, c[4]), this.g = Uc(c[5] || "", !0), Tc(this, c[6] || "", !0), this.i = Uc(c[7] || "")) : (this.a = !!b, this.b = new Sc(null, this.a)); }
U.prototype.toString = function () { var a = [], b = this.f; b && a.push(Vc(b, Wc, !0), ":"); var c = this.c; if (c || "file" == b)
    a.push("//"), (b = this.j) && a.push(Vc(b, Wc, !0), "@"), a.push(encodeURIComponent(String(c)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), c = this.h, null != c && a.push(":", String(c)); if (c = this.g)
    this.c && "/" != c.charAt(0) && a.push("/"), a.push(Vc(c, "/" == c.charAt(0) ? Xc : Yc, !0)); (c = this.b.toString()) && a.push("?", c); (c = this.i) && a.push("#", Vc(c, Zc)); return a.join(""); };
function N(a) { return new U(a); }
function Pc(a, b, c) { a.f = c ? Uc(b, !0) : b; a.f && (a.f = a.f.replace(/:$/, "")); }
function Qc(a, b, c) { a.c = c ? Uc(b, !0) : b; }
function Rc(a, b) { if (b) {
    b = Number(b);
    if (isNaN(b) || 0 > b)
        throw Error("Bad port number " + b);
    a.h = b;
}
else
    a.h = null; }
function Tc(a, b, c) { b instanceof Sc ? (a.b = b, $c(a.b, a.a)) : (c || (b = Vc(b, ad)), a.b = new Sc(b, a.a)); }
function R(a, b, c) { a.b.set(b, c); }
function kc(a) { R(a, "zx", Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ q()).toString(36)); return a; }
function bd(a) { return a instanceof U ? N(a) : new U(a, void 0); }
function cd(a, b, c, d) { var e = new U(null, void 0); a && Pc(e, a); b && Qc(e, b); c && Rc(e, c); d && (e.g = d); return e; }
function Uc(a, b) { return a ? b ? decodeURI(a.replace(/%25/g, "%2525")) : decodeURIComponent(a) : ""; }
function Vc(a, b, c) { return "string" === typeof a ? (a = encodeURI(a).replace(b, dd), c && (a = a.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), a) : null; }
function dd(a) { a = a.charCodeAt(0); return "%" + (a >> 4 & 15).toString(16) + (a & 15).toString(16); }
var Wc = /[#\/\?@]/g, Yc = /[#\?:]/g, Xc = /[#\?]/g, ad = /[#\?@]/g, Zc = /#/g;
function Sc(a, b) { this.b = this.a = null; this.c = a || null; this.f = !!b; }
function V(a) { a.a || (a.a = new S, a.b = 0, a.c && Oc(a.c, function (b, c) { a.add(decodeURIComponent(b.replace(/\+/g, " ")), c); })); }
g = Sc.prototype;
g.add = function (a, b) { V(this); this.c = null; a = W(this, a); var c = this.a.get(a); c || this.a.set(a, c = []); c.push(b); this.b += 1; return this; };
function ed(a, b) { V(a); b = W(a, b); T(a.a.b, b) && (a.c = null, a.b -= a.a.get(b).length, a = a.a, T(a.b, b) && (delete a.b[b], a.c--, a.a.length > 2 * a.c && Mc(a))); }
function fd(a, b) { V(a); b = W(a, b); return T(a.a.b, b); }
g.forEach = function (a, b) { V(this); this.a.forEach(function (c, d) { na(c, function (e) { a.call(b, e, d, this); }, this); }, this); };
g.L = function () { V(this); for (var a = this.a.K(), b = this.a.L(), c = [], d = 0; d < b.length; d++)
    for (var e = a[d], f = 0; f < e.length; f++)
        c.push(b[d]); return c; };
g.K = function (a) { V(this); var b = []; if ("string" === typeof a)
    fd(this, a) && (b = qa(b, this.a.get(W(this, a))));
else {
    a = this.a.K();
    for (var c = 0; c < a.length; c++)
        b = qa(b, a[c]);
} return b; };
g.set = function (a, b) { V(this); this.c = null; a = W(this, a); fd(this, a) && (this.b -= this.a.get(a).length); this.a.set(a, [b]); this.b += 1; return this; };
g.get = function (a, b) { if (!a)
    return b; a = this.K(a); return 0 < a.length ? String(a[0]) : b; };
function nc(a, b, c) { ed(a, b); 0 < c.length && (a.c = null, a.a.set(W(a, b), ra(c)), a.b += c.length); }
g.toString = function () { if (this.c)
    return this.c; if (!this.a)
    return ""; for (var a = [], b = this.a.L(), c = 0; c < b.length; c++) {
    var d = b[c], e = encodeURIComponent(String(d));
    d = this.K(d);
    for (var f = 0; f < d.length; f++) {
        var h = e;
        "" !== d[f] && (h += "=" + encodeURIComponent(String(d[f])));
        a.push(h);
    }
} return this.c = a.join("&"); };
function W(a, b) { b = String(b); a.f && (b = b.toLowerCase()); return b; }
function $c(a, b) { b && !a.f && (V(a), a.c = null, a.a.forEach(function (c, d) { var e = d.toLowerCase(); d != e && (ed(this, d), nc(this, e, c)); }, a)); a.f = b; }
var gd = /** @class */ (function () {
    function gd(a, b) {
        this.b = a;
        this.a = b;
    }
    return gd;
}());
function hd(a) { this.g = a || id; k.PerformanceNavigationTiming ? (a = k.performance.getEntriesByType("navigation"), a = 0 < a.length && ("hq" == a[0].nextHopProtocol || "h2" == a[0].nextHopProtocol)) : a = !!(k.ja && k.ja.za && k.ja.za() && k.ja.za().Qb); this.f = a ? this.g : 1; this.a = null; 1 < this.f && (this.a = new Set); this.b = null; this.c = []; }
var id = 10;
function jd(a) { return a.b ? !0 : a.a ? a.a.size >= a.f : !1; }
function Dc(a) { return a.b ? 1 : a.a ? a.a.size : 0; }
function xc(a, b) { return a.b ? a.b == b : a.a ? a.a.has(b) : !1; }
function Ec(a, b) { a.a ? a.a.add(b) : a.b = b; }
function Gc(a, b) { a.b && a.b == b ? a.b = null : a.a && a.a.has(b) && a.a.delete(b); }
hd.prototype.cancel = function () {
    var e_1, _a;
    this.c = kd(this);
    if (this.b)
        this.b.cancel(), this.b = null;
    else if (this.a && 0 !== this.a.size) {
        try {
            for (var _b = __values(this.a.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var a = _c.value;
                a.cancel();
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.a.clear();
    }
};
function kd(a) {
    var e_2, _a;
    if (null != a.b)
        return a.c.concat(a.b.s);
    if (null != a.a && 0 !== a.a.size) {
        var b = a.c;
        try {
            for (var _b = __values(a.a.values()), _c = _b.next(); !_c.done; _c = _b.next()) {
                var c = _c.value;
                b = b.concat(c.s);
            }
        }
        catch (e_2_1) { e_2 = { error: e_2_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_2) throw e_2.error; }
        }
        return b;
    }
    return ra(a.c);
}
function ld() { }
ld.prototype.stringify = function (a) { return k.JSON.stringify(a, void 0); };
ld.prototype.parse = function (a) { return k.JSON.parse(a, void 0); };
function md() { this.a = new ld; }
function nd(a, b, c) { var d = c || ""; try {
    Lc(a, function (e, f) { var h = e; n(e) && (h = tb(e)); b.push(d + f + "=" + encodeURIComponent(h)); });
}
catch (e) {
    throw b.push(d + "type=" + encodeURIComponent("_badmap")), e;
} }
function od(a, b) { var c = new Ob; if (k.Image) {
    var d = new Image;
    d.onload = ia(pd, c, d, "TestLoadImage: loaded", !0, b);
    d.onerror = ia(pd, c, d, "TestLoadImage: error", !1, b);
    d.onabort = ia(pd, c, d, "TestLoadImage: abort", !1, b);
    d.ontimeout = ia(pd, c, d, "TestLoadImage: timeout", !1, b);
    k.setTimeout(function () { if (d.ontimeout)
        d.ontimeout(); }, 1E4);
    d.src = a;
}
else
    b(!1); }
function pd(a, b, c, d, e) { try {
    b.onload = null, b.onerror = null, b.onabort = null, b.ontimeout = null, e(d);
}
catch (f) { } }
var qd = k.JSON.parse;
function X(a) { D.call(this); this.headers = new S; this.l = a || null; this.b = !1; this.u = this.a = null; this.C = ""; this.h = 0; this.f = ""; this.g = this.B = this.m = this.A = !1; this.s = 0; this.o = null; this.I = rd; this.F = this.G = !1; }
r(X, D);
var rd = "", sd = /^https?$/i, td = ["POST", "PUT"];
g = X.prototype;
g.ba = function (a, b, c, d) {
    if (this.a)
        throw Error("[goog.net.XhrIo] Object is active with another request=" + this.C + "; newUri=" + a);
    b = b ? b.toUpperCase() : "GET";
    this.C = a;
    this.f = "";
    this.h = 0;
    this.A = !1;
    this.b = !0;
    this.a = this.l ? this.l.a() : ec.a();
    this.u = this.l ? ac(this.l) : ac(ec);
    this.a.onreadystatechange = p(this.Aa, this);
    try {
        this.B = !0, this.a.open(b, String(a), !0), this.B = !1;
    }
    catch (f) {
        ud(this, f);
        return;
    }
    a = c || "";
    var e = new S(this.headers);
    d && Lc(d, function (f, h) { e.set(h, f); });
    d = oa(e.L());
    c = k.FormData && a instanceof k.FormData;
    !(0 <= ma(td, b)) || d || c || e.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8");
    e.forEach(function (f, h) { this.a.setRequestHeader(h, f); }, this);
    this.I && (this.a.responseType = this.I);
    "withCredentials" in this.a && this.a.withCredentials !== this.G && (this.a.withCredentials = this.G);
    try {
        vd(this), 0 < this.s && ((this.F = wd(this.a)) ? (this.a.timeout = this.s, this.a.ontimeout = p(this.ya, this)) : this.o = Ib(this.ya, this.s, this)), this.m = !0, this.a.send(a), this.m = !1;
    }
    catch (f) {
        ud(this, f);
    }
};
function wd(a) { return x && Qa(9) && "number" === typeof a.timeout && void 0 !== a.ontimeout; }
function pa(a) { return "content-type" == a.toLowerCase(); }
g.ya = function () { "undefined" != typeof goog && this.a && (this.f = "Timed out after " + this.s + "ms, aborting", this.h = 8, E(this, "timeout"), this.abort(8)); };
function ud(a, b) { a.b = !1; a.a && (a.g = !0, a.a.abort(), a.g = !1); a.f = b; a.h = 5; xd(a); yd(a); }
function xd(a) { a.A || (a.A = !0, E(a, "complete"), E(a, "error")); }
g.abort = function (a) { this.a && this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1, this.h = a || 7, E(this, "complete"), E(this, "abort"), yd(this)); };
g.H = function () { this.a && (this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1), yd(this, !0)); X.X.H.call(this); };
g.Aa = function () { this.j || (this.B || this.m || this.g ? zd(this) : this.Za()); };
g.Za = function () { zd(this); };
function zd(a) {
    if (a.b && "undefined" != typeof goog && (!a.u[1] || 4 != O(a) || 2 != a.W()))
        if (a.m && 4 == O(a))
            Ib(a.Aa, 0, a);
        else if (E(a, "readystatechange"), 4 == O(a)) {
            a.b = !1;
            try {
                {
                    var l = a.W();
                    a: switch (l) {
                        case 200:
                        case 201:
                        case 202:
                        case 204:
                        case 206:
                        case 304:
                        case 1223:
                            var b = !0;
                            break a;
                        default: b = !1;
                    }
                    var c;
                    if (!(c = b)) {
                        var d;
                        if (d = 0 === l) {
                            var e = String(a.C).match(Nc)[1] || null;
                            if (!e && k.self && k.self.location) {
                                var f = k.self.location.protocol;
                                e = f.substr(0, f.length - 1);
                            }
                            d = !sd.test(e ? e.toLowerCase() : "");
                        }
                        c = d;
                    }
                    var h = c;
                }
                if (h)
                    E(a, "complete"),
                        E(a, "success");
                else {
                    a.h = 6;
                    try {
                        var m = 2 < O(a) ? a.a.statusText : "";
                    }
                    catch (l) {
                        m = "";
                    }
                    a.f = m + " [" + a.W() + "]";
                    xd(a);
                }
            }
            finally {
                yd(a);
            }
        }
}
function yd(a, b) { if (a.a) {
    vd(a);
    var c = a.a, d = a.u[0] ? aa : null;
    a.a = null;
    a.u = null;
    b || E(a, "ready");
    try {
        c.onreadystatechange = d;
    }
    catch (e) { }
} }
function vd(a) { a.a && a.F && (a.a.ontimeout = null); a.o && (k.clearTimeout(a.o), a.o = null); }
function O(a) { return a.a ? a.a.readyState : 0; }
g.W = function () { try {
    return 2 < O(this) ? this.a.status : -1;
}
catch (a) {
    return -1;
} };
g.$ = function () { try {
    return this.a ? this.a.responseText : "";
}
catch (a) {
    return "";
} };
g.Qa = function (a) { if (this.a) {
    var b = this.a.responseText;
    a && 0 == b.indexOf(a) && (b = b.substring(a.length));
    return qd(b);
} };
g.va = function () { return this.h; };
g.Ra = function () { return "string" === typeof this.f ? this.f : String(this.f); };
function Ad(a) { var b = ""; xa(a, function (c, d) { b += d; b += ":"; b += c; b += "\r\n"; }); return b; }
function Bd(a, b, c) { a: {
    for (d in c) {
        var d = !1;
        break a;
    }
    d = !0;
} d || (c = Ad(c), "string" === typeof a ? (null != c && encodeURIComponent(String(c))) : R(a, b, c)); }
function Cd(a, b, c) { return c && c.internalChannelParams ? c.internalChannelParams[a] || b : b; }
function Dd(a) {
    this.qa = 0;
    this.g = [];
    this.c = new Ob;
    this.ha = this.ma = this.B = this.ga = this.a = this.oa = this.A = this.V = this.i = this.O = this.l = null;
    this.Pa = this.R = 0;
    this.Ma = Cd("failFast", !1, a);
    this.G = this.m = this.j = this.h = this.f = null;
    this.S = !0;
    this.I = this.pa = this.P = -1;
    this.T = this.o = this.u = 0;
    this.Ia = Cd("baseRetryDelayMs", 5E3, a);
    this.Sa = Cd("retryDelaySeedMs", 1E4, a);
    this.Na = Cd("forwardChannelMaxRetries", 2, a);
    this.na = Cd("forwardChannelRequestTimeoutMs", 2E4, a);
    this.Oa = a && a.xmlHttpFactory || void 0;
    this.D = void 0;
    this.C =
        a && a.supportsCrossDomainXhr || !1;
    this.J = "";
    this.b = new hd(a && a.concurrentRequestLimit);
    this.la = new md;
    this.ea = a && a.fastHandshake || !1;
    this.Ja = a && a.b || !1;
    a && a.f && (this.c.a = !1);
    a && a.forceLongPolling && (this.S = !1);
    this.U = !this.ea && this.S && a && a.detectBufferingProxy || !1;
    this.fa = void 0;
    this.N = 0;
    this.F = !1;
    this.s = null;
    (this.La = a && a.c || !1) && this.c.info("Opt-in to enable Chrome Origin Trials.");
}
g = Dd.prototype;
g.ia = 8;
g.v = 1;
function Jc(a) { Ed(a); if (3 == a.v) {
    var b = a.R++, c = N(a.B);
    R(c, "SID", a.J);
    R(c, "RID", b);
    R(c, "TYPE", "terminate");
    Fd(a, c);
    b = new M(a, a.c, b, void 0);
    b.G = 2;
    b.i = kc(N(c));
    c = !1;
    k.navigator && k.navigator.sendBeacon && (c = k.navigator.sendBeacon(b.i.toString(), ""));
    !c && k.Image && ((new Image).src = b.i, c = !0);
    c || (b.a = oc(b.g, null), b.a.ba(b.i));
    b.u = q();
    mc(b);
} Gd(a); }
function Ac(a) { a.a && (vc(a), a.a.cancel(), a.a = null); }
function Ed(a) { Ac(a); a.j && (k.clearTimeout(a.j), a.j = null); zc(a); a.b.cancel(); a.h && ("number" === typeof a.h && k.clearTimeout(a.h), a.h = null); }
function Hd(a, b) { a.g.push(new gd(a.Pa++, b)); 3 == a.v && Ic(a); }
function Ic(a) { jd(a.b) || a.h || (a.h = !0, Bb(a.Ca, a), a.u = 0); }
function Id(a, b) { if (Dc(a.b) >= a.b.f - (a.h ? 1 : 0))
    return !1; if (a.h)
    return a.g = b.s.concat(a.g), !0; if (1 == a.v || 2 == a.v || a.u >= (a.Ma ? 0 : a.Na))
    return !1; a.h = K(p(a.Ca, a, b), Jd(a, a.u)); a.u++; return !0; }
g.Ca = function (a) {
    if (this.h)
        if (this.h = null, 1 == this.v) {
            if (!a) {
                this.R = Math.floor(1E5 * Math.random());
                a = this.R++;
                var b = new M(this, this.c, a, void 0), c = this.l;
                this.O && (c ? (c = ya(c), Ca(c, this.O)) : c = this.O);
                null === this.i && (b.B = c);
                var d;
                if (this.ea)
                    a: {
                        for (var e = d = 0; e < this.g.length; e++) {
                            b: {
                                var f = this.g[e];
                                if ("__data__" in f.a && (f = f.a.__data__, "string" === typeof f)) {
                                    f = f.length;
                                    break b;
                                }
                                f = void 0;
                            }
                            if (void 0 === f)
                                break;
                            d += f;
                            if (4096 < d) {
                                d = e;
                                break a;
                            }
                            if (4096 === d || e === this.g.length - 1) {
                                d = e + 1;
                                break a;
                            }
                        }
                        d = 1E3;
                    }
                else
                    d = 1E3;
                d = Kd(this, b, d);
                e = N(this.B);
                R(e, "RID", a);
                R(e, "CVER", 22);
                this.A && R(e, "X-HTTP-Session-Id", this.A);
                Fd(this, e);
                this.i && c && Bd(e, this.i, c);
                Ec(this.b, b);
                this.Ja && R(e, "TYPE", "init");
                this.ea ? (R(e, "$req", d), R(e, "SID", "null"), b.U = !0, jc(b, e, null)) : jc(b, e, d);
                this.v = 2;
            }
        }
        else
            3 == this.v && (a ? Ld(this, a) : 0 == this.g.length || jd(this.b) || Ld(this));
};
function Ld(a, b) { var c; b ? c = b.f : c = a.R++; var d = N(a.B); R(d, "SID", a.J); R(d, "RID", c); R(d, "AID", a.P); Fd(a, d); a.i && a.l && Bd(d, a.i, a.l); c = new M(a, a.c, c, a.u + 1); null === a.i && (c.B = a.l); b && (a.g = b.s.concat(a.g)); b = Kd(a, c, 1E3); c.setTimeout(Math.round(.5 * a.na) + Math.round(.5 * a.na * Math.random())); Ec(a.b, c); jc(c, d, b); }
function Fd(a, b) { a.f && Lc({}, function (c, d) { R(b, d, c); }); }
function Kd(a, b, c) { c = Math.min(a.g.length, c); var d = a.f ? p(a.f.Ka, a.f, a) : null; a: for (var e = a.g, f = -1;;) {
    var h = ["count=" + c];
    -1 == f ? 0 < c ? (f = e[0].b, h.push("ofs=" + f)) : f = 0 : h.push("ofs=" + f);
    for (var m = !0, l = 0; l < c; l++) {
        var v = e[l].b, C = e[l].a;
        v -= f;
        if (0 > v)
            f = Math.max(0, e[l].b - 100), m = !1;
        else
            try {
                nd(C, h, "req" + v + "_");
            }
            catch (B) {
                d && d(C);
            }
    }
    if (m) {
        d = h.join("&");
        break a;
    }
} a = a.g.splice(0, c); b.s = a; return d; }
function Hc(a) { a.a || a.j || (a.T = 1, Bb(a.Ba, a), a.o = 0); }
function Bc(a) { if (a.a || a.j || 3 <= a.o)
    return !1; a.T++; a.j = K(p(a.Ba, a), Jd(a, a.o)); a.o++; return !0; }
g.Ba = function () { this.j = null; Md(this); if (this.U && !(this.F || null == this.a || 0 >= this.N)) {
    var a = 2 * this.N;
    this.c.info("BP detection timer enabled: " + a);
    this.s = K(p(this.Ya, this), a);
} };
g.Ya = function () { this.s && (this.s = null, this.c.info("BP detection timeout reached."), this.c.info("Buffering proxy detected and switch to long-polling!"), this.G = !1, this.F = !0, J(10), Ac(this), Md(this)); };
function vc(a) { null != a.s && (k.clearTimeout(a.s), a.s = null); }
function Md(a) { a.a = new M(a, a.c, "rpc", a.T); null === a.i && (a.a.B = a.l); a.a.O = 0; var b = N(a.ma); R(b, "RID", "rpc"); R(b, "SID", a.J); R(b, "CI", a.G ? "0" : "1"); R(b, "AID", a.P); Fd(a, b); R(b, "TYPE", "xmlhttp"); a.i && a.l && Bd(b, a.i, a.l); a.D && a.a.setTimeout(a.D); var c = a.a; a = a.ha; c.G = 1; c.i = kc(N(b)); c.j = null; c.I = !0; lc(c, a); }
g.Xa = function () { null != this.m && (this.m = null, Ac(this), Bc(this), J(19)); };
function zc(a) { null != a.m && (k.clearTimeout(a.m), a.m = null); }
function tc(a, b) { var c = null; if (a.a == b) {
    zc(a);
    vc(a);
    a.a = null;
    var d = 2;
}
else if (xc(a.b, b))
    c = b.s, Gc(a.b, b), d = 1;
else
    return; a.I = b.N; if (0 != a.v)
    if (b.b)
        if (1 == d) {
            c = b.j ? b.j.length : 0;
            b = q() - b.u;
            var e = a.u;
            d = Ub();
            E(d, new Xb(d, c, b, e));
            Ic(a);
        }
        else
            Hc(a);
    else if (e = b.h, 3 == e || 0 == e && 0 < a.I || !(1 == d && Id(a, b) || 2 == d && Bc(a)))
        switch (c && 0 < c.length && (b = a.b, b.c = b.c.concat(c)), e) {
            case 1:
                Q(a, 5);
                break;
            case 4:
                Q(a, 10);
                break;
            case 3:
                Q(a, 6);
                break;
            default: Q(a, 2);
        } }
function Jd(a, b) { var c = a.Ia + Math.floor(Math.random() * a.Sa); a.f || (c *= 2); return c * b; }
function Q(a, b) { a.c.info("Error code " + b); if (2 == b) {
    var c = null;
    a.f && (c = null);
    var d = p(a.cb, a);
    c || (c = new U("//www.google.com/images/cleardot.gif"), k.location && "http" == k.location.protocol || Pc(c, "https"), kc(c));
    od(c.toString(), d);
}
else
    J(2); a.v = 0; a.f && a.f.sa(b); Gd(a); Ed(a); }
g.cb = function (a) { a ? (this.c.info("Successfully pinged google.com"), J(2)) : (this.c.info("Failed to ping google.com"), J(1)); };
function Gd(a) { a.v = 0; a.I = -1; if (a.f) {
    if (0 != kd(a.b).length || 0 != a.g.length)
        a.b.c.length = 0, ra(a.g), a.g.length = 0;
    a.f.ra();
} }
function Fc(a, b, c) { var d = bd(c); if ("" != d.c)
    b && Qc(d, b + "." + d.c), Rc(d, d.h);
else {
    var e = k.location;
    d = cd(e.protocol, b ? b + "." + e.hostname : e.hostname, +e.port, c);
} a.V && xa(a.V, function (f, h) { R(d, h, f); }); b = a.A; c = a.oa; b && c && R(d, b, c); R(d, "VER", a.ia); Fd(a, d); return d; }
function oc(a, b) { if (b && !a.C)
    throw Error("Can't create secondary domain capable XhrIo object."); b = new X(a.Oa); b.G = a.C; return b; }
function Nd() { }
g = Nd.prototype;
g.ua = function () { };
g.ta = function () { };
g.sa = function () { };
g.ra = function () { };
g.Ka = function () { };
function Od() { if (x && !(10 <= Number(Ta)))
    throw Error("Environmental error: no available transport."); }
Od.prototype.a = function (a, b) { return new Y(a, b); };
function Y(a, b) {
    D.call(this);
    this.a = new Dd(b);
    this.g = a;
    this.b = b && b.messageUrlParams || null;
    a = b && b.messageHeaders || null;
    b && b.clientProtocolHeaderRequired && (a ? a["X-Client-Protocol"] = "webchannel" : a = { "X-Client-Protocol": "webchannel" });
    this.a.l = a;
    a = b && b.initMessageHeaders || null;
    b && b.messageContentType && (a ? a["X-WebChannel-Content-Type"] = b.messageContentType : a = { "X-WebChannel-Content-Type": b.messageContentType });
    b && b.a && (a ? a["X-WebChannel-Client-Profile"] = b.a : a = { "X-WebChannel-Client-Profile": b.a });
    this.a.O =
        a;
    (a = b && b.httpHeadersOverwriteParam) && !sa(a) && (this.a.i = a);
    this.o = b && b.supportsCrossDomainXhr || !1;
    this.m = b && b.sendRawJson || !1;
    (b = b && b.httpSessionIdParam) && !sa(b) && (this.a.A = b, a = this.b, null !== a && b in a && (a = this.b, b in a && delete a[b]));
    this.f = new Z(this);
}
r(Y, D);
Y.prototype.h = function () { this.a.f = this.f; this.o && (this.a.C = !0); var a = this.a, b = this.g, c = this.b || void 0; J(0); a.ga = b; a.V = c || {}; a.G = a.S; a.B = Fc(a, null, a.ga); Ic(a); };
Y.prototype.close = function () { Jc(this.a); };
Y.prototype.l = function (a) { if ("string" === typeof a) {
    var b = {};
    b.__data__ = a;
    Hd(this.a, b);
}
else
    this.m ? (b = {}, b.__data__ = tb(a), Hd(this.a, b)) : Hd(this.a, a); };
Y.prototype.H = function () { this.a.f = null; delete this.f; Jc(this.a); delete this.a; Y.X.H.call(this); };
function Pd(a) { cc.call(this); var b = a.__sm__; if (b) {
    a: {
        for (var c in b) {
            a = c;
            break a;
        }
        a = void 0;
    }
    (this.c = a) ? (a = this.c, this.data = null !== b && a in b ? b[a] : void 0) : this.data = b;
}
else
    this.data = a; }
r(Pd, cc);
function Qd() { dc.call(this); this.status = 1; }
r(Qd, dc);
function Z(a) { this.a = a; }
r(Z, Nd);
Z.prototype.ua = function () { E(this.a, "a"); };
Z.prototype.ta = function (a) { E(this.a, new Pd(a)); };
Z.prototype.sa = function (a) { E(this.a, new Qd(a)); };
Z.prototype.ra = function () { E(this.a, "b"); };
function Rd(a) { this.f = a; }
r(Rd, $b);
Rd.prototype.a = function () { return new Sd(this.f); };
Rd.prototype.c = function (a) { return function () { return a; }; }({});
function Sd(a) { D.call(this); this.u = a; this.h = void 0; this.readyState = Td; this.status = 0; this.responseType = this.responseText = this.statusText = ""; this.onreadystatechange = null; this.l = new Headers; this.b = null; this.s = "GET"; this.o = ""; this.a = !1; this.m = this.f = this.g = null; }
r(Sd, D);
var Td = 0;
g = Sd.prototype;
g.open = function (a, b) { if (this.readyState != Td)
    throw this.abort(), Error("Error reopening a connection"); this.s = a; this.o = b; this.readyState = 1; Ud(this); };
g.send = function (a) { if (1 != this.readyState)
    throw this.abort(), Error("need to call open() first. "); this.a = !0; var b = { headers: this.l, method: this.s, credentials: this.h, cache: void 0 }; a && (b.body = a); this.u.fetch(new Request(this.o, b)).then(this.Wa.bind(this), this.ca.bind(this)); };
g.abort = function () { this.responseText = ""; this.l = new Headers; this.status = 0; this.f && this.f.cancel("Request was aborted."); 1 <= this.readyState && this.a && 4 != this.readyState && (this.a = !1, Vd(this)); this.readyState = Td; };
g.Wa = function (a) { this.a && (this.g = a, this.b || (this.status = this.g.status, this.statusText = this.g.statusText, this.b = a.headers, this.readyState = 2, Ud(this)), this.a && (this.readyState = 3, Ud(this), this.a && ("arraybuffer" === this.responseType ? a.arrayBuffer().then(this.Ua.bind(this), this.ca.bind(this)) : "undefined" !== typeof k.ReadableStream && "body" in a ? (this.responseText = "", this.f = a.body.getReader(), this.m = new TextDecoder, Wd(this)) : a.text().then(this.Va.bind(this), this.ca.bind(this))))); };
function Wd(a) { a.f.read().then(a.Ta.bind(a)).catch(a.ca.bind(a)); }
g.Ta = function (a) { if (this.a) {
    var b = this.m.decode(a.value ? a.value : new Uint8Array(0), { stream: !a.done });
    b && (this.responseText += b);
    a.done ? Vd(this) : Ud(this);
    3 == this.readyState && Wd(this);
} };
g.Va = function (a) { this.a && (this.responseText = a, Vd(this)); };
g.Ua = function () { this.a && Vd(this); };
g.ca = function () { this.a && Vd(this); };
function Vd(a) { a.readyState = 4; a.g = null; a.f = null; a.m = null; Ud(a); }
g.setRequestHeader = function (a, b) { this.l.append(a, b); };
g.getResponseHeader = function (a) { return this.b ? this.b.get(a.toLowerCase()) || "" : ""; };
g.getAllResponseHeaders = function () { if (!this.b)
    return ""; var a = [], b = this.b.entries(); for (var c = b.next(); !c.done;)
    c = c.value, a.push(c[0] + ": " + c[1]), c = b.next(); return a.join("\r\n"); };
function Ud(a) { a.onreadystatechange && a.onreadystatechange.call(a); }
Object.defineProperty(Sd.prototype, "withCredentials", { get: function () { return "include" === this.h; }, set: function (a) { this.h = a ? "include" : "same-origin"; } }); /*

 Copyright 2017 Google LLC

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
*/
Od.prototype.createWebChannel = Od.prototype.a;
Y.prototype.send = Y.prototype.l;
Y.prototype.open = Y.prototype.h;
Y.prototype.close = Y.prototype.close;
Yb.NO_ERROR = 0;
Yb.TIMEOUT = 8;
Yb.HTTP_ERROR = 6;
Zb.COMPLETE = "complete";
bc.EventType = L;
L.OPEN = "a";
L.CLOSE = "b";
L.ERROR = "c";
L.MESSAGE = "d";
D.prototype.listen = D.prototype.wa;
X.prototype.listenOnce = X.prototype.xa;
X.prototype.getLastError = X.prototype.Ra;
X.prototype.getLastErrorCode = X.prototype.va;
X.prototype.getStatus = X.prototype.W;
X.prototype.getResponseJson = X.prototype.Qa;
X.prototype.getResponseText = X.prototype.$;
X.prototype.send = X.prototype.ba;
var createWebChannelTransport = function () { return new Od; };
var getStatEventTarget = function () { return Ub(); };
var ErrorCode = Yb;
var EventType = Zb;
var Event = H;
var Stat = { lb: 0, ob: 1, pb: 2, Ib: 3, Nb: 4, Kb: 5, Lb: 6, Jb: 7, Hb: 8, Mb: 9, PROXY: 10, NOPROXY: 11, Fb: 12, Bb: 13, Cb: 14, Ab: 15, Db: 16, Eb: 17, hb: 18, gb: 19, ib: 20 };
var FetchXmlHttpFactory = Rd;
var WebChannel = bc;
var XhrIo = X;

var esm = {
    createWebChannelTransport: createWebChannelTransport,
    getStatEventTarget: getStatEventTarget,
    ErrorCode: ErrorCode,
    EventType: EventType,
    Event: Event,
    Stat: Stat,
    FetchXmlHttpFactory: FetchXmlHttpFactory,
    WebChannel: WebChannel,
    XhrIo: XhrIo
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (esm);

//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./src/scripts/AppSetup.js":
/*!*********************************!*\
  !*** ./src/scripts/AppSetup.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var cameraPin = __webpack_require__(/*! ./CameraPin.js */ "./src/scripts/CameraPin.js");

var _lastPanel; // resize panel vars


var isResizing = false,
    lastDownX = 0;
$(function () {
  $('.tab-buttons a').on('click', function () {
    $(this).closest('li').addClass('active').siblings().removeClass('active');
    $('.tab-panel').removeClass('active').filter(this.hash).addClass('active');
    if (_lastPanel === "tab_button_5") cameraPin.uninitializePinPanel();
    if (this.id === "tab_button_5") initializePinPanel();
    _lastPanel = this.id;
    return false;
  });
  $('.report-select-input').change(function () {
    var theText = $(this).find('option:selected').text();

    if (theText.indexOf('Cantidad - ') > -1) {
      theText = theText;
    }

    $(this).prev('.report-select-mask').text(theText);
  });
}); // seems to be needed by Autodesk's viewer3D.js

function isTouchDevice() {
  return false;
}

/***/ }),

/***/ "./src/scripts/CameraPin.js":
/*!**********************************!*\
  !*** ./src/scripts/CameraPin.js ***!
  \**********************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

//
//  Camera Pin
//  Location bookmarks for presentaion mode. Data for the pins are wrapped in a class
//  contained in PinData.js, functions for creating the UI on the page are in PinUI.js
//  This script handles init/uninit and click behavior, as well as the view transition.
//
var pinData = __webpack_require__(/*! ./PinData.js */ "./src/scripts/PinData.js");

var _viewerPin;

var _currentPin;

var _shouldAddNewPin = false;
var _checkTransition = null;
var _checkCount = 0; // timer for on tour mode

function startTour(index) {
  if (index < _viewerPin.pinobjs.length && index >= 0) {
    $("#" + _viewerPin.pinobjs[index].pinid).click();
    setTimeout(startTour, 1500, index + 1);
  } else {
    _viewerMain.escapeScreenMode();
  }
} // initialize the data and view panel for presentation


function initializePinPanel() {
  // initialize the pin data
  _viewerPin = new pinData.ViewerPin($("#pu_modelToLoad :selected").text()); // need to update local storage of pins before tab close

  window.addEventListener("beforeunload", function () {
    if (_viewerPin) _viewerPin.updateLocalStorage();
  }); // add event listeners on the viewer

  _viewerMain.container.addEventListener("click", handleViewerClick);

  _viewerMain.addEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, updatePinsOnView);

  _viewerMain.addEventListener(Autodesk.Viewing.VIEWER_RESIZE_EVENT, updatePinsOnView); // initialize the pin ui


  initPinOverlay();
  initPinTablelist();
} // uninitialize the data and view panel for presentation


function uninitializePinPanel() {
  // update local storage before swtiching to another tab
  if (_viewerPin) {
    _viewerPin.updateLocalStorage();

    $("#pintablelist").empty();

    _viewerMain.container.removeChild($("#pushpinOverlay")[0]);
  } // remove event listeners on the viewer


  _viewerMain.container.removeEventListener("click", handleViewerClick);

  _viewerMain.removeEventListener(Autodesk.Viewing.CAMERA_CHANGE_EVENT, updatePinsOnView);

  _viewerMain.removeEventListener(Autodesk.Viewing.VIEWER_RESIZE_EVENT, updatePinsOnView);

  _viewerPin = null;
  _shouldAddNewPin = false;
} // called before creating a new pin, mark the overlay on the viewer canvas
// responsive to get the location of the new pin when user clicks


function prepareForAddNewPin() {
  // change the pointer events of the overlay from none to visible
  d3.select("#pushpinOverlay").style("pointer-events", "visible").style("cursor", "pointer"); // mark ready to receive click event on the viewer to create new pin

  _shouldAddNewPin = true;
} // creating a new pin, including the data and its relative visual components


function createNewPin(client, world, label) {
  var divid = "pin" + getUUID(); // NOTE: we can pass in a filter to getState() if we only want certain values like Camera

  /*var optionsFilter = {
      guid: true,
      seedURN: true,
      overrides: true,
      objectSet: {
          id: true,
          isolated: true,
          hidden: true,
          explodeScale: true
      },
      viewport: true,
      renderOptions: true
  };*/
  // update the pin data

  var curViewerState = _viewerMain.getState();

  console.log("ViewerState", curViewerState);

  _viewerPin.addPin(divid, world, label, curViewerState); // update the pin ui


  pushPinToOverlay(divid, client);
  pushPinToTableList(divid, label, document.getElementById("pintable")); // focus on the new pin's label for editing

  $("#row" + divid).find(".celllabel").dblclick();
} // transform array to THREE.Vector3


function positionToVector3(position) {
  return new THREE.Vector3(parseFloat(position[0]), parseFloat(position[1]), parseFloat(position[2]));
} // handle pin click, transit to its specific viewport and setup the headsup display


function viewPinClicked(evt) {
  var viewport = _viewerPin.getViewState(this.id);

  _viewerMain.restoreState(viewport); // NOTE: we can pass in a filter if we only want certain values like Camera position
  //  NOTE:  In the above call, we are just relying on the ViewerState function to capture everything in a JSON object and
  // the restore it when asked.  We could do a more controlled way and only worry about the Camera and try to do some effects
  // on our own, but that usually isn't necessary.

  /*var nav = _viewerMain.navigation;
    var eye = positionToVector3(viewport.eye);
  var up = positionToVector3(viewport.up);
  var target = positionToVector3(viewport.target);
  var fov = ("fieldOfView" in viewport) ? parseFloat(viewport.fieldOfView) : nav.getVerticalFov();
  var pivot = positionToVector3(viewport.pivotPoint);
    nav.setCameraUpVector(up);
        // if destination's camera mode is different, switch first
  if ("isOrthographic" in viewport) {
      if (viewport.isOrthographic) {
          nav.toOrthographic();
      } else {
          nav.toPerspective();
      }
  }
        // request transition on the viewer
  nav.setRequestTransition(true, eye, target, fov, false);
  nav.setPivotPoint(pivot);
  nav.setPivotSetFlag(true);
        // stop transition check of other click events
  if (_checkTransition !== null)
      clearInterval(_checkTransition);
        // check the viewer transition, display the headsup when done
  _checkTransition = setInterval(function() {
      var result = _viewerMain.navigation.getTransitionActive();
      if (!(result) || _checkCount > 20) {
          clearInterval(_checkTransition);
          _checkTransition = null;
          _checkCount = 0;
          var clientPos = worldToClient(vec, _viewerMain.getCamera());
          setHeadsUpDisplay(pinObj.label, clientPos.x, clientPos.y, true);
      } else {
          _checkCount += 1;
      }
  }, 100);*/
  // Uncomment for headsup display, this will set the
  // text/position/visibility of the headsup div

  /*
    var pinObj = _viewerPin.getPinObj(this.id);
  var vec = positionToVector3([pinObj.x, pinObj.y, pinObj.z]);
  var clientPos = worldToClient(vec, _viewerMain.getCamera());
  hideHeadesUpDiv(false);
  setHeadsUpDisplay(pinObj.label, clientPos.x, clientPos.y, true);
    */

} // update the pin coordinates on the 2D canvas when camera moves


function updatePinsOnView() {
  var camera = _viewerMain.getCamera();

  _viewerPin.each(function (pinid, label, position) {
    var vec = positionToVector3(position);
    var newPos2D = worldToClient(vec, _viewerMain.getCamera());
    d3.select("#" + pinid).attr("cx", newPos2D.x).attr("cy", newPos2D.y);
  });
} // transform position in 3d world to client coordinate


function worldToClient(position, camera) {
  var p = new THREE.Vector4();
  p.x = position.x;
  p.y = position.y;
  p.z = position.z;
  p.w = 1;
  p.applyMatrix4(camera.matrixWorldInverse);
  p.applyMatrix4(camera.projectionMatrix);

  if (p.w > 0) {
    p.x /= p.w;
    p.y /= p.w;
    p.z /= p.w;
  }

  var point = _viewerMain.impl.viewportToClient(p.x, p.y);

  point.x = Math.floor(point.x) + 0.5;
  point.y = Math.floor(point.y) + 0.5;
  return point;
} // calculate the 2D position for the new pin to be added
// should only work under editing mode, i.e. after prepareForAddNewPin is called


function handleViewerClick(evt) {
  if (_shouldAddNewPin) {
    var viewport = _viewerMain.navigation.getScreenViewport(); // calculate  relative positon on the canvas, not in window


    var clientPos = {
      x: evt.clientX - viewport.left,
      y: evt.clientY - viewport.top
    }; // get normalized positon on canvas

    var normedpos = {
      x: (evt.clientX - viewport.left) / viewport.width,
      y: (evt.clientY - viewport.top) / viewport.height
    }; // first to see if the clicked positon is hit on an object of viewer

    var hitPoint = _viewerMain.utilities.getHitPoint(normedpos.x, normedpos.y);

    if (hitPoint === null) hitPoint = _viewerMain.navigation.getWorldPoint(normedpos.x, normedpos.y);
    createNewPin(clientPos, hitPoint, "undefined");
  }
} // random id generator for new pins


function getUUID() {
  var d = new Date().getTime();
  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    var r = (d + Math.random() * 16) % 16 | 0;
    d = Math.floor(d / 16);
    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);
  });
  return uuid;
}

;
$(document).ready(function () {
  $("#tourbtn").click(function () {
    _viewerMain.setScreenMode(2);

    setTimeout(function () {
      startTour(0);
    }, 150);
  });
  $("#viewportbtn").click(prepareForAddNewPin);
  $("#pincheckbox").click(function () {
    $("#pushpinOverlay").toggle();
  });
});
module.exports = {
  uninitializePinPanel: uninitializePinPanel
};

/***/ }),

/***/ "./src/scripts/LoadModel.js":
/*!**********************************!*\
  !*** ./src/scripts/LoadModel.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _firebaseData_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./firebaseData.js */ "./src/scripts/firebaseData.js");
/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/app */ "./node_modules/firebase/app/dist/index.esm.js");
/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ "./node_modules/firebase/firestore/dist/index.esm.js");
/* harmony import */ var _dataClass_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dataClass.js */ "./src/scripts/dataClass.js");
// LoadModel.js
//
// This file handles changing Models and Views (3D/2D).  All the models come from my bucket and are authorized by
// a AuthToken Service running in the cloud.  If you want to extend this, you'll have to clone the AuthTokenServer
// project and setup your own version with the appropriate ConsumerKey and SecretKey from your app.
//
// Jim Awe
// Autodesk, Inc.
// some global vars  (TBD: consider consolidating into an object)
window._viewerMain = null; // the viewer

window._viewerSecondary = null; // the viewer

window._loadedDocument = null;
var _views2D = null;
var _views3D = null;
window._blockEventMain = false;
var _blockEventSecondary = false; // dependencies

var pieChartReport = __webpack_require__(/*! ./Report_PieChart.js */ "./src/scripts/Report_PieChart.js");

var reportData = __webpack_require__(/*! ./ReportData.js */ "./src/scripts/ReportData.js");

var authToken = __webpack_require__(/*! ./MyAuthToken.js */ "./src/scripts/MyAuthToken.js");

var cameraPin = __webpack_require__(/*! ./CameraPin.js */ "./src/scripts/CameraPin.js");

var extensions = __webpack_require__(/*! ./extensions.js */ "./src/scripts/extensions.js");



var models = __webpack_require__(/*! ./models.js */ "./src/scripts/models.js").models;




var firebaseConfig = {
  apiKey: "AIzaSyA0oiI_4CzOIo8VUShOhjrZIwya6VAQQGo",
  authDomain: "adsk-viewer-extraction.firebaseapp.com",
  projectId: "adsk-viewer-extraction",
  storageBucket: "adsk-viewer-extraction.appspot.com",
  messagingSenderId: "539041483072",
  appId: "1:539041483072:web:c4795da544b676e193d2a5",
  measurementId: "G-CW2DFMKGM8"
};
var app = firebase_app__WEBPACK_IMPORTED_MODULE_1__.default.initializeApp(firebaseConfig);
var db = firebase_app__WEBPACK_IMPORTED_MODULE_1__.default.firestore(app); // setup for PRODUCTION

var _viewerEnv = "AutodeskProduction";

var _myAuthToken = new authToken.MyAuthToken("PROD");

window.objectArray = new Array();
window.noneObjectArray = new Array();

function blankOutReportPane() {
  $("#pieChart").empty();
  $("#barChart").empty();
  $("#bar-chart").empty();
  $("#sheetThumbs").empty();
} // populate the popup menu with the avaialable models to load (from the array above)


function loadModelMenuOptions() {
  // add the new options for models
  var sel = $("#pu_modelToLoad");
  $.each(models, function (i, item) {
    sel.append($("<option>", {
      value: i,
      text: item.label
    }));
  });
} // user selected a new model to load


$("#pu_modelToLoad").change(function (evt) {
  evt.preventDefault();
  var index = parseInt($("#pu_modelToLoad option:selected").val(), 10);
  console.log("Changing model to: " + models[index].label);
  loadDocument(models[index].urn);
  cameraPin.uninitializePinPanel();
  blankOutReportPane();
}); // populate the popup menu with the avaialable views to load (from the array above)

function loadViewMenuOptions() {
  var sel = $("#pu_viewToLoad");
  sel.find("option").remove().end(); // remove all existing options
  // add the 2D options

  $.each(_views2D, function (i, item) {
    sel.append($("<option>", {
      value: i + 1000,
      // make 2D views have a value greater than 1000 so we can tell from 3D
      text: item.name()
    }));
  });
} // user selected a new view to load


$("#pu_viewToLoad").change(function (evt) {
  evt.preventDefault();
  var index = parseInt($("#pu_viewToLoad option:selected").val(), 10);

  if (index >= 1000) {
    // 2D views we gave a higher index to in the Popup menu
    index -= 1000;
    console.log("Changing to 2D view: " + _views2D[index].name);
    switchSheet();
    loadView(window._viewerSecondary, _views2D[index]);
  } else {
    console.log("Changing to 3D view: " + _views3D[index].name);
    switchSheet();
    loadView(window._viewerSecondary, _views3D[index]);
  }
});

function switchSheet() {
  window.objectArray;

  if (window._viewerSecondary !== null) {
    window._viewerSecondary.tearDown(); // delete everything associated with the current loaded asset

  }

  window._viewerSecondary.setUp(); // set it up again for a new asset to be loaded

}

function hexToVector4(hex) {
  var c;

  if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {
    c = hex.substring(1).split('');

    if (c.length == 3) {
      c = [c[0], c[0], c[1], c[1], c[2], c[2]];
    }

    c = '0x' + c.join('');
    var r, g, b;
    r = (c >> 16 & 255) / 255;
    g = (c >> 8 & 255) / 255;
    b = (c & 255) / 255;
    r = Math.round(r * 10) / 10;
    g = Math.round(g * 10) / 10;
    b = Math.round(b * 10) / 10;
    var color = new THREE.Vector4(r, g, b, 0.8);
    return color;
  }

  throw new Error('Bad Hex');
}

function getObjectData(docId, dbId, area) {
  var docRef = db.collection("objects").doc(docId);
  docRef.get().then(function (doc) {
    if (doc.exists) {
      var data = doc.data();
      var arrayObj = {
        dbId: dbId,
        docId: docId,
        color: data.color,
        name: data.name,
        price: data.price,
        contractNo: data.contractNo,
        provider: data.provider,
        area: area
      };

      switch (data.calculatePrice) {
        case "perPiece":
          arrayObj.totalPrice = Math.round((data.price + Number.EPSILON) * 100) / 100;
          break;

        case "linealMeter":
          arrayObj.totalPrice = Math.round((data.price + Number.EPSILON) * 100) / 100;
          break;

        case "perArea":
          arrayObj.totalPrice = Math.round((data.price * area + Number.EPSILON) * 100) / 100;
          break;

        default:
          arrayObj.totalPrice = 0;
      }

      var color = data.color;

      window._viewerMain.setThemingColor(dbId, hexToVector4(color)); //console.log("Asset object: ", arrayObj);


      window.objectArray.push(arrayObj);
    } else {
      console.log("No such document!");
      var arrayObj = {
        dbId: dbId,
        docId: "NA",
        color: "NA",
        name: "NA",
        price: 0,
        contractNo: "NA",
        provider: "NA",
        area: "NA"
      };
      window.noneObjectArray.push(arrayObj);
    }
  })["catch"](function (error) {
    console.log("Error getting document:", error);
  });
} // STEPS:
//  0)  Initialize the Viewing Runtime
//  1)  Load a Document
//  2)  Get the available views (both 2D and 3D)
//  3)  Load a specific view
//      a)  initialize viewer for 2D or 3D
//      b)  load a "viewable" into the appropriate version of the viewer
//  4)  Attach a "listener" so we can keep track of events like Selection
// initialize the viewer into the HTML placeholder


function initializeViewerMain() {
  // if we already have something loaded, uninitialize and re-init (can't just load a new file!:  ?? is that a bug?)
  if (window._viewerMain !== null) {
    window._viewerMain.uninitialize();

    window._viewerMain = null;
  }

  var viewerElement = document.getElementById("viewerMain"); // placeholder in HTML to stick the viewer

  var config3d = {
    loaderExtensions: {
      svf: "Autodesk.MemoryLimited"
    }
  };
  window._viewerMain = new Autodesk.Viewing.GuiViewer3D(viewerElement, config3d);

  var retCode = window._viewerMain.initialize();

  if (retCode !== 0) {
    alert("ERROR: Couldn't initialize main viewer!");
    console.log("ERROR Code: " + retCode); // TBD: do real error handling here
  } // when the geometry is loaded, automatically run the first report


  pieChartReport.disableReportMenu();

  window._viewerMain.addEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, function (event) {
    pieChartReport.enableReportMenu(); //runReport(-1);   // run the currently selected report (the first one if this is the first model loaded, current one if loading a subsequent model)

    $("#tab_button_1").click();
    reportData.startReportDataLoader(pieChartReport.runReport);

    var thePromise = window._viewerMain.model.getPropertyDb().executeUserFunction(_firebaseData_js__WEBPACK_IMPORTED_MODULE_0__.userFunction);

    thePromise.then(function (retValue) {
      retValue.forEach(function (objData, i) {
        getObjectData(objData.value, objData.dbId, objData.areaValue);
      });
      window.attrIddocIDGlobal = retValue[0].attrId;
      console.log(window.objectArray);
    })["catch"](function (err) {
      console.log("Something didn't go right...");
      console.log(err);
    });
  });

  console.log("Global objectArray: ", window.objectArray); // when selecting in the Primary viewer, select the matching items in the Secondary viewer

  window._viewerMain.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, function (event) {
    if (_blockEventSecondary) return; // if a single item selected in 3D, select that same item in 2D.

    var curSelSetMain = window._viewerMain.getSelection(); //if (curSelSetMain.length === 1) {


    window._blockEventMain = true;

    if (window._viewerSecondary !== null) {
      window._viewerSecondary.select(curSelSetMain); //select objects in secondary view

    }

    window._blockEventMain = false; //}
  });
}

function initializeViewerSecondary(_views2D) {
  if (_views2D.length > 0) {
    // if we already have something loaded, uninitialize and re-init (can't just load a new file!:  ?? is that a bug?)
    if (window._viewerSecondary !== null) {
      window._viewerSecondary.uninitialize();

      window._viewerSecondary = null;
    }

    var viewerElement = document.getElementById("viewerSecondary"); // placeholder in HTML to stick the viewer

    window._viewerSecondary = new Autodesk.Viewing.GuiViewer3D(viewerElement, {});

    var retCode = window._viewerSecondary.initialize();

    if (retCode !== 0) {
      alert("ERROR: Couldn't initialize secondary viewer!");
      console.log("ERROR Code: " + retCode); // TBD: do real error handling here
    } // when selecting objects in the Secondary viewer, also select the matching itmes in the Primary viewer


    window._viewerSecondary.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, function (event) {
      if (window._blockEventMain) return; // if a single item, select and isolate same thing in 3D.

      var curSelSetSecondary = window._viewerSecondary.getSelection();

      if (curSelSetSecondary.length === 1) {
        _blockEventSecondary = true; //window._viewerMain.clearSelection();   // reset to nothing selected (otherwise we end up in cases where it just adds to the existing selection)
        // normal behavior is to isolate and zoom into the selected object, but we can only do that in 3D.

        if (window._viewerMain.model.is2d() == false) {
          window._viewerMain.select(curSelSetSecondary);

          window._viewerMain.isolate(curSelSetSecondary);

          window._viewerMain.fitToView(curSelSetSecondary);
        } else {
          window._viewerMain.select(curSelSetSecondary); // Call work-around to select objects in secondary view (see file TestFuncs.js)


          window._viewerMain.fitToView(curSelSetSecondary);
        }

        _blockEventSecondary = false;
      }
    }); // when we change sheets, we want to re-select things after this sheet is loaded


    window._viewerSecondary.addEventListener(Autodesk.Viewing.GEOMETRY_LOADED_EVENT, function (event) {
      window._blockEventMain = true; // prevent normal event of select/isolate/fit in main viewer

      if (window._viewerMain.model) window._viewerSecondary.select(window._viewerMain.getSelection());
      window._blockEventMain = false;
    });
  }
} // load a specific document into the intialized viewer


function loadDocument(urnStr) {
  window._loadedDocument = null; // reset to null if reloading

  if (!urnStr || 0 === urnStr.length) {
    alert("You must specify a URN!");
    return;
  }

  var fullUrnStr = "urn:" + urnStr;
  Autodesk.Viewing.Document.load(fullUrnStr, function (document) {
    window._loadedDocument = document; // keep this in a global var so we can reference it in other spots

    var bubbleNode = document.getRoot(); // get all the 3D and 2D views (but keep in separate arrays so we can differentiate in the UX)

    _views3D = bubbleNode.search({
      'type': 'geometry',
      'role': '3d'
    });
    _views2D = bubbleNode.search({
      'type': 'geometry',
      'role': '2d'
    });
    loadViewMenuOptions(); // populate UX with views we just retrieved

    initializeViewerMain();
    initializeViewerSecondary(_views2D); // load up first 3D view by default into the primary viewer

    if (_views3D.length > 0) {
      loadView(window._viewerMain, _views3D[0]);
    } else {
      // there weren't any 3D views!
      if (_views2D.length > 0) {
        loadView(window._viewerMain, _views2D[0]);
        $('#pu_viewToLoad').val('1000'); // selects first option in 2D list
      } else {
        alert("ERROR: No 3D or 2D views found in this drawing!");
      }
    } // now load the Secondary viewer with the first 2D view by default


    if (_views2D.length > 0) {
      loadView(window._viewerSecondary, _views2D[0]);
      $('#pu_viewToLoad').val('1000'); // selects first option in 2D list
    } else {
      console.log("WARNING: No 2D views found for secondary view, removing secondary view");
      var windowHeight = $(window).height();
      $('#viewerSecondary-panel').remove();
      $('#viewerMain-panel').attr('style', 'height:  100vh');
    }
  }, function (errorCode, errorMsg) {
    alert('Load Error: ' + errorCode + " " + errorMsg);
  });
} // for now, just simple diagnostic functions to make sure we know what is happing


function loadViewSuccessFunc() {
  window._viewerMain.loadExtension('FirebaseExtension', {
    param1: 'value1'
  });

  window._viewerMain.loadExtension('MyColorExtension', {
    param1: 'value2'
  });

  console.log("Loaded viewer successfully with given asset...");
}

function loadViewErrorFunc() {
  console.log("ERROR: could not load asset into viewer...");
} // load a particular viewable into the viewer (either Primary or Secondary depending on what's passed in)


function loadView(viewer, viewObj) {
  var path = window._loadedDocument.getViewablePath(viewObj);

  console.log("Loading view URN: " + path);
  var sharedPropertyDbPath = viewObj.findPropertyDbPath();
  var options = {
    sharedPropertyDbPath: sharedPropertyDbPath
  };
  viewer.loadModel(path, options, loadViewSuccessFunc, loadViewErrorFunc);
} // wrap this in a simple function so we can pass it into the Initializer options object


function getAccessToken() {
  return _myAuthToken.value();
}

function dbgPrintLmvVersion() {
  // builds greater than 0.1.98 will have a variable listing the version number
  if (typeof LMV_VIEWER_VERSION !== "undefined") {
    console.log("LMV_VIEWER_VERSION: " + LMV_VIEWER_VERSION);
  } else {
    console.log("LMV_VIEWER_VERSION: 0.1.98 or earlier");
  }
} // called when HTML page is finished loading, trigger loading of default model into viewer


function loadInitialModel() {
  console.log("onload: loadInitialModel in LoadModel.js");
  dbgPrintLmvVersion();
  loadModelMenuOptions(); // populate the list of available models for the user

  var options = {
    env: _viewerEnv,
    // AutodeskProduction, AutodeskStaging, or AutodeskDevelopment (set in global var in this project)
    getAccessToken: getAccessToken,
    refreshToken: getAccessToken
  };
  Autodesk.Viewing.Initializer(options, function () {
    loadDocument(models[0].urn); // load first entry by default
  });
}

window.loadInitialModel = loadInitialModel;
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hexToVector4);

/***/ }),

/***/ "./src/scripts/MyAuthToken.js":
/*!************************************!*\
  !*** ./src/scripts/MyAuthToken.js ***!
  \************************************/
/***/ ((module) => {

// MyAuthToken.js
//
// object to encapsulate retrieval of an authorization code for the viewing service.  After declaring
// a global instance, you can repeatedly call value() whenever you need the token to pass to an API
// call.  It will keep track of the expiration of the token and referesh it when necessary.
//
// NOTE: there is another way to accomplish this by just calling the API function with a token without
// worrying about whether it has expired, and then if it returns "Invalid Token", then get a new token
// and retry.  This is possible with jQuery, but only works with the .success()/.error() constructs and
// not with .done(), .fail() (at least not without a lot of convoluted extra work).  For now, I am
// happier doing it this way, but am open to suggestions on best practices.
//
// Jim Awe
// Autodesk, Inc.
// CONS MyAuthToken():
// Make a call to the AuthTokenServer to get our authToken to pass on to the View and Data APIs.
// This is setup currently to call my AuthTokenService.  If you want to add your own models to this project
// then you will also have to have your own token service.  Adjust lines below appropriately to point
// to your service (either locally, or deployed on something like Heroku).
function MyAuthToken(env) {
  if (env === "PROD") {
    this.tokenService = "";
  } else if (env === "STG") {
    this.tokenService = "";
  } else if (env === "DEV") {
    this.tokenService = "";
  } else {
    alert("DEVELOPER ERROR: No valid environment set for MyAuthToken()");
  }

  this.token = "";
  this.expires_in = 0;
  this.timestamp = 0;
} // FUNC value():
// return the value of the token


MyAuthToken.prototype.value = function () {
  // if we've never retrieved it, do it the first time
  if (this.token === "") {
    console.log("AUTH TOKEN: Getting for first time...");
    this.get();
  } else {
    // get current timestamp and see if we've expired yet
    var curTimestamp = Math.round(new Date() / 1000); // time in seconds

    var secsElapsed = curTimestamp - this.timestamp;

    if (secsElapsed > this.expires_in - 10) {
      // if we are within 10 secs of expiring, get new token
      console.log("AUTH TOKEN: expired, refreshing...");
      this.get();
    } else {
      var secsLeft = this.expires_in - secsElapsed;
      console.log("AUTH TOKEN: still valid (" + secsLeft + " secs)");
    }
  }

  return this.token;
}; // FUNC get():
// get the token from the Authentication service and cache it, along with the expiration time


MyAuthToken.prototype.get = function () {
  var retVal = "";
  var expires_in = 0;
  var url_string = window.location.href; //window.location.href

  var url = new URL(url_string);
  this.token = url.searchParams.get("token");
  this.expires_in = 3000;
  this.timestamp = Math.round(new Date() / 1000); // get time in seconds when we retrieved this token
};

module.exports = {
  MyAuthToken: MyAuthToken
};

/***/ }),

/***/ "./src/scripts/PinData.js":
/*!********************************!*\
  !*** ./src/scripts/PinData.js ***!
  \********************************/
/***/ ((module) => {

//
//	Class for pin data
//	Each pin contains an id, a label and a position in world dimensions,
//	and is associated with a viewport object by its id.
//
function ViewerPin(model) {
  this.pinobjs = [];
  this.viewStates = {};
  this.dbkey = model + ' ViewerPin'; // load previous data from local storage if there were any

  if (localStorage.hasOwnProperty(this.dbkey)) {
    var dataStr = localStorage.getItem(this.dbkey);
    var parsedObj = JSON.parse(dataStr);
    this.pinobjs = parsedObj.pinobjs;
    this.viewStates = parsedObj.viewStates;
  }
}

; // iterate function

ViewerPin.prototype.each = function (callback) {
  for (var i = 0; i < this.pinobjs.length; i++) {
    var p = this.pinobjs[i];
    if (callback) callback(p.pinid, p.label, [p.x, p.y, p.z]);
  }

  ;
}; // reorder the sequence of pins in array, to keep it consistent with
// the pin order in the tablelist, it's also the order for startTour


ViewerPin.prototype.reorder = function (pinid, newIndex) {
  var index = -1;

  for (var i = this.pinobjs.length - 1; i >= 0; i--) {
    if (this.pinobjs[i].pinid === pinid) {
      index = i;
      break;
    }
  }

  ;

  if (index !== -1) {
    var pin = this.pinobjs.splice(index, 1)[0];
    this.pinobjs.splice(newIndex, 0, pin);
  }
}; // get the pin object by id


ViewerPin.prototype.getPinObj = function (pinid) {
  for (var i = 0; i < this.pinobjs.length; i++) {
    if (this.pinobjs[i].pinid === pinid) return this.pinobjs[i];
  }

  ;
  return null;
}; // get the associated viewport object by id


ViewerPin.prototype.getViewState = function (pinid) {
  if (pinid in this.viewStates) return this.viewStates[pinid];
  return null;
}; // delete a pin, the pin objec and its viewport are both removed


ViewerPin.prototype.removePin = function (pinid) {
  var index = -1;

  for (var i = this.pinobjs.length - 1; i >= 0; i--) {
    if (this.pinobjs[i].pinid === pinid) {
      index = i;
      break;
    }
  }

  ;

  if (index !== -1) {
    var deletedPin = this.pinobjs.splice(index, 1);
    delete this.viewStates[pinid];
    return deletedPin;
  }

  return null;
};

ViewerPin.prototype.addPin = function (pinid, pos, label, viewstate) {
  var pinObj = {
    pinid: pinid,
    label: label,
    x: pos.x,
    y: pos.y,
    z: pos.z
  };
  this.pinobjs.push(pinObj);
  this.viewStates[pinid] = viewstate;
};

ViewerPin.prototype.changePinLabel = function (pinid, newLabel) {
  var pinObj = this.getPinObj(pinid);
  if (pinObj) pinObj.label = newLabel;
}; // update browser localStorage, for each model, the pin data is
// stored as a whole JSON stirng


ViewerPin.prototype.updateLocalStorage = function () {
  var parsedObj = {
    pinobjs: this.pinobjs,
    viewStates: this.viewStates
  };
  var dataStr = JSON.stringify(parsedObj);
  localStorage.setItem(this.dbkey, dataStr);
};

module.exports = {
  ViewerPin: ViewerPin
};

/***/ }),

/***/ "./src/scripts/PinUI.js":
/*!******************************!*\
  !*** ./src/scripts/PinUI.js ***!
  \******************************/
/***/ (() => {

//
//  This script contains the functions that creates the UI for the pins,
//  including an overlay canvas for the pushpins and the headsup div
//  and a pin tablelist on the side for user editing. Most of the work
//  is done in pure javascript, as document.createElement is relatively faster
//  than jQuery's $('<div>')
//
var _selected = null;
var _prev_x = 0;
var _prev_y = 0;
var _bounding_left = 0;
var _bounding_top = 0; // creating headsup div

function createHeadsUpDiv() {
  var headsupDiv = document.createElement("div");
  headsupDiv.id = "headsup";
  headsupDiv.style.zIndex = "999";
  headsupDiv.style.pointerEvents = "auto"; // need to set pointerEvents to auto to receieve mouse action

  headsupDiv.onmousedown = function (evt) {
    _prev_x = evt.clientX;
    _prev_y = evt.clientY;

    var viewport = _viewerMain.navigation.getScreenViewport();

    _bounding_left = viewport.width - this.offsetWidth;
    _bounding_top = viewport.height - this.offsetHeight;
    _selected = this;
    return false;
  };

  headsupDiv.onmousemove = function (evt) {
    if (_selected === null) return;
    var next_left = _selected.offsetLeft + evt.clientX - _prev_x;
    var next_top = _selected.offsetTop + evt.clientY - _prev_y;
    if (next_left >= 0 && next_left < _bounding_left) _selected.style.left = next_left + "px";
    if (next_top >= 0 && next_top < _bounding_top) _selected.style.top = next_top + "px";
    _prev_x = evt.clientX;
    _prev_y = evt.clientY;
  };

  headsupDiv.onmouseup = function () {
    _selected = null;
    return false;
  };

  var navbar = document.createElement("div");
  navbar.className = "navbar";
  var hidebtn = document.createElement("div");
  hidebtn.className = "navbtn";
  hidebtn.innerHTML = "X";

  hidebtn.onclick = function () {
    hideHeadesUpDiv(false);
  };

  navbar.appendChild(hidebtn);
  headsupDiv.appendChild(navbar);
  var content = document.createElement("div");
  content.className = "navbody";
  headsupDiv.appendChild(content);
  return headsupDiv;
} // hide headsup div


function hideHeadesUpDiv(animated) {
  var headsupDiv = $("#headsup");

  if (headsupDiv.is(":visible")) {
    if (animated) headsupDiv.fadeToggle(300, "linear");else headsupDiv.toggle();
  }
} //  set headsup div text and position on overlay canvas


function setHeadsUpDisplay(content, x, y, animated) {
  var headsupDiv = $("#headsup");

  var canvas = _viewerMain.navigation.getScreenViewport();

  var deltaX = 60;
  var deltaY = 60;
  if (x + headsupDiv.width() < canvas.width - deltaX) x += deltaX;else x = x - headsupDiv.width() - deltaX;
  if (y + headsupDiv.height() < canvas.height - deltaY) y += deltaY;else y = y - headsupDiv.height() - deltaY;
  headsupDiv.css({
    left: x,
    top: y
  });
  $("#headsup :first-child").next().text(content);
  if (animated) headsupDiv.fadeToggle(400, "linear");else headsupDiv.toggle();
} // create an overlay on top of the viewer


function initPinOverlay() {
  var overlayDiv = document.createElement("div");
  overlayDiv.id = "pushpinOverlay";

  _viewerMain.container.appendChild(overlayDiv);

  overlayDiv.style.top = "0";
  overlayDiv.style.left = "0";
  overlayDiv.style.right = "0";
  overlayDiv.style.bottom = "0";
  overlayDiv.style.zIndex = "998";
  overlayDiv.style.position = "absolute";
  overlayDiv.style.pointerEvents = "none"; // creating a svg canvas for the pins

  var svg = d3.select("#" + overlayDiv.id).append("svg").style("width", "100%").style("height", "100%"); // adding a drop shadow for the pin circles

  var defs = svg.append("defs");
  var filter = defs.append("filter").attr("id", "dropshadow");
  filter.append("feGaussianBlur").attr("in", "SourceAlpha").attr("stdDeviation", 1).attr("result", "blur");
  filter.append("feComponentTransfer").append("feFuncA").attr("type", "linear").attr("slope", "0.2");
  filter.append("feOffset").attr("in", "blur").attr("dx", 1).attr("dy", 1).attr("result", "offsetBlur");
  var feMerge = filter.append("feMerge");
  feMerge.append("feMergeNode").attr("in", "offsetBlur");
  feMerge.append("feMergeNode").attr("in", "SourceGraphic"); // iterate through the pins and put them on the canvas

  _viewerPin.each(function (pinid, label, position) {
    var world = positionToVector3(position);
    var client = worldToClient(world, _viewerMain.getCamera());
    pushPinToOverlay(pinid, client);
  }); // create a headsup div for display


  var headsupDiv = createHeadsUpDiv();
  overlayDiv.appendChild(headsupDiv);
  hideHeadesUpDiv(false);
  return svg;
} // add a pin to the overlay


function pushPinToOverlay(pinid, client) {
  // draw a circle pin in d3
  d3.select("#pushpinOverlay svg").append("circle").attr("id", pinid).attr("cx", client.x).attr("cy", client.y).attr("r", 10).style("fill", "#c66").style("cursor", "pointer").style("pointer-events", "visible").attr("filter", "url(#dropshadow)"); // attach user events to pin

  $("#" + pinid).on("click", viewPinClicked).on("mouseover", function () {
    d3.select(this).style("fill", "#66c");
  }).on("mouseout", function () {
    d3.select(this).style("fill", "#c66");
  });
  d3.select("#pushpinOverlay").style("pointer-events", "none"); // end editing mode done,  mouse click event should be normal on the viewer

  _shouldAddNewPin = false;
} // init pin table list


function initPinTablelist() {
  var pintable = $("#pintablelist");
  pintable.empty();
  var table = document.createElement("div");
  table.id = "pintable";
  table.className = "tablelist";

  _viewerPin.each(function (pinid, label, position) {
    pushPinToTableList(pinid, label, table);
  });

  pintable.append(table);
} // add a pin row to the table list


function pushPinToTableList(pinid, pinlabel, table) {
  var row = document.createElement("div");
  row.id = "row" + pinid;
  row.className = "tablecell";
  var label = document.createElement("div");
  label.className = "celllabel";
  label.innerHTML = pinlabel;

  label.ondblclick = function () {
    var editableLabel = document.createElement("input");
    editableLabel.type = "text";
    editableLabel.className = "editable";
    editableLabel.style.textAlign = "center";
    editableLabel.style.fontSize = "16px";
    editableLabel.placeholder = this.textContent;

    editableLabel.onblur = function () {
      var parentLabel = this.parentNode;
      parentLabel.removeChild(this);
      parentLabel.textContent = this.value;
      var rowid = parentLabel.parentNode.id;
      var pinid = rowid.substring(3, rowid.length);

      var pinObj = _viewerPin.getPinObj(pinid);

      pinObj.label = this.value;
    };

    editableLabel.onkeydown = function (e) {
      if (e.keyCode == 13) {
        this.blur();
      }
    };

    this.innerHTML = null;
    this.appendChild(editableLabel);
    editableLabel.focus();
  };

  var orderbtn = document.createElement("div");
  orderbtn.className = "cellbtn icon icon-menu";
  var deletebtn = document.createElement("div");
  deletebtn.className = "cellbtn icon icon-cross";

  row.onmouseover = function () {
    var deletebtn = this.firstChild;
    var orderbtn = this.lastChild;
    deletebtn.style.display = "inline-block";
    orderbtn.style.display = "inline-block";
    if (this.id === _currentPin) return;
    var pinid = this.id.substring(3, this.id.length);
    $("#" + pinid).mouseover();
  };

  row.onmouseout = function () {
    var deletebtn = this.firstChild;
    var orderbtn = this.lastChild;
    deletebtn.style.display = "none";
    orderbtn.style.display = "none";
    if (this.id === _currentPin) return;
    var pinid = this.id.substring(3, this.id.length);
    $("#" + pinid).mouseout();
  };

  row.onclick = function () {
    var prevLabel = _currentPin;
    _currentPin = this.id;
    if (typeof prevLabel !== "undefined") $("#" + prevLabel).mouseout();
    var pinid = this.id.substring(3, this.id.length);
    $("#" + pinid).click();
  };

  deletebtn.onclick = function () {
    var parentRow = this.parentNode;
    var pinid = parentRow.id.substring(3, parentRow.id.length);
    var table = parentRow.parentNode;
    table.removeChild(parentRow);
    d3.select("#" + pinid).remove();
    hideHeadesUpDiv(false);

    _viewerPin.removePin(pinid);
  };

  orderbtn.onmousedown = function (evt) {
    _prev_x = evt.clientX;
    _prev_y = evt.clientY;
    _selected = this.parentNode;
    _selected.style.width = _selected.offsetWidth + "px";
    _selected.style.position = "absolute";
    _selected.style.zIndex = 999;

    var moverow = function moverow(evt) {
      if (_selected === null) return;
      var next_left = _selected.offsetLeft + evt.clientX - _prev_x;
      var next_top = _selected.offsetTop + evt.clientY - _prev_y;
      _selected.style.left = next_left + "px";
      _selected.style.top = next_top + "px";
      _prev_x = evt.clientX;
      _prev_y = evt.clientY;
    };

    document.addEventListener("mousemove", moverow);

    var setrow = function setrow(evt) {
      if (_selected === null) return false;

      var pinid = _selected.id.substring(3, _selected.id.length);

      var parent = _selected.parentNode;
      var index = Math.round(_selected.offsetTop / _selected.offsetHeight + 0.5);
      _selected.style.position = "static";
      _selected.style.zIndex = 0;
      parent.removeChild(_selected);
      parent.insertBefore(_selected, parent.children[index]);
      _selected.style.left = "auto";
      _selected.style.top = "auto";
      _selected.style.width = "inherit";
      _selected = null;
      document.removeEventListener("mousemove", moverow);
      document.removeEventListener("mouseup", setrow);

      _viewerPin.reorder(pinid, index);

      return false;
    };

    document.addEventListener("mouseup", setrow);
    return false;
  };

  row.appendChild(deletebtn);
  row.appendChild(label);
  row.appendChild(orderbtn);
  table.appendChild(row);
}

/***/ }),

/***/ "./src/scripts/Relationships.js":
/*!**************************************!*\
  !*** ./src/scripts/Relationships.js ***!
  \**************************************/
/***/ (() => {

$(document).ready(function () {
  $("#bn_showObjsonSheet").click(function (evt) {
    evt.preventDefault(); //var curSelSet = _viewerMain.getSelection();
    //console.log(curSelSet);
    //_viewerSecondary.clearSelection();

    var selSet = [0];
    _blockEventMain = true;

    _viewerSecondary.select(selSet);

    _blockEventMain = false;
  });
  $("#bn_showWhereViewable").click(function (evt) {
    evt.preventDefault();

    var curSelSet = _viewerMain.getSelection();

    if (curSelSet.length === 0) {
      alert("No object is selected.");
    } else if (curSelSet.length > 1) {
      alert("Only one object can be selected.");
    } else {
      $('#sheetThumbs').empty();

      _viewerMain.getProperties(curSelSet[0], getViewableInProps, getViewableInErrorFunc);
    }
  }); // just go through the properties for the given object and find the ones that
  // have a "viewable_in" property.  Then retrieve the thumbnail for those

  function getViewableInProps(data) {
    if (data.properties == null || data.properties.length == 0) {
      alert("There are no properties for this node.");
      return;
    }

    var i = 0;
    $.each(data.properties, function (num, obj) {
      if (obj.displayName === "viewable_in") {
        console.log("ViewableIN: %s", obj.displayValue);
        displayViewableInThumbs(obj.displayValue, i++);
      }
    });
  }

  function getViewableInErrorFunc(data) {
    alert("ERROR: Could not get properties for the selected object.");
    return null;
  }

  function loadSelectedSheet(sheetName) {
    // find the popup list option with this sheet name and trigger it as current
    $("#pu_viewToLoad option").each(function (i) {
      if (sheetName === $(this).text()) {
        $("#pu_viewToLoad").val($(this).val());
        $("#pu_viewToLoad").trigger("change");
        return false; // break each loop early
      }
    });
  } // create an image and add to the HTML DOM


  function displayViewableInThumbs(viewableInId, index) {
    var itemObjs = Autodesk.Viewing.Document.getSubItemsWithProperties(_loadedDocument.getRootItem(), {
      'viewableID': viewableInId
    }, true);
    console.assert(itemObjs.length === 1);
    var itemObj = itemObjs[0]; // convert from array

    var img = _loadedDocument.getThumbnailPath(itemObj, 300, 300);

    $("<img />").attr("src", "" + img + "").attr("id", "sheetThumb_" + index).attr("title", itemObj.name).on('click', function () {
      loadSelectedSheet(itemObj.name);
    }).appendTo($("#sheetThumbs"));
  }

  ;
});

/***/ }),

/***/ "./src/scripts/ReportData.js":
/*!***********************************!*\
  !*** ./src/scripts/ReportData.js ***!
  \***********************************/
/***/ ((module) => {

//
//  Getting relevant data for Report_barChart.js and Scheming.js
//  The returned data format is only an object that uses label text(type/property value) as keys
//  and the dbIds as the associated values. Some data wrapping might be necessary before use.
var _modelLeafNodes;

var _root;

var instanceTree; // Preloading steps
// called by LoadModel.js to preload all the leaf nodes whenever a new model is loaded,
// get and keep all the leaf nodes of this model for future use.

function startReportDataLoader(callback) {
  setTimeout(function () {
    _modelLeafNodes = [];
    instanceTree = window._viewerMain.model.getData().instanceTree;
    var modelRoot = instanceTree.getRootId();
    getModelLeafNodes(modelRoot, _modelLeafNodes);

    if (callback) {
      callback();
    }
  }, 3000);
} // recursively add all the leaf nodes


function getModelLeafNodes(rootId, leafNodes, callback) {
  instanceTree.enumNodeChildren(rootId, function (childId) {
    leafNodes.push(childId);
  }, true);
}

function groupDataByProvider() {
  var subTypes = {};
  $.each(window.objectArray, function (i, object) {
    if (subTypes[object.provider] == undefined) {
      subTypes[object.provider] = new Array();
    }

    subTypes[object.provider].push(object.dbId);
  });
  console.log("Subtypes: ", subTypes);
  return subTypes;
}

function groupDataByDocid() {
  var subTypes = {};
  $.each(window.objectArray, function (i, object) {
    if (subTypes[object.docId] == undefined) {
      subTypes[object.docId] = new Array();
    }

    subTypes[object.docId].push(object.dbId);
  });
  console.log("Subtypes: ", subTypes);
  return subTypes;
}

function groupDataByDocidFromLocal() {
  var subTypes = {};
  $.each(window.objectArray, function (i, object) {
    if (subTypes[object.docId] == undefined) {
      subTypes[object.docId] = new Array();
    }

    subTypes[object.docId].push(object.dbId);
  });
  $.each(window.noneObjectArray, function (i, object) {
    if (subTypes["NA"] == undefined) {
      subTypes["NA"] = new Array();
    }

    subTypes["NA"].push(object.dbId);
  });
  console.log("Subtypes: ", subTypes);
  return subTypes;
} //****************************************************************************************
//
//      Group data according to node model types
//
//****************************************************************************************
// group the children of a treeNode according to their types


function groupDataByType(treeNode) {
  var subTypes = {};

  if (!treeNode) {
    treeNode = {};
    treeNode.id = window._viewerMain.model.getData().instanceTree.getRootId();
  }

  console.log(treeNode);
  treeNode.children = []; // add all the types into subTypes

  instanceTree.enumNodeChildren(treeNode.id, function (childId) {
    treeNode.children.push(childId);
  }); // if the treeNode contains only one child, dig deeper to see if there're more branches

  while (treeNode.children && treeNode.children.length === 1) {
    treeNode = treeNode.children[0];
  }

  $.each(treeNode.children, function (i, childNode) {
    var leafNodes = [];
    getModelLeafNodes(childNode, leafNodes);
    subTypes[instanceTree.getNodeName(childNode)] = leafNodes; //NAME SUB-TYPES (CATEGORIES)
  });
  return subTypes;
} //****************************************************************************************
//
//      Group data according to specific property value
//
//****************************************************************************************
// group the data by a property string, two things are returned
// a buckets object that uses the property value as the key and dbIds as the value
// and a misCount array which contains all the nodes that doesn't have such property


function groupDataByProperty(propertyName, callback) {
  var buckets = {};
  var misCount = []; // iterate through the preloaded leafNodes to check their properties

  $.each(_modelLeafNodes, function (index, dbId) {
    window._viewerMain.getProperties(dbId, function (propObj) {
      for (var i = 0; i < propObj.properties.length; i++) {
        if (propObj.properties[i].displayName === propertyName && !propObj.properties[i].hidden) {
          var formatVal = Autodesk.Viewing.Private.formatValueWithUnits(propObj.properties[i].displayValue, propObj.properties[i].units, propObj.properties[i].type);

          if (!(formatVal in buckets)) {
            buckets[formatVal] = [];
          }

          buckets[formatVal].push(dbId);
          break;
        } else if (i == propObj.properties.length - 1) {
          misCount.push(dbId);
        }
      }

      ;

      if (index === _modelLeafNodes.length - 1) {
        if (callback) {
          callback(buckets, misCount);
        }
      }
    });
  });
} //****************************************************************************************
//
//      Group quantity data according to a certain range
//
//****************************************************************************************
// first get all the quantity data and their dbIds by propertyName, and put them in an array
// in the meantime, find the min and max value to prepare for range grouping in next step


function getQtyDataByProperty(propertyName, callback) {
  var qtyArr = [];
  var bound = {
    "min": -0.1,
    "max": -0.1
  };
  var misCount = []; // console.time("getQtyByProperty");

  $.each(_modelLeafNodes, function (index, dbId) {
    window._viewerMain.getProperties(dbId, function (propObj) {
      for (var i = 0; i < propObj.properties.length; i++) {
        if (propObj.properties[i].displayName === propertyName) {
          //propertyName variable de nombre de propiedad definida por el option del reporte.
          var propValue = parseFloat(propObj.properties[i].displayValue);
          if (propValue < bound.min || bound.min < 0) bound.min = propValue;
          if (propValue > bound.max || bound.max < 0) bound.max = propValue;
          var formatVal = Autodesk.Viewing.Private.formatValueWithUnits(propObj.properties[i].displayValue, propObj.properties[i].units, propObj.properties[i].type);
          break;
        } else if (i == propObj.properties.length - 1) {
          misCount.push(dbId);
        }
      }

      if (index === _modelLeafNodes.length - 1) {
        // console.timeEnd("getQtyByProperty");
        if (callback) {
          callback(qtyArr, misCount, bound);
        }
      }
    });
  });
} // group the quantity array by range, returned is a buckets object that uses the range label
// as key and the dbIds as value, range is  calculated based on the min value and the range value,
// the array does not has to be sorted


function groupQtyDataByRange(qtyArr, bound, range, callback) {
  var buckets = {};
  var min = bound.min;
  range = parseFloat(range);

  for (var i = qtyArr.length - 1; i >= 0; i--) {
    var key;

    if (range === 0) {
      key = qtyArr[i].label;
    } else {
      // calculate the range label according to min and range
      var floor = min + range * Math.floor((qtyArr[i].val - min) / range);
      var ceil = floor + range;
      key = Math.round(floor * 1000) / 1000 + " - " + Math.round(ceil * 1000) / 1000 + " " + qtyArr[i].units;
    } // check if this range label is al ready in the buckets


    if (!buckets.hasOwnProperty(key)) buckets[key] = [];
    buckets[key].push(qtyArr[i].dbId);
  }

  ;
  if (callback) callback(buckets);
}

module.exports = {
  startReportDataLoader: startReportDataLoader,
  groupDataByType: groupDataByType,
  groupDataByProvider: groupDataByProvider,
  groupDataByProperty: groupDataByProperty,
  getQtyDataByProperty: getQtyDataByProperty,
  groupDataByDocid: groupDataByDocid,
  groupQtyDataByRange: groupQtyDataByRange,
  groupDataByDocidFromLocal: groupDataByDocidFromLocal,
  _modelLeafNodes: _modelLeafNodes
};

/***/ }),

/***/ "./src/scripts/Report_BarChart.js":
/*!****************************************!*\
  !*** ./src/scripts/Report_BarChart.js ***!
  \****************************************/
/***/ ((module) => {

// BarChart using NVD3.js
function loadBarChart(lmvData) {
  nv.addGraph(function () {
    var barChart = nv.models.multiBarHorizontalChart().x(function (d) {
      return d.label;
    }).y(function (d) {
      return d.value;
    }).showValues(true).showControls(false).tooltips(true).valueFormat(d3.format('f')).margin({
      top: 0,
      right: 50,
      bottom: 0,
      left: 150
    }).transitionDuration(400);
    lmvData.content.sort(function (a, b) {
      if (_sortOrder == "value-asc") return a.value - b.value;else if (_sortOrder == "value-desc") return b.value - a.value;else if (_sortOrder == "label-asc") return a.label < b.label ? -1 : 1;else if (_sortOrder == "label-desc") return b.label < a.label ? -1 : 1;
    });
    var barCharData = [{
      key: "Quantity",
      values: lmvData.content
    }];
    barChart.height((lmvData.content.length + 2) * 15); // give each line 15px + add a header and footer

    var svg = d3.select("#barChart").append("svg").attr("height", "900");
    svg.datum(barCharData).call(barChart);
    barChart.yAxis.axisLabel("Quantity").tickFormat(d3.format("d"));
    d3.selectAll('svg .nv-bar').on('click', handleBarClick);
    return barChart;
  });
}

function handleBarClick(evt) {
  if (d3.select(this).classed("clicked") === true) {
    _viewerMain.showAll();

    _viewerSecondary.clearSelection();

    d3.select(this).classed({
      'clicked': false
    });
  } else {
    d3.selectAll('.nv-bar').classed({
      'clicked': false
    });
    d3.select(this).classed({
      'clicked': true
    });

    _viewerMain.isolate(evt.lmvIds);

    _viewerSecondary.select(evt.lmvIds);
  }
}

module.exports = {
  loadBarChart: loadBarChart
};

/***/ }),

/***/ "./src/scripts/Report_PieChart.js":
/*!****************************************!*\
  !*** ./src/scripts/Report_PieChart.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var reportData = __webpack_require__(/*! ./ReportData.js */ "./src/scripts/ReportData.js");

var barChartReport = __webpack_require__(/*! ./Report_BarChart.js */ "./src/scripts/Report_BarChart.js");

var _pieChart = null;
window._sortOrder = "value-desc";
var _reportOptions = [{
  label: "Precio - Tipo",
  fieldName: "totalPrice",
  fieldType: "ModelType"
}, {
  label: "Precio - Proveedor",
  fieldName: "provider",
  fieldType: "ModelType"
}, {
  label: "Precio - docID",
  fieldName: "totalPrice",
  fieldType: "docId"
}, {
  label: "Cantidad - Tipo",
  fieldName: "",
  fieldType: "ModelType"
}, {
  label: "Cantidad - docID",
  fieldName: "",
  fieldType: "docId"
}, {
  label: "Area - docID",
  fieldName: "area",
  fieldType: "docId"
}]; // populate the popup menu with the avaialable models to load (from the array above)

function loadReportMenuOptions() {
  // add the new options for models
  var sel = $("#pu_reportToRun");
  $.each(_reportOptions, function (i, item) {
    sel.append($("<option>", {
      value: i,
      text: item.label
    }));
  });
}

function enableReportMenu() {
  $('#pu_reportToRun').attr("disabled", false);
  $('#pu_sortOrder').attr("disabled", false);
}

function disableReportMenu() {
  $('#pu_reportToRun').attr("disabled", true);
  $('#pu_sortOrder').attr("disabled", true);
}

function runReport(index) {
  // if they pass in a negative index, look up the current one
  if (typeof index === "undefined" || index === -1) index = parseInt($("#pu_reportToRun option:selected").val(), 10);
  var reportObj = _reportOptions[index];
  console.log("Running report: " + reportObj.label);
  $("#reportinput").empty();
  _currentQty = null;
  _currentBound = null;

  if (reportObj.fieldType === "docId") {
    if (reportObj.fieldName === "" && reportObj.fieldName === "area") {
      var modelTypes = reportData.groupDataByDocidFromLocal();
      wrapDataForPieChart(modelTypes);
    } else {
      var modelTypes = reportData.groupDataByDocid();
      wrapDataForPieChart(modelTypes);
    }
  } else if (reportObj.fieldName === "provider") {
    var modelTypes = reportData.groupDataByProvider();
    wrapDataForPieChart(modelTypes);
  } else if (reportObj.fieldType === "ModelType") {
    var modelTypes = reportData.groupDataByType();
    wrapDataForPieChart(modelTypes);
  } else if (reportObj.fieldType === "Quantity") {
    reportData.getQtyDataByProperty(reportObj.fieldName, function (Qty, misCount, bound) {
      var initrange = 100;
      createReportUserInput(bound, initrange);
      _currentQty = Qty;
      _currentBound = bound;
      reportData.groupQtyDataByRange(Qty, bound, initrange, wrapDataForPieChart);
    });
  } else if (reportObj.fieldType === "PropertySum") {
    var modelTypes = reportData.groupDataByType();
    wrapDataForPieChart(modelTypes);
  } else {
    //property
    reportData.groupDataByProperty(reportObj.fieldName, wrapDataForPieChart);
  }
}

var _currentQty = null;
var _currentBound = null; // Create user input div for quantity type

function createReportUserInput(bound, initVal) {
  var slider = document.createElement("input");
  slider.id = "qtyslider";
  slider.type = "range";
  slider.style.height = "12px";
  slider.min = 0;
  slider.max = Math.round(bound.max - bound.min);
  slider.value = initVal;

  slider.onchange = function () {
    $("#qtyfield").val(slider.value);
    reportData.groupQtyDataByRange(_currentQty, _currentBound, slider.value, wrapDataForPieChart);
  };

  var preLabel = document.createElement("label");
  preLabel.htmlFor = slider.id;
  preLabel.innerHTML = slider.min;
  preLabel.style.marginRight = "10px";
  var postLabel = document.createElement("label");
  postLabel.htmlFor = slider.id;
  postLabel.innerHTML = slider.max;
  postLabel.style.marginLeft = "10px";
  var textField = document.createElement("input");
  textField.id = "qtyfield";
  textField.type = "text";
  textField.style.width = "40px";
  textField.placeholder = slider.value;

  textField.onkeydown = function (e) {
    if (e.keyCode == 13) {
      var inputVal = parseFloat(this.value);

      if (inputVal <= parseFloat(slider.max) && inputVal >= 0) {
        $("#qtyslider").val(this.value);
        reportData.groupQtyDataByRange(_currentQty, _currentBound, this.value, wrapDataForPieChart);
      }
    }
  };

  var fieldLabel = document.createElement("label");
  fieldLabel.htmlFor = textField.id;
  fieldLabel.innerHTML = "Range: ";
  fieldLabel.style.marginLeft = "25px";
  var inputDiv = document.getElementById("reportinput");
  inputDiv.style.margin = "20px";
  inputDiv.appendChild(preLabel);
  inputDiv.appendChild(slider);
  inputDiv.appendChild(postLabel);
  inputDiv.appendChild(fieldLabel);
  inputDiv.appendChild(textField);
}

function wrapDataForPieChart(buckets, misCount) {
  var reportIdx = parseInt($("#pu_reportToRun").val());
  var fieldName = _reportOptions[reportIdx].fieldName === "" ? "Object Type" : _reportOptions[reportIdx].fieldName;
  var pieOpts = initPieOpts(fieldName, reportIdx);
  var index = parseInt($("#pu_reportToRun option:selected").val(), 10);
  var reportObj = _reportOptions[index];
  var pieObject = {};

  if (reportObj.fieldName === "") {
    for (var valueKey in buckets) {
      var pieObject = {};
      pieObject.label = valueKey;
      pieObject.value = buckets[valueKey].length;
      pieObject.lmvIds = buckets[valueKey];
      pieOpts.data.content.push(pieObject);
    }
  } else if (reportObj.fieldName === "area") {
    for (var valueKey in buckets) {
      var pieObject = {};
      var totalArea = 0;
      pieObject.label = valueKey;

      for (var docId in buckets[valueKey]) {
        window.objectArray.forEach(function (object, i) {
          if (object.docId == "NA") {} else {
            if (buckets[valueKey][docId] == object.dbId) {
              console.log("Found match: ", object);
              totalArea = totalArea + object.area;
              return true;
            }
          }
        });
      }

      pieObject.value = totalArea;
      pieObject.lmvIds = buckets[valueKey];
      pieOpts.data.content.push(pieObject);
    }
  } else if (reportObj.fieldName === "totalPrice") {
    for (var valueKey in buckets) {
      var pieObject = {};
      var totalPrice = 0;
      pieObject.label = valueKey;

      for (var docId in buckets[valueKey]) {
        window.objectArray.forEach(function (object, i) {
          if (object.docId == "NA") {} else {
            if (buckets[valueKey][docId] == object.dbId) {
              totalPrice = totalPrice + object.totalPrice;
              return true;
            }
          }
        });
      }

      pieObject.value = Math.round((totalPrice + Number.EPSILON) * 100) / 100;
      ;
      pieObject.lmvIds = buckets[valueKey];
      pieOpts.data.content.push(pieObject);
    }
  } else if (reportObj.fieldName === "provider") {
    for (var valueKey in buckets) {
      var pieObject = {};
      var totalPrice = 0;
      pieObject.label = valueKey;
      console.log("Label: ", valueKey);

      for (var docId in buckets[valueKey]) {
        window.objectArray.forEach(function (object, i) {
          if (buckets[valueKey][docId] == object.dbId) {
            totalPrice = totalPrice + object.totalPrice;
            return true;
          }
        });
      }

      pieObject.value = Math.round((totalPrice + Number.EPSILON) * 100) / 100;
      ;
      pieObject.lmvIds = buckets[valueKey];
      console.log(pieObject);
      pieOpts.data.content.push(pieObject);
    }
  } else {
    for (var valueKey in buckets) {
      var pieObject = {};
      pieObject.label = valueKey;
      var sumOfPropertyData = 0.0;

      for (var objId in buckets[valueKey]) {
        window._viewerMain.getProperties(objId, function (propObj) {
          for (var i = 0; i < propObj.properties.length; i++) {
            var propValue = 0;

            if (propObj.properties[i].displayName === reportObj.fieldName && !propObj.properties[i].hidden) {
              //propertyName variable de nombre de propiedad definida por el option del reporte.
              propValue = parseFloat(propObj.properties[i].displayValue);
              break;
            }

            pieObject.value = pieObject.value + propValue;
          }
        });
      }

      pieObject.lmvIds = buckets[valueKey];
      pieOpts.data.content.push(pieObject);
    }
  }

  loadReportDataPieChart(pieOpts);
}

$(document).ready(function () {
  console.log("Document Ready: excuting func in pieChart.js");
  loadReportMenuOptions(); // user selected a new model to load

  $("#pu_reportToRun").change(function (evt) {
    // Only calls when user selection changes
    evt.preventDefault(); // The event.preventDefault() method stops the default action of an element from happening

    var index = parseInt($("#pu_reportToRun option:selected").val(), 10);
    runReport(index);
  });
  $("#pu_sortOrder").change(function (evt) {
    evt.preventDefault();
    _sortOrder = $("#pu_sortOrder option:selected").val(); // rebuild the report with the new sort order

    if (_pieChart) runReport(_pieChart.options.reportIndex); // re-run same report
  });
}); // callback function that fills the pieChart up with the data retrieved from LMV Object Properties

function loadReportDataPieChart(pieOpts) {
  // free up anything that is already there
  if (_pieChart) _pieChart.destroy();
  $("#barChart").empty();

  if (pieOpts.data.content.length === 0) {
    $("#pieChart").append("<p><em>El modelo no cuenta con datos.</em></p>");
  } else {
    // if we have a lot of buckets, don't let the pie chart get out of control, condense anything with 2 or less
    // into an "Other" wedge.
    //pieOpts.data.sortOrder = "value-desc"; solo hace el sort
    pieOpts.data.content.sort(function (a, b) {
      if (a.value < b.value) return 1;else if (a.value > b.value) return -1;
      return 0;
    });

    if (pieOpts.data.content.length < 10) {
      pieOpts.data.smallSegmentGrouping.enabled = false;
    } else if (pieOpts.data.content.length > 20) {
      pieOpts.labels.truncation.enabled = true;
      var thresholdObj = pieOpts.data.content[19];
      pieOpts.data.smallSegmentGrouping.value = thresholdObj.value;
    }

    _pieChart = new d3pie("pieChart", pieOpts);
    barChartReport.loadBarChart(pieOpts.data);
  }
} // initialize


function initPieOpts(fieldName, reportIndex) {
  var pieOpts = initPieDefaults(fieldName);
  pieOpts.reportIndex = reportIndex;
  pieOpts.data = {
    "sortOrder": _sortOrder,
    "content": [],
    "smallSegmentGrouping": {
      "enabled": true,
      "value": 1,
      "valueType": "value" // percentage or value

    }
  };
  return pieOpts;
}

function initPieDefaults(fieldName) {
  var strSubTitle = "Quantities in model (" + fieldName + ")";
  var pieDefaults = {
    "header": {
      "title": false,
      "subtitle": false,
      "titleSubtitlePadding": 9
    },
    "footer": {
      "color": "#999999",
      "fontSize": 10,
      "font": "open sans",
      "location": "bottom-left"
    },
    "size": {
      "canvasWidth": 590,
      "pieInnerRadius": "39%",
      "pieOuterRadius": "67%"
    },
    "labels": {
      "outer": {
        "pieDistance": 25
      },
      "inner": {
        "hideWhenLessThanPercentage": 3,
        "format": "value"
      },
      "mainLabel": {
        "fontSize": 11
      },
      "percentage": {
        "color": "#ffffff",
        "decimalPlaces": 0
      },
      "value": {
        "color": "#adadad",
        "fontSize": 11
      },
      "lines": {
        "enabled": true
      },
      "truncation": {
        "enabled": false,
        "truncateLength": 30
      }
    },
    "tooltips": {
      "enabled": true,
      "type": "placeholder",
      "string": "{label}: {value}, {percentage}%"
    },
    "effects": {
      "pullOutSegmentOnClick": {
        "effect": "linear",
        "speed": 400,
        "size": 8
      }
    },
    "misc": {
      "gradient": {
        "enabled": true,
        "percentage": 100
      }
    },
    "callbacks": {
      onClickSegment: clickPieWedge
    }
  };
  return pieDefaults;
}

var _selectedWedge;

function clickPieWedge(evt) {
  //select a una grafica pie
  if (_selectedWedge !== evt.data.label) {
    ids = [];

    if (evt.data.isGrouped === true) {
      // "Other" bucket will group things together
      for (i = 0; i < evt.data.groupedData.length; i++) {
        ids = ids.concat(evt.data.groupedData[i].lmvIds);
      }
    } else {
      ids = evt.data.lmvIds;
    }

    _viewerMain.isolate(ids);

    _viewerSecondary.select(ids);

    _selectedWedge = evt.data.label;
  } else {
    _selectedWedge = null;

    _viewerMain.showAll();

    _viewerSecondary.clearSelection();
  }
}

module.exports = {
  disableReportMenu: disableReportMenu,
  enableReportMenu: enableReportMenu,
  runReport: runReport
};

/***/ }),

/***/ "./src/scripts/dataClass.js":
/*!**********************************!*\
  !*** ./src/scripts/dataClass.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Asset)
/* harmony export */ });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var Asset = /*#__PURE__*/function () {
  function Asset(assetType, belongsTo, brand, description, hasSSD, isAssigned, memory, model, processor, processorBrand, serialNumber, serviceTag, vRAM, videocard, videocardBrand) {
    _classCallCheck(this, Asset);

    this.assetType = assetType;
    this.belongsTo = belongsTo;
    this.brand = brand;
    this.description = description;
    this.hasSSD = hasSSD;
    this.isAssigned = isAssigned;
    this.memory = memory;
    this.model = model;
    this.processor = processor;
    this.processorBrand = processorBrand;
    this.serialNumber = serialNumber;
    this.serviceTag = serviceTag;
    this.vRAM = vRAM;
    this.videocard = videocard;
    this.videocardBrand = videocardBrand;
  }

  _createClass(Asset, [{
    key: "type",
    get: function get() {
      return this.assetType;
    }
  }, {
    key: "belongsTo",
    get: function get() {
      return this.belongsTo;
    }
  }, {
    key: "brand",
    get: function get() {
      return this.brand;
    }
  }, {
    key: "description",
    get: function get() {
      return this.description;
    }
  }, {
    key: "hasSSD",
    get: function get() {
      return this.hasSSD;
    }
  }, {
    key: "isAssigned",
    get: function get() {
      return this.isAssigned;
    }
  }, {
    key: "memory",
    get: function get() {
      return this.memory;
    }
  }, {
    key: "model",
    get: function get() {
      return this.model;
    }
  }, {
    key: "processor",
    get: function get() {
      return this.processor;
    }
  }, {
    key: "processorBrand",
    get: function get() {
      return this.processorBrand;
    }
  }, {
    key: "serialNumber",
    get: function get() {
      return this.serialNumber;
    }
  }, {
    key: "serviceTag",
    get: function get() {
      return this.serviceTag;
    }
  }, {
    key: "vRAM",
    get: function get() {
      return this.vRAM;
    }
  }, {
    key: "videocard",
    get: function get() {
      return this.videocard;
    }
  }, {
    key: "videocardBrand",
    get: function get() {
      return this.videocardBrand;
    }
  }, {
    key: "getDict",
    get: function get() {
      var dict = {
        assetType: this.assetType,
        belongsTo: this.belongsTo,
        brand: this.brand,
        description: this.description,
        hasSSD: this.hasSSD,
        isAssigned: this.isAssigned,
        memory: this.memory,
        model: this.model,
        processor: this.processor,
        processorBrand: this.processorBrand,
        serialNumber: this.serialNumber,
        serviceTag: this.serviceTag,
        vRAM: this.vRAM,
        videocard: this.videocard,
        videocardBrand: this.videocardBrand
      };
    }
  }]);

  return Asset;
}();


;

/***/ }),

/***/ "./src/scripts/extensions.js":
/*!***********************************!*\
  !*** ./src/scripts/extensions.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _LoadModel_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./LoadModel.js */ "./src/scripts/LoadModel.js");
 // *******************************************
// Firebase (Docking) Panel
// *******************************************

function FirebasePanel(viewer, container, id, title, options) {
  this.viewer = viewer;
  Autodesk.Viewing.UI.DockingPanel.call(this, container, id, title, options); // the style of the docking panel
  // use this built-in style to support Themes on Viewer 4+

  this.container.classList.add('docking-panel-container-solid-color-a');
  this.container.style.top = "10px";
  this.container.style.left = "10px";
  this.container.style.width = "auto";
  this.container.style.height = "auto";
  this.container.style.resize = "auto";
  this._table = new Autodesk.Viewing.UI.DataTable(this);
  var cols = ['Property', 'Value'];
  var rows = [["Test", "data"]];
  var panelData = null;

  if (window._viewerMain.getSelection().length == 1) {
    window.objectArray.forEach(function (object, i) {
      if (window._viewerMain.getSelection()[0] == object.dbId) {
        rows = [["dbId", object.dbId], ["docId", object.docId], ["Color", object.color], ["Nombre", object.name], ["Costo Paramétrico", "$" + object.totalPrice], ["Numero de contrato", object.contractNo], ["Proveedor", object.provider]];
      }
    });

    this._table.setData(rows, cols);
  } else if (currSelection.length > 1) {
    var totalPrice = 0;
    var allProviders = "";
    window.objectArray.forEach(function (object, i) {
      window._viewerMain.getSelection().forEach(function (dbId, i) {
        if (dbId == object.dbId) {
          totalPrice = totalPrice + object.totalPrice;

          if (allProviders.search(object.provider) < 0) {
            allProviders = allProviders + " " + object.provider;
          }
        }
      });
    });
    rows = [["dbId", "Multi-select"], ["docId", "Multi-select"], ["Nombre", "Multi-select"], ["Costo de selección", "$" + totalPrice], ["Proveedores seleccionados", allProviders]];
  } else {
    // this is where we should place the content of our panel
    var div = document.createElement('div');
    div.style.margin = '20px';
    div.innerText = "Selecciona un objeto.";
    this.container.appendChild(div); // and may also append child elements...
  }
}

FirebasePanel.prototype = Object.create(Autodesk.Viewing.UI.DockingPanel.prototype);
FirebasePanel.prototype.constructor = FirebasePanel; // *******************************************
// Firebase Extension
// *******************************************

function FirebaseExtension(viewer, options) {
  Autodesk.Viewing.Extension.call(this, viewer, options);
  this.panel = null;
}

FirebaseExtension.prototype = Object.create(Autodesk.Viewing.Extension.prototype);
FirebaseExtension.prototype.constructor = FirebaseExtension;

FirebaseExtension.prototype.load = function () {
  if (this.viewer.toolbar) {
    // Toolbar is already available, create the UI
    this.createUI();
  } else {
    // Toolbar hasn't been created yet, wait until we get notification of its creation
    this.onToolbarCreatedBinded = this.onToolbarCreated.bind(this);
    this.viewer.addEventListener(Autodesk.Viewing.TOOLBAR_CREATED_EVENT, this.onToolbarCreatedBinded);
  }

  return true;
};

FirebaseExtension.prototype.onToolbarCreated = function () {
  this.viewer.removeEventListener(Autodesk.Viewing.TOOLBAR_CREATED_EVENT, this.onToolbarCreatedBinded);
  this.onToolbarCreatedBinded = null;
  this.createUI();
};

FirebaseExtension.prototype.createUI = function () {
  var viewer = this.viewer;
  var panel = this.panel; // button to show the docking panel

  var toolbarButtonShowDockingPanel = new Autodesk.Viewing.UI.Button('showMyAwesomePanel');

  toolbarButtonShowDockingPanel.onClick = function (e) {
    if (panel == null) {
      panel = new FirebasePanel(viewer, viewer.container, 'FirebaseExtensionPanel', 'Bimset Properties');
    } // show/hide docking panel


    panel.setVisible(!panel.isVisible());
  };

  toolbarButtonShowDockingPanel.addClass('firebaseToolbarButton');
  toolbarButtonShowDockingPanel.setToolTip('Firebase extension'); // SubToolbar

  this.subToolbar = new Autodesk.Viewing.UI.ControlGroup('FirebaseAppToolbar');
  this.subToolbar.addControl(toolbarButtonShowDockingPanel);
  viewer.toolbar.addControl(this.subToolbar);

  window._viewerMain.addEventListener(Autodesk.Viewing.SELECTION_CHANGED_EVENT, function (event) {
    var cols = ['', ''];
    var rows = [["", ""]];

    var currSelection = window._viewerMain.getSelection();

    if (currSelection.length == 1) {
      window.objectArray.forEach(function (object, i) {
        if (window._viewerMain.getSelection()[0] == object.dbId) {
          rows = [["dbId", object.dbId], ["docId", object.docId], ["Color", object.color], ["Nombre", object.name], ["Costo Paramétrico", "$" + object.totalPrice], ["Numero de contrato", object.contractNo], ["Proveedor", object.provider]];
        }
      });
    } else if (currSelection.length > 1) {
      var totalPrice = 0;
      var allProviders = "";
      window.objectArray.forEach(function (object, i) {
        window._viewerMain.getSelection().forEach(function (dbId, i) {
          if (dbId == object.dbId) {
            totalPrice = totalPrice + object.totalPrice;

            if (allProviders.search(object.provider) < 0) {
              allProviders = allProviders + " " + object.provider;
            }
          }
        });
      });
      rows = [["dbId", "Multi-select"], ["docId", "Multi-select"], ["Nombre", "Multi-select"], ["Costo de selección", "$" + totalPrice], ["Proveedores seleccionados", allProviders]];
    }

    if (panel != null) {
      if (panel.isVisible()) {
        console.log("Table inside selection changed and panel isVisible: ", panel._table);

        panel._table.clearAggregates();

        $("#datatable").html("");

        panel._table.setData(rows, cols);
      }
    }
  });
};

FirebaseExtension.prototype.unload = function () {
  this.viewer.toolbar.removeControl(this.subToolbar);
  return true;
};

Autodesk.Viewing.theExtensionManager.registerExtension('FirebaseExtension', FirebaseExtension); // *******************************************
// My Color Extension
// *******************************************

function MyColorExtension(viewer, options) {
  Autodesk.Viewing.Extension.call(this, viewer, options);
}

MyColorExtension.prototype = Object.create(Autodesk.Viewing.Extension.prototype);
MyColorExtension.prototype.constructor = MyColorExtension;

MyColorExtension.prototype.load = function () {
  if (this.viewer.toolbar) {
    // Toolbar is already available, create the UI
    this.createUI();
  } else {
    // Toolbar hasn't been created yet, wait until we get notification of its creation
    this.onToolbarCreatedBinded = this.onToolbarCreated.bind(this);
    this.viewer.addEventListener(Autodesk.Viewing.TOOLBAR_CREATED_EVENT, this.onToolbarCreatedBinded);
  }

  return true;
};

MyColorExtension.prototype.onToolbarCreated = function () {
  this.viewer.removeEventListener(Autodesk.Viewing.TOOLBAR_CREATED_EVENT, this.onToolbarCreatedBinded);
  this.onToolbarCreatedBinded = null;
  this.createUI();
};

MyColorExtension.prototype.createUI = function () {
  // alert('TODO: Create Toolbar!');
  var viewer = this.viewer; // Button 1

  var button1 = new Autodesk.Viewing.UI.Button('red-bunny');
  var colored = true;

  button1.onClick = function (e) {
    var objArray = window.objectArray;

    if (colored) {
      viewer.clearThemingColors(window._viewerMain.model);
      colored = false;
    } else {
      objArray.forEach(function (object, index, tempArray) {
        window._viewerMain.setThemingColor(object.dbId, (0,_LoadModel_js__WEBPACK_IMPORTED_MODULE_0__.default)(object.color));
      });
      colored = true;
    }
  };

  button1.addClass('blackandwhite');
  button1.setToolTip('Color Switch'); // SubToolbar

  this.subToolbar = new Autodesk.Viewing.UI.ControlGroup('my-custom-view-toolbar');
  this.subToolbar.addControl(button1);
  viewer.toolbar.addControl(this.subToolbar);
};

MyColorExtension.prototype.unload = function () {
  this.viewer.toolbar.removeControl(this.subToolbar);
  return true;
};

Autodesk.Viewing.theExtensionManager.registerExtension('MyColorExtension', MyColorExtension);

/***/ }),

/***/ "./src/scripts/firebaseData.js":
/*!*************************************!*\
  !*** ./src/scripts/firebaseData.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "userFunction": () => (/* binding */ userFunction)
/* harmony export */ });
function userFunction(pdb) {
  var attrIddocID = -1;
  var attrIdArea = -1;
  var bimObject = null;
  var bimObjArr = [];
  var docIdBool,
      areaBool = false; // Iterate over all attributes and find the index to the one we are interested in

  pdb.enumAttributes(function (i, attrDef, attrRaw) {
    var name = attrDef.name;

    if (name === 'docId') {
      attrIddocID = i;
      console.log(name, " ", attrIddocID);
      docIdBool = true;
    }

    if (name === 'Area') {
      attrIdArea = i; //console.log(name, " ", attrIdArea);

      areaBool = true;
    }

    if (areaBool && docIdBool) {
      //console.log("docId: ", attrIddocID, " areaId: ", attrIdArea);
      return true;
    }
  }); // Early return is the model doesn't contain data for "docID".

  if (attrIddocID === -1) return null;
  var value = 0;
  var countObj = 0;
  pdb.enumObjects(function (dbId) {
    // For each part, iterate over their properties.
    var docIdValue,
        areaValue = null;
    var docIdBool,
        areaBool = false;
    pdb.enumObjectProperties(dbId, function (attrId, valId) {
      // Only process 'docID' property.
      if (attrId == attrIddocID) {
        docIdValue = pdb.getAttrValue(attrId, valId);
        docIdBool = true;
      }

      if (attrId == attrIdArea) {
        areaValue = pdb.getAttrValue(attrId, valId); //console.log("isNaN: ", !(isNaN(areaValue)), " value: ", areaValue, " IdArea: ", attrIdArea);

        areaBool = true;
      }
    });
    bimObject = {
      dbId: dbId,
      attrId: attrIddocID,
      value: docIdValue,
      areaAttrId: attrIdArea,
      areaValue: areaValue
    }; //console.log("bimObject: ", bimObject);

    if (bimObject.value == "" || bimObject.value == null) {} else {
      bimObjArr.push(bimObject);
    }
  });
  return bimObjArr;
}



/***/ }),

/***/ "./src/scripts/libs/d3/d3.min.js":
/*!***************************************!*\
  !*** ./src/scripts/libs/d3/d3.min.js ***!
  \***************************************/
/***/ ((module, exports, __webpack_require__) => {

var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

!function () {
  function n(n, t) {
    return t > n ? -1 : n > t ? 1 : n >= t ? 0 : 0 / 0;
  }

  function t(n) {
    return null != n && !isNaN(n);
  }

  function e(n) {
    return {
      left: function left(t, e, r, u) {
        for (arguments.length < 3 && (r = 0), arguments.length < 4 && (u = t.length); u > r;) {
          var i = r + u >>> 1;
          n(t[i], e) < 0 ? r = i + 1 : u = i;
        }

        return r;
      },
      right: function right(t, e, r, u) {
        for (arguments.length < 3 && (r = 0), arguments.length < 4 && (u = t.length); u > r;) {
          var i = r + u >>> 1;
          n(t[i], e) > 0 ? u = i : r = i + 1;
        }

        return r;
      }
    };
  }

  function r(n) {
    return n.length;
  }

  function u(n) {
    for (var t = 1; n * t % 1;) {
      t *= 10;
    }

    return t;
  }

  function i(n, t) {
    try {
      for (var e in t) {
        Object.defineProperty(n.prototype, e, {
          value: t[e],
          enumerable: !1
        });
      }
    } catch (r) {
      n.prototype = t;
    }
  }

  function o() {}

  function a(n) {
    return ia + n in this;
  }

  function c(n) {
    return n = ia + n, n in this && delete this[n];
  }

  function s() {
    var n = [];
    return this.forEach(function (t) {
      n.push(t);
    }), n;
  }

  function l() {
    var n = 0;

    for (var t in this) {
      t.charCodeAt(0) === oa && ++n;
    }

    return n;
  }

  function f() {
    for (var n in this) {
      if (n.charCodeAt(0) === oa) return !1;
    }

    return !0;
  }

  function h() {}

  function g(n, t, e) {
    return function () {
      var r = e.apply(t, arguments);
      return r === t ? n : r;
    };
  }

  function p(n, t) {
    if (t in n) return t;
    t = t.charAt(0).toUpperCase() + t.substring(1);

    for (var e = 0, r = aa.length; r > e; ++e) {
      var u = aa[e] + t;
      if (u in n) return u;
    }
  }

  function v() {}

  function d() {}

  function m(n) {
    function t() {
      for (var t, r = e, u = -1, i = r.length; ++u < i;) {
        (t = r[u].on) && t.apply(this, arguments);
      }

      return n;
    }

    var e = [],
        r = new o();
    return t.on = function (t, u) {
      var i,
          o = r.get(t);
      return arguments.length < 2 ? o && o.on : (o && (o.on = null, e = e.slice(0, i = e.indexOf(o)).concat(e.slice(i + 1)), r.remove(t)), u && e.push(r.set(t, {
        on: u
      })), n);
    }, t;
  }

  function y() {
    Zo.event.preventDefault();
  }

  function x() {
    for (var n, t = Zo.event; n = t.sourceEvent;) {
      t = n;
    }

    return t;
  }

  function M(n) {
    for (var t = new d(), e = 0, r = arguments.length; ++e < r;) {
      t[arguments[e]] = m(t);
    }

    return t.of = function (e, r) {
      return function (u) {
        try {
          var i = u.sourceEvent = Zo.event;
          u.target = n, Zo.event = u, t[u.type].apply(e, r);
        } finally {
          Zo.event = i;
        }
      };
    }, t;
  }

  function _(n) {
    return sa(n, pa), n;
  }

  function b(n) {
    return "function" == typeof n ? n : function () {
      return la(n, this);
    };
  }

  function w(n) {
    return "function" == typeof n ? n : function () {
      return fa(n, this);
    };
  }

  function S(n, t) {
    function e() {
      this.removeAttribute(n);
    }

    function r() {
      this.removeAttributeNS(n.space, n.local);
    }

    function u() {
      this.setAttribute(n, t);
    }

    function i() {
      this.setAttributeNS(n.space, n.local, t);
    }

    function o() {
      var e = t.apply(this, arguments);
      null == e ? this.removeAttribute(n) : this.setAttribute(n, e);
    }

    function a() {
      var e = t.apply(this, arguments);
      null == e ? this.removeAttributeNS(n.space, n.local) : this.setAttributeNS(n.space, n.local, e);
    }

    return n = Zo.ns.qualify(n), null == t ? n.local ? r : e : "function" == typeof t ? n.local ? a : o : n.local ? i : u;
  }

  function k(n) {
    return n.trim().replace(/\s+/g, " ");
  }

  function E(n) {
    return new RegExp("(?:^|\\s+)" + Zo.requote(n) + "(?:\\s+|$)", "g");
  }

  function A(n) {
    return (n + "").trim().split(/^|\s+/);
  }

  function C(n, t) {
    function e() {
      for (var e = -1; ++e < u;) {
        n[e](this, t);
      }
    }

    function r() {
      for (var e = -1, r = t.apply(this, arguments); ++e < u;) {
        n[e](this, r);
      }
    }

    n = A(n).map(N);
    var u = n.length;
    return "function" == typeof t ? r : e;
  }

  function N(n) {
    var t = E(n);
    return function (e, r) {
      if (u = e.classList) return r ? u.add(n) : u.remove(n);
      var u = e.getAttribute("class") || "";
      r ? (t.lastIndex = 0, t.test(u) || e.setAttribute("class", k(u + " " + n))) : e.setAttribute("class", k(u.replace(t, " ")));
    };
  }

  function z(n, t, e) {
    function r() {
      this.style.removeProperty(n);
    }

    function u() {
      this.style.setProperty(n, t, e);
    }

    function i() {
      var r = t.apply(this, arguments);
      null == r ? this.style.removeProperty(n) : this.style.setProperty(n, r, e);
    }

    return null == t ? r : "function" == typeof t ? i : u;
  }

  function L(n, t) {
    function e() {
      delete this[n];
    }

    function r() {
      this[n] = t;
    }

    function u() {
      var e = t.apply(this, arguments);
      null == e ? delete this[n] : this[n] = e;
    }

    return null == t ? e : "function" == typeof t ? u : r;
  }

  function T(n) {
    return "function" == typeof n ? n : (n = Zo.ns.qualify(n)).local ? function () {
      return this.ownerDocument.createElementNS(n.space, n.local);
    } : function () {
      return this.ownerDocument.createElementNS(this.namespaceURI, n);
    };
  }

  function q(n) {
    return {
      __data__: n
    };
  }

  function R(n) {
    return function () {
      return ga(this, n);
    };
  }

  function D(t) {
    return arguments.length || (t = n), function (n, e) {
      return n && e ? t(n.__data__, e.__data__) : !n - !e;
    };
  }

  function P(n, t) {
    for (var e = 0, r = n.length; r > e; e++) {
      for (var u, i = n[e], o = 0, a = i.length; a > o; o++) {
        (u = i[o]) && t(u, o, e);
      }
    }

    return n;
  }

  function U(n) {
    return sa(n, da), n;
  }

  function j(n) {
    var t, e;
    return function (r, u, i) {
      var o,
          a = n[i].update,
          c = a.length;

      for (i != e && (e = i, t = 0), u >= t && (t = u + 1); !(o = a[t]) && ++t < c;) {
        ;
      }

      return o;
    };
  }

  function H() {
    var n = this.__transition__;
    n && ++n.active;
  }

  function F(n, t, e) {
    function r() {
      var t = this[o];
      t && (this.removeEventListener(n, t, t.$), delete this[o]);
    }

    function u() {
      var u = c(t, Xo(arguments));
      r.call(this), this.addEventListener(n, this[o] = u, u.$ = e), u._ = t;
    }

    function i() {
      var t,
          e = new RegExp("^__on([^.]+)" + Zo.requote(n) + "$");

      for (var r in this) {
        if (t = r.match(e)) {
          var u = this[r];
          this.removeEventListener(t[1], u, u.$), delete this[r];
        }
      }
    }

    var o = "__on" + n,
        a = n.indexOf("."),
        c = O;
    a > 0 && (n = n.substring(0, a));
    var s = ya.get(n);
    return s && (n = s, c = Y), a ? t ? u : r : t ? v : i;
  }

  function O(n, t) {
    return function (e) {
      var r = Zo.event;
      Zo.event = e, t[0] = this.__data__;

      try {
        n.apply(this, t);
      } finally {
        Zo.event = r;
      }
    };
  }

  function Y(n, t) {
    var e = O(n, t);
    return function (n) {
      var t = this,
          r = n.relatedTarget;
      r && (r === t || 8 & r.compareDocumentPosition(t)) || e.call(t, n);
    };
  }

  function I() {
    var n = ".dragsuppress-" + ++Ma,
        t = "click" + n,
        e = Zo.select(Wo).on("touchmove" + n, y).on("dragstart" + n, y).on("selectstart" + n, y);

    if (xa) {
      var r = Bo.style,
          u = r[xa];
      r[xa] = "none";
    }

    return function (i) {
      function o() {
        e.on(t, null);
      }

      e.on(n, null), xa && (r[xa] = u), i && (e.on(t, function () {
        y(), o();
      }, !0), setTimeout(o, 0));
    };
  }

  function Z(n, t) {
    t.changedTouches && (t = t.changedTouches[0]);
    var e = n.ownerSVGElement || n;

    if (e.createSVGPoint) {
      var r = e.createSVGPoint();

      if (0 > _a && (Wo.scrollX || Wo.scrollY)) {
        e = Zo.select("body").append("svg").style({
          position: "absolute",
          top: 0,
          left: 0,
          margin: 0,
          padding: 0,
          border: "none"
        }, "important");
        var u = e[0][0].getScreenCTM();
        _a = !(u.f || u.e), e.remove();
      }

      return _a ? (r.x = t.pageX, r.y = t.pageY) : (r.x = t.clientX, r.y = t.clientY), r = r.matrixTransform(n.getScreenCTM().inverse()), [r.x, r.y];
    }

    var i = n.getBoundingClientRect();
    return [t.clientX - i.left - n.clientLeft, t.clientY - i.top - n.clientTop];
  }

  function V() {
    return Zo.event.changedTouches[0].identifier;
  }

  function X() {
    return Zo.event.target;
  }

  function $() {
    return Wo;
  }

  function B(n) {
    return n > 0 ? 1 : 0 > n ? -1 : 0;
  }

  function W(n, t, e) {
    return (t[0] - n[0]) * (e[1] - n[1]) - (t[1] - n[1]) * (e[0] - n[0]);
  }

  function J(n) {
    return n > 1 ? 0 : -1 > n ? ba : Math.acos(n);
  }

  function G(n) {
    return n > 1 ? Sa : -1 > n ? -Sa : Math.asin(n);
  }

  function K(n) {
    return ((n = Math.exp(n)) - 1 / n) / 2;
  }

  function Q(n) {
    return ((n = Math.exp(n)) + 1 / n) / 2;
  }

  function nt(n) {
    return ((n = Math.exp(2 * n)) - 1) / (n + 1);
  }

  function tt(n) {
    return (n = Math.sin(n / 2)) * n;
  }

  function et() {}

  function rt(n, t, e) {
    return this instanceof rt ? (this.h = +n, this.s = +t, void (this.l = +e)) : arguments.length < 2 ? n instanceof rt ? new rt(n.h, n.s, n.l) : mt("" + n, yt, rt) : new rt(n, t, e);
  }

  function ut(n, t, e) {
    function r(n) {
      return n > 360 ? n -= 360 : 0 > n && (n += 360), 60 > n ? i + (o - i) * n / 60 : 180 > n ? o : 240 > n ? i + (o - i) * (240 - n) / 60 : i;
    }

    function u(n) {
      return Math.round(255 * r(n));
    }

    var i, o;
    return n = isNaN(n) ? 0 : (n %= 360) < 0 ? n + 360 : n, t = isNaN(t) ? 0 : 0 > t ? 0 : t > 1 ? 1 : t, e = 0 > e ? 0 : e > 1 ? 1 : e, o = .5 >= e ? e * (1 + t) : e + t - e * t, i = 2 * e - o, new gt(u(n + 120), u(n), u(n - 120));
  }

  function it(n, t, e) {
    return this instanceof it ? (this.h = +n, this.c = +t, void (this.l = +e)) : arguments.length < 2 ? n instanceof it ? new it(n.h, n.c, n.l) : n instanceof at ? st(n.l, n.a, n.b) : st((n = xt((n = Zo.rgb(n)).r, n.g, n.b)).l, n.a, n.b) : new it(n, t, e);
  }

  function ot(n, t, e) {
    return isNaN(n) && (n = 0), isNaN(t) && (t = 0), new at(e, Math.cos(n *= Aa) * t, Math.sin(n) * t);
  }

  function at(n, t, e) {
    return this instanceof at ? (this.l = +n, this.a = +t, void (this.b = +e)) : arguments.length < 2 ? n instanceof at ? new at(n.l, n.a, n.b) : n instanceof it ? ot(n.l, n.c, n.h) : xt((n = gt(n)).r, n.g, n.b) : new at(n, t, e);
  }

  function ct(n, t, e) {
    var r = (n + 16) / 116,
        u = r + t / 500,
        i = r - e / 200;
    return u = lt(u) * ja, r = lt(r) * Ha, i = lt(i) * Fa, new gt(ht(3.2404542 * u - 1.5371385 * r - .4985314 * i), ht(-.969266 * u + 1.8760108 * r + .041556 * i), ht(.0556434 * u - .2040259 * r + 1.0572252 * i));
  }

  function st(n, t, e) {
    return n > 0 ? new it(Math.atan2(e, t) * Ca, Math.sqrt(t * t + e * e), n) : new it(0 / 0, 0 / 0, n);
  }

  function lt(n) {
    return n > .206893034 ? n * n * n : (n - 4 / 29) / 7.787037;
  }

  function ft(n) {
    return n > .008856 ? Math.pow(n, 1 / 3) : 7.787037 * n + 4 / 29;
  }

  function ht(n) {
    return Math.round(255 * (.00304 >= n ? 12.92 * n : 1.055 * Math.pow(n, 1 / 2.4) - .055));
  }

  function gt(n, t, e) {
    return this instanceof gt ? (this.r = ~~n, this.g = ~~t, void (this.b = ~~e)) : arguments.length < 2 ? n instanceof gt ? new gt(n.r, n.g, n.b) : mt("" + n, gt, ut) : new gt(n, t, e);
  }

  function pt(n) {
    return new gt(n >> 16, 255 & n >> 8, 255 & n);
  }

  function vt(n) {
    return pt(n) + "";
  }

  function dt(n) {
    return 16 > n ? "0" + Math.max(0, n).toString(16) : Math.min(255, n).toString(16);
  }

  function mt(n, t, e) {
    var r,
        u,
        i,
        o = 0,
        a = 0,
        c = 0;
    if (r = /([a-z]+)\((.*)\)/i.exec(n)) switch (u = r[2].split(","), r[1]) {
      case "hsl":
        return e(parseFloat(u[0]), parseFloat(u[1]) / 100, parseFloat(u[2]) / 100);

      case "rgb":
        return t(_t(u[0]), _t(u[1]), _t(u[2]));
    }
    return (i = Ia.get(n)) ? t(i.r, i.g, i.b) : (null == n || "#" !== n.charAt(0) || isNaN(i = parseInt(n.substring(1), 16)) || (4 === n.length ? (o = (3840 & i) >> 4, o = o >> 4 | o, a = 240 & i, a = a >> 4 | a, c = 15 & i, c = c << 4 | c) : 7 === n.length && (o = (16711680 & i) >> 16, a = (65280 & i) >> 8, c = 255 & i)), t(o, a, c));
  }

  function yt(n, t, e) {
    var r,
        u,
        i = Math.min(n /= 255, t /= 255, e /= 255),
        o = Math.max(n, t, e),
        a = o - i,
        c = (o + i) / 2;
    return a ? (u = .5 > c ? a / (o + i) : a / (2 - o - i), r = n == o ? (t - e) / a + (e > t ? 6 : 0) : t == o ? (e - n) / a + 2 : (n - t) / a + 4, r *= 60) : (r = 0 / 0, u = c > 0 && 1 > c ? 0 : r), new rt(r, u, c);
  }

  function xt(n, t, e) {
    n = Mt(n), t = Mt(t), e = Mt(e);
    var r = ft((.4124564 * n + .3575761 * t + .1804375 * e) / ja),
        u = ft((.2126729 * n + .7151522 * t + .072175 * e) / Ha),
        i = ft((.0193339 * n + .119192 * t + .9503041 * e) / Fa);
    return at(116 * u - 16, 500 * (r - u), 200 * (u - i));
  }

  function Mt(n) {
    return (n /= 255) <= .04045 ? n / 12.92 : Math.pow((n + .055) / 1.055, 2.4);
  }

  function _t(n) {
    var t = parseFloat(n);
    return "%" === n.charAt(n.length - 1) ? Math.round(2.55 * t) : t;
  }

  function bt(n) {
    return "function" == typeof n ? n : function () {
      return n;
    };
  }

  function wt(n) {
    return n;
  }

  function St(n) {
    return function (t, e, r) {
      return 2 === arguments.length && "function" == typeof e && (r = e, e = null), kt(t, e, n, r);
    };
  }

  function kt(n, t, e, r) {
    function u() {
      var n,
          t = c.status;

      if (!t && c.responseText || t >= 200 && 300 > t || 304 === t) {
        try {
          n = e.call(i, c);
        } catch (r) {
          return o.error.call(i, r), void 0;
        }

        o.load.call(i, n);
      } else o.error.call(i, c);
    }

    var i = {},
        o = Zo.dispatch("beforesend", "progress", "load", "error"),
        a = {},
        c = new XMLHttpRequest(),
        s = null;
    return !Wo.XDomainRequest || "withCredentials" in c || !/^(http(s)?:)?\/\//.test(n) || (c = new XDomainRequest()), "onload" in c ? c.onload = c.onerror = u : c.onreadystatechange = function () {
      c.readyState > 3 && u();
    }, c.onprogress = function (n) {
      var t = Zo.event;
      Zo.event = n;

      try {
        o.progress.call(i, c);
      } finally {
        Zo.event = t;
      }
    }, i.header = function (n, t) {
      return n = (n + "").toLowerCase(), arguments.length < 2 ? a[n] : (null == t ? delete a[n] : a[n] = t + "", i);
    }, i.mimeType = function (n) {
      return arguments.length ? (t = null == n ? null : n + "", i) : t;
    }, i.responseType = function (n) {
      return arguments.length ? (s = n, i) : s;
    }, i.response = function (n) {
      return e = n, i;
    }, ["get", "post"].forEach(function (n) {
      i[n] = function () {
        return i.send.apply(i, [n].concat(Xo(arguments)));
      };
    }), i.send = function (e, r, u) {
      if (2 === arguments.length && "function" == typeof r && (u = r, r = null), c.open(e, n, !0), null == t || "accept" in a || (a.accept = t + ",*/*"), c.setRequestHeader) for (var l in a) {
        c.setRequestHeader(l, a[l]);
      }
      return null != t && c.overrideMimeType && c.overrideMimeType(t), null != s && (c.responseType = s), null != u && i.on("error", u).on("load", function (n) {
        u(null, n);
      }), o.beforesend.call(i, c), c.send(null == r ? null : r), i;
    }, i.abort = function () {
      return c.abort(), i;
    }, Zo.rebind(i, o, "on"), null == r ? i : i.get(Et(r));
  }

  function Et(n) {
    return 1 === n.length ? function (t, e) {
      n(null == t ? e : null);
    } : n;
  }

  function At() {
    var n = Ct(),
        t = Nt() - n;
    t > 24 ? (isFinite(t) && (clearTimeout($a), $a = setTimeout(At, t)), Xa = 0) : (Xa = 1, Wa(At));
  }

  function Ct() {
    var n = Date.now();

    for (Ba = Za; Ba;) {
      n >= Ba.t && (Ba.f = Ba.c(n - Ba.t)), Ba = Ba.n;
    }

    return n;
  }

  function Nt() {
    for (var n, t = Za, e = 1 / 0; t;) {
      t.f ? t = n ? n.n = t.n : Za = t.n : (t.t < e && (e = t.t), t = (n = t).n);
    }

    return Va = n, e;
  }

  function zt(n, t) {
    return t - (n ? Math.ceil(Math.log(n) / Math.LN10) : 1);
  }

  function Lt(n, t) {
    var e = Math.pow(10, 3 * ua(8 - t));
    return {
      scale: t > 8 ? function (n) {
        return n / e;
      } : function (n) {
        return n * e;
      },
      symbol: n
    };
  }

  function Tt(n) {
    var t = n.decimal,
        e = n.thousands,
        r = n.grouping,
        u = n.currency,
        i = r ? function (n) {
      for (var t = n.length, u = [], i = 0, o = r[0]; t > 0 && o > 0;) {
        u.push(n.substring(t -= o, t + o)), o = r[i = (i + 1) % r.length];
      }

      return u.reverse().join(e);
    } : wt;
    return function (n) {
      var e = Ga.exec(n),
          r = e[1] || " ",
          o = e[2] || ">",
          a = e[3] || "",
          c = e[4] || "",
          s = e[5],
          l = +e[6],
          f = e[7],
          h = e[8],
          g = e[9],
          p = 1,
          v = "",
          d = "",
          m = !1;

      switch (h && (h = +h.substring(1)), (s || "0" === r && "=" === o) && (s = r = "0", o = "=", f && (l -= Math.floor((l - 1) / 4))), g) {
        case "n":
          f = !0, g = "g";
          break;

        case "%":
          p = 100, d = "%", g = "f";
          break;

        case "p":
          p = 100, d = "%", g = "r";
          break;

        case "b":
        case "o":
        case "x":
        case "X":
          "#" === c && (v = "0" + g.toLowerCase());

        case "c":
        case "d":
          m = !0, h = 0;
          break;

        case "s":
          p = -1, g = "r";
      }

      "$" === c && (v = u[0], d = u[1]), "r" != g || h || (g = "g"), null != h && ("g" == g ? h = Math.max(1, Math.min(21, h)) : ("e" == g || "f" == g) && (h = Math.max(0, Math.min(20, h)))), g = Ka.get(g) || qt;
      var y = s && f;
      return function (n) {
        var e = d;
        if (m && n % 1) return "";
        var u = 0 > n || 0 === n && 0 > 1 / n ? (n = -n, "-") : a;

        if (0 > p) {
          var c = Zo.formatPrefix(n, h);
          n = c.scale(n), e = c.symbol + d;
        } else n *= p;

        n = g(n, h);

        var x = n.lastIndexOf("."),
            M = 0 > x ? n : n.substring(0, x),
            _ = 0 > x ? "" : t + n.substring(x + 1);

        !s && f && (M = i(M));
        var b = v.length + M.length + _.length + (y ? 0 : u.length),
            w = l > b ? new Array(b = l - b + 1).join(r) : "";
        return y && (M = i(w + M)), u += v, n = M + _, ("<" === o ? u + n + w : ">" === o ? w + u + n : "^" === o ? w.substring(0, b >>= 1) + u + n + w.substring(b) : u + (y ? n : w + n)) + e;
      };
    };
  }

  function qt(n) {
    return n + "";
  }

  function Rt() {
    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);
  }

  function Dt(n, t, e) {
    function r(t) {
      var e = n(t),
          r = i(e, 1);
      return r - t > t - e ? e : r;
    }

    function u(e) {
      return t(e = n(new nc(e - 1)), 1), e;
    }

    function i(n, e) {
      return t(n = new nc(+n), e), n;
    }

    function o(n, r, i) {
      var o = u(n),
          a = [];
      if (i > 1) for (; r > o;) {
        e(o) % i || a.push(new Date(+o)), t(o, 1);
      } else for (; r > o;) {
        a.push(new Date(+o)), t(o, 1);
      }
      return a;
    }

    function a(n, t, e) {
      try {
        nc = Rt;
        var r = new Rt();
        return r._ = n, o(r, t, e);
      } finally {
        nc = Date;
      }
    }

    n.floor = n, n.round = r, n.ceil = u, n.offset = i, n.range = o;
    var c = n.utc = Pt(n);
    return c.floor = c, c.round = Pt(r), c.ceil = Pt(u), c.offset = Pt(i), c.range = a, n;
  }

  function Pt(n) {
    return function (t, e) {
      try {
        nc = Rt;
        var r = new Rt();
        return r._ = t, n(r, e)._;
      } finally {
        nc = Date;
      }
    };
  }

  function Ut(n) {
    function t(n) {
      function t(t) {
        for (var e, u, i, o = [], a = -1, c = 0; ++a < r;) {
          37 === n.charCodeAt(a) && (o.push(n.substring(c, a)), null != (u = ec[e = n.charAt(++a)]) && (e = n.charAt(++a)), (i = C[e]) && (e = i(t, null == u ? "e" === e ? " " : "0" : u)), o.push(e), c = a + 1);
        }

        return o.push(n.substring(c, a)), o.join("");
      }

      var r = n.length;
      return t.parse = function (t) {
        var r = {
          y: 1900,
          m: 0,
          d: 1,
          H: 0,
          M: 0,
          S: 0,
          L: 0,
          Z: null
        },
            u = e(r, n, t, 0);
        if (u != t.length) return null;
        "p" in r && (r.H = r.H % 12 + 12 * r.p);
        var i = null != r.Z && nc !== Rt,
            o = new (i ? Rt : nc)();
        return "j" in r ? o.setFullYear(r.y, 0, r.j) : "w" in r && ("W" in r || "U" in r) ? (o.setFullYear(r.y, 0, 1), o.setFullYear(r.y, 0, "W" in r ? (r.w + 6) % 7 + 7 * r.W - (o.getDay() + 5) % 7 : r.w + 7 * r.U - (o.getDay() + 6) % 7)) : o.setFullYear(r.y, r.m, r.d), o.setHours(r.H + Math.floor(r.Z / 100), r.M + r.Z % 100, r.S, r.L), i ? o._ : o;
      }, t.toString = function () {
        return n;
      }, t;
    }

    function e(n, t, e, r) {
      for (var u, i, o, a = 0, c = t.length, s = e.length; c > a;) {
        if (r >= s) return -1;

        if (u = t.charCodeAt(a++), 37 === u) {
          if (o = t.charAt(a++), i = N[o in ec ? t.charAt(a++) : o], !i || (r = i(n, e, r)) < 0) return -1;
        } else if (u != e.charCodeAt(r++)) return -1;
      }

      return r;
    }

    function r(n, t, e) {
      b.lastIndex = 0;
      var r = b.exec(t.substring(e));
      return r ? (n.w = w.get(r[0].toLowerCase()), e + r[0].length) : -1;
    }

    function u(n, t, e) {
      M.lastIndex = 0;
      var r = M.exec(t.substring(e));
      return r ? (n.w = _.get(r[0].toLowerCase()), e + r[0].length) : -1;
    }

    function i(n, t, e) {
      E.lastIndex = 0;
      var r = E.exec(t.substring(e));
      return r ? (n.m = A.get(r[0].toLowerCase()), e + r[0].length) : -1;
    }

    function o(n, t, e) {
      S.lastIndex = 0;
      var r = S.exec(t.substring(e));
      return r ? (n.m = k.get(r[0].toLowerCase()), e + r[0].length) : -1;
    }

    function a(n, t, r) {
      return e(n, C.c.toString(), t, r);
    }

    function c(n, t, r) {
      return e(n, C.x.toString(), t, r);
    }

    function s(n, t, r) {
      return e(n, C.X.toString(), t, r);
    }

    function l(n, t, e) {
      var r = x.get(t.substring(e, e += 2).toLowerCase());
      return null == r ? -1 : (n.p = r, e);
    }

    var f = n.dateTime,
        h = n.date,
        g = n.time,
        _p = n.periods,
        v = n.days,
        d = n.shortDays,
        m = n.months,
        y = n.shortMonths;
    t.utc = function (n) {
      function e(n) {
        try {
          nc = Rt;
          var t = new nc();
          return t._ = n, r(t);
        } finally {
          nc = Date;
        }
      }

      var r = t(n);
      return e.parse = function (n) {
        try {
          nc = Rt;
          var t = r.parse(n);
          return t && t._;
        } finally {
          nc = Date;
        }
      }, e.toString = r.toString, e;
    }, t.multi = t.utc.multi = re;

    var x = Zo.map(),
        M = Ht(v),
        _ = Ft(v),
        b = Ht(d),
        w = Ft(d),
        S = Ht(m),
        k = Ft(m),
        E = Ht(y),
        A = Ft(y);

    _p.forEach(function (n, t) {
      x.set(n.toLowerCase(), t);
    });

    var C = {
      a: function a(n) {
        return d[n.getDay()];
      },
      A: function A(n) {
        return v[n.getDay()];
      },
      b: function b(n) {
        return y[n.getMonth()];
      },
      B: function B(n) {
        return m[n.getMonth()];
      },
      c: t(f),
      d: function d(n, t) {
        return jt(n.getDate(), t, 2);
      },
      e: function e(n, t) {
        return jt(n.getDate(), t, 2);
      },
      H: function H(n, t) {
        return jt(n.getHours(), t, 2);
      },
      I: function I(n, t) {
        return jt(n.getHours() % 12 || 12, t, 2);
      },
      j: function j(n, t) {
        return jt(1 + Qa.dayOfYear(n), t, 3);
      },
      L: function L(n, t) {
        return jt(n.getMilliseconds(), t, 3);
      },
      m: function m(n, t) {
        return jt(n.getMonth() + 1, t, 2);
      },
      M: function M(n, t) {
        return jt(n.getMinutes(), t, 2);
      },
      p: function p(n) {
        return _p[+(n.getHours() >= 12)];
      },
      S: function S(n, t) {
        return jt(n.getSeconds(), t, 2);
      },
      U: function U(n, t) {
        return jt(Qa.sundayOfYear(n), t, 2);
      },
      w: function w(n) {
        return n.getDay();
      },
      W: function W(n, t) {
        return jt(Qa.mondayOfYear(n), t, 2);
      },
      x: t(h),
      X: t(g),
      y: function y(n, t) {
        return jt(n.getFullYear() % 100, t, 2);
      },
      Y: function Y(n, t) {
        return jt(n.getFullYear() % 1e4, t, 4);
      },
      Z: te,
      "%": function _() {
        return "%";
      }
    },
        N = {
      a: r,
      A: u,
      b: i,
      B: o,
      c: a,
      d: Wt,
      e: Wt,
      H: Gt,
      I: Gt,
      j: Jt,
      L: ne,
      m: Bt,
      M: Kt,
      p: l,
      S: Qt,
      U: Yt,
      w: Ot,
      W: It,
      x: c,
      X: s,
      y: Vt,
      Y: Zt,
      Z: Xt,
      "%": ee
    };
    return t;
  }

  function jt(n, t, e) {
    var r = 0 > n ? "-" : "",
        u = (r ? -n : n) + "",
        i = u.length;
    return r + (e > i ? new Array(e - i + 1).join(t) + u : u);
  }

  function Ht(n) {
    return new RegExp("^(?:" + n.map(Zo.requote).join("|") + ")", "i");
  }

  function Ft(n) {
    for (var t = new o(), e = -1, r = n.length; ++e < r;) {
      t.set(n[e].toLowerCase(), e);
    }

    return t;
  }

  function Ot(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e, e + 1));
    return r ? (n.w = +r[0], e + r[0].length) : -1;
  }

  function Yt(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e));
    return r ? (n.U = +r[0], e + r[0].length) : -1;
  }

  function It(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e));
    return r ? (n.W = +r[0], e + r[0].length) : -1;
  }

  function Zt(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e, e + 4));
    return r ? (n.y = +r[0], e + r[0].length) : -1;
  }

  function Vt(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e, e + 2));
    return r ? (n.y = $t(+r[0]), e + r[0].length) : -1;
  }

  function Xt(n, t, e) {
    return /^[+-]\d{4}$/.test(t = t.substring(e, e + 5)) ? (n.Z = -t, e + 5) : -1;
  }

  function $t(n) {
    return n + (n > 68 ? 1900 : 2e3);
  }

  function Bt(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e, e + 2));
    return r ? (n.m = r[0] - 1, e + r[0].length) : -1;
  }

  function Wt(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e, e + 2));
    return r ? (n.d = +r[0], e + r[0].length) : -1;
  }

  function Jt(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e, e + 3));
    return r ? (n.j = +r[0], e + r[0].length) : -1;
  }

  function Gt(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e, e + 2));
    return r ? (n.H = +r[0], e + r[0].length) : -1;
  }

  function Kt(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e, e + 2));
    return r ? (n.M = +r[0], e + r[0].length) : -1;
  }

  function Qt(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e, e + 2));
    return r ? (n.S = +r[0], e + r[0].length) : -1;
  }

  function ne(n, t, e) {
    rc.lastIndex = 0;
    var r = rc.exec(t.substring(e, e + 3));
    return r ? (n.L = +r[0], e + r[0].length) : -1;
  }

  function te(n) {
    var t = n.getTimezoneOffset(),
        e = t > 0 ? "-" : "+",
        r = ~~(ua(t) / 60),
        u = ua(t) % 60;
    return e + jt(r, "0", 2) + jt(u, "0", 2);
  }

  function ee(n, t, e) {
    uc.lastIndex = 0;
    var r = uc.exec(t.substring(e, e + 1));
    return r ? e + r[0].length : -1;
  }

  function re(n) {
    for (var t = n.length, e = -1; ++e < t;) {
      n[e][0] = this(n[e][0]);
    }

    return function (t) {
      for (var e = 0, r = n[e]; !r[1](t);) {
        r = n[++e];
      }

      return r[0](t);
    };
  }

  function ue() {}

  function ie(n, t, e) {
    var r = e.s = n + t,
        u = r - n,
        i = r - u;
    e.t = n - i + (t - u);
  }

  function oe(n, t) {
    n && cc.hasOwnProperty(n.type) && cc[n.type](n, t);
  }

  function ae(n, t, e) {
    var r,
        u = -1,
        i = n.length - e;

    for (t.lineStart(); ++u < i;) {
      r = n[u], t.point(r[0], r[1], r[2]);
    }

    t.lineEnd();
  }

  function ce(n, t) {
    var e = -1,
        r = n.length;

    for (t.polygonStart(); ++e < r;) {
      ae(n[e], t, 1);
    }

    t.polygonEnd();
  }

  function se() {
    function n(n, t) {
      n *= Aa, t = t * Aa / 2 + ba / 4;
      var e = n - r,
          o = e >= 0 ? 1 : -1,
          a = o * e,
          c = Math.cos(t),
          s = Math.sin(t),
          l = i * s,
          f = u * c + l * Math.cos(a),
          h = l * o * Math.sin(a);
      lc.add(Math.atan2(h, f)), r = n, u = c, i = s;
    }

    var t, e, r, u, i;
    fc.point = function (o, a) {
      fc.point = n, r = (t = o) * Aa, u = Math.cos(a = (e = a) * Aa / 2 + ba / 4), i = Math.sin(a);
    }, fc.lineEnd = function () {
      n(t, e);
    };
  }

  function le(n) {
    var t = n[0],
        e = n[1],
        r = Math.cos(e);
    return [r * Math.cos(t), r * Math.sin(t), Math.sin(e)];
  }

  function fe(n, t) {
    return n[0] * t[0] + n[1] * t[1] + n[2] * t[2];
  }

  function he(n, t) {
    return [n[1] * t[2] - n[2] * t[1], n[2] * t[0] - n[0] * t[2], n[0] * t[1] - n[1] * t[0]];
  }

  function ge(n, t) {
    n[0] += t[0], n[1] += t[1], n[2] += t[2];
  }

  function pe(n, t) {
    return [n[0] * t, n[1] * t, n[2] * t];
  }

  function ve(n) {
    var t = Math.sqrt(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);
    n[0] /= t, n[1] /= t, n[2] /= t;
  }

  function de(n) {
    return [Math.atan2(n[1], n[0]), G(n[2])];
  }

  function me(n, t) {
    return ua(n[0] - t[0]) < ka && ua(n[1] - t[1]) < ka;
  }

  function ye(n, t) {
    n *= Aa;
    var e = Math.cos(t *= Aa);
    xe(e * Math.cos(n), e * Math.sin(n), Math.sin(t));
  }

  function xe(n, t, e) {
    ++hc, pc += (n - pc) / hc, vc += (t - vc) / hc, dc += (e - dc) / hc;
  }

  function Me() {
    function n(n, u) {
      n *= Aa;
      var i = Math.cos(u *= Aa),
          o = i * Math.cos(n),
          a = i * Math.sin(n),
          c = Math.sin(u),
          s = Math.atan2(Math.sqrt((s = e * c - r * a) * s + (s = r * o - t * c) * s + (s = t * a - e * o) * s), t * o + e * a + r * c);
      gc += s, mc += s * (t + (t = o)), yc += s * (e + (e = a)), xc += s * (r + (r = c)), xe(t, e, r);
    }

    var t, e, r;

    wc.point = function (u, i) {
      u *= Aa;
      var o = Math.cos(i *= Aa);
      t = o * Math.cos(u), e = o * Math.sin(u), r = Math.sin(i), wc.point = n, xe(t, e, r);
    };
  }

  function _e() {
    wc.point = ye;
  }

  function be() {
    function n(n, t) {
      n *= Aa;
      var e = Math.cos(t *= Aa),
          o = e * Math.cos(n),
          a = e * Math.sin(n),
          c = Math.sin(t),
          s = u * c - i * a,
          l = i * o - r * c,
          f = r * a - u * o,
          h = Math.sqrt(s * s + l * l + f * f),
          g = r * o + u * a + i * c,
          p = h && -J(g) / h,
          v = Math.atan2(h, g);
      Mc += p * s, _c += p * l, bc += p * f, gc += v, mc += v * (r + (r = o)), yc += v * (u + (u = a)), xc += v * (i + (i = c)), xe(r, u, i);
    }

    var t, e, r, u, i;
    wc.point = function (o, a) {
      t = o, e = a, wc.point = n, o *= Aa;
      var c = Math.cos(a *= Aa);
      r = c * Math.cos(o), u = c * Math.sin(o), i = Math.sin(a), xe(r, u, i);
    }, wc.lineEnd = function () {
      n(t, e), wc.lineEnd = _e, wc.point = ye;
    };
  }

  function we() {
    return !0;
  }

  function Se(n, t, e, r, u) {
    var i = [],
        o = [];

    if (n.forEach(function (n) {
      if (!((t = n.length - 1) <= 0)) {
        var t,
            e = n[0],
            r = n[t];

        if (me(e, r)) {
          u.lineStart();

          for (var a = 0; t > a; ++a) {
            u.point((e = n[a])[0], e[1]);
          }

          return u.lineEnd(), void 0;
        }

        var c = new Ee(e, n, null, !0),
            s = new Ee(e, null, c, !1);
        c.o = s, i.push(c), o.push(s), c = new Ee(r, n, null, !1), s = new Ee(r, null, c, !0), c.o = s, i.push(c), o.push(s);
      }
    }), o.sort(t), ke(i), ke(o), i.length) {
      for (var a = 0, c = e, s = o.length; s > a; ++a) {
        o[a].e = c = !c;
      }

      for (var l, f, h = i[0];;) {
        for (var g = h, p = !0; g.v;) {
          if ((g = g.n) === h) return;
        }

        l = g.z, u.lineStart();

        do {
          if (g.v = g.o.v = !0, g.e) {
            if (p) for (var a = 0, s = l.length; s > a; ++a) {
              u.point((f = l[a])[0], f[1]);
            } else r(g.x, g.n.x, 1, u);
            g = g.n;
          } else {
            if (p) {
              l = g.p.z;

              for (var a = l.length - 1; a >= 0; --a) {
                u.point((f = l[a])[0], f[1]);
              }
            } else r(g.x, g.p.x, -1, u);

            g = g.p;
          }

          g = g.o, l = g.z, p = !p;
        } while (!g.v);

        u.lineEnd();
      }
    }
  }

  function ke(n) {
    if (t = n.length) {
      for (var t, e, r = 0, u = n[0]; ++r < t;) {
        u.n = e = n[r], e.p = u, u = e;
      }

      u.n = e = n[0], e.p = u;
    }
  }

  function Ee(n, t, e, r) {
    this.x = n, this.z = t, this.o = e, this.e = r, this.v = !1, this.n = this.p = null;
  }

  function Ae(n, t, e, r) {
    return function (u, i) {
      function o(t, e) {
        var r = u(t, e);
        n(t = r[0], e = r[1]) && i.point(t, e);
      }

      function a(n, t) {
        var e = u(n, t);
        d.point(e[0], e[1]);
      }

      function c() {
        y.point = a, d.lineStart();
      }

      function s() {
        y.point = o, d.lineEnd();
      }

      function l(n, t) {
        v.push([n, t]);
        var e = u(n, t);
        M.point(e[0], e[1]);
      }

      function f() {
        M.lineStart(), v = [];
      }

      function h() {
        l(v[0][0], v[0][1]), M.lineEnd();
        var n,
            t = M.clean(),
            e = x.buffer(),
            r = e.length;
        if (v.pop(), p.push(v), v = null, r) if (1 & t) {
          n = e[0];
          var u,
              r = n.length - 1,
              o = -1;

          if (r > 0) {
            for (_ || (i.polygonStart(), _ = !0), i.lineStart(); ++o < r;) {
              i.point((u = n[o])[0], u[1]);
            }

            i.lineEnd();
          }
        } else r > 1 && 2 & t && e.push(e.pop().concat(e.shift())), g.push(e.filter(Ce));
      }

      var g,
          p,
          v,
          d = t(i),
          m = u.invert(r[0], r[1]),
          y = {
        point: o,
        lineStart: c,
        lineEnd: s,
        polygonStart: function polygonStart() {
          y.point = l, y.lineStart = f, y.lineEnd = h, g = [], p = [];
        },
        polygonEnd: function polygonEnd() {
          y.point = o, y.lineStart = c, y.lineEnd = s, g = Zo.merge(g);
          var n = Le(m, p);
          g.length ? (_ || (i.polygonStart(), _ = !0), Se(g, ze, n, e, i)) : n && (_ || (i.polygonStart(), _ = !0), i.lineStart(), e(null, null, 1, i), i.lineEnd()), _ && (i.polygonEnd(), _ = !1), g = p = null;
        },
        sphere: function sphere() {
          i.polygonStart(), i.lineStart(), e(null, null, 1, i), i.lineEnd(), i.polygonEnd();
        }
      },
          x = Ne(),
          M = t(x),
          _ = !1;

      return y;
    };
  }

  function Ce(n) {
    return n.length > 1;
  }

  function Ne() {
    var n,
        t = [];
    return {
      lineStart: function lineStart() {
        t.push(n = []);
      },
      point: function point(t, e) {
        n.push([t, e]);
      },
      lineEnd: v,
      buffer: function buffer() {
        var e = t;
        return t = [], n = null, e;
      },
      rejoin: function rejoin() {
        t.length > 1 && t.push(t.pop().concat(t.shift()));
      }
    };
  }

  function ze(n, t) {
    return ((n = n.x)[0] < 0 ? n[1] - Sa - ka : Sa - n[1]) - ((t = t.x)[0] < 0 ? t[1] - Sa - ka : Sa - t[1]);
  }

  function Le(n, t) {
    var e = n[0],
        r = n[1],
        u = [Math.sin(e), -Math.cos(e), 0],
        i = 0,
        o = 0;
    lc.reset();

    for (var a = 0, c = t.length; c > a; ++a) {
      var s = t[a],
          l = s.length;
      if (l) for (var f = s[0], h = f[0], g = f[1] / 2 + ba / 4, p = Math.sin(g), v = Math.cos(g), d = 1;;) {
        d === l && (d = 0), n = s[d];

        var m = n[0],
            y = n[1] / 2 + ba / 4,
            x = Math.sin(y),
            M = Math.cos(y),
            _ = m - h,
            b = _ >= 0 ? 1 : -1,
            w = b * _,
            S = w > ba,
            k = p * x;

        if (lc.add(Math.atan2(k * b * Math.sin(w), v * M + k * Math.cos(w))), i += S ? _ + b * wa : _, S ^ h >= e ^ m >= e) {
          var E = he(le(f), le(n));
          ve(E);
          var A = he(u, E);
          ve(A);
          var C = (S ^ _ >= 0 ? -1 : 1) * G(A[2]);
          (r > C || r === C && (E[0] || E[1])) && (o += S ^ _ >= 0 ? 1 : -1);
        }

        if (!d++) break;
        h = m, p = x, v = M, f = n;
      }
    }

    return (-ka > i || ka > i && 0 > lc) ^ 1 & o;
  }

  function Te(n) {
    var t,
        e = 0 / 0,
        r = 0 / 0,
        u = 0 / 0;
    return {
      lineStart: function lineStart() {
        n.lineStart(), t = 1;
      },
      point: function point(i, o) {
        var a = i > 0 ? ba : -ba,
            c = ua(i - e);
        ua(c - ba) < ka ? (n.point(e, r = (r + o) / 2 > 0 ? Sa : -Sa), n.point(u, r), n.lineEnd(), n.lineStart(), n.point(a, r), n.point(i, r), t = 0) : u !== a && c >= ba && (ua(e - u) < ka && (e -= u * ka), ua(i - a) < ka && (i -= a * ka), r = qe(e, r, i, o), n.point(u, r), n.lineEnd(), n.lineStart(), n.point(a, r), t = 0), n.point(e = i, r = o), u = a;
      },
      lineEnd: function lineEnd() {
        n.lineEnd(), e = r = 0 / 0;
      },
      clean: function clean() {
        return 2 - t;
      }
    };
  }

  function qe(n, t, e, r) {
    var u,
        i,
        o = Math.sin(n - e);
    return ua(o) > ka ? Math.atan((Math.sin(t) * (i = Math.cos(r)) * Math.sin(e) - Math.sin(r) * (u = Math.cos(t)) * Math.sin(n)) / (u * i * o)) : (t + r) / 2;
  }

  function Re(n, t, e, r) {
    var u;
    if (null == n) u = e * Sa, r.point(-ba, u), r.point(0, u), r.point(ba, u), r.point(ba, 0), r.point(ba, -u), r.point(0, -u), r.point(-ba, -u), r.point(-ba, 0), r.point(-ba, u);else if (ua(n[0] - t[0]) > ka) {
      var i = n[0] < t[0] ? ba : -ba;
      u = e * i / 2, r.point(-i, u), r.point(0, u), r.point(i, u);
    } else r.point(t[0], t[1]);
  }

  function De(n) {
    function t(n, t) {
      return Math.cos(n) * Math.cos(t) > i;
    }

    function e(n) {
      var e, i, c, s, l;
      return {
        lineStart: function lineStart() {
          s = c = !1, l = 1;
        },
        point: function point(f, h) {
          var g,
              p = [f, h],
              v = t(f, h),
              d = o ? v ? 0 : u(f, h) : v ? u(f + (0 > f ? ba : -ba), h) : 0;
          if (!e && (s = c = v) && n.lineStart(), v !== c && (g = r(e, p), (me(e, g) || me(p, g)) && (p[0] += ka, p[1] += ka, v = t(p[0], p[1]))), v !== c) l = 0, v ? (n.lineStart(), g = r(p, e), n.point(g[0], g[1])) : (g = r(e, p), n.point(g[0], g[1]), n.lineEnd()), e = g;else if (a && e && o ^ v) {
            var m;
            d & i || !(m = r(p, e, !0)) || (l = 0, o ? (n.lineStart(), n.point(m[0][0], m[0][1]), n.point(m[1][0], m[1][1]), n.lineEnd()) : (n.point(m[1][0], m[1][1]), n.lineEnd(), n.lineStart(), n.point(m[0][0], m[0][1])));
          }
          !v || e && me(e, p) || n.point(p[0], p[1]), e = p, c = v, i = d;
        },
        lineEnd: function lineEnd() {
          c && n.lineEnd(), e = null;
        },
        clean: function clean() {
          return l | (s && c) << 1;
        }
      };
    }

    function r(n, t, e) {
      var r = le(n),
          u = le(t),
          o = [1, 0, 0],
          a = he(r, u),
          c = fe(a, a),
          s = a[0],
          l = c - s * s;
      if (!l) return !e && n;
      var f = i * c / l,
          h = -i * s / l,
          g = he(o, a),
          p = pe(o, f),
          v = pe(a, h);
      ge(p, v);
      var d = g,
          m = fe(p, d),
          y = fe(d, d),
          x = m * m - y * (fe(p, p) - 1);

      if (!(0 > x)) {
        var M = Math.sqrt(x),
            _ = pe(d, (-m - M) / y);

        if (ge(_, p), _ = de(_), !e) return _;
        var b,
            w = n[0],
            S = t[0],
            k = n[1],
            E = t[1];
        w > S && (b = w, w = S, S = b);
        var A = S - w,
            C = ua(A - ba) < ka,
            N = C || ka > A;

        if (!C && k > E && (b = k, k = E, E = b), N ? C ? k + E > 0 ^ _[1] < (ua(_[0] - w) < ka ? k : E) : k <= _[1] && _[1] <= E : A > ba ^ (w <= _[0] && _[0] <= S)) {
          var z = pe(d, (-m + M) / y);
          return ge(z, p), [_, de(z)];
        }
      }
    }

    function u(t, e) {
      var r = o ? n : ba - n,
          u = 0;
      return -r > t ? u |= 1 : t > r && (u |= 2), -r > e ? u |= 4 : e > r && (u |= 8), u;
    }

    var i = Math.cos(n),
        o = i > 0,
        a = ua(i) > ka,
        c = sr(n, 6 * Aa);
    return Ae(t, e, c, o ? [0, -n] : [-ba, n - ba]);
  }

  function Pe(n, t, e, r) {
    return function (u) {
      var i,
          o = u.a,
          a = u.b,
          c = o.x,
          s = o.y,
          l = a.x,
          f = a.y,
          h = 0,
          g = 1,
          p = l - c,
          v = f - s;

      if (i = n - c, p || !(i > 0)) {
        if (i /= p, 0 > p) {
          if (h > i) return;
          g > i && (g = i);
        } else if (p > 0) {
          if (i > g) return;
          i > h && (h = i);
        }

        if (i = e - c, p || !(0 > i)) {
          if (i /= p, 0 > p) {
            if (i > g) return;
            i > h && (h = i);
          } else if (p > 0) {
            if (h > i) return;
            g > i && (g = i);
          }

          if (i = t - s, v || !(i > 0)) {
            if (i /= v, 0 > v) {
              if (h > i) return;
              g > i && (g = i);
            } else if (v > 0) {
              if (i > g) return;
              i > h && (h = i);
            }

            if (i = r - s, v || !(0 > i)) {
              if (i /= v, 0 > v) {
                if (i > g) return;
                i > h && (h = i);
              } else if (v > 0) {
                if (h > i) return;
                g > i && (g = i);
              }

              return h > 0 && (u.a = {
                x: c + h * p,
                y: s + h * v
              }), 1 > g && (u.b = {
                x: c + g * p,
                y: s + g * v
              }), u;
            }
          }
        }
      }
    };
  }

  function Ue(n, t, e, r) {
    function u(r, u) {
      return ua(r[0] - n) < ka ? u > 0 ? 0 : 3 : ua(r[0] - e) < ka ? u > 0 ? 2 : 1 : ua(r[1] - t) < ka ? u > 0 ? 1 : 0 : u > 0 ? 3 : 2;
    }

    function i(n, t) {
      return o(n.x, t.x);
    }

    function o(n, t) {
      var e = u(n, 1),
          r = u(t, 1);
      return e !== r ? e - r : 0 === e ? t[1] - n[1] : 1 === e ? n[0] - t[0] : 2 === e ? n[1] - t[1] : t[0] - n[0];
    }

    return function (a) {
      function c(n) {
        for (var t = 0, e = d.length, r = n[1], u = 0; e > u; ++u) {
          for (var i, o = 1, a = d[u], c = a.length, s = a[0]; c > o; ++o) {
            i = a[o], s[1] <= r ? i[1] > r && W(s, i, n) > 0 && ++t : i[1] <= r && W(s, i, n) < 0 && --t, s = i;
          }
        }

        return 0 !== t;
      }

      function s(i, a, c, s) {
        var l = 0,
            f = 0;

        if (null == i || (l = u(i, c)) !== (f = u(a, c)) || o(i, a) < 0 ^ c > 0) {
          do {
            s.point(0 === l || 3 === l ? n : e, l > 1 ? r : t);
          } while ((l = (l + c + 4) % 4) !== f);
        } else s.point(a[0], a[1]);
      }

      function l(u, i) {
        return u >= n && e >= u && i >= t && r >= i;
      }

      function f(n, t) {
        l(n, t) && a.point(n, t);
      }

      function h() {
        N.point = p, d && d.push(m = []), S = !0, w = !1, _ = b = 0 / 0;
      }

      function g() {
        v && (p(y, x), M && w && A.rejoin(), v.push(A.buffer())), N.point = f, w && a.lineEnd();
      }

      function p(n, t) {
        n = Math.max(-kc, Math.min(kc, n)), t = Math.max(-kc, Math.min(kc, t));
        var e = l(n, t);
        if (d && m.push([n, t]), S) y = n, x = t, M = e, S = !1, e && (a.lineStart(), a.point(n, t));else if (e && w) a.point(n, t);else {
          var r = {
            a: {
              x: _,
              y: b
            },
            b: {
              x: n,
              y: t
            }
          };
          C(r) ? (w || (a.lineStart(), a.point(r.a.x, r.a.y)), a.point(r.b.x, r.b.y), e || a.lineEnd(), k = !1) : e && (a.lineStart(), a.point(n, t), k = !1);
        }
        _ = n, b = t, w = e;
      }

      var v,
          d,
          m,
          y,
          x,
          M,
          _,
          b,
          w,
          S,
          k,
          E = a,
          A = Ne(),
          C = Pe(n, t, e, r),
          N = {
        point: f,
        lineStart: h,
        lineEnd: g,
        polygonStart: function polygonStart() {
          a = A, v = [], d = [], k = !0;
        },
        polygonEnd: function polygonEnd() {
          a = E, v = Zo.merge(v);
          var t = c([n, r]),
              e = k && t,
              u = v.length;
          (e || u) && (a.polygonStart(), e && (a.lineStart(), s(null, null, 1, a), a.lineEnd()), u && Se(v, i, t, s, a), a.polygonEnd()), v = d = m = null;
        }
      };

      return N;
    };
  }

  function je(n, t) {
    function e(e, r) {
      return e = n(e, r), t(e[0], e[1]);
    }

    return n.invert && t.invert && (e.invert = function (e, r) {
      return e = t.invert(e, r), e && n.invert(e[0], e[1]);
    }), e;
  }

  function He(n) {
    var t = 0,
        e = ba / 3,
        r = tr(n),
        u = r(t, e);
    return u.parallels = function (n) {
      return arguments.length ? r(t = n[0] * ba / 180, e = n[1] * ba / 180) : [180 * (t / ba), 180 * (e / ba)];
    }, u;
  }

  function Fe(n, t) {
    function e(n, t) {
      var e = Math.sqrt(i - 2 * u * Math.sin(t)) / u;
      return [e * Math.sin(n *= u), o - e * Math.cos(n)];
    }

    var r = Math.sin(n),
        u = (r + Math.sin(t)) / 2,
        i = 1 + r * (2 * u - r),
        o = Math.sqrt(i) / u;
    return e.invert = function (n, t) {
      var e = o - t;
      return [Math.atan2(n, e) / u, G((i - (n * n + e * e) * u * u) / (2 * u))];
    }, e;
  }

  function Oe() {
    function n(n, t) {
      Ac += u * n - r * t, r = n, u = t;
    }

    var t, e, r, u;
    Tc.point = function (i, o) {
      Tc.point = n, t = r = i, e = u = o;
    }, Tc.lineEnd = function () {
      n(t, e);
    };
  }

  function Ye(n, t) {
    Cc > n && (Cc = n), n > zc && (zc = n), Nc > t && (Nc = t), t > Lc && (Lc = t);
  }

  function Ie() {
    function n(n, t) {
      o.push("M", n, ",", t, i);
    }

    function t(n, t) {
      o.push("M", n, ",", t), a.point = e;
    }

    function e(n, t) {
      o.push("L", n, ",", t);
    }

    function r() {
      a.point = n;
    }

    function u() {
      o.push("Z");
    }

    var i = Ze(4.5),
        o = [],
        a = {
      point: n,
      lineStart: function lineStart() {
        a.point = t;
      },
      lineEnd: r,
      polygonStart: function polygonStart() {
        a.lineEnd = u;
      },
      polygonEnd: function polygonEnd() {
        a.lineEnd = r, a.point = n;
      },
      pointRadius: function pointRadius(n) {
        return i = Ze(n), a;
      },
      result: function result() {
        if (o.length) {
          var n = o.join("");
          return o = [], n;
        }
      }
    };
    return a;
  }

  function Ze(n) {
    return "m0," + n + "a" + n + "," + n + " 0 1,1 0," + -2 * n + "a" + n + "," + n + " 0 1,1 0," + 2 * n + "z";
  }

  function Ve(n, t) {
    pc += n, vc += t, ++dc;
  }

  function Xe() {
    function n(n, r) {
      var u = n - t,
          i = r - e,
          o = Math.sqrt(u * u + i * i);
      mc += o * (t + n) / 2, yc += o * (e + r) / 2, xc += o, Ve(t = n, e = r);
    }

    var t, e;

    Rc.point = function (r, u) {
      Rc.point = n, Ve(t = r, e = u);
    };
  }

  function $e() {
    Rc.point = Ve;
  }

  function Be() {
    function n(n, t) {
      var e = n - r,
          i = t - u,
          o = Math.sqrt(e * e + i * i);
      mc += o * (r + n) / 2, yc += o * (u + t) / 2, xc += o, o = u * n - r * t, Mc += o * (r + n), _c += o * (u + t), bc += 3 * o, Ve(r = n, u = t);
    }

    var t, e, r, u;
    Rc.point = function (i, o) {
      Rc.point = n, Ve(t = r = i, e = u = o);
    }, Rc.lineEnd = function () {
      n(t, e);
    };
  }

  function We(n) {
    function t(t, e) {
      n.moveTo(t, e), n.arc(t, e, o, 0, wa);
    }

    function e(t, e) {
      n.moveTo(t, e), a.point = r;
    }

    function r(t, e) {
      n.lineTo(t, e);
    }

    function u() {
      a.point = t;
    }

    function i() {
      n.closePath();
    }

    var o = 4.5,
        a = {
      point: t,
      lineStart: function lineStart() {
        a.point = e;
      },
      lineEnd: u,
      polygonStart: function polygonStart() {
        a.lineEnd = i;
      },
      polygonEnd: function polygonEnd() {
        a.lineEnd = u, a.point = t;
      },
      pointRadius: function pointRadius(n) {
        return o = n, a;
      },
      result: v
    };
    return a;
  }

  function Je(n) {
    function t(n) {
      return (a ? r : e)(n);
    }

    function e(t) {
      return Qe(t, function (e, r) {
        e = n(e, r), t.point(e[0], e[1]);
      });
    }

    function r(t) {
      function e(e, r) {
        e = n(e, r), t.point(e[0], e[1]);
      }

      function r() {
        x = 0 / 0, S.point = i, t.lineStart();
      }

      function i(e, r) {
        var i = le([e, r]),
            o = n(e, r);
        u(x, M, y, _, b, w, x = o[0], M = o[1], y = e, _ = i[0], b = i[1], w = i[2], a, t), t.point(x, M);
      }

      function o() {
        S.point = e, t.lineEnd();
      }

      function c() {
        r(), S.point = s, S.lineEnd = l;
      }

      function s(n, t) {
        i(f = n, h = t), g = x, p = M, v = _, d = b, m = w, S.point = i;
      }

      function l() {
        u(x, M, y, _, b, w, g, p, f, v, d, m, a, t), S.lineEnd = o, o();
      }

      var f,
          h,
          g,
          p,
          v,
          d,
          m,
          y,
          x,
          M,
          _,
          b,
          w,
          S = {
        point: e,
        lineStart: r,
        lineEnd: o,
        polygonStart: function polygonStart() {
          t.polygonStart(), S.lineStart = c;
        },
        polygonEnd: function polygonEnd() {
          t.polygonEnd(), S.lineStart = r;
        }
      };

      return S;
    }

    function u(t, e, r, a, c, s, l, f, h, g, p, v, d, m) {
      var y = l - t,
          x = f - e,
          M = y * y + x * x;

      if (M > 4 * i && d--) {
        var _ = a + g,
            b = c + p,
            w = s + v,
            S = Math.sqrt(_ * _ + b * b + w * w),
            k = Math.asin(w /= S),
            E = ua(ua(w) - 1) < ka || ua(r - h) < ka ? (r + h) / 2 : Math.atan2(b, _),
            A = n(E, k),
            C = A[0],
            N = A[1],
            z = C - t,
            L = N - e,
            T = x * z - y * L;

        (T * T / M > i || ua((y * z + x * L) / M - .5) > .3 || o > a * g + c * p + s * v) && (u(t, e, r, a, c, s, C, N, E, _ /= S, b /= S, w, d, m), m.point(C, N), u(C, N, E, _, b, w, l, f, h, g, p, v, d, m));
      }
    }

    var i = .5,
        o = Math.cos(30 * Aa),
        a = 16;
    return t.precision = function (n) {
      return arguments.length ? (a = (i = n * n) > 0 && 16, t) : Math.sqrt(i);
    }, t;
  }

  function Ge(n) {
    var t = Je(function (t, e) {
      return n([t * Ca, e * Ca]);
    });
    return function (n) {
      return er(t(n));
    };
  }

  function Ke(n) {
    this.stream = n;
  }

  function Qe(n, t) {
    return {
      point: t,
      sphere: function sphere() {
        n.sphere();
      },
      lineStart: function lineStart() {
        n.lineStart();
      },
      lineEnd: function lineEnd() {
        n.lineEnd();
      },
      polygonStart: function polygonStart() {
        n.polygonStart();
      },
      polygonEnd: function polygonEnd() {
        n.polygonEnd();
      }
    };
  }

  function nr(n) {
    return tr(function () {
      return n;
    })();
  }

  function tr(n) {
    function t(n) {
      return n = a(n[0] * Aa, n[1] * Aa), [n[0] * h + c, s - n[1] * h];
    }

    function e(n) {
      return n = a.invert((n[0] - c) / h, (s - n[1]) / h), n && [n[0] * Ca, n[1] * Ca];
    }

    function r() {
      a = je(o = ir(m, y, x), i);
      var n = i(v, d);
      return c = g - n[0] * h, s = p + n[1] * h, u();
    }

    function u() {
      return l && (l.valid = !1, l = null), t;
    }

    var i,
        o,
        a,
        c,
        s,
        l,
        f = Je(function (n, t) {
      return n = i(n, t), [n[0] * h + c, s - n[1] * h];
    }),
        h = 150,
        g = 480,
        p = 250,
        v = 0,
        d = 0,
        m = 0,
        y = 0,
        x = 0,
        M = Sc,
        _ = wt,
        b = null,
        w = null;
    return t.stream = function (n) {
      return l && (l.valid = !1), l = er(M(o, f(_(n)))), l.valid = !0, l;
    }, t.clipAngle = function (n) {
      return arguments.length ? (M = null == n ? (b = n, Sc) : De((b = +n) * Aa), u()) : b;
    }, t.clipExtent = function (n) {
      return arguments.length ? (w = n, _ = n ? Ue(n[0][0], n[0][1], n[1][0], n[1][1]) : wt, u()) : w;
    }, t.scale = function (n) {
      return arguments.length ? (h = +n, r()) : h;
    }, t.translate = function (n) {
      return arguments.length ? (g = +n[0], p = +n[1], r()) : [g, p];
    }, t.center = function (n) {
      return arguments.length ? (v = n[0] % 360 * Aa, d = n[1] % 360 * Aa, r()) : [v * Ca, d * Ca];
    }, t.rotate = function (n) {
      return arguments.length ? (m = n[0] % 360 * Aa, y = n[1] % 360 * Aa, x = n.length > 2 ? n[2] % 360 * Aa : 0, r()) : [m * Ca, y * Ca, x * Ca];
    }, Zo.rebind(t, f, "precision"), function () {
      return i = n.apply(this, arguments), t.invert = i.invert && e, r();
    };
  }

  function er(n) {
    return Qe(n, function (t, e) {
      n.point(t * Aa, e * Aa);
    });
  }

  function rr(n, t) {
    return [n, t];
  }

  function ur(n, t) {
    return [n > ba ? n - wa : -ba > n ? n + wa : n, t];
  }

  function ir(n, t, e) {
    return n ? t || e ? je(ar(n), cr(t, e)) : ar(n) : t || e ? cr(t, e) : ur;
  }

  function or(n) {
    return function (t, e) {
      return t += n, [t > ba ? t - wa : -ba > t ? t + wa : t, e];
    };
  }

  function ar(n) {
    var t = or(n);
    return t.invert = or(-n), t;
  }

  function cr(n, t) {
    function e(n, t) {
      var e = Math.cos(t),
          a = Math.cos(n) * e,
          c = Math.sin(n) * e,
          s = Math.sin(t),
          l = s * r + a * u;
      return [Math.atan2(c * i - l * o, a * r - s * u), G(l * i + c * o)];
    }

    var r = Math.cos(n),
        u = Math.sin(n),
        i = Math.cos(t),
        o = Math.sin(t);
    return e.invert = function (n, t) {
      var e = Math.cos(t),
          a = Math.cos(n) * e,
          c = Math.sin(n) * e,
          s = Math.sin(t),
          l = s * i - c * o;
      return [Math.atan2(c * i + s * o, a * r + l * u), G(l * r - a * u)];
    }, e;
  }

  function sr(n, t) {
    var e = Math.cos(n),
        r = Math.sin(n);
    return function (u, i, o, a) {
      var c = o * t;
      null != u ? (u = lr(e, u), i = lr(e, i), (o > 0 ? i > u : u > i) && (u += o * wa)) : (u = n + o * wa, i = n - .5 * c);

      for (var s, l = u; o > 0 ? l > i : i > l; l -= c) {
        a.point((s = de([e, -r * Math.cos(l), -r * Math.sin(l)]))[0], s[1]);
      }
    };
  }

  function lr(n, t) {
    var e = le(t);
    e[0] -= n, ve(e);
    var r = J(-e[1]);
    return ((-e[2] < 0 ? -r : r) + 2 * Math.PI - ka) % (2 * Math.PI);
  }

  function fr(n, t, e) {
    var r = Zo.range(n, t - ka, e).concat(t);
    return function (n) {
      return r.map(function (t) {
        return [n, t];
      });
    };
  }

  function hr(n, t, e) {
    var r = Zo.range(n, t - ka, e).concat(t);
    return function (n) {
      return r.map(function (t) {
        return [t, n];
      });
    };
  }

  function gr(n) {
    return n.source;
  }

  function pr(n) {
    return n.target;
  }

  function vr(n, t, e, r) {
    var u = Math.cos(t),
        i = Math.sin(t),
        o = Math.cos(r),
        a = Math.sin(r),
        c = u * Math.cos(n),
        s = u * Math.sin(n),
        l = o * Math.cos(e),
        f = o * Math.sin(e),
        h = 2 * Math.asin(Math.sqrt(tt(r - t) + u * o * tt(e - n))),
        g = 1 / Math.sin(h),
        p = h ? function (n) {
      var t = Math.sin(n *= h) * g,
          e = Math.sin(h - n) * g,
          r = e * c + t * l,
          u = e * s + t * f,
          o = e * i + t * a;
      return [Math.atan2(u, r) * Ca, Math.atan2(o, Math.sqrt(r * r + u * u)) * Ca];
    } : function () {
      return [n * Ca, t * Ca];
    };
    return p.distance = h, p;
  }

  function dr() {
    function n(n, u) {
      var i = Math.sin(u *= Aa),
          o = Math.cos(u),
          a = ua((n *= Aa) - t),
          c = Math.cos(a);
      Dc += Math.atan2(Math.sqrt((a = o * Math.sin(a)) * a + (a = r * i - e * o * c) * a), e * i + r * o * c), t = n, e = i, r = o;
    }

    var t, e, r;
    Pc.point = function (u, i) {
      t = u * Aa, e = Math.sin(i *= Aa), r = Math.cos(i), Pc.point = n;
    }, Pc.lineEnd = function () {
      Pc.point = Pc.lineEnd = v;
    };
  }

  function mr(n, t) {
    function e(t, e) {
      var r = Math.cos(t),
          u = Math.cos(e),
          i = n(r * u);
      return [i * u * Math.sin(t), i * Math.sin(e)];
    }

    return e.invert = function (n, e) {
      var r = Math.sqrt(n * n + e * e),
          u = t(r),
          i = Math.sin(u),
          o = Math.cos(u);
      return [Math.atan2(n * i, r * o), Math.asin(r && e * i / r)];
    }, e;
  }

  function yr(n, t) {
    function e(n, t) {
      o > 0 ? -Sa + ka > t && (t = -Sa + ka) : t > Sa - ka && (t = Sa - ka);
      var e = o / Math.pow(u(t), i);
      return [e * Math.sin(i * n), o - e * Math.cos(i * n)];
    }

    var r = Math.cos(n),
        u = function u(n) {
      return Math.tan(ba / 4 + n / 2);
    },
        i = n === t ? Math.sin(n) : Math.log(r / Math.cos(t)) / Math.log(u(t) / u(n)),
        o = r * Math.pow(u(n), i) / i;

    return i ? (e.invert = function (n, t) {
      var e = o - t,
          r = B(i) * Math.sqrt(n * n + e * e);
      return [Math.atan2(n, e) / i, 2 * Math.atan(Math.pow(o / r, 1 / i)) - Sa];
    }, e) : Mr;
  }

  function xr(n, t) {
    function e(n, t) {
      var e = i - t;
      return [e * Math.sin(u * n), i - e * Math.cos(u * n)];
    }

    var r = Math.cos(n),
        u = n === t ? Math.sin(n) : (r - Math.cos(t)) / (t - n),
        i = r / u + n;
    return ua(u) < ka ? rr : (e.invert = function (n, t) {
      var e = i - t;
      return [Math.atan2(n, e) / u, i - B(u) * Math.sqrt(n * n + e * e)];
    }, e);
  }

  function Mr(n, t) {
    return [n, Math.log(Math.tan(ba / 4 + t / 2))];
  }

  function _r(n) {
    var t,
        e = nr(n),
        r = e.scale,
        u = e.translate,
        i = e.clipExtent;
    return e.scale = function () {
      var n = r.apply(e, arguments);
      return n === e ? t ? e.clipExtent(null) : e : n;
    }, e.translate = function () {
      var n = u.apply(e, arguments);
      return n === e ? t ? e.clipExtent(null) : e : n;
    }, e.clipExtent = function (n) {
      var o = i.apply(e, arguments);

      if (o === e) {
        if (t = null == n) {
          var a = ba * r(),
              c = u();
          i([[c[0] - a, c[1] - a], [c[0] + a, c[1] + a]]);
        }
      } else t && (o = null);

      return o;
    }, e.clipExtent(null);
  }

  function br(n, t) {
    return [Math.log(Math.tan(ba / 4 + t / 2)), -n];
  }

  function wr(n) {
    return n[0];
  }

  function Sr(n) {
    return n[1];
  }

  function kr(n) {
    for (var t = n.length, e = [0, 1], r = 2, u = 2; t > u; u++) {
      for (; r > 1 && W(n[e[r - 2]], n[e[r - 1]], n[u]) <= 0;) {
        --r;
      }

      e[r++] = u;
    }

    return e.slice(0, r);
  }

  function Er(n, t) {
    return n[0] - t[0] || n[1] - t[1];
  }

  function Ar(n, t, e) {
    return (e[0] - t[0]) * (n[1] - t[1]) < (e[1] - t[1]) * (n[0] - t[0]);
  }

  function Cr(n, t, e, r) {
    var u = n[0],
        i = e[0],
        o = t[0] - u,
        a = r[0] - i,
        c = n[1],
        s = e[1],
        l = t[1] - c,
        f = r[1] - s,
        h = (a * (c - s) - f * (u - i)) / (f * o - a * l);
    return [u + h * o, c + h * l];
  }

  function Nr(n) {
    var t = n[0],
        e = n[n.length - 1];
    return !(t[0] - e[0] || t[1] - e[1]);
  }

  function zr() {
    Gr(this), this.edge = this.site = this.circle = null;
  }

  function Lr(n) {
    var t = Bc.pop() || new zr();
    return t.site = n, t;
  }

  function Tr(n) {
    Yr(n), Vc.remove(n), Bc.push(n), Gr(n);
  }

  function qr(n) {
    var t = n.circle,
        e = t.x,
        r = t.cy,
        u = {
      x: e,
      y: r
    },
        i = n.P,
        o = n.N,
        a = [n];
    Tr(n);

    for (var c = i; c.circle && ua(e - c.circle.x) < ka && ua(r - c.circle.cy) < ka;) {
      i = c.P, a.unshift(c), Tr(c), c = i;
    }

    a.unshift(c), Yr(c);

    for (var s = o; s.circle && ua(e - s.circle.x) < ka && ua(r - s.circle.cy) < ka;) {
      o = s.N, a.push(s), Tr(s), s = o;
    }

    a.push(s), Yr(s);
    var l,
        f = a.length;

    for (l = 1; f > l; ++l) {
      s = a[l], c = a[l - 1], Br(s.edge, c.site, s.site, u);
    }

    c = a[0], s = a[f - 1], s.edge = Xr(c.site, s.site, null, u), Or(c), Or(s);
  }

  function Rr(n) {
    for (var t, e, r, u, i = n.x, o = n.y, a = Vc._; a;) {
      if (r = Dr(a, o) - i, r > ka) a = a.L;else {
        if (u = i - Pr(a, o), !(u > ka)) {
          r > -ka ? (t = a.P, e = a) : u > -ka ? (t = a, e = a.N) : t = e = a;
          break;
        }

        if (!a.R) {
          t = a;
          break;
        }

        a = a.R;
      }
    }

    var c = Lr(n);

    if (Vc.insert(t, c), t || e) {
      if (t === e) return Yr(t), e = Lr(t.site), Vc.insert(c, e), c.edge = e.edge = Xr(t.site, c.site), Or(t), Or(e), void 0;
      if (!e) return c.edge = Xr(t.site, c.site), void 0;
      Yr(t), Yr(e);
      var s = t.site,
          l = s.x,
          f = s.y,
          h = n.x - l,
          g = n.y - f,
          p = e.site,
          v = p.x - l,
          d = p.y - f,
          m = 2 * (h * d - g * v),
          y = h * h + g * g,
          x = v * v + d * d,
          M = {
        x: (d * y - g * x) / m + l,
        y: (h * x - v * y) / m + f
      };
      Br(e.edge, s, p, M), c.edge = Xr(s, n, null, M), e.edge = Xr(n, p, null, M), Or(t), Or(e);
    }
  }

  function Dr(n, t) {
    var e = n.site,
        r = e.x,
        u = e.y,
        i = u - t;
    if (!i) return r;
    var o = n.P;
    if (!o) return -1 / 0;
    e = o.site;
    var a = e.x,
        c = e.y,
        s = c - t;
    if (!s) return a;
    var l = a - r,
        f = 1 / i - 1 / s,
        h = l / s;
    return f ? (-h + Math.sqrt(h * h - 2 * f * (l * l / (-2 * s) - c + s / 2 + u - i / 2))) / f + r : (r + a) / 2;
  }

  function Pr(n, t) {
    var e = n.N;
    if (e) return Dr(e, t);
    var r = n.site;
    return r.y === t ? r.x : 1 / 0;
  }

  function Ur(n) {
    this.site = n, this.edges = [];
  }

  function jr(n) {
    for (var t, e, r, u, i, o, a, c, s, l, f = n[0][0], h = n[1][0], g = n[0][1], p = n[1][1], v = Zc, d = v.length; d--;) {
      if (i = v[d], i && i.prepare()) for (a = i.edges, c = a.length, o = 0; c > o;) {
        l = a[o].end(), r = l.x, u = l.y, s = a[++o % c].start(), t = s.x, e = s.y, (ua(r - t) > ka || ua(u - e) > ka) && (a.splice(o, 0, new Wr($r(i.site, l, ua(r - f) < ka && p - u > ka ? {
          x: f,
          y: ua(t - f) < ka ? e : p
        } : ua(u - p) < ka && h - r > ka ? {
          x: ua(e - p) < ka ? t : h,
          y: p
        } : ua(r - h) < ka && u - g > ka ? {
          x: h,
          y: ua(t - h) < ka ? e : g
        } : ua(u - g) < ka && r - f > ka ? {
          x: ua(e - g) < ka ? t : f,
          y: g
        } : null), i.site, null)), ++c);
      }
    }
  }

  function Hr(n, t) {
    return t.angle - n.angle;
  }

  function Fr() {
    Gr(this), this.x = this.y = this.arc = this.site = this.cy = null;
  }

  function Or(n) {
    var t = n.P,
        e = n.N;

    if (t && e) {
      var r = t.site,
          u = n.site,
          i = e.site;

      if (r !== i) {
        var o = u.x,
            a = u.y,
            c = r.x - o,
            s = r.y - a,
            l = i.x - o,
            f = i.y - a,
            h = 2 * (c * f - s * l);

        if (!(h >= -Ea)) {
          var g = c * c + s * s,
              p = l * l + f * f,
              v = (f * g - s * p) / h,
              d = (c * p - l * g) / h,
              f = d + a,
              m = Wc.pop() || new Fr();
          m.arc = n, m.site = u, m.x = v + o, m.y = f + Math.sqrt(v * v + d * d), m.cy = f, n.circle = m;

          for (var y = null, x = $c._; x;) {
            if (m.y < x.y || m.y === x.y && m.x <= x.x) {
              if (!x.L) {
                y = x.P;
                break;
              }

              x = x.L;
            } else {
              if (!x.R) {
                y = x;
                break;
              }

              x = x.R;
            }
          }

          $c.insert(y, m), y || (Xc = m);
        }
      }
    }
  }

  function Yr(n) {
    var t = n.circle;
    t && (t.P || (Xc = t.N), $c.remove(t), Wc.push(t), Gr(t), n.circle = null);
  }

  function Ir(n) {
    for (var t, e = Ic, r = Pe(n[0][0], n[0][1], n[1][0], n[1][1]), u = e.length; u--;) {
      t = e[u], (!Zr(t, n) || !r(t) || ua(t.a.x - t.b.x) < ka && ua(t.a.y - t.b.y) < ka) && (t.a = t.b = null, e.splice(u, 1));
    }
  }

  function Zr(n, t) {
    var e = n.b;
    if (e) return !0;
    var r,
        u,
        i = n.a,
        o = t[0][0],
        a = t[1][0],
        c = t[0][1],
        s = t[1][1],
        l = n.l,
        f = n.r,
        h = l.x,
        g = l.y,
        p = f.x,
        v = f.y,
        d = (h + p) / 2,
        m = (g + v) / 2;

    if (v === g) {
      if (o > d || d >= a) return;

      if (h > p) {
        if (i) {
          if (i.y >= s) return;
        } else i = {
          x: d,
          y: c
        };

        e = {
          x: d,
          y: s
        };
      } else {
        if (i) {
          if (i.y < c) return;
        } else i = {
          x: d,
          y: s
        };

        e = {
          x: d,
          y: c
        };
      }
    } else if (r = (h - p) / (v - g), u = m - r * d, -1 > r || r > 1) {
      if (h > p) {
        if (i) {
          if (i.y >= s) return;
        } else i = {
          x: (c - u) / r,
          y: c
        };

        e = {
          x: (s - u) / r,
          y: s
        };
      } else {
        if (i) {
          if (i.y < c) return;
        } else i = {
          x: (s - u) / r,
          y: s
        };

        e = {
          x: (c - u) / r,
          y: c
        };
      }
    } else if (v > g) {
      if (i) {
        if (i.x >= a) return;
      } else i = {
        x: o,
        y: r * o + u
      };

      e = {
        x: a,
        y: r * a + u
      };
    } else {
      if (i) {
        if (i.x < o) return;
      } else i = {
        x: a,
        y: r * a + u
      };

      e = {
        x: o,
        y: r * o + u
      };
    }

    return n.a = i, n.b = e, !0;
  }

  function Vr(n, t) {
    this.l = n, this.r = t, this.a = this.b = null;
  }

  function Xr(n, t, e, r) {
    var u = new Vr(n, t);
    return Ic.push(u), e && Br(u, n, t, e), r && Br(u, t, n, r), Zc[n.i].edges.push(new Wr(u, n, t)), Zc[t.i].edges.push(new Wr(u, t, n)), u;
  }

  function $r(n, t, e) {
    var r = new Vr(n, null);
    return r.a = t, r.b = e, Ic.push(r), r;
  }

  function Br(n, t, e, r) {
    n.a || n.b ? n.l === e ? n.b = r : n.a = r : (n.a = r, n.l = t, n.r = e);
  }

  function Wr(n, t, e) {
    var r = n.a,
        u = n.b;
    this.edge = n, this.site = t, this.angle = e ? Math.atan2(e.y - t.y, e.x - t.x) : n.l === t ? Math.atan2(u.x - r.x, r.y - u.y) : Math.atan2(r.x - u.x, u.y - r.y);
  }

  function Jr() {
    this._ = null;
  }

  function Gr(n) {
    n.U = n.C = n.L = n.R = n.P = n.N = null;
  }

  function Kr(n, t) {
    var e = t,
        r = t.R,
        u = e.U;
    u ? u.L === e ? u.L = r : u.R = r : n._ = r, r.U = u, e.U = r, e.R = r.L, e.R && (e.R.U = e), r.L = e;
  }

  function Qr(n, t) {
    var e = t,
        r = t.L,
        u = e.U;
    u ? u.L === e ? u.L = r : u.R = r : n._ = r, r.U = u, e.U = r, e.L = r.R, e.L && (e.L.U = e), r.R = e;
  }

  function nu(n) {
    for (; n.L;) {
      n = n.L;
    }

    return n;
  }

  function tu(n, t) {
    var e,
        r,
        u,
        i = n.sort(eu).pop();

    for (Ic = [], Zc = new Array(n.length), Vc = new Jr(), $c = new Jr();;) {
      if (u = Xc, i && (!u || i.y < u.y || i.y === u.y && i.x < u.x)) (i.x !== e || i.y !== r) && (Zc[i.i] = new Ur(i), Rr(i), e = i.x, r = i.y), i = n.pop();else {
        if (!u) break;
        qr(u.arc);
      }
    }

    t && (Ir(t), jr(t));
    var o = {
      cells: Zc,
      edges: Ic
    };
    return Vc = $c = Ic = Zc = null, o;
  }

  function eu(n, t) {
    return t.y - n.y || t.x - n.x;
  }

  function ru(n, t, e) {
    return (n.x - e.x) * (t.y - n.y) - (n.x - t.x) * (e.y - n.y);
  }

  function uu(n) {
    return n.x;
  }

  function iu(n) {
    return n.y;
  }

  function ou() {
    return {
      leaf: !0,
      nodes: [],
      point: null,
      x: null,
      y: null
    };
  }

  function au(n, t, e, r, u, i) {
    if (!n(t, e, r, u, i)) {
      var o = .5 * (e + u),
          a = .5 * (r + i),
          c = t.nodes;
      c[0] && au(n, c[0], e, r, o, a), c[1] && au(n, c[1], o, r, u, a), c[2] && au(n, c[2], e, a, o, i), c[3] && au(n, c[3], o, a, u, i);
    }
  }

  function cu(n, t) {
    n = Zo.rgb(n), t = Zo.rgb(t);
    var e = n.r,
        r = n.g,
        u = n.b,
        i = t.r - e,
        o = t.g - r,
        a = t.b - u;
    return function (n) {
      return "#" + dt(Math.round(e + i * n)) + dt(Math.round(r + o * n)) + dt(Math.round(u + a * n));
    };
  }

  function su(n, t) {
    var e,
        r = {},
        u = {};

    for (e in n) {
      e in t ? r[e] = hu(n[e], t[e]) : u[e] = n[e];
    }

    for (e in t) {
      e in n || (u[e] = t[e]);
    }

    return function (n) {
      for (e in r) {
        u[e] = r[e](n);
      }

      return u;
    };
  }

  function lu(n, t) {
    return t -= n = +n, function (e) {
      return n + t * e;
    };
  }

  function fu(n, t) {
    var e,
        r,
        u,
        i = Gc.lastIndex = Kc.lastIndex = 0,
        o = -1,
        a = [],
        c = [];

    for (n += "", t += ""; (e = Gc.exec(n)) && (r = Kc.exec(t));) {
      (u = r.index) > i && (u = t.substring(i, u), a[o] ? a[o] += u : a[++o] = u), (e = e[0]) === (r = r[0]) ? a[o] ? a[o] += r : a[++o] = r : (a[++o] = null, c.push({
        i: o,
        x: lu(e, r)
      })), i = Kc.lastIndex;
    }

    return i < t.length && (u = t.substring(i), a[o] ? a[o] += u : a[++o] = u), a.length < 2 ? c[0] ? (t = c[0].x, function (n) {
      return t(n) + "";
    }) : function () {
      return t;
    } : (t = c.length, function (n) {
      for (var e, r = 0; t > r; ++r) {
        a[(e = c[r]).i] = e.x(n);
      }

      return a.join("");
    });
  }

  function hu(n, t) {
    for (var e, r = Zo.interpolators.length; --r >= 0 && !(e = Zo.interpolators[r](n, t));) {
      ;
    }

    return e;
  }

  function gu(n, t) {
    var e,
        r = [],
        u = [],
        i = n.length,
        o = t.length,
        a = Math.min(n.length, t.length);

    for (e = 0; a > e; ++e) {
      r.push(hu(n[e], t[e]));
    }

    for (; i > e; ++e) {
      u[e] = n[e];
    }

    for (; o > e; ++e) {
      u[e] = t[e];
    }

    return function (n) {
      for (e = 0; a > e; ++e) {
        u[e] = r[e](n);
      }

      return u;
    };
  }

  function pu(n) {
    return function (t) {
      return 0 >= t ? 0 : t >= 1 ? 1 : n(t);
    };
  }

  function vu(n) {
    return function (t) {
      return 1 - n(1 - t);
    };
  }

  function du(n) {
    return function (t) {
      return .5 * (.5 > t ? n(2 * t) : 2 - n(2 - 2 * t));
    };
  }

  function mu(n) {
    return n * n;
  }

  function yu(n) {
    return n * n * n;
  }

  function xu(n) {
    if (0 >= n) return 0;
    if (n >= 1) return 1;
    var t = n * n,
        e = t * n;
    return 4 * (.5 > n ? e : 3 * (n - t) + e - .75);
  }

  function Mu(n) {
    return function (t) {
      return Math.pow(t, n);
    };
  }

  function _u(n) {
    return 1 - Math.cos(n * Sa);
  }

  function bu(n) {
    return Math.pow(2, 10 * (n - 1));
  }

  function wu(n) {
    return 1 - Math.sqrt(1 - n * n);
  }

  function Su(n, t) {
    var e;
    return arguments.length < 2 && (t = .45), arguments.length ? e = t / wa * Math.asin(1 / n) : (n = 1, e = t / 4), function (r) {
      return 1 + n * Math.pow(2, -10 * r) * Math.sin((r - e) * wa / t);
    };
  }

  function ku(n) {
    return n || (n = 1.70158), function (t) {
      return t * t * ((n + 1) * t - n);
    };
  }

  function Eu(n) {
    return 1 / 2.75 > n ? 7.5625 * n * n : 2 / 2.75 > n ? 7.5625 * (n -= 1.5 / 2.75) * n + .75 : 2.5 / 2.75 > n ? 7.5625 * (n -= 2.25 / 2.75) * n + .9375 : 7.5625 * (n -= 2.625 / 2.75) * n + .984375;
  }

  function Au(n, t) {
    n = Zo.hcl(n), t = Zo.hcl(t);
    var e = n.h,
        r = n.c,
        u = n.l,
        i = t.h - e,
        o = t.c - r,
        a = t.l - u;
    return isNaN(o) && (o = 0, r = isNaN(r) ? t.c : r), isNaN(i) ? (i = 0, e = isNaN(e) ? t.h : e) : i > 180 ? i -= 360 : -180 > i && (i += 360), function (n) {
      return ot(e + i * n, r + o * n, u + a * n) + "";
    };
  }

  function Cu(n, t) {
    n = Zo.hsl(n), t = Zo.hsl(t);
    var e = n.h,
        r = n.s,
        u = n.l,
        i = t.h - e,
        o = t.s - r,
        a = t.l - u;
    return isNaN(o) && (o = 0, r = isNaN(r) ? t.s : r), isNaN(i) ? (i = 0, e = isNaN(e) ? t.h : e) : i > 180 ? i -= 360 : -180 > i && (i += 360), function (n) {
      return ut(e + i * n, r + o * n, u + a * n) + "";
    };
  }

  function Nu(n, t) {
    n = Zo.lab(n), t = Zo.lab(t);
    var e = n.l,
        r = n.a,
        u = n.b,
        i = t.l - e,
        o = t.a - r,
        a = t.b - u;
    return function (n) {
      return ct(e + i * n, r + o * n, u + a * n) + "";
    };
  }

  function zu(n, t) {
    return t -= n, function (e) {
      return Math.round(n + t * e);
    };
  }

  function Lu(n) {
    var t = [n.a, n.b],
        e = [n.c, n.d],
        r = qu(t),
        u = Tu(t, e),
        i = qu(Ru(e, t, -u)) || 0;
    t[0] * e[1] < e[0] * t[1] && (t[0] *= -1, t[1] *= -1, r *= -1, u *= -1), this.rotate = (r ? Math.atan2(t[1], t[0]) : Math.atan2(-e[0], e[1])) * Ca, this.translate = [n.e, n.f], this.scale = [r, i], this.skew = i ? Math.atan2(u, i) * Ca : 0;
  }

  function Tu(n, t) {
    return n[0] * t[0] + n[1] * t[1];
  }

  function qu(n) {
    var t = Math.sqrt(Tu(n, n));
    return t && (n[0] /= t, n[1] /= t), t;
  }

  function Ru(n, t, e) {
    return n[0] += e * t[0], n[1] += e * t[1], n;
  }

  function Du(n, t) {
    var e,
        r = [],
        u = [],
        i = Zo.transform(n),
        o = Zo.transform(t),
        a = i.translate,
        c = o.translate,
        s = i.rotate,
        l = o.rotate,
        f = i.skew,
        h = o.skew,
        g = i.scale,
        p = o.scale;
    return a[0] != c[0] || a[1] != c[1] ? (r.push("translate(", null, ",", null, ")"), u.push({
      i: 1,
      x: lu(a[0], c[0])
    }, {
      i: 3,
      x: lu(a[1], c[1])
    })) : c[0] || c[1] ? r.push("translate(" + c + ")") : r.push(""), s != l ? (s - l > 180 ? l += 360 : l - s > 180 && (s += 360), u.push({
      i: r.push(r.pop() + "rotate(", null, ")") - 2,
      x: lu(s, l)
    })) : l && r.push(r.pop() + "rotate(" + l + ")"), f != h ? u.push({
      i: r.push(r.pop() + "skewX(", null, ")") - 2,
      x: lu(f, h)
    }) : h && r.push(r.pop() + "skewX(" + h + ")"), g[0] != p[0] || g[1] != p[1] ? (e = r.push(r.pop() + "scale(", null, ",", null, ")"), u.push({
      i: e - 4,
      x: lu(g[0], p[0])
    }, {
      i: e - 2,
      x: lu(g[1], p[1])
    })) : (1 != p[0] || 1 != p[1]) && r.push(r.pop() + "scale(" + p + ")"), e = u.length, function (n) {
      for (var t, i = -1; ++i < e;) {
        r[(t = u[i]).i] = t.x(n);
      }

      return r.join("");
    };
  }

  function Pu(n, t) {
    return t = t - (n = +n) ? 1 / (t - n) : 0, function (e) {
      return (e - n) * t;
    };
  }

  function Uu(n, t) {
    return t = t - (n = +n) ? 1 / (t - n) : 0, function (e) {
      return Math.max(0, Math.min(1, (e - n) * t));
    };
  }

  function ju(n) {
    for (var t = n.source, e = n.target, r = Fu(t, e), u = [t]; t !== r;) {
      t = t.parent, u.push(t);
    }

    for (var i = u.length; e !== r;) {
      u.splice(i, 0, e), e = e.parent;
    }

    return u;
  }

  function Hu(n) {
    for (var t = [], e = n.parent; null != e;) {
      t.push(n), n = e, e = e.parent;
    }

    return t.push(n), t;
  }

  function Fu(n, t) {
    if (n === t) return n;

    for (var e = Hu(n), r = Hu(t), u = e.pop(), i = r.pop(), o = null; u === i;) {
      o = u, u = e.pop(), i = r.pop();
    }

    return o;
  }

  function Ou(n) {
    n.fixed |= 2;
  }

  function Yu(n) {
    n.fixed &= -7;
  }

  function Iu(n) {
    n.fixed |= 4, n.px = n.x, n.py = n.y;
  }

  function Zu(n) {
    n.fixed &= -5;
  }

  function Vu(n, t, e) {
    var r = 0,
        u = 0;
    if (n.charge = 0, !n.leaf) for (var i, o = n.nodes, a = o.length, c = -1; ++c < a;) {
      i = o[c], null != i && (Vu(i, t, e), n.charge += i.charge, r += i.charge * i.cx, u += i.charge * i.cy);
    }

    if (n.point) {
      n.leaf || (n.point.x += Math.random() - .5, n.point.y += Math.random() - .5);
      var s = t * e[n.point.index];
      n.charge += n.pointCharge = s, r += s * n.point.x, u += s * n.point.y;
    }

    n.cx = r / n.charge, n.cy = u / n.charge;
  }

  function Xu(n, t) {
    return Zo.rebind(n, t, "sort", "children", "value"), n.nodes = n, n.links = Ku, n;
  }

  function $u(n, t) {
    for (var e = [n]; null != (n = e.pop());) {
      if (t(n), (u = n.children) && (r = u.length)) for (var r, u; --r >= 0;) {
        e.push(u[r]);
      }
    }
  }

  function Bu(n, t) {
    for (var e = [n], r = []; null != (n = e.pop());) {
      if (r.push(n), (i = n.children) && (u = i.length)) for (var u, i, o = -1; ++o < u;) {
        e.push(i[o]);
      }
    }

    for (; null != (n = r.pop());) {
      t(n);
    }
  }

  function Wu(n) {
    return n.children;
  }

  function Ju(n) {
    return n.value;
  }

  function Gu(n, t) {
    return t.value - n.value;
  }

  function Ku(n) {
    return Zo.merge(n.map(function (n) {
      return (n.children || []).map(function (t) {
        return {
          source: n,
          target: t
        };
      });
    }));
  }

  function Qu(n) {
    return n.x;
  }

  function ni(n) {
    return n.y;
  }

  function ti(n, t, e) {
    n.y0 = t, n.y = e;
  }

  function ei(n) {
    return Zo.range(n.length);
  }

  function ri(n) {
    for (var t = -1, e = n[0].length, r = []; ++t < e;) {
      r[t] = 0;
    }

    return r;
  }

  function ui(n) {
    for (var t, e = 1, r = 0, u = n[0][1], i = n.length; i > e; ++e) {
      (t = n[e][1]) > u && (r = e, u = t);
    }

    return r;
  }

  function ii(n) {
    return n.reduce(oi, 0);
  }

  function oi(n, t) {
    return n + t[1];
  }

  function ai(n, t) {
    return ci(n, Math.ceil(Math.log(t.length) / Math.LN2 + 1));
  }

  function ci(n, t) {
    for (var e = -1, r = +n[0], u = (n[1] - r) / t, i = []; ++e <= t;) {
      i[e] = u * e + r;
    }

    return i;
  }

  function si(n) {
    return [Zo.min(n), Zo.max(n)];
  }

  function li(n, t) {
    return n.value - t.value;
  }

  function fi(n, t) {
    var e = n._pack_next;
    n._pack_next = t, t._pack_prev = n, t._pack_next = e, e._pack_prev = t;
  }

  function hi(n, t) {
    n._pack_next = t, t._pack_prev = n;
  }

  function gi(n, t) {
    var e = t.x - n.x,
        r = t.y - n.y,
        u = n.r + t.r;
    return .999 * u * u > e * e + r * r;
  }

  function pi(n) {
    function t(n) {
      l = Math.min(n.x - n.r, l), f = Math.max(n.x + n.r, f), h = Math.min(n.y - n.r, h), g = Math.max(n.y + n.r, g);
    }

    if ((e = n.children) && (s = e.length)) {
      var e,
          r,
          u,
          i,
          o,
          a,
          c,
          s,
          l = 1 / 0,
          f = -1 / 0,
          h = 1 / 0,
          g = -1 / 0;
      if (e.forEach(vi), r = e[0], r.x = -r.r, r.y = 0, t(r), s > 1 && (u = e[1], u.x = u.r, u.y = 0, t(u), s > 2)) for (i = e[2], yi(r, u, i), t(i), fi(r, i), r._pack_prev = i, fi(i, u), u = r._pack_next, o = 3; s > o; o++) {
        yi(r, u, i = e[o]);
        var p = 0,
            v = 1,
            d = 1;

        for (a = u._pack_next; a !== u; a = a._pack_next, v++) {
          if (gi(a, i)) {
            p = 1;
            break;
          }
        }

        if (1 == p) for (c = r._pack_prev; c !== a._pack_prev && !gi(c, i); c = c._pack_prev, d++) {
          ;
        }
        p ? (d > v || v == d && u.r < r.r ? hi(r, u = a) : hi(r = c, u), o--) : (fi(r, i), u = i, t(i));
      }
      var m = (l + f) / 2,
          y = (h + g) / 2,
          x = 0;

      for (o = 0; s > o; o++) {
        i = e[o], i.x -= m, i.y -= y, x = Math.max(x, i.r + Math.sqrt(i.x * i.x + i.y * i.y));
      }

      n.r = x, e.forEach(di);
    }
  }

  function vi(n) {
    n._pack_next = n._pack_prev = n;
  }

  function di(n) {
    delete n._pack_next, delete n._pack_prev;
  }

  function mi(n, t, e, r) {
    var u = n.children;
    if (n.x = t += r * n.x, n.y = e += r * n.y, n.r *= r, u) for (var i = -1, o = u.length; ++i < o;) {
      mi(u[i], t, e, r);
    }
  }

  function yi(n, t, e) {
    var r = n.r + e.r,
        u = t.x - n.x,
        i = t.y - n.y;

    if (r && (u || i)) {
      var o = t.r + e.r,
          a = u * u + i * i;
      o *= o, r *= r;
      var c = .5 + (r - o) / (2 * a),
          s = Math.sqrt(Math.max(0, 2 * o * (r + a) - (r -= a) * r - o * o)) / (2 * a);
      e.x = n.x + c * u + s * i, e.y = n.y + c * i - s * u;
    } else e.x = n.x + r, e.y = n.y;
  }

  function xi(n, t) {
    return n.parent == t.parent ? 1 : 2;
  }

  function Mi(n) {
    var t = n.children;
    return t.length ? t[0] : n.t;
  }

  function _i(n) {
    var t,
        e = n.children;
    return (t = e.length) ? e[t - 1] : n.t;
  }

  function bi(n, t, e) {
    var r = e / (t.i - n.i);
    t.c -= r, t.s += e, n.c += r, t.z += e, t.m += e;
  }

  function wi(n) {
    for (var t, e = 0, r = 0, u = n.children, i = u.length; --i >= 0;) {
      t = u[i], t.z += e, t.m += e, e += t.s + (r += t.c);
    }
  }

  function Si(n, t, e) {
    return n.a.parent === t.parent ? n.a : e;
  }

  function ki(n) {
    return 1 + Zo.max(n, function (n) {
      return n.y;
    });
  }

  function Ei(n) {
    return n.reduce(function (n, t) {
      return n + t.x;
    }, 0) / n.length;
  }

  function Ai(n) {
    var t = n.children;
    return t && t.length ? Ai(t[0]) : n;
  }

  function Ci(n) {
    var t,
        e = n.children;
    return e && (t = e.length) ? Ci(e[t - 1]) : n;
  }

  function Ni(n) {
    return {
      x: n.x,
      y: n.y,
      dx: n.dx,
      dy: n.dy
    };
  }

  function zi(n, t) {
    var e = n.x + t[3],
        r = n.y + t[0],
        u = n.dx - t[1] - t[3],
        i = n.dy - t[0] - t[2];
    return 0 > u && (e += u / 2, u = 0), 0 > i && (r += i / 2, i = 0), {
      x: e,
      y: r,
      dx: u,
      dy: i
    };
  }

  function Li(n) {
    var t = n[0],
        e = n[n.length - 1];
    return e > t ? [t, e] : [e, t];
  }

  function Ti(n) {
    return n.rangeExtent ? n.rangeExtent() : Li(n.range());
  }

  function qi(n, t, e, r) {
    var u = e(n[0], n[1]),
        i = r(t[0], t[1]);
    return function (n) {
      return i(u(n));
    };
  }

  function Ri(n, t) {
    var e,
        r = 0,
        u = n.length - 1,
        i = n[r],
        o = n[u];
    return i > o && (e = r, r = u, u = e, e = i, i = o, o = e), n[r] = t.floor(i), n[u] = t.ceil(o), n;
  }

  function Di(n) {
    return n ? {
      floor: function floor(t) {
        return Math.floor(t / n) * n;
      },
      ceil: function ceil(t) {
        return Math.ceil(t / n) * n;
      }
    } : ss;
  }

  function Pi(n, t, e, r) {
    var u = [],
        i = [],
        o = 0,
        a = Math.min(n.length, t.length) - 1;

    for (n[a] < n[0] && (n = n.slice().reverse(), t = t.slice().reverse()); ++o <= a;) {
      u.push(e(n[o - 1], n[o])), i.push(r(t[o - 1], t[o]));
    }

    return function (t) {
      var e = Zo.bisect(n, t, 1, a) - 1;
      return i[e](u[e](t));
    };
  }

  function Ui(n, t, e, r) {
    function u() {
      var u = Math.min(n.length, t.length) > 2 ? Pi : qi,
          c = r ? Uu : Pu;
      return o = u(n, t, c, e), a = u(t, n, c, hu), i;
    }

    function i(n) {
      return o(n);
    }

    var o, a;
    return i.invert = function (n) {
      return a(n);
    }, i.domain = function (t) {
      return arguments.length ? (n = t.map(Number), u()) : n;
    }, i.range = function (n) {
      return arguments.length ? (t = n, u()) : t;
    }, i.rangeRound = function (n) {
      return i.range(n).interpolate(zu);
    }, i.clamp = function (n) {
      return arguments.length ? (r = n, u()) : r;
    }, i.interpolate = function (n) {
      return arguments.length ? (e = n, u()) : e;
    }, i.ticks = function (t) {
      return Oi(n, t);
    }, i.tickFormat = function (t, e) {
      return Yi(n, t, e);
    }, i.nice = function (t) {
      return Hi(n, t), u();
    }, i.copy = function () {
      return Ui(n, t, e, r);
    }, u();
  }

  function ji(n, t) {
    return Zo.rebind(n, t, "range", "rangeRound", "interpolate", "clamp");
  }

  function Hi(n, t) {
    return Ri(n, Di(Fi(n, t)[2]));
  }

  function Fi(n, t) {
    null == t && (t = 10);
    var e = Li(n),
        r = e[1] - e[0],
        u = Math.pow(10, Math.floor(Math.log(r / t) / Math.LN10)),
        i = t / r * u;
    return .15 >= i ? u *= 10 : .35 >= i ? u *= 5 : .75 >= i && (u *= 2), e[0] = Math.ceil(e[0] / u) * u, e[1] = Math.floor(e[1] / u) * u + .5 * u, e[2] = u, e;
  }

  function Oi(n, t) {
    return Zo.range.apply(Zo, Fi(n, t));
  }

  function Yi(n, t, e) {
    var r = Fi(n, t);

    if (e) {
      var u = Ga.exec(e);

      if (u.shift(), "s" === u[8]) {
        var i = Zo.formatPrefix(Math.max(ua(r[0]), ua(r[1])));
        return u[7] || (u[7] = "." + Ii(i.scale(r[2]))), u[8] = "f", e = Zo.format(u.join("")), function (n) {
          return e(i.scale(n)) + i.symbol;
        };
      }

      u[7] || (u[7] = "." + Zi(u[8], r)), e = u.join("");
    } else e = ",." + Ii(r[2]) + "f";

    return Zo.format(e);
  }

  function Ii(n) {
    return -Math.floor(Math.log(n) / Math.LN10 + .01);
  }

  function Zi(n, t) {
    var e = Ii(t[2]);
    return n in ls ? Math.abs(e - Ii(Math.max(ua(t[0]), ua(t[1])))) + +("e" !== n) : e - 2 * ("%" === n);
  }

  function Vi(n, t, e, r) {
    function u(n) {
      return (e ? Math.log(0 > n ? 0 : n) : -Math.log(n > 0 ? 0 : -n)) / Math.log(t);
    }

    function i(n) {
      return e ? Math.pow(t, n) : -Math.pow(t, -n);
    }

    function o(t) {
      return n(u(t));
    }

    return o.invert = function (t) {
      return i(n.invert(t));
    }, o.domain = function (t) {
      return arguments.length ? (e = t[0] >= 0, n.domain((r = t.map(Number)).map(u)), o) : r;
    }, o.base = function (e) {
      return arguments.length ? (t = +e, n.domain(r.map(u)), o) : t;
    }, o.nice = function () {
      var t = Ri(r.map(u), e ? Math : hs);
      return n.domain(t), r = t.map(i), o;
    }, o.ticks = function () {
      var n = Li(r),
          o = [],
          a = n[0],
          c = n[1],
          s = Math.floor(u(a)),
          l = Math.ceil(u(c)),
          f = t % 1 ? 2 : t;

      if (isFinite(l - s)) {
        if (e) {
          for (; l > s; s++) {
            for (var h = 1; f > h; h++) {
              o.push(i(s) * h);
            }
          }

          o.push(i(s));
        } else for (o.push(i(s)); s++ < l;) {
          for (var h = f - 1; h > 0; h--) {
            o.push(i(s) * h);
          }
        }

        for (s = 0; o[s] < a; s++) {
          ;
        }

        for (l = o.length; o[l - 1] > c; l--) {
          ;
        }

        o = o.slice(s, l);
      }

      return o;
    }, o.tickFormat = function (n, t) {
      if (!arguments.length) return fs;
      arguments.length < 2 ? t = fs : "function" != typeof t && (t = Zo.format(t));
      var r,
          a = Math.max(.1, n / o.ticks().length),
          c = e ? (r = 1e-12, Math.ceil) : (r = -1e-12, Math.floor);
      return function (n) {
        return n / i(c(u(n) + r)) <= a ? t(n) : "";
      };
    }, o.copy = function () {
      return Vi(n.copy(), t, e, r);
    }, ji(o, n);
  }

  function Xi(n, t, e) {
    function r(t) {
      return n(u(t));
    }

    var u = $i(t),
        i = $i(1 / t);
    return r.invert = function (t) {
      return i(n.invert(t));
    }, r.domain = function (t) {
      return arguments.length ? (n.domain((e = t.map(Number)).map(u)), r) : e;
    }, r.ticks = function (n) {
      return Oi(e, n);
    }, r.tickFormat = function (n, t) {
      return Yi(e, n, t);
    }, r.nice = function (n) {
      return r.domain(Hi(e, n));
    }, r.exponent = function (o) {
      return arguments.length ? (u = $i(t = o), i = $i(1 / t), n.domain(e.map(u)), r) : t;
    }, r.copy = function () {
      return Xi(n.copy(), t, e);
    }, ji(r, n);
  }

  function $i(n) {
    return function (t) {
      return 0 > t ? -Math.pow(-t, n) : Math.pow(t, n);
    };
  }

  function Bi(n, t) {
    function e(e) {
      return i[((u.get(e) || ("range" === t.t ? u.set(e, n.push(e)) : 0 / 0)) - 1) % i.length];
    }

    function r(t, e) {
      return Zo.range(n.length).map(function (n) {
        return t + e * n;
      });
    }

    var u, i, a;
    return e.domain = function (r) {
      if (!arguments.length) return n;
      n = [], u = new o();

      for (var i, a = -1, c = r.length; ++a < c;) {
        u.has(i = r[a]) || u.set(i, n.push(i));
      }

      return e[t.t].apply(e, t.a);
    }, e.range = function (n) {
      return arguments.length ? (i = n, a = 0, t = {
        t: "range",
        a: arguments
      }, e) : i;
    }, e.rangePoints = function (u, o) {
      arguments.length < 2 && (o = 0);
      var c = u[0],
          s = u[1],
          l = (s - c) / (Math.max(1, n.length - 1) + o);
      return i = r(n.length < 2 ? (c + s) / 2 : c + l * o / 2, l), a = 0, t = {
        t: "rangePoints",
        a: arguments
      }, e;
    }, e.rangeBands = function (u, o, c) {
      arguments.length < 2 && (o = 0), arguments.length < 3 && (c = o);
      var s = u[1] < u[0],
          l = u[s - 0],
          f = u[1 - s],
          h = (f - l) / (n.length - o + 2 * c);
      return i = r(l + h * c, h), s && i.reverse(), a = h * (1 - o), t = {
        t: "rangeBands",
        a: arguments
      }, e;
    }, e.rangeRoundBands = function (u, o, c) {
      arguments.length < 2 && (o = 0), arguments.length < 3 && (c = o);
      var s = u[1] < u[0],
          l = u[s - 0],
          f = u[1 - s],
          h = Math.floor((f - l) / (n.length - o + 2 * c)),
          g = f - l - (n.length - o) * h;
      return i = r(l + Math.round(g / 2), h), s && i.reverse(), a = Math.round(h * (1 - o)), t = {
        t: "rangeRoundBands",
        a: arguments
      }, e;
    }, e.rangeBand = function () {
      return a;
    }, e.rangeExtent = function () {
      return Li(t.a[0]);
    }, e.copy = function () {
      return Bi(n, t);
    }, e.domain(n);
  }

  function Wi(e, r) {
    function u() {
      var n = 0,
          t = r.length;

      for (o = []; ++n < t;) {
        o[n - 1] = Zo.quantile(e, n / t);
      }

      return i;
    }

    function i(n) {
      return isNaN(n = +n) ? void 0 : r[Zo.bisect(o, n)];
    }

    var o;
    return i.domain = function (r) {
      return arguments.length ? (e = r.filter(t).sort(n), u()) : e;
    }, i.range = function (n) {
      return arguments.length ? (r = n, u()) : r;
    }, i.quantiles = function () {
      return o;
    }, i.invertExtent = function (n) {
      return n = r.indexOf(n), 0 > n ? [0 / 0, 0 / 0] : [n > 0 ? o[n - 1] : e[0], n < o.length ? o[n] : e[e.length - 1]];
    }, i.copy = function () {
      return Wi(e, r);
    }, u();
  }

  function Ji(n, t, e) {
    function r(t) {
      return e[Math.max(0, Math.min(o, Math.floor(i * (t - n))))];
    }

    function u() {
      return i = e.length / (t - n), o = e.length - 1, r;
    }

    var i, o;
    return r.domain = function (e) {
      return arguments.length ? (n = +e[0], t = +e[e.length - 1], u()) : [n, t];
    }, r.range = function (n) {
      return arguments.length ? (e = n, u()) : e;
    }, r.invertExtent = function (t) {
      return t = e.indexOf(t), t = 0 > t ? 0 / 0 : t / i + n, [t, t + 1 / i];
    }, r.copy = function () {
      return Ji(n, t, e);
    }, u();
  }

  function Gi(n, t) {
    function e(e) {
      return e >= e ? t[Zo.bisect(n, e)] : void 0;
    }

    return e.domain = function (t) {
      return arguments.length ? (n = t, e) : n;
    }, e.range = function (n) {
      return arguments.length ? (t = n, e) : t;
    }, e.invertExtent = function (e) {
      return e = t.indexOf(e), [n[e - 1], n[e]];
    }, e.copy = function () {
      return Gi(n, t);
    }, e;
  }

  function Ki(n) {
    function t(n) {
      return +n;
    }

    return t.invert = t, t.domain = t.range = function (e) {
      return arguments.length ? (n = e.map(t), t) : n;
    }, t.ticks = function (t) {
      return Oi(n, t);
    }, t.tickFormat = function (t, e) {
      return Yi(n, t, e);
    }, t.copy = function () {
      return Ki(n);
    }, t;
  }

  function Qi(n) {
    return n.innerRadius;
  }

  function no(n) {
    return n.outerRadius;
  }

  function to(n) {
    return n.startAngle;
  }

  function eo(n) {
    return n.endAngle;
  }

  function ro(n) {
    function t(t) {
      function o() {
        s.push("M", i(n(l), a));
      }

      for (var c, s = [], l = [], f = -1, h = t.length, g = bt(e), p = bt(r); ++f < h;) {
        u.call(this, c = t[f], f) ? l.push([+g.call(this, c, f), +p.call(this, c, f)]) : l.length && (o(), l = []);
      }

      return l.length && o(), s.length ? s.join("") : null;
    }

    var e = wr,
        r = Sr,
        u = we,
        i = uo,
        o = i.key,
        a = .7;
    return t.x = function (n) {
      return arguments.length ? (e = n, t) : e;
    }, t.y = function (n) {
      return arguments.length ? (r = n, t) : r;
    }, t.defined = function (n) {
      return arguments.length ? (u = n, t) : u;
    }, t.interpolate = function (n) {
      return arguments.length ? (o = "function" == typeof n ? i = n : (i = xs.get(n) || uo).key, t) : o;
    }, t.tension = function (n) {
      return arguments.length ? (a = n, t) : a;
    }, t;
  }

  function uo(n) {
    return n.join("L");
  }

  function io(n) {
    return uo(n) + "Z";
  }

  function oo(n) {
    for (var t = 0, e = n.length, r = n[0], u = [r[0], ",", r[1]]; ++t < e;) {
      u.push("H", (r[0] + (r = n[t])[0]) / 2, "V", r[1]);
    }

    return e > 1 && u.push("H", r[0]), u.join("");
  }

  function ao(n) {
    for (var t = 0, e = n.length, r = n[0], u = [r[0], ",", r[1]]; ++t < e;) {
      u.push("V", (r = n[t])[1], "H", r[0]);
    }

    return u.join("");
  }

  function co(n) {
    for (var t = 0, e = n.length, r = n[0], u = [r[0], ",", r[1]]; ++t < e;) {
      u.push("H", (r = n[t])[0], "V", r[1]);
    }

    return u.join("");
  }

  function so(n, t) {
    return n.length < 4 ? uo(n) : n[1] + ho(n.slice(1, n.length - 1), go(n, t));
  }

  function lo(n, t) {
    return n.length < 3 ? uo(n) : n[0] + ho((n.push(n[0]), n), go([n[n.length - 2]].concat(n, [n[1]]), t));
  }

  function fo(n, t) {
    return n.length < 3 ? uo(n) : n[0] + ho(n, go(n, t));
  }

  function ho(n, t) {
    if (t.length < 1 || n.length != t.length && n.length != t.length + 2) return uo(n);
    var e = n.length != t.length,
        r = "",
        u = n[0],
        i = n[1],
        o = t[0],
        a = o,
        c = 1;

    if (e && (r += "Q" + (i[0] - 2 * o[0] / 3) + "," + (i[1] - 2 * o[1] / 3) + "," + i[0] + "," + i[1], u = n[1], c = 2), t.length > 1) {
      a = t[1], i = n[c], c++, r += "C" + (u[0] + o[0]) + "," + (u[1] + o[1]) + "," + (i[0] - a[0]) + "," + (i[1] - a[1]) + "," + i[0] + "," + i[1];

      for (var s = 2; s < t.length; s++, c++) {
        i = n[c], a = t[s], r += "S" + (i[0] - a[0]) + "," + (i[1] - a[1]) + "," + i[0] + "," + i[1];
      }
    }

    if (e) {
      var l = n[c];
      r += "Q" + (i[0] + 2 * a[0] / 3) + "," + (i[1] + 2 * a[1] / 3) + "," + l[0] + "," + l[1];
    }

    return r;
  }

  function go(n, t) {
    for (var e, r = [], u = (1 - t) / 2, i = n[0], o = n[1], a = 1, c = n.length; ++a < c;) {
      e = i, i = o, o = n[a], r.push([u * (o[0] - e[0]), u * (o[1] - e[1])]);
    }

    return r;
  }

  function po(n) {
    if (n.length < 3) return uo(n);
    var t = 1,
        e = n.length,
        r = n[0],
        u = r[0],
        i = r[1],
        o = [u, u, u, (r = n[1])[0]],
        a = [i, i, i, r[1]],
        c = [u, ",", i, "L", xo(bs, o), ",", xo(bs, a)];

    for (n.push(n[e - 1]); ++t <= e;) {
      r = n[t], o.shift(), o.push(r[0]), a.shift(), a.push(r[1]), Mo(c, o, a);
    }

    return n.pop(), c.push("L", r), c.join("");
  }

  function vo(n) {
    if (n.length < 4) return uo(n);

    for (var t, e = [], r = -1, u = n.length, i = [0], o = [0]; ++r < 3;) {
      t = n[r], i.push(t[0]), o.push(t[1]);
    }

    for (e.push(xo(bs, i) + "," + xo(bs, o)), --r; ++r < u;) {
      t = n[r], i.shift(), i.push(t[0]), o.shift(), o.push(t[1]), Mo(e, i, o);
    }

    return e.join("");
  }

  function mo(n) {
    for (var t, e, r = -1, u = n.length, i = u + 4, o = [], a = []; ++r < 4;) {
      e = n[r % u], o.push(e[0]), a.push(e[1]);
    }

    for (t = [xo(bs, o), ",", xo(bs, a)], --r; ++r < i;) {
      e = n[r % u], o.shift(), o.push(e[0]), a.shift(), a.push(e[1]), Mo(t, o, a);
    }

    return t.join("");
  }

  function yo(n, t) {
    var e = n.length - 1;
    if (e) for (var r, u, i = n[0][0], o = n[0][1], a = n[e][0] - i, c = n[e][1] - o, s = -1; ++s <= e;) {
      r = n[s], u = s / e, r[0] = t * r[0] + (1 - t) * (i + u * a), r[1] = t * r[1] + (1 - t) * (o + u * c);
    }
    return po(n);
  }

  function xo(n, t) {
    return n[0] * t[0] + n[1] * t[1] + n[2] * t[2] + n[3] * t[3];
  }

  function Mo(n, t, e) {
    n.push("C", xo(Ms, t), ",", xo(Ms, e), ",", xo(_s, t), ",", xo(_s, e), ",", xo(bs, t), ",", xo(bs, e));
  }

  function _o(n, t) {
    return (t[1] - n[1]) / (t[0] - n[0]);
  }

  function bo(n) {
    for (var t = 0, e = n.length - 1, r = [], u = n[0], i = n[1], o = r[0] = _o(u, i); ++t < e;) {
      r[t] = (o + (o = _o(u = i, i = n[t + 1]))) / 2;
    }

    return r[t] = o, r;
  }

  function wo(n) {
    for (var t, e, r, u, i = [], o = bo(n), a = -1, c = n.length - 1; ++a < c;) {
      t = _o(n[a], n[a + 1]), ua(t) < ka ? o[a] = o[a + 1] = 0 : (e = o[a] / t, r = o[a + 1] / t, u = e * e + r * r, u > 9 && (u = 3 * t / Math.sqrt(u), o[a] = u * e, o[a + 1] = u * r));
    }

    for (a = -1; ++a <= c;) {
      u = (n[Math.min(c, a + 1)][0] - n[Math.max(0, a - 1)][0]) / (6 * (1 + o[a] * o[a])), i.push([u || 0, o[a] * u || 0]);
    }

    return i;
  }

  function So(n) {
    return n.length < 3 ? uo(n) : n[0] + ho(n, wo(n));
  }

  function ko(n) {
    for (var t, e, r, u = -1, i = n.length; ++u < i;) {
      t = n[u], e = t[0], r = t[1] + ms, t[0] = e * Math.cos(r), t[1] = e * Math.sin(r);
    }

    return n;
  }

  function Eo(n) {
    function t(t) {
      function c() {
        v.push("M", a(n(m), f), l, s(n(d.reverse()), f), "Z");
      }

      for (var h, g, p, v = [], d = [], m = [], y = -1, x = t.length, M = bt(e), _ = bt(u), b = e === r ? function () {
        return g;
      } : bt(r), w = u === i ? function () {
        return p;
      } : bt(i); ++y < x;) {
        o.call(this, h = t[y], y) ? (d.push([g = +M.call(this, h, y), p = +_.call(this, h, y)]), m.push([+b.call(this, h, y), +w.call(this, h, y)])) : d.length && (c(), d = [], m = []);
      }

      return d.length && c(), v.length ? v.join("") : null;
    }

    var e = wr,
        r = wr,
        u = 0,
        i = Sr,
        o = we,
        a = uo,
        c = a.key,
        s = a,
        l = "L",
        f = .7;
    return t.x = function (n) {
      return arguments.length ? (e = r = n, t) : r;
    }, t.x0 = function (n) {
      return arguments.length ? (e = n, t) : e;
    }, t.x1 = function (n) {
      return arguments.length ? (r = n, t) : r;
    }, t.y = function (n) {
      return arguments.length ? (u = i = n, t) : i;
    }, t.y0 = function (n) {
      return arguments.length ? (u = n, t) : u;
    }, t.y1 = function (n) {
      return arguments.length ? (i = n, t) : i;
    }, t.defined = function (n) {
      return arguments.length ? (o = n, t) : o;
    }, t.interpolate = function (n) {
      return arguments.length ? (c = "function" == typeof n ? a = n : (a = xs.get(n) || uo).key, s = a.reverse || a, l = a.closed ? "M" : "L", t) : c;
    }, t.tension = function (n) {
      return arguments.length ? (f = n, t) : f;
    }, t;
  }

  function Ao(n) {
    return n.radius;
  }

  function Co(n) {
    return [n.x, n.y];
  }

  function No(n) {
    return function () {
      var t = n.apply(this, arguments),
          e = t[0],
          r = t[1] + ms;
      return [e * Math.cos(r), e * Math.sin(r)];
    };
  }

  function zo() {
    return 64;
  }

  function Lo() {
    return "circle";
  }

  function To(n) {
    var t = Math.sqrt(n / ba);
    return "M0," + t + "A" + t + "," + t + " 0 1,1 0," + -t + "A" + t + "," + t + " 0 1,1 0," + t + "Z";
  }

  function qo(n, t) {
    return sa(n, Cs), n.id = t, n;
  }

  function Ro(n, t, e, r) {
    var u = n.id;
    return P(n, "function" == typeof e ? function (n, i, o) {
      n.__transition__[u].tween.set(t, r(e.call(n, n.__data__, i, o)));
    } : (e = r(e), function (n) {
      n.__transition__[u].tween.set(t, e);
    }));
  }

  function Do(n) {
    return null == n && (n = ""), function () {
      this.textContent = n;
    };
  }

  function Po(n, t, e, r) {
    var u = n.__transition__ || (n.__transition__ = {
      active: 0,
      count: 0
    }),
        i = u[e];

    if (!i) {
      var a = r.time;
      i = u[e] = {
        tween: new o(),
        time: a,
        ease: r.ease,
        delay: r.delay,
        duration: r.duration
      }, ++u.count, Zo.timer(function (r) {
        function o(r) {
          return u.active > e ? s() : (u.active = e, i.event && i.event.start.call(n, l, t), i.tween.forEach(function (e, r) {
            (r = r.call(n, l, t)) && v.push(r);
          }), Zo.timer(function () {
            return p.c = c(r || 1) ? we : c, 1;
          }, 0, a), void 0);
        }

        function c(r) {
          if (u.active !== e) return s();

          for (var o = r / g, a = f(o), c = v.length; c > 0;) {
            v[--c].call(n, a);
          }

          return o >= 1 ? (i.event && i.event.end.call(n, l, t), s()) : void 0;
        }

        function s() {
          return --u.count ? delete u[e] : delete n.__transition__, 1;
        }

        var l = n.__data__,
            f = i.ease,
            h = i.delay,
            g = i.duration,
            p = Ba,
            v = [];
        return p.t = h + a, r >= h ? o(r - h) : (p.c = o, void 0);
      }, 0, a);
    }
  }

  function Uo(n, t) {
    n.attr("transform", function (n) {
      return "translate(" + t(n) + ",0)";
    });
  }

  function jo(n, t) {
    n.attr("transform", function (n) {
      return "translate(0," + t(n) + ")";
    });
  }

  function Ho(n) {
    return n.toISOString();
  }

  function Fo(n, t, e) {
    function r(t) {
      return n(t);
    }

    function u(n, e) {
      var r = n[1] - n[0],
          u = r / e,
          i = Zo.bisect(Us, u);
      return i == Us.length ? [t.year, Fi(n.map(function (n) {
        return n / 31536e6;
      }), e)[2]] : i ? t[u / Us[i - 1] < Us[i] / u ? i - 1 : i] : [Fs, Fi(n, e)[2]];
    }

    return r.invert = function (t) {
      return Oo(n.invert(t));
    }, r.domain = function (t) {
      return arguments.length ? (n.domain(t), r) : n.domain().map(Oo);
    }, r.nice = function (n, t) {
      function e(e) {
        return !isNaN(e) && !n.range(e, Oo(+e + 1), t).length;
      }

      var i = r.domain(),
          o = Li(i),
          a = null == n ? u(o, 10) : "number" == typeof n && u(o, n);
      return a && (n = a[0], t = a[1]), r.domain(Ri(i, t > 1 ? {
        floor: function floor(t) {
          for (; e(t = n.floor(t));) {
            t = Oo(t - 1);
          }

          return t;
        },
        ceil: function ceil(t) {
          for (; e(t = n.ceil(t));) {
            t = Oo(+t + 1);
          }

          return t;
        }
      } : n));
    }, r.ticks = function (n, t) {
      var e = Li(r.domain()),
          i = null == n ? u(e, 10) : "number" == typeof n ? u(e, n) : !n.range && [{
        range: n
      }, t];
      return i && (n = i[0], t = i[1]), n.range(e[0], Oo(+e[1] + 1), 1 > t ? 1 : t);
    }, r.tickFormat = function () {
      return e;
    }, r.copy = function () {
      return Fo(n.copy(), t, e);
    }, ji(r, n);
  }

  function Oo(n) {
    return new Date(n);
  }

  function Yo(n) {
    return JSON.parse(n.responseText);
  }

  function Io(n) {
    var t = $o.createRange();
    return t.selectNode($o.body), t.createContextualFragment(n.responseText);
  }

  var Zo = {
    version: "3.4.11"
  };
  Date.now || (Date.now = function () {
    return +new Date();
  });

  var Vo = [].slice,
      Xo = function Xo(n) {
    return Vo.call(n);
  },
      $o = document,
      Bo = $o.documentElement,
      Wo = window;

  try {
    Xo(Bo.childNodes)[0].nodeType;
  } catch (Jo) {
    Xo = function Xo(n) {
      for (var t = n.length, e = new Array(t); t--;) {
        e[t] = n[t];
      }

      return e;
    };
  }

  try {
    $o.createElement("div").style.setProperty("opacity", 0, "");
  } catch (Go) {
    var Ko = Wo.Element.prototype,
        Qo = Ko.setAttribute,
        na = Ko.setAttributeNS,
        ta = Wo.CSSStyleDeclaration.prototype,
        ea = ta.setProperty;
    Ko.setAttribute = function (n, t) {
      Qo.call(this, n, t + "");
    }, Ko.setAttributeNS = function (n, t, e) {
      na.call(this, n, t, e + "");
    }, ta.setProperty = function (n, t, e) {
      ea.call(this, n, t + "", e);
    };
  }

  Zo.ascending = n, Zo.descending = function (n, t) {
    return n > t ? -1 : t > n ? 1 : t >= n ? 0 : 0 / 0;
  }, Zo.min = function (n, t) {
    var e,
        r,
        u = -1,
        i = n.length;

    if (1 === arguments.length) {
      for (; ++u < i && !(null != (e = n[u]) && e >= e);) {
        e = void 0;
      }

      for (; ++u < i;) {
        null != (r = n[u]) && e > r && (e = r);
      }
    } else {
      for (; ++u < i && !(null != (e = t.call(n, n[u], u)) && e >= e);) {
        e = void 0;
      }

      for (; ++u < i;) {
        null != (r = t.call(n, n[u], u)) && e > r && (e = r);
      }
    }

    return e;
  }, Zo.max = function (n, t) {
    var e,
        r,
        u = -1,
        i = n.length;

    if (1 === arguments.length) {
      for (; ++u < i && !(null != (e = n[u]) && e >= e);) {
        e = void 0;
      }

      for (; ++u < i;) {
        null != (r = n[u]) && r > e && (e = r);
      }
    } else {
      for (; ++u < i && !(null != (e = t.call(n, n[u], u)) && e >= e);) {
        e = void 0;
      }

      for (; ++u < i;) {
        null != (r = t.call(n, n[u], u)) && r > e && (e = r);
      }
    }

    return e;
  }, Zo.extent = function (n, t) {
    var e,
        r,
        u,
        i = -1,
        o = n.length;

    if (1 === arguments.length) {
      for (; ++i < o && !(null != (e = u = n[i]) && e >= e);) {
        e = u = void 0;
      }

      for (; ++i < o;) {
        null != (r = n[i]) && (e > r && (e = r), r > u && (u = r));
      }
    } else {
      for (; ++i < o && !(null != (e = u = t.call(n, n[i], i)) && e >= e);) {
        e = void 0;
      }

      for (; ++i < o;) {
        null != (r = t.call(n, n[i], i)) && (e > r && (e = r), r > u && (u = r));
      }
    }

    return [e, u];
  }, Zo.sum = function (n, t) {
    var e,
        r = 0,
        u = n.length,
        i = -1;
    if (1 === arguments.length) for (; ++i < u;) {
      isNaN(e = +n[i]) || (r += e);
    } else for (; ++i < u;) {
      isNaN(e = +t.call(n, n[i], i)) || (r += e);
    }
    return r;
  }, Zo.mean = function (n, e) {
    var r,
        u = 0,
        i = n.length,
        o = -1,
        a = i;
    if (1 === arguments.length) for (; ++o < i;) {
      t(r = n[o]) ? u += r : --a;
    } else for (; ++o < i;) {
      t(r = e.call(n, n[o], o)) ? u += r : --a;
    }
    return a ? u / a : void 0;
  }, Zo.quantile = function (n, t) {
    var e = (n.length - 1) * t + 1,
        r = Math.floor(e),
        u = +n[r - 1],
        i = e - r;
    return i ? u + i * (n[r] - u) : u;
  }, Zo.median = function (e, r) {
    return arguments.length > 1 && (e = e.map(r)), e = e.filter(t), e.length ? Zo.quantile(e.sort(n), .5) : void 0;
  };
  var ra = e(n);
  Zo.bisectLeft = ra.left, Zo.bisect = Zo.bisectRight = ra.right, Zo.bisector = function (t) {
    return e(1 === t.length ? function (e, r) {
      return n(t(e), r);
    } : t);
  }, Zo.shuffle = function (n) {
    for (var t, e, r = n.length; r;) {
      e = 0 | Math.random() * r--, t = n[r], n[r] = n[e], n[e] = t;
    }

    return n;
  }, Zo.permute = function (n, t) {
    for (var e = t.length, r = new Array(e); e--;) {
      r[e] = n[t[e]];
    }

    return r;
  }, Zo.pairs = function (n) {
    for (var t, e = 0, r = n.length - 1, u = n[0], i = new Array(0 > r ? 0 : r); r > e;) {
      i[e] = [t = u, u = n[++e]];
    }

    return i;
  }, Zo.zip = function () {
    if (!(u = arguments.length)) return [];

    for (var n = -1, t = Zo.min(arguments, r), e = new Array(t); ++n < t;) {
      for (var u, i = -1, o = e[n] = new Array(u); ++i < u;) {
        o[i] = arguments[i][n];
      }
    }

    return e;
  }, Zo.transpose = function (n) {
    return Zo.zip.apply(Zo, n);
  }, Zo.keys = function (n) {
    var t = [];

    for (var e in n) {
      t.push(e);
    }

    return t;
  }, Zo.values = function (n) {
    var t = [];

    for (var e in n) {
      t.push(n[e]);
    }

    return t;
  }, Zo.entries = function (n) {
    var t = [];

    for (var e in n) {
      t.push({
        key: e,
        value: n[e]
      });
    }

    return t;
  }, Zo.merge = function (n) {
    for (var t, e, r, u = n.length, i = -1, o = 0; ++i < u;) {
      o += n[i].length;
    }

    for (e = new Array(o); --u >= 0;) {
      for (r = n[u], t = r.length; --t >= 0;) {
        e[--o] = r[t];
      }
    }

    return e;
  };
  var ua = Math.abs;
  Zo.range = function (n, t, e) {
    if (arguments.length < 3 && (e = 1, arguments.length < 2 && (t = n, n = 0)), 1 / 0 === (t - n) / e) throw new Error("infinite range");
    var r,
        i = [],
        o = u(ua(e)),
        a = -1;
    if (n *= o, t *= o, e *= o, 0 > e) for (; (r = n + e * ++a) > t;) {
      i.push(r / o);
    } else for (; (r = n + e * ++a) < t;) {
      i.push(r / o);
    }
    return i;
  }, Zo.map = function (n) {
    var t = new o();
    if (n instanceof o) n.forEach(function (n, e) {
      t.set(n, e);
    });else for (var e in n) {
      t.set(e, n[e]);
    }
    return t;
  }, i(o, {
    has: a,
    get: function get(n) {
      return this[ia + n];
    },
    set: function set(n, t) {
      return this[ia + n] = t;
    },
    remove: c,
    keys: s,
    values: function values() {
      var n = [];
      return this.forEach(function (t, e) {
        n.push(e);
      }), n;
    },
    entries: function entries() {
      var n = [];
      return this.forEach(function (t, e) {
        n.push({
          key: t,
          value: e
        });
      }), n;
    },
    size: l,
    empty: f,
    forEach: function forEach(n) {
      for (var t in this) {
        t.charCodeAt(0) === oa && n.call(this, t.substring(1), this[t]);
      }
    }
  });
  var ia = "\x00",
      oa = ia.charCodeAt(0);
  Zo.nest = function () {
    function n(t, a, c) {
      if (c >= i.length) return r ? r.call(u, a) : e ? a.sort(e) : a;

      for (var s, l, f, h, g = -1, p = a.length, v = i[c++], d = new o(); ++g < p;) {
        (h = d.get(s = v(l = a[g]))) ? h.push(l) : d.set(s, [l]);
      }

      return t ? (l = t(), f = function f(e, r) {
        l.set(e, n(t, r, c));
      }) : (l = {}, f = function f(e, r) {
        l[e] = n(t, r, c);
      }), d.forEach(f), l;
    }

    function t(n, e) {
      if (e >= i.length) return n;
      var r = [],
          u = a[e++];
      return n.forEach(function (n, u) {
        r.push({
          key: n,
          values: t(u, e)
        });
      }), u ? r.sort(function (n, t) {
        return u(n.key, t.key);
      }) : r;
    }

    var e,
        r,
        u = {},
        i = [],
        a = [];
    return u.map = function (t, e) {
      return n(e, t, 0);
    }, u.entries = function (e) {
      return t(n(Zo.map, e, 0), 0);
    }, u.key = function (n) {
      return i.push(n), u;
    }, u.sortKeys = function (n) {
      return a[i.length - 1] = n, u;
    }, u.sortValues = function (n) {
      return e = n, u;
    }, u.rollup = function (n) {
      return r = n, u;
    }, u;
  }, Zo.set = function (n) {
    var t = new h();
    if (n) for (var e = 0, r = n.length; r > e; ++e) {
      t.add(n[e]);
    }
    return t;
  }, i(h, {
    has: a,
    add: function add(n) {
      return this[ia + n] = !0, n;
    },
    remove: function remove(n) {
      return n = ia + n, n in this && delete this[n];
    },
    values: s,
    size: l,
    empty: f,
    forEach: function forEach(n) {
      for (var t in this) {
        t.charCodeAt(0) === oa && n.call(this, t.substring(1));
      }
    }
  }), Zo.behavior = {}, Zo.rebind = function (n, t) {
    for (var e, r = 1, u = arguments.length; ++r < u;) {
      n[e = arguments[r]] = g(n, t, t[e]);
    }

    return n;
  };
  var aa = ["webkit", "ms", "moz", "Moz", "o", "O"];
  Zo.dispatch = function () {
    for (var n = new d(), t = -1, e = arguments.length; ++t < e;) {
      n[arguments[t]] = m(n);
    }

    return n;
  }, d.prototype.on = function (n, t) {
    var e = n.indexOf("."),
        r = "";
    if (e >= 0 && (r = n.substring(e + 1), n = n.substring(0, e)), n) return arguments.length < 2 ? this[n].on(r) : this[n].on(r, t);

    if (2 === arguments.length) {
      if (null == t) for (n in this) {
        this.hasOwnProperty(n) && this[n].on(r, null);
      }
      return this;
    }
  }, Zo.event = null, Zo.requote = function (n) {
    return n.replace(ca, "\\$&");
  };

  var ca = /[\\\^\$\*\+\?\|\[\]\(\)\.\{\}]/g,
      sa = {}.__proto__ ? function (n, t) {
    n.__proto__ = t;
  } : function (n, t) {
    for (var e in t) {
      n[e] = t[e];
    }
  },
      la = function la(n, t) {
    return t.querySelector(n);
  },
      fa = function fa(n, t) {
    return t.querySelectorAll(n);
  },
      ha = Bo.matches || Bo[p(Bo, "matchesSelector")],
      ga = function ga(n, t) {
    return ha.call(n, t);
  };

  "function" == typeof Sizzle && (la = function la(n, t) {
    return Sizzle(n, t)[0] || null;
  }, fa = Sizzle, ga = Sizzle.matchesSelector), Zo.selection = function () {
    return ma;
  };
  var pa = Zo.selection.prototype = [];
  pa.select = function (n) {
    var t,
        e,
        r,
        u,
        i = [];
    n = b(n);

    for (var o = -1, a = this.length; ++o < a;) {
      i.push(t = []), t.parentNode = (r = this[o]).parentNode;

      for (var c = -1, s = r.length; ++c < s;) {
        (u = r[c]) ? (t.push(e = n.call(u, u.__data__, c, o)), e && "__data__" in u && (e.__data__ = u.__data__)) : t.push(null);
      }
    }

    return _(i);
  }, pa.selectAll = function (n) {
    var t,
        e,
        r = [];
    n = w(n);

    for (var u = -1, i = this.length; ++u < i;) {
      for (var o = this[u], a = -1, c = o.length; ++a < c;) {
        (e = o[a]) && (r.push(t = Xo(n.call(e, e.__data__, a, u))), t.parentNode = e);
      }
    }

    return _(r);
  };
  var va = {
    svg: "http://www.w3.org/2000/svg",
    xhtml: "http://www.w3.org/1999/xhtml",
    xlink: "http://www.w3.org/1999/xlink",
    xml: "http://www.w3.org/XML/1998/namespace",
    xmlns: "http://www.w3.org/2000/xmlns/"
  };
  Zo.ns = {
    prefix: va,
    qualify: function qualify(n) {
      var t = n.indexOf(":"),
          e = n;
      return t >= 0 && (e = n.substring(0, t), n = n.substring(t + 1)), va.hasOwnProperty(e) ? {
        space: va[e],
        local: n
      } : n;
    }
  }, pa.attr = function (n, t) {
    if (arguments.length < 2) {
      if ("string" == typeof n) {
        var e = this.node();
        return n = Zo.ns.qualify(n), n.local ? e.getAttributeNS(n.space, n.local) : e.getAttribute(n);
      }

      for (t in n) {
        this.each(S(t, n[t]));
      }

      return this;
    }

    return this.each(S(n, t));
  }, pa.classed = function (n, t) {
    if (arguments.length < 2) {
      if ("string" == typeof n) {
        var e = this.node(),
            r = (n = A(n)).length,
            u = -1;

        if (t = e.classList) {
          for (; ++u < r;) {
            if (!t.contains(n[u])) return !1;
          }
        } else for (t = e.getAttribute("class"); ++u < r;) {
          if (!E(n[u]).test(t)) return !1;
        }

        return !0;
      }

      for (t in n) {
        this.each(C(t, n[t]));
      }

      return this;
    }

    return this.each(C(n, t));
  }, pa.style = function (n, t, e) {
    var r = arguments.length;

    if (3 > r) {
      if ("string" != typeof n) {
        2 > r && (t = "");

        for (e in n) {
          this.each(z(e, n[e], t));
        }

        return this;
      }

      if (2 > r) return Wo.getComputedStyle(this.node(), null).getPropertyValue(n);
      e = "";
    }

    return this.each(z(n, t, e));
  }, pa.property = function (n, t) {
    if (arguments.length < 2) {
      if ("string" == typeof n) return this.node()[n];

      for (t in n) {
        this.each(L(t, n[t]));
      }

      return this;
    }

    return this.each(L(n, t));
  }, pa.text = function (n) {
    return arguments.length ? this.each("function" == typeof n ? function () {
      var t = n.apply(this, arguments);
      this.textContent = null == t ? "" : t;
    } : null == n ? function () {
      this.textContent = "";
    } : function () {
      this.textContent = n;
    }) : this.node().textContent;
  }, pa.html = function (n) {
    return arguments.length ? this.each("function" == typeof n ? function () {
      var t = n.apply(this, arguments);
      this.innerHTML = null == t ? "" : t;
    } : null == n ? function () {
      this.innerHTML = "";
    } : function () {
      this.innerHTML = n;
    }) : this.node().innerHTML;
  }, pa.append = function (n) {
    return n = T(n), this.select(function () {
      return this.appendChild(n.apply(this, arguments));
    });
  }, pa.insert = function (n, t) {
    return n = T(n), t = b(t), this.select(function () {
      return this.insertBefore(n.apply(this, arguments), t.apply(this, arguments) || null);
    });
  }, pa.remove = function () {
    return this.each(function () {
      var n = this.parentNode;
      n && n.removeChild(this);
    });
  }, pa.data = function (n, t) {
    function e(n, e) {
      var r,
          u,
          i,
          a = n.length,
          f = e.length,
          h = Math.min(a, f),
          g = new Array(f),
          p = new Array(f),
          v = new Array(a);

      if (t) {
        var d,
            m = new o(),
            y = new o(),
            x = [];

        for (r = -1; ++r < a;) {
          d = t.call(u = n[r], u.__data__, r), m.has(d) ? v[r] = u : m.set(d, u), x.push(d);
        }

        for (r = -1; ++r < f;) {
          d = t.call(e, i = e[r], r), (u = m.get(d)) ? (g[r] = u, u.__data__ = i) : y.has(d) || (p[r] = q(i)), y.set(d, i), m.remove(d);
        }

        for (r = -1; ++r < a;) {
          m.has(x[r]) && (v[r] = n[r]);
        }
      } else {
        for (r = -1; ++r < h;) {
          u = n[r], i = e[r], u ? (u.__data__ = i, g[r] = u) : p[r] = q(i);
        }

        for (; f > r; ++r) {
          p[r] = q(e[r]);
        }

        for (; a > r; ++r) {
          v[r] = n[r];
        }
      }

      p.update = g, p.parentNode = g.parentNode = v.parentNode = n.parentNode, c.push(p), s.push(g), l.push(v);
    }

    var r,
        u,
        i = -1,
        a = this.length;

    if (!arguments.length) {
      for (n = new Array(a = (r = this[0]).length); ++i < a;) {
        (u = r[i]) && (n[i] = u.__data__);
      }

      return n;
    }

    var c = U([]),
        s = _([]),
        l = _([]);

    if ("function" == typeof n) for (; ++i < a;) {
      e(r = this[i], n.call(r, r.parentNode.__data__, i));
    } else for (; ++i < a;) {
      e(r = this[i], n);
    }
    return s.enter = function () {
      return c;
    }, s.exit = function () {
      return l;
    }, s;
  }, pa.datum = function (n) {
    return arguments.length ? this.property("__data__", n) : this.property("__data__");
  }, pa.filter = function (n) {
    var t,
        e,
        r,
        u = [];
    "function" != typeof n && (n = R(n));

    for (var i = 0, o = this.length; o > i; i++) {
      u.push(t = []), t.parentNode = (e = this[i]).parentNode;

      for (var a = 0, c = e.length; c > a; a++) {
        (r = e[a]) && n.call(r, r.__data__, a, i) && t.push(r);
      }
    }

    return _(u);
  }, pa.order = function () {
    for (var n = -1, t = this.length; ++n < t;) {
      for (var e, r = this[n], u = r.length - 1, i = r[u]; --u >= 0;) {
        (e = r[u]) && (i && i !== e.nextSibling && i.parentNode.insertBefore(e, i), i = e);
      }
    }

    return this;
  }, pa.sort = function (n) {
    n = D.apply(this, arguments);

    for (var t = -1, e = this.length; ++t < e;) {
      this[t].sort(n);
    }

    return this.order();
  }, pa.each = function (n) {
    return P(this, function (t, e, r) {
      n.call(t, t.__data__, e, r);
    });
  }, pa.call = function (n) {
    var t = Xo(arguments);
    return n.apply(t[0] = this, t), this;
  }, pa.empty = function () {
    return !this.node();
  }, pa.node = function () {
    for (var n = 0, t = this.length; t > n; n++) {
      for (var e = this[n], r = 0, u = e.length; u > r; r++) {
        var i = e[r];
        if (i) return i;
      }
    }

    return null;
  }, pa.size = function () {
    var n = 0;
    return this.each(function () {
      ++n;
    }), n;
  };
  var da = [];
  Zo.selection.enter = U, Zo.selection.enter.prototype = da, da.append = pa.append, da.empty = pa.empty, da.node = pa.node, da.call = pa.call, da.size = pa.size, da.select = function (n) {
    for (var t, e, r, u, i, o = [], a = -1, c = this.length; ++a < c;) {
      r = (u = this[a]).update, o.push(t = []), t.parentNode = u.parentNode;

      for (var s = -1, l = u.length; ++s < l;) {
        (i = u[s]) ? (t.push(r[s] = e = n.call(u.parentNode, i.__data__, s, a)), e.__data__ = i.__data__) : t.push(null);
      }
    }

    return _(o);
  }, da.insert = function (n, t) {
    return arguments.length < 2 && (t = j(this)), pa.insert.call(this, n, t);
  }, pa.transition = function () {
    for (var n, t, e = Ss || ++Ns, r = [], u = ks || {
      time: Date.now(),
      ease: xu,
      delay: 0,
      duration: 250
    }, i = -1, o = this.length; ++i < o;) {
      r.push(n = []);

      for (var a = this[i], c = -1, s = a.length; ++c < s;) {
        (t = a[c]) && Po(t, c, e, u), n.push(t);
      }
    }

    return qo(r, e);
  }, pa.interrupt = function () {
    return this.each(H);
  }, Zo.select = function (n) {
    var t = ["string" == typeof n ? la(n, $o) : n];
    return t.parentNode = Bo, _([t]);
  }, Zo.selectAll = function (n) {
    var t = Xo("string" == typeof n ? fa(n, $o) : n);
    return t.parentNode = Bo, _([t]);
  };
  var ma = Zo.select(Bo);

  pa.on = function (n, t, e) {
    var r = arguments.length;

    if (3 > r) {
      if ("string" != typeof n) {
        2 > r && (t = !1);

        for (e in n) {
          this.each(F(e, n[e], t));
        }

        return this;
      }

      if (2 > r) return (r = this.node()["__on" + n]) && r._;
      e = !1;
    }

    return this.each(F(n, t, e));
  };

  var ya = Zo.map({
    mouseenter: "mouseover",
    mouseleave: "mouseout"
  });
  ya.forEach(function (n) {
    "on" + n in $o && ya.remove(n);
  });
  var xa = "onselectstart" in $o ? null : p(Bo.style, "userSelect"),
      Ma = 0;

  Zo.mouse = function (n) {
    return Z(n, x());
  };

  var _a = /WebKit/.test(Wo.navigator.userAgent) ? -1 : 0;

  Zo.touches = function (n, t) {
    return arguments.length < 2 && (t = x().touches), t ? Xo(t).map(function (t) {
      var e = Z(n, t);
      return e.identifier = t.identifier, e;
    }) : [];
  }, Zo.behavior.drag = function () {
    function n() {
      this.on("mousedown.drag", u).on("touchstart.drag", i);
    }

    function t(n, t, u, i, o) {
      return function () {
        function a() {
          var n,
              e,
              r = t(h, v);
          r && (n = r[0] - x[0], e = r[1] - x[1], p |= n | e, x = r, g({
            type: "drag",
            x: r[0] + s[0],
            y: r[1] + s[1],
            dx: n,
            dy: e
          }));
        }

        function c() {
          t(h, v) && (m.on(i + d, null).on(o + d, null), y(p && Zo.event.target === f), g({
            type: "dragend"
          }));
        }

        var s,
            l = this,
            f = Zo.event.target,
            h = l.parentNode,
            g = e.of(l, arguments),
            p = 0,
            v = n(),
            d = ".drag" + (null == v ? "" : "-" + v),
            m = Zo.select(u()).on(i + d, a).on(o + d, c),
            y = I(),
            x = t(h, v);
        r ? (s = r.apply(l, arguments), s = [s.x - x[0], s.y - x[1]]) : s = [0, 0], g({
          type: "dragstart"
        });
      };
    }

    var e = M(n, "drag", "dragstart", "dragend"),
        r = null,
        u = t(v, Zo.mouse, $, "mousemove", "mouseup"),
        i = t(V, Zo.touch, X, "touchmove", "touchend");
    return n.origin = function (t) {
      return arguments.length ? (r = t, n) : r;
    }, Zo.rebind(n, e, "on");
  };
  var ba = Math.PI,
      wa = 2 * ba,
      Sa = ba / 2,
      ka = 1e-6,
      Ea = ka * ka,
      Aa = ba / 180,
      Ca = 180 / ba,
      Na = Math.SQRT2,
      za = 2,
      La = 4;
  Zo.interpolateZoom = function (n, t) {
    function e(n) {
      var t = n * y;

      if (m) {
        var e = Q(v),
            o = i / (za * h) * (e * nt(Na * t + v) - K(v));
        return [r + o * s, u + o * l, i * e / Q(Na * t + v)];
      }

      return [r + n * s, u + n * l, i * Math.exp(Na * t)];
    }

    var r = n[0],
        u = n[1],
        i = n[2],
        o = t[0],
        a = t[1],
        c = t[2],
        s = o - r,
        l = a - u,
        f = s * s + l * l,
        h = Math.sqrt(f),
        g = (c * c - i * i + La * f) / (2 * i * za * h),
        p = (c * c - i * i - La * f) / (2 * c * za * h),
        v = Math.log(Math.sqrt(g * g + 1) - g),
        d = Math.log(Math.sqrt(p * p + 1) - p),
        m = d - v,
        y = (m || Math.log(c / i)) / Na;
    return e.duration = 1e3 * y, e;
  }, Zo.behavior.zoom = function () {
    function n(n) {
      n.on(A, s).on(Ra + ".zoom", f).on("dblclick.zoom", h).on(z, l);
    }

    function t(n) {
      return [(n[0] - S.x) / S.k, (n[1] - S.y) / S.k];
    }

    function e(n) {
      return [n[0] * S.k + S.x, n[1] * S.k + S.y];
    }

    function r(n) {
      S.k = Math.max(E[0], Math.min(E[1], n));
    }

    function u(n, t) {
      t = e(t), S.x += n[0] - t[0], S.y += n[1] - t[1];
    }

    function i() {
      _ && _.domain(x.range().map(function (n) {
        return (n - S.x) / S.k;
      }).map(x.invert)), w && w.domain(b.range().map(function (n) {
        return (n - S.y) / S.k;
      }).map(b.invert));
    }

    function o(n) {
      n({
        type: "zoomstart"
      });
    }

    function a(n) {
      i(), n({
        type: "zoom",
        scale: S.k,
        translate: [S.x, S.y]
      });
    }

    function c(n) {
      n({
        type: "zoomend"
      });
    }

    function s() {
      function n() {
        l = 1, u(Zo.mouse(r), h), a(s);
      }

      function e() {
        f.on(C, null).on(N, null), g(l && Zo.event.target === i), c(s);
      }

      var r = this,
          i = Zo.event.target,
          s = L.of(r, arguments),
          l = 0,
          f = Zo.select(Wo).on(C, n).on(N, e),
          h = t(Zo.mouse(r)),
          g = I();
      H.call(r), o(s);
    }

    function l() {
      function n() {
        var n = Zo.touches(g);
        return h = S.k, n.forEach(function (n) {
          n.identifier in v && (v[n.identifier] = t(n));
        }), n;
      }

      function e() {
        var t = Zo.event.target;
        Zo.select(t).on(M, i).on(_, f), b.push(t);

        for (var e = Zo.event.changedTouches, o = 0, c = e.length; c > o; ++o) {
          v[e[o].identifier] = null;
        }

        var s = n(),
            l = Date.now();

        if (1 === s.length) {
          if (500 > l - m) {
            var h = s[0],
                g = v[h.identifier];
            r(2 * S.k), u(h, g), y(), a(p);
          }

          m = l;
        } else if (s.length > 1) {
          var h = s[0],
              x = s[1],
              w = h[0] - x[0],
              k = h[1] - x[1];
          d = w * w + k * k;
        }
      }

      function i() {
        for (var n, t, e, i, o = Zo.touches(g), c = 0, s = o.length; s > c; ++c, i = null) {
          if (e = o[c], i = v[e.identifier]) {
            if (t) break;
            n = e, t = i;
          }
        }

        if (i) {
          var l = (l = e[0] - n[0]) * l + (l = e[1] - n[1]) * l,
              f = d && Math.sqrt(l / d);
          n = [(n[0] + e[0]) / 2, (n[1] + e[1]) / 2], t = [(t[0] + i[0]) / 2, (t[1] + i[1]) / 2], r(f * h);
        }

        m = null, u(n, t), a(p);
      }

      function f() {
        if (Zo.event.touches.length) {
          for (var t = Zo.event.changedTouches, e = 0, r = t.length; r > e; ++e) {
            delete v[t[e].identifier];
          }

          for (var u in v) {
            return void n();
          }
        }

        Zo.selectAll(b).on(x, null), w.on(A, s).on(z, l), k(), c(p);
      }

      var h,
          g = this,
          p = L.of(g, arguments),
          v = {},
          d = 0,
          x = ".zoom-" + Zo.event.changedTouches[0].identifier,
          M = "touchmove" + x,
          _ = "touchend" + x,
          b = [],
          w = Zo.select(g).on(A, null).on(z, e),
          k = I();

      H.call(g), e(), o(p);
    }

    function f() {
      var n = L.of(this, arguments);
      d ? clearTimeout(d) : (g = t(p = v || Zo.mouse(this)), H.call(this), o(n)), d = setTimeout(function () {
        d = null, c(n);
      }, 50), y(), r(Math.pow(2, .002 * Ta()) * S.k), u(p, g), a(n);
    }

    function h() {
      var n = L.of(this, arguments),
          e = Zo.mouse(this),
          i = t(e),
          s = Math.log(S.k) / Math.LN2;
      o(n), r(Math.pow(2, Zo.event.shiftKey ? Math.ceil(s) - 1 : Math.floor(s) + 1)), u(e, i), a(n), c(n);
    }

    var g,
        p,
        v,
        d,
        m,
        x,
        _,
        b,
        w,
        S = {
      x: 0,
      y: 0,
      k: 1
    },
        k = [960, 500],
        E = qa,
        A = "mousedown.zoom",
        C = "mousemove.zoom",
        N = "mouseup.zoom",
        z = "touchstart.zoom",
        L = M(n, "zoomstart", "zoom", "zoomend");

    return n.event = function (n) {
      n.each(function () {
        var n = L.of(this, arguments),
            t = S;
        Ss ? Zo.select(this).transition().each("start.zoom", function () {
          S = this.__chart__ || {
            x: 0,
            y: 0,
            k: 1
          }, o(n);
        }).tween("zoom:zoom", function () {
          var e = k[0],
              r = k[1],
              u = e / 2,
              i = r / 2,
              o = Zo.interpolateZoom([(u - S.x) / S.k, (i - S.y) / S.k, e / S.k], [(u - t.x) / t.k, (i - t.y) / t.k, e / t.k]);
          return function (t) {
            var r = o(t),
                c = e / r[2];
            this.__chart__ = S = {
              x: u - r[0] * c,
              y: i - r[1] * c,
              k: c
            }, a(n);
          };
        }).each("end.zoom", function () {
          c(n);
        }) : (this.__chart__ = S, o(n), a(n), c(n));
      });
    }, n.translate = function (t) {
      return arguments.length ? (S = {
        x: +t[0],
        y: +t[1],
        k: S.k
      }, i(), n) : [S.x, S.y];
    }, n.scale = function (t) {
      return arguments.length ? (S = {
        x: S.x,
        y: S.y,
        k: +t
      }, i(), n) : S.k;
    }, n.scaleExtent = function (t) {
      return arguments.length ? (E = null == t ? qa : [+t[0], +t[1]], n) : E;
    }, n.center = function (t) {
      return arguments.length ? (v = t && [+t[0], +t[1]], n) : v;
    }, n.size = function (t) {
      return arguments.length ? (k = t && [+t[0], +t[1]], n) : k;
    }, n.x = function (t) {
      return arguments.length ? (_ = t, x = t.copy(), S = {
        x: 0,
        y: 0,
        k: 1
      }, n) : _;
    }, n.y = function (t) {
      return arguments.length ? (w = t, b = t.copy(), S = {
        x: 0,
        y: 0,
        k: 1
      }, n) : w;
    }, Zo.rebind(n, L, "on");
  };
  var Ta,
      qa = [0, 1 / 0],
      Ra = "onwheel" in $o ? (Ta = function Ta() {
    return -Zo.event.deltaY * (Zo.event.deltaMode ? 120 : 1);
  }, "wheel") : "onmousewheel" in $o ? (Ta = function Ta() {
    return Zo.event.wheelDelta;
  }, "mousewheel") : (Ta = function Ta() {
    return -Zo.event.detail;
  }, "MozMousePixelScroll");
  Zo.color = et, et.prototype.toString = function () {
    return this.rgb() + "";
  }, Zo.hsl = rt;
  var Da = rt.prototype = new et();
  Da.brighter = function (n) {
    return n = Math.pow(.7, arguments.length ? n : 1), new rt(this.h, this.s, this.l / n);
  }, Da.darker = function (n) {
    return n = Math.pow(.7, arguments.length ? n : 1), new rt(this.h, this.s, n * this.l);
  }, Da.rgb = function () {
    return ut(this.h, this.s, this.l);
  }, Zo.hcl = it;
  var Pa = it.prototype = new et();
  Pa.brighter = function (n) {
    return new it(this.h, this.c, Math.min(100, this.l + Ua * (arguments.length ? n : 1)));
  }, Pa.darker = function (n) {
    return new it(this.h, this.c, Math.max(0, this.l - Ua * (arguments.length ? n : 1)));
  }, Pa.rgb = function () {
    return ot(this.h, this.c, this.l).rgb();
  }, Zo.lab = at;
  var Ua = 18,
      ja = .95047,
      Ha = 1,
      Fa = 1.08883,
      Oa = at.prototype = new et();
  Oa.brighter = function (n) {
    return new at(Math.min(100, this.l + Ua * (arguments.length ? n : 1)), this.a, this.b);
  }, Oa.darker = function (n) {
    return new at(Math.max(0, this.l - Ua * (arguments.length ? n : 1)), this.a, this.b);
  }, Oa.rgb = function () {
    return ct(this.l, this.a, this.b);
  }, Zo.rgb = gt;
  var Ya = gt.prototype = new et();
  Ya.brighter = function (n) {
    n = Math.pow(.7, arguments.length ? n : 1);
    var t = this.r,
        e = this.g,
        r = this.b,
        u = 30;
    return t || e || r ? (t && u > t && (t = u), e && u > e && (e = u), r && u > r && (r = u), new gt(Math.min(255, t / n), Math.min(255, e / n), Math.min(255, r / n))) : new gt(u, u, u);
  }, Ya.darker = function (n) {
    return n = Math.pow(.7, arguments.length ? n : 1), new gt(n * this.r, n * this.g, n * this.b);
  }, Ya.hsl = function () {
    return yt(this.r, this.g, this.b);
  }, Ya.toString = function () {
    return "#" + dt(this.r) + dt(this.g) + dt(this.b);
  };
  var Ia = Zo.map({
    aliceblue: 15792383,
    antiquewhite: 16444375,
    aqua: 65535,
    aquamarine: 8388564,
    azure: 15794175,
    beige: 16119260,
    bisque: 16770244,
    black: 0,
    blanchedalmond: 16772045,
    blue: 255,
    blueviolet: 9055202,
    brown: 10824234,
    burlywood: 14596231,
    cadetblue: 6266528,
    chartreuse: 8388352,
    chocolate: 13789470,
    coral: 16744272,
    cornflowerblue: 6591981,
    cornsilk: 16775388,
    crimson: 14423100,
    cyan: 65535,
    darkblue: 139,
    darkcyan: 35723,
    darkgoldenrod: 12092939,
    darkgray: 11119017,
    darkgreen: 25600,
    darkgrey: 11119017,
    darkkhaki: 12433259,
    darkmagenta: 9109643,
    darkolivegreen: 5597999,
    darkorange: 16747520,
    darkorchid: 10040012,
    darkred: 9109504,
    darksalmon: 15308410,
    darkseagreen: 9419919,
    darkslateblue: 4734347,
    darkslategray: 3100495,
    darkslategrey: 3100495,
    darkturquoise: 52945,
    darkviolet: 9699539,
    deeppink: 16716947,
    deepskyblue: 49151,
    dimgray: 6908265,
    dimgrey: 6908265,
    dodgerblue: 2003199,
    firebrick: 11674146,
    floralwhite: 16775920,
    forestgreen: 2263842,
    fuchsia: 16711935,
    gainsboro: 14474460,
    ghostwhite: 16316671,
    gold: 16766720,
    goldenrod: 14329120,
    gray: 8421504,
    green: 32768,
    greenyellow: 11403055,
    grey: 8421504,
    honeydew: 15794160,
    hotpink: 16738740,
    indianred: 13458524,
    indigo: 4915330,
    ivory: 16777200,
    khaki: 15787660,
    lavender: 15132410,
    lavenderblush: 16773365,
    lawngreen: 8190976,
    lemonchiffon: 16775885,
    lightblue: 11393254,
    lightcoral: 15761536,
    lightcyan: 14745599,
    lightgoldenrodyellow: 16448210,
    lightgray: 13882323,
    lightgreen: 9498256,
    lightgrey: 13882323,
    lightpink: 16758465,
    lightsalmon: 16752762,
    lightseagreen: 2142890,
    lightskyblue: 8900346,
    lightslategray: 7833753,
    lightslategrey: 7833753,
    lightsteelblue: 11584734,
    lightyellow: 16777184,
    lime: 65280,
    limegreen: 3329330,
    linen: 16445670,
    magenta: 16711935,
    maroon: 8388608,
    mediumaquamarine: 6737322,
    mediumblue: 205,
    mediumorchid: 12211667,
    mediumpurple: 9662683,
    mediumseagreen: 3978097,
    mediumslateblue: 8087790,
    mediumspringgreen: 64154,
    mediumturquoise: 4772300,
    mediumvioletred: 13047173,
    midnightblue: 1644912,
    mintcream: 16121850,
    mistyrose: 16770273,
    moccasin: 16770229,
    navajowhite: 16768685,
    navy: 128,
    oldlace: 16643558,
    olive: 8421376,
    olivedrab: 7048739,
    orange: 16753920,
    orangered: 16729344,
    orchid: 14315734,
    palegoldenrod: 15657130,
    palegreen: 10025880,
    paleturquoise: 11529966,
    palevioletred: 14381203,
    papayawhip: 16773077,
    peachpuff: 16767673,
    peru: 13468991,
    pink: 16761035,
    plum: 14524637,
    powderblue: 11591910,
    purple: 8388736,
    red: 16711680,
    rosybrown: 12357519,
    royalblue: 4286945,
    saddlebrown: 9127187,
    salmon: 16416882,
    sandybrown: 16032864,
    seagreen: 3050327,
    seashell: 16774638,
    sienna: 10506797,
    silver: 12632256,
    skyblue: 8900331,
    slateblue: 6970061,
    slategray: 7372944,
    slategrey: 7372944,
    snow: 16775930,
    springgreen: 65407,
    steelblue: 4620980,
    tan: 13808780,
    teal: 32896,
    thistle: 14204888,
    tomato: 16737095,
    turquoise: 4251856,
    violet: 15631086,
    wheat: 16113331,
    white: 16777215,
    whitesmoke: 16119285,
    yellow: 16776960,
    yellowgreen: 10145074
  });
  Ia.forEach(function (n, t) {
    Ia.set(n, pt(t));
  }), Zo.functor = bt, Zo.xhr = St(wt), Zo.dsv = function (n, t) {
    function e(n, e, i) {
      arguments.length < 3 && (i = e, e = null);
      var o = kt(n, t, null == e ? r : u(e), i);
      return o.row = function (n) {
        return arguments.length ? o.response(null == (e = n) ? r : u(n)) : e;
      }, o;
    }

    function r(n) {
      return e.parse(n.responseText);
    }

    function u(n) {
      return function (t) {
        return e.parse(t.responseText, n);
      };
    }

    function i(t) {
      return t.map(o).join(n);
    }

    function o(n) {
      return a.test(n) ? '"' + n.replace(/\"/g, '""') + '"' : n;
    }

    var a = new RegExp('["' + n + "\n]"),
        c = n.charCodeAt(0);
    return e.parse = function (n, t) {
      var r;
      return e.parseRows(n, function (n, e) {
        if (r) return r(n, e - 1);
        var u = new Function("d", "return {" + n.map(function (n, t) {
          return JSON.stringify(n) + ": d[" + t + "]";
        }).join(",") + "}");
        r = t ? function (n, e) {
          return t(u(n), e);
        } : u;
      });
    }, e.parseRows = function (n, t) {
      function e() {
        if (l >= s) return o;
        if (u) return u = !1, i;
        var t = l;

        if (34 === n.charCodeAt(t)) {
          for (var e = t; e++ < s;) {
            if (34 === n.charCodeAt(e)) {
              if (34 !== n.charCodeAt(e + 1)) break;
              ++e;
            }
          }

          l = e + 2;
          var r = n.charCodeAt(e + 1);
          return 13 === r ? (u = !0, 10 === n.charCodeAt(e + 2) && ++l) : 10 === r && (u = !0), n.substring(t + 1, e).replace(/""/g, '"');
        }

        for (; s > l;) {
          var r = n.charCodeAt(l++),
              a = 1;
          if (10 === r) u = !0;else if (13 === r) u = !0, 10 === n.charCodeAt(l) && (++l, ++a);else if (r !== c) continue;
          return n.substring(t, l - a);
        }

        return n.substring(t);
      }

      for (var r, u, i = {}, o = {}, a = [], s = n.length, l = 0, f = 0; (r = e()) !== o;) {
        for (var h = []; r !== i && r !== o;) {
          h.push(r), r = e();
        }

        (!t || (h = t(h, f++))) && a.push(h);
      }

      return a;
    }, e.format = function (t) {
      if (Array.isArray(t[0])) return e.formatRows(t);
      var r = new h(),
          u = [];
      return t.forEach(function (n) {
        for (var t in n) {
          r.has(t) || u.push(r.add(t));
        }
      }), [u.map(o).join(n)].concat(t.map(function (t) {
        return u.map(function (n) {
          return o(t[n]);
        }).join(n);
      })).join("\n");
    }, e.formatRows = function (n) {
      return n.map(i).join("\n");
    }, e;
  }, Zo.csv = Zo.dsv(",", "text/csv"), Zo.tsv = Zo.dsv("	", "text/tab-separated-values"), Zo.touch = function (n, t, e) {
    if (arguments.length < 3 && (e = t, t = x().changedTouches), t) for (var r, u = 0, i = t.length; i > u; ++u) {
      if ((r = t[u]).identifier === e) return Z(n, r);
    }
  };

  var Za,
      Va,
      Xa,
      $a,
      Ba,
      Wa = Wo[p(Wo, "requestAnimationFrame")] || function (n) {
    setTimeout(n, 17);
  };

  Zo.timer = function (n, t, e) {
    var r = arguments.length;
    2 > r && (t = 0), 3 > r && (e = Date.now());
    var u = e + t,
        i = {
      c: n,
      t: u,
      f: !1,
      n: null
    };
    Va ? Va.n = i : Za = i, Va = i, Xa || ($a = clearTimeout($a), Xa = 1, Wa(At));
  }, Zo.timer.flush = function () {
    Ct(), Nt();
  }, Zo.round = function (n, t) {
    return t ? Math.round(n * (t = Math.pow(10, t))) / t : Math.round(n);
  };
  var Ja = ["y", "z", "a", "f", "p", "n", "\xb5", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"].map(Lt);

  Zo.formatPrefix = function (n, t) {
    var e = 0;
    return n && (0 > n && (n *= -1), t && (n = Zo.round(n, zt(n, t))), e = 1 + Math.floor(1e-12 + Math.log(n) / Math.LN10), e = Math.max(-24, Math.min(24, 3 * Math.floor((e - 1) / 3)))), Ja[8 + e / 3];
  };

  var Ga = /(?:([^{])?([<>=^]))?([+\- ])?([$#])?(0)?(\d+)?(,)?(\.-?\d+)?([a-z%])?/i,
      Ka = Zo.map({
    b: function b(n) {
      return n.toString(2);
    },
    c: function c(n) {
      return String.fromCharCode(n);
    },
    o: function o(n) {
      return n.toString(8);
    },
    x: function x(n) {
      return n.toString(16);
    },
    X: function X(n) {
      return n.toString(16).toUpperCase();
    },
    g: function g(n, t) {
      return n.toPrecision(t);
    },
    e: function e(n, t) {
      return n.toExponential(t);
    },
    f: function f(n, t) {
      return n.toFixed(t);
    },
    r: function r(n, t) {
      return (n = Zo.round(n, zt(n, t))).toFixed(Math.max(0, Math.min(20, zt(n * (1 + 1e-15), t))));
    }
  }),
      Qa = Zo.time = {},
      nc = Date;
  Rt.prototype = {
    getDate: function getDate() {
      return this._.getUTCDate();
    },
    getDay: function getDay() {
      return this._.getUTCDay();
    },
    getFullYear: function getFullYear() {
      return this._.getUTCFullYear();
    },
    getHours: function getHours() {
      return this._.getUTCHours();
    },
    getMilliseconds: function getMilliseconds() {
      return this._.getUTCMilliseconds();
    },
    getMinutes: function getMinutes() {
      return this._.getUTCMinutes();
    },
    getMonth: function getMonth() {
      return this._.getUTCMonth();
    },
    getSeconds: function getSeconds() {
      return this._.getUTCSeconds();
    },
    getTime: function getTime() {
      return this._.getTime();
    },
    getTimezoneOffset: function getTimezoneOffset() {
      return 0;
    },
    valueOf: function valueOf() {
      return this._.valueOf();
    },
    setDate: function setDate() {
      tc.setUTCDate.apply(this._, arguments);
    },
    setDay: function setDay() {
      tc.setUTCDay.apply(this._, arguments);
    },
    setFullYear: function setFullYear() {
      tc.setUTCFullYear.apply(this._, arguments);
    },
    setHours: function setHours() {
      tc.setUTCHours.apply(this._, arguments);
    },
    setMilliseconds: function setMilliseconds() {
      tc.setUTCMilliseconds.apply(this._, arguments);
    },
    setMinutes: function setMinutes() {
      tc.setUTCMinutes.apply(this._, arguments);
    },
    setMonth: function setMonth() {
      tc.setUTCMonth.apply(this._, arguments);
    },
    setSeconds: function setSeconds() {
      tc.setUTCSeconds.apply(this._, arguments);
    },
    setTime: function setTime() {
      tc.setTime.apply(this._, arguments);
    }
  };
  var tc = Date.prototype;
  Qa.year = Dt(function (n) {
    return n = Qa.day(n), n.setMonth(0, 1), n;
  }, function (n, t) {
    n.setFullYear(n.getFullYear() + t);
  }, function (n) {
    return n.getFullYear();
  }), Qa.years = Qa.year.range, Qa.years.utc = Qa.year.utc.range, Qa.day = Dt(function (n) {
    var t = new nc(2e3, 0);
    return t.setFullYear(n.getFullYear(), n.getMonth(), n.getDate()), t;
  }, function (n, t) {
    n.setDate(n.getDate() + t);
  }, function (n) {
    return n.getDate() - 1;
  }), Qa.days = Qa.day.range, Qa.days.utc = Qa.day.utc.range, Qa.dayOfYear = function (n) {
    var t = Qa.year(n);
    return Math.floor((n - t - 6e4 * (n.getTimezoneOffset() - t.getTimezoneOffset())) / 864e5);
  }, ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"].forEach(function (n, t) {
    t = 7 - t;
    var e = Qa[n] = Dt(function (n) {
      return (n = Qa.day(n)).setDate(n.getDate() - (n.getDay() + t) % 7), n;
    }, function (n, t) {
      n.setDate(n.getDate() + 7 * Math.floor(t));
    }, function (n) {
      var e = Qa.year(n).getDay();
      return Math.floor((Qa.dayOfYear(n) + (e + t) % 7) / 7) - (e !== t);
    });
    Qa[n + "s"] = e.range, Qa[n + "s"].utc = e.utc.range, Qa[n + "OfYear"] = function (n) {
      var e = Qa.year(n).getDay();
      return Math.floor((Qa.dayOfYear(n) + (e + t) % 7) / 7);
    };
  }), Qa.week = Qa.sunday, Qa.weeks = Qa.sunday.range, Qa.weeks.utc = Qa.sunday.utc.range, Qa.weekOfYear = Qa.sundayOfYear;
  var ec = {
    "-": "",
    _: " ",
    0: "0"
  },
      rc = /^\s*\d+/,
      uc = /^%/;

  Zo.locale = function (n) {
    return {
      numberFormat: Tt(n),
      timeFormat: Ut(n)
    };
  };

  var ic = Zo.locale({
    decimal: ".",
    thousands: ",",
    grouping: [3],
    currency: ["$", ""],
    dateTime: "%a %b %e %X %Y",
    date: "%m/%d/%Y",
    time: "%H:%M:%S",
    periods: ["AM", "PM"],
    days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
    months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
    shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
  });
  Zo.format = ic.numberFormat, Zo.geo = {}, ue.prototype = {
    s: 0,
    t: 0,
    add: function add(n) {
      ie(n, this.t, oc), ie(oc.s, this.s, this), this.s ? this.t += oc.t : this.s = oc.t;
    },
    reset: function reset() {
      this.s = this.t = 0;
    },
    valueOf: function valueOf() {
      return this.s;
    }
  };
  var oc = new ue();

  Zo.geo.stream = function (n, t) {
    n && ac.hasOwnProperty(n.type) ? ac[n.type](n, t) : oe(n, t);
  };

  var ac = {
    Feature: function Feature(n, t) {
      oe(n.geometry, t);
    },
    FeatureCollection: function FeatureCollection(n, t) {
      for (var e = n.features, r = -1, u = e.length; ++r < u;) {
        oe(e[r].geometry, t);
      }
    }
  },
      cc = {
    Sphere: function Sphere(n, t) {
      t.sphere();
    },
    Point: function Point(n, t) {
      n = n.coordinates, t.point(n[0], n[1], n[2]);
    },
    MultiPoint: function MultiPoint(n, t) {
      for (var e = n.coordinates, r = -1, u = e.length; ++r < u;) {
        n = e[r], t.point(n[0], n[1], n[2]);
      }
    },
    LineString: function LineString(n, t) {
      ae(n.coordinates, t, 0);
    },
    MultiLineString: function MultiLineString(n, t) {
      for (var e = n.coordinates, r = -1, u = e.length; ++r < u;) {
        ae(e[r], t, 0);
      }
    },
    Polygon: function Polygon(n, t) {
      ce(n.coordinates, t);
    },
    MultiPolygon: function MultiPolygon(n, t) {
      for (var e = n.coordinates, r = -1, u = e.length; ++r < u;) {
        ce(e[r], t);
      }
    },
    GeometryCollection: function GeometryCollection(n, t) {
      for (var e = n.geometries, r = -1, u = e.length; ++r < u;) {
        oe(e[r], t);
      }
    }
  };

  Zo.geo.area = function (n) {
    return sc = 0, Zo.geo.stream(n, fc), sc;
  };

  var sc,
      lc = new ue(),
      fc = {
    sphere: function sphere() {
      sc += 4 * ba;
    },
    point: v,
    lineStart: v,
    lineEnd: v,
    polygonStart: function polygonStart() {
      lc.reset(), fc.lineStart = se;
    },
    polygonEnd: function polygonEnd() {
      var n = 2 * lc;
      sc += 0 > n ? 4 * ba + n : n, fc.lineStart = fc.lineEnd = fc.point = v;
    }
  };
  Zo.geo.bounds = function () {
    function n(n, t) {
      x.push(M = [l = n, h = n]), f > t && (f = t), t > g && (g = t);
    }

    function t(t, e) {
      var r = le([t * Aa, e * Aa]);

      if (m) {
        var u = he(m, r),
            i = [u[1], -u[0], 0],
            o = he(i, u);
        ve(o), o = de(o);
        var c = t - p,
            s = c > 0 ? 1 : -1,
            v = o[0] * Ca * s,
            d = ua(c) > 180;

        if (d ^ (v > s * p && s * t > v)) {
          var y = o[1] * Ca;
          y > g && (g = y);
        } else if (v = (v + 360) % 360 - 180, d ^ (v > s * p && s * t > v)) {
          var y = -o[1] * Ca;
          f > y && (f = y);
        } else f > e && (f = e), e > g && (g = e);

        d ? p > t ? a(l, t) > a(l, h) && (h = t) : a(t, h) > a(l, h) && (l = t) : h >= l ? (l > t && (l = t), t > h && (h = t)) : t > p ? a(l, t) > a(l, h) && (h = t) : a(t, h) > a(l, h) && (l = t);
      } else n(t, e);

      m = r, p = t;
    }

    function e() {
      _.point = t;
    }

    function r() {
      M[0] = l, M[1] = h, _.point = n, m = null;
    }

    function u(n, e) {
      if (m) {
        var r = n - p;
        y += ua(r) > 180 ? r + (r > 0 ? 360 : -360) : r;
      } else v = n, d = e;

      fc.point(n, e), t(n, e);
    }

    function i() {
      fc.lineStart();
    }

    function o() {
      u(v, d), fc.lineEnd(), ua(y) > ka && (l = -(h = 180)), M[0] = l, M[1] = h, m = null;
    }

    function a(n, t) {
      return (t -= n) < 0 ? t + 360 : t;
    }

    function c(n, t) {
      return n[0] - t[0];
    }

    function s(n, t) {
      return t[0] <= t[1] ? t[0] <= n && n <= t[1] : n < t[0] || t[1] < n;
    }

    var l,
        f,
        h,
        g,
        p,
        v,
        d,
        m,
        y,
        x,
        M,
        _ = {
      point: n,
      lineStart: e,
      lineEnd: r,
      polygonStart: function polygonStart() {
        _.point = u, _.lineStart = i, _.lineEnd = o, y = 0, fc.polygonStart();
      },
      polygonEnd: function polygonEnd() {
        fc.polygonEnd(), _.point = n, _.lineStart = e, _.lineEnd = r, 0 > lc ? (l = -(h = 180), f = -(g = 90)) : y > ka ? g = 90 : -ka > y && (f = -90), M[0] = l, M[1] = h;
      }
    };
    return function (n) {
      g = h = -(l = f = 1 / 0), x = [], Zo.geo.stream(n, _);
      var t = x.length;

      if (t) {
        x.sort(c);

        for (var e, r = 1, u = x[0], i = [u]; t > r; ++r) {
          e = x[r], s(e[0], u) || s(e[1], u) ? (a(u[0], e[1]) > a(u[0], u[1]) && (u[1] = e[1]), a(e[0], u[1]) > a(u[0], u[1]) && (u[0] = e[0])) : i.push(u = e);
        }

        for (var o, e, p = -1 / 0, t = i.length - 1, r = 0, u = i[t]; t >= r; u = e, ++r) {
          e = i[r], (o = a(u[1], e[0])) > p && (p = o, l = e[0], h = u[1]);
        }
      }

      return x = M = null, 1 / 0 === l || 1 / 0 === f ? [[0 / 0, 0 / 0], [0 / 0, 0 / 0]] : [[l, f], [h, g]];
    };
  }(), Zo.geo.centroid = function (n) {
    hc = gc = pc = vc = dc = mc = yc = xc = Mc = _c = bc = 0, Zo.geo.stream(n, wc);
    var t = Mc,
        e = _c,
        r = bc,
        u = t * t + e * e + r * r;
    return Ea > u && (t = mc, e = yc, r = xc, ka > gc && (t = pc, e = vc, r = dc), u = t * t + e * e + r * r, Ea > u) ? [0 / 0, 0 / 0] : [Math.atan2(e, t) * Ca, G(r / Math.sqrt(u)) * Ca];
  };

  var hc,
      gc,
      pc,
      vc,
      dc,
      mc,
      yc,
      xc,
      Mc,
      _c,
      bc,
      wc = {
    sphere: v,
    point: ye,
    lineStart: Me,
    lineEnd: _e,
    polygonStart: function polygonStart() {
      wc.lineStart = be;
    },
    polygonEnd: function polygonEnd() {
      wc.lineStart = Me;
    }
  },
      Sc = Ae(we, Te, Re, [-ba, -ba / 2]),
      kc = 1e9;

  Zo.geo.clipExtent = function () {
    var n,
        t,
        e,
        r,
        u,
        i,
        o = {
      stream: function stream(n) {
        return u && (u.valid = !1), u = i(n), u.valid = !0, u;
      },
      extent: function extent(a) {
        return arguments.length ? (i = Ue(n = +a[0][0], t = +a[0][1], e = +a[1][0], r = +a[1][1]), u && (u.valid = !1, u = null), o) : [[n, t], [e, r]];
      }
    };
    return o.extent([[0, 0], [960, 500]]);
  }, (Zo.geo.conicEqualArea = function () {
    return He(Fe);
  }).raw = Fe, Zo.geo.albers = function () {
    return Zo.geo.conicEqualArea().rotate([96, 0]).center([-.6, 38.7]).parallels([29.5, 45.5]).scale(1070);
  }, Zo.geo.albersUsa = function () {
    function n(n) {
      var i = n[0],
          o = n[1];
      return t = null, e(i, o), t || (r(i, o), t) || u(i, o), t;
    }

    var t,
        e,
        r,
        u,
        i = Zo.geo.albers(),
        o = Zo.geo.conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]),
        a = Zo.geo.conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]),
        c = {
      point: function point(n, e) {
        t = [n, e];
      }
    };
    return n.invert = function (n) {
      var t = i.scale(),
          e = i.translate(),
          r = (n[0] - e[0]) / t,
          u = (n[1] - e[1]) / t;
      return (u >= .12 && .234 > u && r >= -.425 && -.214 > r ? o : u >= .166 && .234 > u && r >= -.214 && -.115 > r ? a : i).invert(n);
    }, n.stream = function (n) {
      var t = i.stream(n),
          e = o.stream(n),
          r = a.stream(n);
      return {
        point: function point(n, u) {
          t.point(n, u), e.point(n, u), r.point(n, u);
        },
        sphere: function sphere() {
          t.sphere(), e.sphere(), r.sphere();
        },
        lineStart: function lineStart() {
          t.lineStart(), e.lineStart(), r.lineStart();
        },
        lineEnd: function lineEnd() {
          t.lineEnd(), e.lineEnd(), r.lineEnd();
        },
        polygonStart: function polygonStart() {
          t.polygonStart(), e.polygonStart(), r.polygonStart();
        },
        polygonEnd: function polygonEnd() {
          t.polygonEnd(), e.polygonEnd(), r.polygonEnd();
        }
      };
    }, n.precision = function (t) {
      return arguments.length ? (i.precision(t), o.precision(t), a.precision(t), n) : i.precision();
    }, n.scale = function (t) {
      return arguments.length ? (i.scale(t), o.scale(.35 * t), a.scale(t), n.translate(i.translate())) : i.scale();
    }, n.translate = function (t) {
      if (!arguments.length) return i.translate();
      var s = i.scale(),
          l = +t[0],
          f = +t[1];
      return e = i.translate(t).clipExtent([[l - .455 * s, f - .238 * s], [l + .455 * s, f + .238 * s]]).stream(c).point, r = o.translate([l - .307 * s, f + .201 * s]).clipExtent([[l - .425 * s + ka, f + .12 * s + ka], [l - .214 * s - ka, f + .234 * s - ka]]).stream(c).point, u = a.translate([l - .205 * s, f + .212 * s]).clipExtent([[l - .214 * s + ka, f + .166 * s + ka], [l - .115 * s - ka, f + .234 * s - ka]]).stream(c).point, n;
    }, n.scale(1070);
  };
  var Ec,
      Ac,
      Cc,
      Nc,
      zc,
      Lc,
      Tc = {
    point: v,
    lineStart: v,
    lineEnd: v,
    polygonStart: function polygonStart() {
      Ac = 0, Tc.lineStart = Oe;
    },
    polygonEnd: function polygonEnd() {
      Tc.lineStart = Tc.lineEnd = Tc.point = v, Ec += ua(Ac / 2);
    }
  },
      qc = {
    point: Ye,
    lineStart: v,
    lineEnd: v,
    polygonStart: v,
    polygonEnd: v
  },
      Rc = {
    point: Ve,
    lineStart: Xe,
    lineEnd: $e,
    polygonStart: function polygonStart() {
      Rc.lineStart = Be;
    },
    polygonEnd: function polygonEnd() {
      Rc.point = Ve, Rc.lineStart = Xe, Rc.lineEnd = $e;
    }
  };
  Zo.geo.path = function () {
    function n(n) {
      return n && ("function" == typeof a && i.pointRadius(+a.apply(this, arguments)), o && o.valid || (o = u(i)), Zo.geo.stream(n, o)), i.result();
    }

    function t() {
      return o = null, n;
    }

    var e,
        r,
        u,
        i,
        o,
        a = 4.5;
    return n.area = function (n) {
      return Ec = 0, Zo.geo.stream(n, u(Tc)), Ec;
    }, n.centroid = function (n) {
      return pc = vc = dc = mc = yc = xc = Mc = _c = bc = 0, Zo.geo.stream(n, u(Rc)), bc ? [Mc / bc, _c / bc] : xc ? [mc / xc, yc / xc] : dc ? [pc / dc, vc / dc] : [0 / 0, 0 / 0];
    }, n.bounds = function (n) {
      return zc = Lc = -(Cc = Nc = 1 / 0), Zo.geo.stream(n, u(qc)), [[Cc, Nc], [zc, Lc]];
    }, n.projection = function (n) {
      return arguments.length ? (u = (e = n) ? n.stream || Ge(n) : wt, t()) : e;
    }, n.context = function (n) {
      return arguments.length ? (i = null == (r = n) ? new Ie() : new We(n), "function" != typeof a && i.pointRadius(a), t()) : r;
    }, n.pointRadius = function (t) {
      return arguments.length ? (a = "function" == typeof t ? t : (i.pointRadius(+t), +t), n) : a;
    }, n.projection(Zo.geo.albersUsa()).context(null);
  }, Zo.geo.transform = function (n) {
    return {
      stream: function stream(t) {
        var e = new Ke(t);

        for (var r in n) {
          e[r] = n[r];
        }

        return e;
      }
    };
  }, Ke.prototype = {
    point: function point(n, t) {
      this.stream.point(n, t);
    },
    sphere: function sphere() {
      this.stream.sphere();
    },
    lineStart: function lineStart() {
      this.stream.lineStart();
    },
    lineEnd: function lineEnd() {
      this.stream.lineEnd();
    },
    polygonStart: function polygonStart() {
      this.stream.polygonStart();
    },
    polygonEnd: function polygonEnd() {
      this.stream.polygonEnd();
    }
  }, Zo.geo.projection = nr, Zo.geo.projectionMutator = tr, (Zo.geo.equirectangular = function () {
    return nr(rr);
  }).raw = rr.invert = rr, Zo.geo.rotation = function (n) {
    function t(t) {
      return t = n(t[0] * Aa, t[1] * Aa), t[0] *= Ca, t[1] *= Ca, t;
    }

    return n = ir(n[0] % 360 * Aa, n[1] * Aa, n.length > 2 ? n[2] * Aa : 0), t.invert = function (t) {
      return t = n.invert(t[0] * Aa, t[1] * Aa), t[0] *= Ca, t[1] *= Ca, t;
    }, t;
  }, ur.invert = rr, Zo.geo.circle = function () {
    function n() {
      var n = "function" == typeof r ? r.apply(this, arguments) : r,
          t = ir(-n[0] * Aa, -n[1] * Aa, 0).invert,
          u = [];
      return e(null, null, 1, {
        point: function point(n, e) {
          u.push(n = t(n, e)), n[0] *= Ca, n[1] *= Ca;
        }
      }), {
        type: "Polygon",
        coordinates: [u]
      };
    }

    var t,
        e,
        r = [0, 0],
        u = 6;
    return n.origin = function (t) {
      return arguments.length ? (r = t, n) : r;
    }, n.angle = function (r) {
      return arguments.length ? (e = sr((t = +r) * Aa, u * Aa), n) : t;
    }, n.precision = function (r) {
      return arguments.length ? (e = sr(t * Aa, (u = +r) * Aa), n) : u;
    }, n.angle(90);
  }, Zo.geo.distance = function (n, t) {
    var e,
        r = (t[0] - n[0]) * Aa,
        u = n[1] * Aa,
        i = t[1] * Aa,
        o = Math.sin(r),
        a = Math.cos(r),
        c = Math.sin(u),
        s = Math.cos(u),
        l = Math.sin(i),
        f = Math.cos(i);
    return Math.atan2(Math.sqrt((e = f * o) * e + (e = s * l - c * f * a) * e), c * l + s * f * a);
  }, Zo.geo.graticule = function () {
    function n() {
      return {
        type: "MultiLineString",
        coordinates: t()
      };
    }

    function t() {
      return Zo.range(Math.ceil(i / d) * d, u, d).map(h).concat(Zo.range(Math.ceil(s / m) * m, c, m).map(g)).concat(Zo.range(Math.ceil(r / p) * p, e, p).filter(function (n) {
        return ua(n % d) > ka;
      }).map(l)).concat(Zo.range(Math.ceil(a / v) * v, o, v).filter(function (n) {
        return ua(n % m) > ka;
      }).map(f));
    }

    var e,
        r,
        u,
        i,
        o,
        a,
        c,
        s,
        l,
        f,
        h,
        g,
        p = 10,
        v = p,
        d = 90,
        m = 360,
        y = 2.5;
    return n.lines = function () {
      return t().map(function (n) {
        return {
          type: "LineString",
          coordinates: n
        };
      });
    }, n.outline = function () {
      return {
        type: "Polygon",
        coordinates: [h(i).concat(g(c).slice(1), h(u).reverse().slice(1), g(s).reverse().slice(1))]
      };
    }, n.extent = function (t) {
      return arguments.length ? n.majorExtent(t).minorExtent(t) : n.minorExtent();
    }, n.majorExtent = function (t) {
      return arguments.length ? (i = +t[0][0], u = +t[1][0], s = +t[0][1], c = +t[1][1], i > u && (t = i, i = u, u = t), s > c && (t = s, s = c, c = t), n.precision(y)) : [[i, s], [u, c]];
    }, n.minorExtent = function (t) {
      return arguments.length ? (r = +t[0][0], e = +t[1][0], a = +t[0][1], o = +t[1][1], r > e && (t = r, r = e, e = t), a > o && (t = a, a = o, o = t), n.precision(y)) : [[r, a], [e, o]];
    }, n.step = function (t) {
      return arguments.length ? n.majorStep(t).minorStep(t) : n.minorStep();
    }, n.majorStep = function (t) {
      return arguments.length ? (d = +t[0], m = +t[1], n) : [d, m];
    }, n.minorStep = function (t) {
      return arguments.length ? (p = +t[0], v = +t[1], n) : [p, v];
    }, n.precision = function (t) {
      return arguments.length ? (y = +t, l = fr(a, o, 90), f = hr(r, e, y), h = fr(s, c, 90), g = hr(i, u, y), n) : y;
    }, n.majorExtent([[-180, -90 + ka], [180, 90 - ka]]).minorExtent([[-180, -80 - ka], [180, 80 + ka]]);
  }, Zo.geo.greatArc = function () {
    function n() {
      return {
        type: "LineString",
        coordinates: [t || r.apply(this, arguments), e || u.apply(this, arguments)]
      };
    }

    var t,
        e,
        r = gr,
        u = pr;
    return n.distance = function () {
      return Zo.geo.distance(t || r.apply(this, arguments), e || u.apply(this, arguments));
    }, n.source = function (e) {
      return arguments.length ? (r = e, t = "function" == typeof e ? null : e, n) : r;
    }, n.target = function (t) {
      return arguments.length ? (u = t, e = "function" == typeof t ? null : t, n) : u;
    }, n.precision = function () {
      return arguments.length ? n : 0;
    }, n;
  }, Zo.geo.interpolate = function (n, t) {
    return vr(n[0] * Aa, n[1] * Aa, t[0] * Aa, t[1] * Aa);
  }, Zo.geo.length = function (n) {
    return Dc = 0, Zo.geo.stream(n, Pc), Dc;
  };
  var Dc,
      Pc = {
    sphere: v,
    point: v,
    lineStart: dr,
    lineEnd: v,
    polygonStart: v,
    polygonEnd: v
  },
      Uc = mr(function (n) {
    return Math.sqrt(2 / (1 + n));
  }, function (n) {
    return 2 * Math.asin(n / 2);
  });
  (Zo.geo.azimuthalEqualArea = function () {
    return nr(Uc);
  }).raw = Uc;
  var jc = mr(function (n) {
    var t = Math.acos(n);
    return t && t / Math.sin(t);
  }, wt);
  (Zo.geo.azimuthalEquidistant = function () {
    return nr(jc);
  }).raw = jc, (Zo.geo.conicConformal = function () {
    return He(yr);
  }).raw = yr, (Zo.geo.conicEquidistant = function () {
    return He(xr);
  }).raw = xr;
  var Hc = mr(function (n) {
    return 1 / n;
  }, Math.atan);
  (Zo.geo.gnomonic = function () {
    return nr(Hc);
  }).raw = Hc, Mr.invert = function (n, t) {
    return [n, 2 * Math.atan(Math.exp(t)) - Sa];
  }, (Zo.geo.mercator = function () {
    return _r(Mr);
  }).raw = Mr;
  var Fc = mr(function () {
    return 1;
  }, Math.asin);
  (Zo.geo.orthographic = function () {
    return nr(Fc);
  }).raw = Fc;
  var Oc = mr(function (n) {
    return 1 / (1 + n);
  }, function (n) {
    return 2 * Math.atan(n);
  });
  (Zo.geo.stereographic = function () {
    return nr(Oc);
  }).raw = Oc, br.invert = function (n, t) {
    return [-t, 2 * Math.atan(Math.exp(n)) - Sa];
  }, (Zo.geo.transverseMercator = function () {
    var n = _r(br),
        t = n.center,
        e = n.rotate;

    return n.center = function (n) {
      return n ? t([-n[1], n[0]]) : (n = t(), [n[1], -n[0]]);
    }, n.rotate = function (n) {
      return n ? e([n[0], n[1], n.length > 2 ? n[2] + 90 : 90]) : (n = e(), [n[0], n[1], n[2] - 90]);
    }, e([0, 0, 90]);
  }).raw = br, Zo.geom = {}, Zo.geom.hull = function (n) {
    function t(n) {
      if (n.length < 3) return [];
      var t,
          u = bt(e),
          i = bt(r),
          o = n.length,
          a = [],
          c = [];

      for (t = 0; o > t; t++) {
        a.push([+u.call(this, n[t], t), +i.call(this, n[t], t), t]);
      }

      for (a.sort(Er), t = 0; o > t; t++) {
        c.push([a[t][0], -a[t][1]]);
      }

      var s = kr(a),
          l = kr(c),
          f = l[0] === s[0],
          h = l[l.length - 1] === s[s.length - 1],
          g = [];

      for (t = s.length - 1; t >= 0; --t) {
        g.push(n[a[s[t]][2]]);
      }

      for (t = +f; t < l.length - h; ++t) {
        g.push(n[a[l[t]][2]]);
      }

      return g;
    }

    var e = wr,
        r = Sr;
    return arguments.length ? t(n) : (t.x = function (n) {
      return arguments.length ? (e = n, t) : e;
    }, t.y = function (n) {
      return arguments.length ? (r = n, t) : r;
    }, t);
  }, Zo.geom.polygon = function (n) {
    return sa(n, Yc), n;
  };
  var Yc = Zo.geom.polygon.prototype = [];
  Yc.area = function () {
    for (var n, t = -1, e = this.length, r = this[e - 1], u = 0; ++t < e;) {
      n = r, r = this[t], u += n[1] * r[0] - n[0] * r[1];
    }

    return .5 * u;
  }, Yc.centroid = function (n) {
    var t,
        e,
        r = -1,
        u = this.length,
        i = 0,
        o = 0,
        a = this[u - 1];

    for (arguments.length || (n = -1 / (6 * this.area())); ++r < u;) {
      t = a, a = this[r], e = t[0] * a[1] - a[0] * t[1], i += (t[0] + a[0]) * e, o += (t[1] + a[1]) * e;
    }

    return [i * n, o * n];
  }, Yc.clip = function (n) {
    for (var t, e, r, u, i, o, a = Nr(n), c = -1, s = this.length - Nr(this), l = this[s - 1]; ++c < s;) {
      for (t = n.slice(), n.length = 0, u = this[c], i = t[(r = t.length - a) - 1], e = -1; ++e < r;) {
        o = t[e], Ar(o, l, u) ? (Ar(i, l, u) || n.push(Cr(i, o, l, u)), n.push(o)) : Ar(i, l, u) && n.push(Cr(i, o, l, u)), i = o;
      }

      a && n.push(n[0]), l = u;
    }

    return n;
  };
  var Ic,
      Zc,
      Vc,
      Xc,
      $c,
      Bc = [],
      Wc = [];
  Ur.prototype.prepare = function () {
    for (var n, t = this.edges, e = t.length; e--;) {
      n = t[e].edge, n.b && n.a || t.splice(e, 1);
    }

    return t.sort(Hr), t.length;
  }, Wr.prototype = {
    start: function start() {
      return this.edge.l === this.site ? this.edge.a : this.edge.b;
    },
    end: function end() {
      return this.edge.l === this.site ? this.edge.b : this.edge.a;
    }
  }, Jr.prototype = {
    insert: function insert(n, t) {
      var e, r, u;

      if (n) {
        if (t.P = n, t.N = n.N, n.N && (n.N.P = t), n.N = t, n.R) {
          for (n = n.R; n.L;) {
            n = n.L;
          }

          n.L = t;
        } else n.R = t;

        e = n;
      } else this._ ? (n = nu(this._), t.P = null, t.N = n, n.P = n.L = t, e = n) : (t.P = t.N = null, this._ = t, e = null);

      for (t.L = t.R = null, t.U = e, t.C = !0, n = t; e && e.C;) {
        r = e.U, e === r.L ? (u = r.R, u && u.C ? (e.C = u.C = !1, r.C = !0, n = r) : (n === e.R && (Kr(this, e), n = e, e = n.U), e.C = !1, r.C = !0, Qr(this, r))) : (u = r.L, u && u.C ? (e.C = u.C = !1, r.C = !0, n = r) : (n === e.L && (Qr(this, e), n = e, e = n.U), e.C = !1, r.C = !0, Kr(this, r))), e = n.U;
      }

      this._.C = !1;
    },
    remove: function remove(n) {
      n.N && (n.N.P = n.P), n.P && (n.P.N = n.N), n.N = n.P = null;
      var t,
          e,
          r,
          u = n.U,
          i = n.L,
          o = n.R;

      if (e = i ? o ? nu(o) : i : o, u ? u.L === n ? u.L = e : u.R = e : this._ = e, i && o ? (r = e.C, e.C = n.C, e.L = i, i.U = e, e !== o ? (u = e.U, e.U = n.U, n = e.R, u.L = n, e.R = o, o.U = e) : (e.U = u, u = e, n = e.R)) : (r = n.C, n = e), n && (n.U = u), !r) {
        if (n && n.C) return n.C = !1, void 0;

        do {
          if (n === this._) break;

          if (n === u.L) {
            if (t = u.R, t.C && (t.C = !1, u.C = !0, Kr(this, u), t = u.R), t.L && t.L.C || t.R && t.R.C) {
              t.R && t.R.C || (t.L.C = !1, t.C = !0, Qr(this, t), t = u.R), t.C = u.C, u.C = t.R.C = !1, Kr(this, u), n = this._;
              break;
            }
          } else if (t = u.L, t.C && (t.C = !1, u.C = !0, Qr(this, u), t = u.L), t.L && t.L.C || t.R && t.R.C) {
            t.L && t.L.C || (t.R.C = !1, t.C = !0, Kr(this, t), t = u.L), t.C = u.C, u.C = t.L.C = !1, Qr(this, u), n = this._;
            break;
          }

          t.C = !0, n = u, u = u.U;
        } while (!n.C);

        n && (n.C = !1);
      }
    }
  }, Zo.geom.voronoi = function (n) {
    function t(n) {
      var t = new Array(n.length),
          r = a[0][0],
          u = a[0][1],
          i = a[1][0],
          o = a[1][1];
      return tu(e(n), a).cells.forEach(function (e, a) {
        var c = e.edges,
            s = e.site,
            l = t[a] = c.length ? c.map(function (n) {
          var t = n.start();
          return [t.x, t.y];
        }) : s.x >= r && s.x <= i && s.y >= u && s.y <= o ? [[r, o], [i, o], [i, u], [r, u]] : [];
        l.point = n[a];
      }), t;
    }

    function e(n) {
      return n.map(function (n, t) {
        return {
          x: Math.round(i(n, t) / ka) * ka,
          y: Math.round(o(n, t) / ka) * ka,
          i: t
        };
      });
    }

    var r = wr,
        u = Sr,
        i = r,
        o = u,
        a = Jc;
    return n ? t(n) : (t.links = function (n) {
      return tu(e(n)).edges.filter(function (n) {
        return n.l && n.r;
      }).map(function (t) {
        return {
          source: n[t.l.i],
          target: n[t.r.i]
        };
      });
    }, t.triangles = function (n) {
      var t = [];
      return tu(e(n)).cells.forEach(function (e, r) {
        for (var u, i, o = e.site, a = e.edges.sort(Hr), c = -1, s = a.length, l = a[s - 1].edge, f = l.l === o ? l.r : l.l; ++c < s;) {
          u = l, i = f, l = a[c].edge, f = l.l === o ? l.r : l.l, r < i.i && r < f.i && ru(o, i, f) < 0 && t.push([n[r], n[i.i], n[f.i]]);
        }
      }), t;
    }, t.x = function (n) {
      return arguments.length ? (i = bt(r = n), t) : r;
    }, t.y = function (n) {
      return arguments.length ? (o = bt(u = n), t) : u;
    }, t.clipExtent = function (n) {
      return arguments.length ? (a = null == n ? Jc : n, t) : a === Jc ? null : a;
    }, t.size = function (n) {
      return arguments.length ? t.clipExtent(n && [[0, 0], n]) : a === Jc ? null : a && a[1];
    }, t);
  };
  var Jc = [[-1e6, -1e6], [1e6, 1e6]];
  Zo.geom.delaunay = function (n) {
    return Zo.geom.voronoi().triangles(n);
  }, Zo.geom.quadtree = function (n, t, e, r, u) {
    function i(n) {
      function i(n, t, e, r, u, i, o, a) {
        if (!isNaN(e) && !isNaN(r)) if (n.leaf) {
          var c = n.x,
              l = n.y;
          if (null != c) {
            if (ua(c - e) + ua(l - r) < .01) s(n, t, e, r, u, i, o, a);else {
              var f = n.point;
              n.x = n.y = n.point = null, s(n, f, c, l, u, i, o, a), s(n, t, e, r, u, i, o, a);
            }
          } else n.x = e, n.y = r, n.point = t;
        } else s(n, t, e, r, u, i, o, a);
      }

      function s(n, t, e, r, u, o, a, c) {
        var s = .5 * (u + a),
            l = .5 * (o + c),
            f = e >= s,
            h = r >= l,
            g = (h << 1) + f;
        n.leaf = !1, n = n.nodes[g] || (n.nodes[g] = ou()), f ? u = s : a = s, h ? o = l : c = l, i(n, t, e, r, u, o, a, c);
      }

      var l,
          f,
          h,
          g,
          p,
          v,
          d,
          m,
          y,
          x = bt(a),
          M = bt(c);
      if (null != t) v = t, d = e, m = r, y = u;else if (m = y = -(v = d = 1 / 0), f = [], h = [], p = n.length, o) for (g = 0; p > g; ++g) {
        l = n[g], l.x < v && (v = l.x), l.y < d && (d = l.y), l.x > m && (m = l.x), l.y > y && (y = l.y), f.push(l.x), h.push(l.y);
      } else for (g = 0; p > g; ++g) {
        var _ = +x(l = n[g], g),
            b = +M(l, g);

        v > _ && (v = _), d > b && (d = b), _ > m && (m = _), b > y && (y = b), f.push(_), h.push(b);
      }
      var w = m - v,
          S = y - d;
      w > S ? y = d + w : m = v + S;
      var k = ou();

      if (k.add = function (n) {
        i(k, n, +x(n, ++g), +M(n, g), v, d, m, y);
      }, k.visit = function (n) {
        au(n, k, v, d, m, y);
      }, g = -1, null == t) {
        for (; ++g < p;) {
          i(k, n[g], f[g], h[g], v, d, m, y);
        }

        --g;
      } else n.forEach(k.add);

      return f = h = n = l = null, k;
    }

    var o,
        a = wr,
        c = Sr;
    return (o = arguments.length) ? (a = uu, c = iu, 3 === o && (u = e, r = t, e = t = 0), i(n)) : (i.x = function (n) {
      return arguments.length ? (a = n, i) : a;
    }, i.y = function (n) {
      return arguments.length ? (c = n, i) : c;
    }, i.extent = function (n) {
      return arguments.length ? (null == n ? t = e = r = u = null : (t = +n[0][0], e = +n[0][1], r = +n[1][0], u = +n[1][1]), i) : null == t ? null : [[t, e], [r, u]];
    }, i.size = function (n) {
      return arguments.length ? (null == n ? t = e = r = u = null : (t = e = 0, r = +n[0], u = +n[1]), i) : null == t ? null : [r - t, u - e];
    }, i);
  }, Zo.interpolateRgb = cu, Zo.interpolateObject = su, Zo.interpolateNumber = lu, Zo.interpolateString = fu;
  var Gc = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
      Kc = new RegExp(Gc.source, "g");
  Zo.interpolate = hu, Zo.interpolators = [function (n, t) {
    var e = _typeof(t);

    return ("string" === e ? Ia.has(t) || /^(#|rgb\(|hsl\()/.test(t) ? cu : fu : t instanceof et ? cu : Array.isArray(t) ? gu : "object" === e && isNaN(t) ? su : lu)(n, t);
  }], Zo.interpolateArray = gu;

  var Qc = function Qc() {
    return wt;
  },
      ns = Zo.map({
    linear: Qc,
    poly: Mu,
    quad: function quad() {
      return mu;
    },
    cubic: function cubic() {
      return yu;
    },
    sin: function sin() {
      return _u;
    },
    exp: function exp() {
      return bu;
    },
    circle: function circle() {
      return wu;
    },
    elastic: Su,
    back: ku,
    bounce: function bounce() {
      return Eu;
    }
  }),
      ts = Zo.map({
    "in": wt,
    out: vu,
    "in-out": du,
    "out-in": function outIn(n) {
      return du(vu(n));
    }
  });

  Zo.ease = function (n) {
    var t = n.indexOf("-"),
        e = t >= 0 ? n.substring(0, t) : n,
        r = t >= 0 ? n.substring(t + 1) : "in";
    return e = ns.get(e) || Qc, r = ts.get(r) || wt, pu(r(e.apply(null, Vo.call(arguments, 1))));
  }, Zo.interpolateHcl = Au, Zo.interpolateHsl = Cu, Zo.interpolateLab = Nu, Zo.interpolateRound = zu, Zo.transform = function (n) {
    var t = $o.createElementNS(Zo.ns.prefix.svg, "g");
    return (Zo.transform = function (n) {
      if (null != n) {
        t.setAttribute("transform", n);
        var e = t.transform.baseVal.consolidate();
      }

      return new Lu(e ? e.matrix : es);
    })(n);
  }, Lu.prototype.toString = function () {
    return "translate(" + this.translate + ")rotate(" + this.rotate + ")skewX(" + this.skew + ")scale(" + this.scale + ")";
  };
  var es = {
    a: 1,
    b: 0,
    c: 0,
    d: 1,
    e: 0,
    f: 0
  };
  Zo.interpolateTransform = Du, Zo.layout = {}, Zo.layout.bundle = function () {
    return function (n) {
      for (var t = [], e = -1, r = n.length; ++e < r;) {
        t.push(ju(n[e]));
      }

      return t;
    };
  }, Zo.layout.chord = function () {
    function n() {
      var n,
          s,
          f,
          h,
          g,
          p = {},
          v = [],
          d = Zo.range(i),
          m = [];

      for (e = [], r = [], n = 0, h = -1; ++h < i;) {
        for (s = 0, g = -1; ++g < i;) {
          s += u[h][g];
        }

        v.push(s), m.push(Zo.range(i)), n += s;
      }

      for (o && d.sort(function (n, t) {
        return o(v[n], v[t]);
      }), a && m.forEach(function (n, t) {
        n.sort(function (n, e) {
          return a(u[t][n], u[t][e]);
        });
      }), n = (wa - l * i) / n, s = 0, h = -1; ++h < i;) {
        for (f = s, g = -1; ++g < i;) {
          var y = d[h],
              x = m[y][g],
              M = u[y][x],
              _ = s,
              b = s += M * n;
          p[y + "-" + x] = {
            index: y,
            subindex: x,
            startAngle: _,
            endAngle: b,
            value: M
          };
        }

        r[y] = {
          index: y,
          startAngle: f,
          endAngle: s,
          value: (s - f) / n
        }, s += l;
      }

      for (h = -1; ++h < i;) {
        for (g = h - 1; ++g < i;) {
          var w = p[h + "-" + g],
              S = p[g + "-" + h];
          (w.value || S.value) && e.push(w.value < S.value ? {
            source: S,
            target: w
          } : {
            source: w,
            target: S
          });
        }
      }

      c && t();
    }

    function t() {
      e.sort(function (n, t) {
        return c((n.source.value + n.target.value) / 2, (t.source.value + t.target.value) / 2);
      });
    }

    var e,
        r,
        u,
        i,
        o,
        a,
        c,
        s = {},
        l = 0;
    return s.matrix = function (n) {
      return arguments.length ? (i = (u = n) && u.length, e = r = null, s) : u;
    }, s.padding = function (n) {
      return arguments.length ? (l = n, e = r = null, s) : l;
    }, s.sortGroups = function (n) {
      return arguments.length ? (o = n, e = r = null, s) : o;
    }, s.sortSubgroups = function (n) {
      return arguments.length ? (a = n, e = null, s) : a;
    }, s.sortChords = function (n) {
      return arguments.length ? (c = n, e && t(), s) : c;
    }, s.chords = function () {
      return e || n(), e;
    }, s.groups = function () {
      return r || n(), r;
    }, s;
  }, Zo.layout.force = function () {
    function n(n) {
      return function (t, e, r, u) {
        if (t.point !== n) {
          var i = t.cx - n.x,
              o = t.cy - n.y,
              a = u - e,
              c = i * i + o * o;

          if (c > a * a / d) {
            if (p > c) {
              var s = t.charge / c;
              n.px -= i * s, n.py -= o * s;
            }

            return !0;
          }

          if (t.point && c && p > c) {
            var s = t.pointCharge / c;
            n.px -= i * s, n.py -= o * s;
          }
        }

        return !t.charge;
      };
    }

    function t(n) {
      n.px = Zo.event.x, n.py = Zo.event.y, a.resume();
    }

    var e,
        r,
        u,
        i,
        o,
        a = {},
        c = Zo.dispatch("start", "tick", "end"),
        s = [1, 1],
        l = .9,
        f = rs,
        h = us,
        g = -30,
        p = is,
        v = .1,
        d = .64,
        m = [],
        y = [];
    return a.tick = function () {
      if ((r *= .99) < .005) return c.end({
        type: "end",
        alpha: r = 0
      }), !0;
      var t,
          e,
          a,
          f,
          h,
          p,
          d,
          x,
          M,
          _ = m.length,
          b = y.length;

      for (e = 0; b > e; ++e) {
        a = y[e], f = a.source, h = a.target, x = h.x - f.x, M = h.y - f.y, (p = x * x + M * M) && (p = r * i[e] * ((p = Math.sqrt(p)) - u[e]) / p, x *= p, M *= p, h.x -= x * (d = f.weight / (h.weight + f.weight)), h.y -= M * d, f.x += x * (d = 1 - d), f.y += M * d);
      }

      if ((d = r * v) && (x = s[0] / 2, M = s[1] / 2, e = -1, d)) for (; ++e < _;) {
        a = m[e], a.x += (x - a.x) * d, a.y += (M - a.y) * d;
      }
      if (g) for (Vu(t = Zo.geom.quadtree(m), r, o), e = -1; ++e < _;) {
        (a = m[e]).fixed || t.visit(n(a));
      }

      for (e = -1; ++e < _;) {
        a = m[e], a.fixed ? (a.x = a.px, a.y = a.py) : (a.x -= (a.px - (a.px = a.x)) * l, a.y -= (a.py - (a.py = a.y)) * l);
      }

      c.tick({
        type: "tick",
        alpha: r
      });
    }, a.nodes = function (n) {
      return arguments.length ? (m = n, a) : m;
    }, a.links = function (n) {
      return arguments.length ? (y = n, a) : y;
    }, a.size = function (n) {
      return arguments.length ? (s = n, a) : s;
    }, a.linkDistance = function (n) {
      return arguments.length ? (f = "function" == typeof n ? n : +n, a) : f;
    }, a.distance = a.linkDistance, a.linkStrength = function (n) {
      return arguments.length ? (h = "function" == typeof n ? n : +n, a) : h;
    }, a.friction = function (n) {
      return arguments.length ? (l = +n, a) : l;
    }, a.charge = function (n) {
      return arguments.length ? (g = "function" == typeof n ? n : +n, a) : g;
    }, a.chargeDistance = function (n) {
      return arguments.length ? (p = n * n, a) : Math.sqrt(p);
    }, a.gravity = function (n) {
      return arguments.length ? (v = +n, a) : v;
    }, a.theta = function (n) {
      return arguments.length ? (d = n * n, a) : Math.sqrt(d);
    }, a.alpha = function (n) {
      return arguments.length ? (n = +n, r ? r = n > 0 ? n : 0 : n > 0 && (c.start({
        type: "start",
        alpha: r = n
      }), Zo.timer(a.tick)), a) : r;
    }, a.start = function () {
      function n(n, r) {
        if (!e) {
          for (e = new Array(c), a = 0; c > a; ++a) {
            e[a] = [];
          }

          for (a = 0; s > a; ++a) {
            var u = y[a];
            e[u.source.index].push(u.target), e[u.target.index].push(u.source);
          }
        }

        for (var i, o = e[t], a = -1, s = o.length; ++a < s;) {
          if (!isNaN(i = o[a][n])) return i;
        }

        return Math.random() * r;
      }

      var t,
          e,
          r,
          c = m.length,
          l = y.length,
          p = s[0],
          v = s[1];

      for (t = 0; c > t; ++t) {
        (r = m[t]).index = t, r.weight = 0;
      }

      for (t = 0; l > t; ++t) {
        r = y[t], "number" == typeof r.source && (r.source = m[r.source]), "number" == typeof r.target && (r.target = m[r.target]), ++r.source.weight, ++r.target.weight;
      }

      for (t = 0; c > t; ++t) {
        r = m[t], isNaN(r.x) && (r.x = n("x", p)), isNaN(r.y) && (r.y = n("y", v)), isNaN(r.px) && (r.px = r.x), isNaN(r.py) && (r.py = r.y);
      }

      if (u = [], "function" == typeof f) for (t = 0; l > t; ++t) {
        u[t] = +f.call(this, y[t], t);
      } else for (t = 0; l > t; ++t) {
        u[t] = f;
      }
      if (i = [], "function" == typeof h) for (t = 0; l > t; ++t) {
        i[t] = +h.call(this, y[t], t);
      } else for (t = 0; l > t; ++t) {
        i[t] = h;
      }
      if (o = [], "function" == typeof g) for (t = 0; c > t; ++t) {
        o[t] = +g.call(this, m[t], t);
      } else for (t = 0; c > t; ++t) {
        o[t] = g;
      }
      return a.resume();
    }, a.resume = function () {
      return a.alpha(.1);
    }, a.stop = function () {
      return a.alpha(0);
    }, a.drag = function () {
      return e || (e = Zo.behavior.drag().origin(wt).on("dragstart.force", Ou).on("drag.force", t).on("dragend.force", Yu)), arguments.length ? (this.on("mouseover.force", Iu).on("mouseout.force", Zu).call(e), void 0) : e;
    }, Zo.rebind(a, c, "on");
  };
  var rs = 20,
      us = 1,
      is = 1 / 0;
  Zo.layout.hierarchy = function () {
    function n(u) {
      var i,
          o = [u],
          a = [];

      for (u.depth = 0; null != (i = o.pop());) {
        if (a.push(i), (s = e.call(n, i, i.depth)) && (c = s.length)) {
          for (var c, s, l; --c >= 0;) {
            o.push(l = s[c]), l.parent = i, l.depth = i.depth + 1;
          }

          r && (i.value = 0), i.children = s;
        } else r && (i.value = +r.call(n, i, i.depth) || 0), delete i.children;
      }

      return Bu(u, function (n) {
        var e, u;
        t && (e = n.children) && e.sort(t), r && (u = n.parent) && (u.value += n.value);
      }), a;
    }

    var t = Gu,
        e = Wu,
        r = Ju;
    return n.sort = function (e) {
      return arguments.length ? (t = e, n) : t;
    }, n.children = function (t) {
      return arguments.length ? (e = t, n) : e;
    }, n.value = function (t) {
      return arguments.length ? (r = t, n) : r;
    }, n.revalue = function (t) {
      return r && ($u(t, function (n) {
        n.children && (n.value = 0);
      }), Bu(t, function (t) {
        var e;
        t.children || (t.value = +r.call(n, t, t.depth) || 0), (e = t.parent) && (e.value += t.value);
      })), t;
    }, n;
  }, Zo.layout.partition = function () {
    function n(t, e, r, u) {
      var i = t.children;

      if (t.x = e, t.y = t.depth * u, t.dx = r, t.dy = u, i && (o = i.length)) {
        var o,
            a,
            c,
            s = -1;

        for (r = t.value ? r / t.value : 0; ++s < o;) {
          n(a = i[s], e, c = a.value * r, u), e += c;
        }
      }
    }

    function t(n) {
      var e = n.children,
          r = 0;
      if (e && (u = e.length)) for (var u, i = -1; ++i < u;) {
        r = Math.max(r, t(e[i]));
      }
      return 1 + r;
    }

    function e(e, i) {
      var o = r.call(this, e, i);
      return n(o[0], 0, u[0], u[1] / t(o[0])), o;
    }

    var r = Zo.layout.hierarchy(),
        u = [1, 1];
    return e.size = function (n) {
      return arguments.length ? (u = n, e) : u;
    }, Xu(e, r);
  }, Zo.layout.pie = function () {
    function n(i) {
      var o = i.map(function (e, r) {
        return +t.call(n, e, r);
      }),
          a = +("function" == typeof r ? r.apply(this, arguments) : r),
          c = (("function" == typeof u ? u.apply(this, arguments) : u) - a) / Zo.sum(o),
          s = Zo.range(i.length);
      null != e && s.sort(e === os ? function (n, t) {
        return o[t] - o[n];
      } : function (n, t) {
        return e(i[n], i[t]);
      });
      var l = [];
      return s.forEach(function (n) {
        var t;
        l[n] = {
          data: i[n],
          value: t = o[n],
          startAngle: a,
          endAngle: a += t * c
        };
      }), l;
    }

    var t = Number,
        e = os,
        r = 0,
        u = wa;
    return n.value = function (e) {
      return arguments.length ? (t = e, n) : t;
    }, n.sort = function (t) {
      return arguments.length ? (e = t, n) : e;
    }, n.startAngle = function (t) {
      return arguments.length ? (r = t, n) : r;
    }, n.endAngle = function (t) {
      return arguments.length ? (u = t, n) : u;
    }, n;
  };
  var os = {};

  Zo.layout.stack = function () {
    function n(a, c) {
      var s = a.map(function (e, r) {
        return t.call(n, e, r);
      }),
          l = s.map(function (t) {
        return t.map(function (t, e) {
          return [i.call(n, t, e), o.call(n, t, e)];
        });
      }),
          f = e.call(n, l, c);
      s = Zo.permute(s, f), l = Zo.permute(l, f);
      var h,
          g,
          p,
          v = r.call(n, l, c),
          d = s.length,
          m = s[0].length;

      for (g = 0; m > g; ++g) {
        for (u.call(n, s[0][g], p = v[g], l[0][g][1]), h = 1; d > h; ++h) {
          u.call(n, s[h][g], p += l[h - 1][g][1], l[h][g][1]);
        }
      }

      return a;
    }

    var t = wt,
        e = ei,
        r = ri,
        u = ti,
        i = Qu,
        o = ni;
    return n.values = function (e) {
      return arguments.length ? (t = e, n) : t;
    }, n.order = function (t) {
      return arguments.length ? (e = "function" == typeof t ? t : as.get(t) || ei, n) : e;
    }, n.offset = function (t) {
      return arguments.length ? (r = "function" == typeof t ? t : cs.get(t) || ri, n) : r;
    }, n.x = function (t) {
      return arguments.length ? (i = t, n) : i;
    }, n.y = function (t) {
      return arguments.length ? (o = t, n) : o;
    }, n.out = function (t) {
      return arguments.length ? (u = t, n) : u;
    }, n;
  };

  var as = Zo.map({
    "inside-out": function insideOut(n) {
      var t,
          e,
          r = n.length,
          u = n.map(ui),
          i = n.map(ii),
          o = Zo.range(r).sort(function (n, t) {
        return u[n] - u[t];
      }),
          a = 0,
          c = 0,
          s = [],
          l = [];

      for (t = 0; r > t; ++t) {
        e = o[t], c > a ? (a += i[e], s.push(e)) : (c += i[e], l.push(e));
      }

      return l.reverse().concat(s);
    },
    reverse: function reverse(n) {
      return Zo.range(n.length).reverse();
    },
    "default": ei
  }),
      cs = Zo.map({
    silhouette: function silhouette(n) {
      var t,
          e,
          r,
          u = n.length,
          i = n[0].length,
          o = [],
          a = 0,
          c = [];

      for (e = 0; i > e; ++e) {
        for (t = 0, r = 0; u > t; t++) {
          r += n[t][e][1];
        }

        r > a && (a = r), o.push(r);
      }

      for (e = 0; i > e; ++e) {
        c[e] = (a - o[e]) / 2;
      }

      return c;
    },
    wiggle: function wiggle(n) {
      var t,
          e,
          r,
          u,
          i,
          o,
          a,
          c,
          s,
          l = n.length,
          f = n[0],
          h = f.length,
          g = [];

      for (g[0] = c = s = 0, e = 1; h > e; ++e) {
        for (t = 0, u = 0; l > t; ++t) {
          u += n[t][e][1];
        }

        for (t = 0, i = 0, a = f[e][0] - f[e - 1][0]; l > t; ++t) {
          for (r = 0, o = (n[t][e][1] - n[t][e - 1][1]) / (2 * a); t > r; ++r) {
            o += (n[r][e][1] - n[r][e - 1][1]) / a;
          }

          i += o * n[t][e][1];
        }

        g[e] = c -= u ? i / u * a : 0, s > c && (s = c);
      }

      for (e = 0; h > e; ++e) {
        g[e] -= s;
      }

      return g;
    },
    expand: function expand(n) {
      var t,
          e,
          r,
          u = n.length,
          i = n[0].length,
          o = 1 / u,
          a = [];

      for (e = 0; i > e; ++e) {
        for (t = 0, r = 0; u > t; t++) {
          r += n[t][e][1];
        }

        if (r) for (t = 0; u > t; t++) {
          n[t][e][1] /= r;
        } else for (t = 0; u > t; t++) {
          n[t][e][1] = o;
        }
      }

      for (e = 0; i > e; ++e) {
        a[e] = 0;
      }

      return a;
    },
    zero: ri
  });
  Zo.layout.histogram = function () {
    function n(n, i) {
      for (var o, a, c = [], s = n.map(e, this), l = r.call(this, s, i), f = u.call(this, l, s, i), i = -1, h = s.length, g = f.length - 1, p = t ? 1 : 1 / h; ++i < g;) {
        o = c[i] = [], o.dx = f[i + 1] - (o.x = f[i]), o.y = 0;
      }

      if (g > 0) for (i = -1; ++i < h;) {
        a = s[i], a >= l[0] && a <= l[1] && (o = c[Zo.bisect(f, a, 1, g) - 1], o.y += p, o.push(n[i]));
      }
      return c;
    }

    var t = !0,
        e = Number,
        r = si,
        u = ai;
    return n.value = function (t) {
      return arguments.length ? (e = t, n) : e;
    }, n.range = function (t) {
      return arguments.length ? (r = bt(t), n) : r;
    }, n.bins = function (t) {
      return arguments.length ? (u = "number" == typeof t ? function (n) {
        return ci(n, t);
      } : bt(t), n) : u;
    }, n.frequency = function (e) {
      return arguments.length ? (t = !!e, n) : t;
    }, n;
  }, Zo.layout.pack = function () {
    function n(n, i) {
      var o = e.call(this, n, i),
          a = o[0],
          c = u[0],
          s = u[1],
          l = null == t ? Math.sqrt : "function" == typeof t ? t : function () {
        return t;
      };

      if (a.x = a.y = 0, Bu(a, function (n) {
        n.r = +l(n.value);
      }), Bu(a, pi), r) {
        var f = r * (t ? 1 : Math.max(2 * a.r / c, 2 * a.r / s)) / 2;
        Bu(a, function (n) {
          n.r += f;
        }), Bu(a, pi), Bu(a, function (n) {
          n.r -= f;
        });
      }

      return mi(a, c / 2, s / 2, t ? 1 : 1 / Math.max(2 * a.r / c, 2 * a.r / s)), o;
    }

    var t,
        e = Zo.layout.hierarchy().sort(li),
        r = 0,
        u = [1, 1];
    return n.size = function (t) {
      return arguments.length ? (u = t, n) : u;
    }, n.radius = function (e) {
      return arguments.length ? (t = null == e || "function" == typeof e ? e : +e, n) : t;
    }, n.padding = function (t) {
      return arguments.length ? (r = +t, n) : r;
    }, Xu(n, e);
  }, Zo.layout.tree = function () {
    function n(n, u) {
      var l = o.call(this, n, u),
          f = l[0],
          h = t(f);
      if (Bu(h, e), h.parent.m = -h.z, $u(h, r), s) $u(f, i);else {
        var g = f,
            p = f,
            v = f;
        $u(f, function (n) {
          n.x < g.x && (g = n), n.x > p.x && (p = n), n.depth > v.depth && (v = n);
        });
        var d = a(g, p) / 2 - g.x,
            m = c[0] / (p.x + a(p, g) / 2 + d),
            y = c[1] / (v.depth || 1);
        $u(f, function (n) {
          n.x = (n.x + d) * m, n.y = n.depth * y;
        });
      }
      return l;
    }

    function t(n) {
      for (var t, e = {
        A: null,
        children: [n]
      }, r = [e]; null != (t = r.pop());) {
        for (var u, i = t.children, o = 0, a = i.length; a > o; ++o) {
          r.push((i[o] = u = {
            _: i[o],
            parent: t,
            children: (u = i[o].children) && u.slice() || [],
            A: null,
            a: null,
            z: 0,
            m: 0,
            c: 0,
            s: 0,
            t: null,
            i: o
          }).a = u);
        }
      }

      return e.children[0];
    }

    function e(n) {
      var t = n.children,
          e = n.parent.children,
          r = n.i ? e[n.i - 1] : null;

      if (t.length) {
        wi(n);
        var i = (t[0].z + t[t.length - 1].z) / 2;
        r ? (n.z = r.z + a(n._, r._), n.m = n.z - i) : n.z = i;
      } else r && (n.z = r.z + a(n._, r._));

      n.parent.A = u(n, r, n.parent.A || e[0]);
    }

    function r(n) {
      n._.x = n.z + n.parent.m, n.m += n.parent.m;
    }

    function u(n, t, e) {
      if (t) {
        for (var r, u = n, i = n, o = t, c = u.parent.children[0], s = u.m, l = i.m, f = o.m, h = c.m; o = _i(o), u = Mi(u), o && u;) {
          c = Mi(c), i = _i(i), i.a = n, r = o.z + f - u.z - s + a(o._, u._), r > 0 && (bi(Si(o, n, e), n, r), s += r, l += r), f += o.m, s += u.m, h += c.m, l += i.m;
        }

        o && !_i(i) && (i.t = o, i.m += f - l), u && !Mi(c) && (c.t = u, c.m += s - h, e = n);
      }

      return e;
    }

    function i(n) {
      n.x *= c[0], n.y = n.depth * c[1];
    }

    var o = Zo.layout.hierarchy().sort(null).value(null),
        a = xi,
        c = [1, 1],
        s = null;
    return n.separation = function (t) {
      return arguments.length ? (a = t, n) : a;
    }, n.size = function (t) {
      return arguments.length ? (s = null == (c = t) ? i : null, n) : s ? null : c;
    }, n.nodeSize = function (t) {
      return arguments.length ? (s = null == (c = t) ? null : i, n) : s ? c : null;
    }, Xu(n, o);
  }, Zo.layout.cluster = function () {
    function n(n, i) {
      var o,
          a = t.call(this, n, i),
          c = a[0],
          s = 0;
      Bu(c, function (n) {
        var t = n.children;
        t && t.length ? (n.x = Ei(t), n.y = ki(t)) : (n.x = o ? s += e(n, o) : 0, n.y = 0, o = n);
      });
      var l = Ai(c),
          f = Ci(c),
          h = l.x - e(l, f) / 2,
          g = f.x + e(f, l) / 2;
      return Bu(c, u ? function (n) {
        n.x = (n.x - c.x) * r[0], n.y = (c.y - n.y) * r[1];
      } : function (n) {
        n.x = (n.x - h) / (g - h) * r[0], n.y = (1 - (c.y ? n.y / c.y : 1)) * r[1];
      }), a;
    }

    var t = Zo.layout.hierarchy().sort(null).value(null),
        e = xi,
        r = [1, 1],
        u = !1;
    return n.separation = function (t) {
      return arguments.length ? (e = t, n) : e;
    }, n.size = function (t) {
      return arguments.length ? (u = null == (r = t), n) : u ? null : r;
    }, n.nodeSize = function (t) {
      return arguments.length ? (u = null != (r = t), n) : u ? r : null;
    }, Xu(n, t);
  }, Zo.layout.treemap = function () {
    function n(n, t) {
      for (var e, r, u = -1, i = n.length; ++u < i;) {
        r = (e = n[u]).value * (0 > t ? 0 : t), e.area = isNaN(r) || 0 >= r ? 0 : r;
      }
    }

    function t(e) {
      var i = e.children;

      if (i && i.length) {
        var o,
            a,
            c,
            s = f(e),
            l = [],
            h = i.slice(),
            p = 1 / 0,
            v = "slice" === g ? s.dx : "dice" === g ? s.dy : "slice-dice" === g ? 1 & e.depth ? s.dy : s.dx : Math.min(s.dx, s.dy);

        for (n(h, s.dx * s.dy / e.value), l.area = 0; (c = h.length) > 0;) {
          l.push(o = h[c - 1]), l.area += o.area, "squarify" !== g || (a = r(l, v)) <= p ? (h.pop(), p = a) : (l.area -= l.pop().area, u(l, v, s, !1), v = Math.min(s.dx, s.dy), l.length = l.area = 0, p = 1 / 0);
        }

        l.length && (u(l, v, s, !0), l.length = l.area = 0), i.forEach(t);
      }
    }

    function e(t) {
      var r = t.children;

      if (r && r.length) {
        var i,
            o = f(t),
            a = r.slice(),
            c = [];

        for (n(a, o.dx * o.dy / t.value), c.area = 0; i = a.pop();) {
          c.push(i), c.area += i.area, null != i.z && (u(c, i.z ? o.dx : o.dy, o, !a.length), c.length = c.area = 0);
        }

        r.forEach(e);
      }
    }

    function r(n, t) {
      for (var e, r = n.area, u = 0, i = 1 / 0, o = -1, a = n.length; ++o < a;) {
        (e = n[o].area) && (i > e && (i = e), e > u && (u = e));
      }

      return r *= r, t *= t, r ? Math.max(t * u * p / r, r / (t * i * p)) : 1 / 0;
    }

    function u(n, t, e, r) {
      var u,
          i = -1,
          o = n.length,
          a = e.x,
          s = e.y,
          l = t ? c(n.area / t) : 0;

      if (t == e.dx) {
        for ((r || l > e.dy) && (l = e.dy); ++i < o;) {
          u = n[i], u.x = a, u.y = s, u.dy = l, a += u.dx = Math.min(e.x + e.dx - a, l ? c(u.area / l) : 0);
        }

        u.z = !0, u.dx += e.x + e.dx - a, e.y += l, e.dy -= l;
      } else {
        for ((r || l > e.dx) && (l = e.dx); ++i < o;) {
          u = n[i], u.x = a, u.y = s, u.dx = l, s += u.dy = Math.min(e.y + e.dy - s, l ? c(u.area / l) : 0);
        }

        u.z = !1, u.dy += e.y + e.dy - s, e.x += l, e.dx -= l;
      }
    }

    function i(r) {
      var u = o || a(r),
          i = u[0];
      return i.x = 0, i.y = 0, i.dx = s[0], i.dy = s[1], o && a.revalue(i), n([i], i.dx * i.dy / i.value), (o ? e : t)(i), h && (o = u), u;
    }

    var o,
        a = Zo.layout.hierarchy(),
        c = Math.round,
        s = [1, 1],
        l = null,
        f = Ni,
        h = !1,
        g = "squarify",
        p = .5 * (1 + Math.sqrt(5));
    return i.size = function (n) {
      return arguments.length ? (s = n, i) : s;
    }, i.padding = function (n) {
      function t(t) {
        var e = n.call(i, t, t.depth);
        return null == e ? Ni(t) : zi(t, "number" == typeof e ? [e, e, e, e] : e);
      }

      function e(t) {
        return zi(t, n);
      }

      if (!arguments.length) return l;
      var r;
      return f = null == (l = n) ? Ni : "function" == (r = _typeof(n)) ? t : "number" === r ? (n = [n, n, n, n], e) : e, i;
    }, i.round = function (n) {
      return arguments.length ? (c = n ? Math.round : Number, i) : c != Number;
    }, i.sticky = function (n) {
      return arguments.length ? (h = n, o = null, i) : h;
    }, i.ratio = function (n) {
      return arguments.length ? (p = n, i) : p;
    }, i.mode = function (n) {
      return arguments.length ? (g = n + "", i) : g;
    }, Xu(i, a);
  }, Zo.random = {
    normal: function normal(n, t) {
      var e = arguments.length;
      return 2 > e && (t = 1), 1 > e && (n = 0), function () {
        var e, r, u;

        do {
          e = 2 * Math.random() - 1, r = 2 * Math.random() - 1, u = e * e + r * r;
        } while (!u || u > 1);

        return n + t * e * Math.sqrt(-2 * Math.log(u) / u);
      };
    },
    logNormal: function logNormal() {
      var n = Zo.random.normal.apply(Zo, arguments);
      return function () {
        return Math.exp(n());
      };
    },
    bates: function bates(n) {
      var t = Zo.random.irwinHall(n);
      return function () {
        return t() / n;
      };
    },
    irwinHall: function irwinHall(n) {
      return function () {
        for (var t = 0, e = 0; n > e; e++) {
          t += Math.random();
        }

        return t;
      };
    }
  }, Zo.scale = {};
  var ss = {
    floor: wt,
    ceil: wt
  };

  Zo.scale.linear = function () {
    return Ui([0, 1], [0, 1], hu, !1);
  };

  var ls = {
    s: 1,
    g: 1,
    p: 1,
    r: 1,
    e: 1
  };

  Zo.scale.log = function () {
    return Vi(Zo.scale.linear().domain([0, 1]), 10, !0, [1, 10]);
  };

  var fs = Zo.format(".0e"),
      hs = {
    floor: function floor(n) {
      return -Math.ceil(-n);
    },
    ceil: function ceil(n) {
      return -Math.floor(-n);
    }
  };
  Zo.scale.pow = function () {
    return Xi(Zo.scale.linear(), 1, [0, 1]);
  }, Zo.scale.sqrt = function () {
    return Zo.scale.pow().exponent(.5);
  }, Zo.scale.ordinal = function () {
    return Bi([], {
      t: "range",
      a: [[]]
    });
  }, Zo.scale.category10 = function () {
    return Zo.scale.ordinal().range(gs);
  }, Zo.scale.category20 = function () {
    return Zo.scale.ordinal().range(ps);
  }, Zo.scale.category20b = function () {
    return Zo.scale.ordinal().range(vs);
  }, Zo.scale.category20c = function () {
    return Zo.scale.ordinal().range(ds);
  };
  var gs = [2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175].map(vt),
      ps = [2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725].map(vt),
      vs = [3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654].map(vt),
      ds = [3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081].map(vt);
  Zo.scale.quantile = function () {
    return Wi([], []);
  }, Zo.scale.quantize = function () {
    return Ji(0, 1, [0, 1]);
  }, Zo.scale.threshold = function () {
    return Gi([.5], [0, 1]);
  }, Zo.scale.identity = function () {
    return Ki([0, 1]);
  }, Zo.svg = {}, Zo.svg.arc = function () {
    function n() {
      var n = t.apply(this, arguments),
          i = e.apply(this, arguments),
          o = r.apply(this, arguments) + ms,
          a = u.apply(this, arguments) + ms,
          c = (o > a && (c = o, o = a, a = c), a - o),
          s = ba > c ? "0" : "1",
          l = Math.cos(o),
          f = Math.sin(o),
          h = Math.cos(a),
          g = Math.sin(a);
      return c >= ys ? n ? "M0," + i + "A" + i + "," + i + " 0 1,1 0," + -i + "A" + i + "," + i + " 0 1,1 0," + i + "M0," + n + "A" + n + "," + n + " 0 1,0 0," + -n + "A" + n + "," + n + " 0 1,0 0," + n + "Z" : "M0," + i + "A" + i + "," + i + " 0 1,1 0," + -i + "A" + i + "," + i + " 0 1,1 0," + i + "Z" : n ? "M" + i * l + "," + i * f + "A" + i + "," + i + " 0 " + s + ",1 " + i * h + "," + i * g + "L" + n * h + "," + n * g + "A" + n + "," + n + " 0 " + s + ",0 " + n * l + "," + n * f + "Z" : "M" + i * l + "," + i * f + "A" + i + "," + i + " 0 " + s + ",1 " + i * h + "," + i * g + "L0,0" + "Z";
    }

    var t = Qi,
        e = no,
        r = to,
        u = eo;
    return n.innerRadius = function (e) {
      return arguments.length ? (t = bt(e), n) : t;
    }, n.outerRadius = function (t) {
      return arguments.length ? (e = bt(t), n) : e;
    }, n.startAngle = function (t) {
      return arguments.length ? (r = bt(t), n) : r;
    }, n.endAngle = function (t) {
      return arguments.length ? (u = bt(t), n) : u;
    }, n.centroid = function () {
      var n = (t.apply(this, arguments) + e.apply(this, arguments)) / 2,
          i = (r.apply(this, arguments) + u.apply(this, arguments)) / 2 + ms;
      return [Math.cos(i) * n, Math.sin(i) * n];
    }, n;
  };
  var ms = -Sa,
      ys = wa - ka;

  Zo.svg.line = function () {
    return ro(wt);
  };

  var xs = Zo.map({
    linear: uo,
    "linear-closed": io,
    step: oo,
    "step-before": ao,
    "step-after": co,
    basis: po,
    "basis-open": vo,
    "basis-closed": mo,
    bundle: yo,
    cardinal: fo,
    "cardinal-open": so,
    "cardinal-closed": lo,
    monotone: So
  });
  xs.forEach(function (n, t) {
    t.key = n, t.closed = /-closed$/.test(n);
  });
  var Ms = [0, 2 / 3, 1 / 3, 0],
      _s = [0, 1 / 3, 2 / 3, 0],
      bs = [0, 1 / 6, 2 / 3, 1 / 6];
  Zo.svg.line.radial = function () {
    var n = ro(ko);
    return n.radius = n.x, delete n.x, n.angle = n.y, delete n.y, n;
  }, ao.reverse = co, co.reverse = ao, Zo.svg.area = function () {
    return Eo(wt);
  }, Zo.svg.area.radial = function () {
    var n = Eo(ko);
    return n.radius = n.x, delete n.x, n.innerRadius = n.x0, delete n.x0, n.outerRadius = n.x1, delete n.x1, n.angle = n.y, delete n.y, n.startAngle = n.y0, delete n.y0, n.endAngle = n.y1, delete n.y1, n;
  }, Zo.svg.chord = function () {
    function n(n, a) {
      var c = t(this, i, n, a),
          s = t(this, o, n, a);
      return "M" + c.p0 + r(c.r, c.p1, c.a1 - c.a0) + (e(c, s) ? u(c.r, c.p1, c.r, c.p0) : u(c.r, c.p1, s.r, s.p0) + r(s.r, s.p1, s.a1 - s.a0) + u(s.r, s.p1, c.r, c.p0)) + "Z";
    }

    function t(n, t, e, r) {
      var u = t.call(n, e, r),
          i = a.call(n, u, r),
          o = c.call(n, u, r) + ms,
          l = s.call(n, u, r) + ms;
      return {
        r: i,
        a0: o,
        a1: l,
        p0: [i * Math.cos(o), i * Math.sin(o)],
        p1: [i * Math.cos(l), i * Math.sin(l)]
      };
    }

    function e(n, t) {
      return n.a0 == t.a0 && n.a1 == t.a1;
    }

    function r(n, t, e) {
      return "A" + n + "," + n + " 0 " + +(e > ba) + ",1 " + t;
    }

    function u(n, t, e, r) {
      return "Q 0,0 " + r;
    }

    var i = gr,
        o = pr,
        a = Ao,
        c = to,
        s = eo;
    return n.radius = function (t) {
      return arguments.length ? (a = bt(t), n) : a;
    }, n.source = function (t) {
      return arguments.length ? (i = bt(t), n) : i;
    }, n.target = function (t) {
      return arguments.length ? (o = bt(t), n) : o;
    }, n.startAngle = function (t) {
      return arguments.length ? (c = bt(t), n) : c;
    }, n.endAngle = function (t) {
      return arguments.length ? (s = bt(t), n) : s;
    }, n;
  }, Zo.svg.diagonal = function () {
    function n(n, u) {
      var i = t.call(this, n, u),
          o = e.call(this, n, u),
          a = (i.y + o.y) / 2,
          c = [i, {
        x: i.x,
        y: a
      }, {
        x: o.x,
        y: a
      }, o];
      return c = c.map(r), "M" + c[0] + "C" + c[1] + " " + c[2] + " " + c[3];
    }

    var t = gr,
        e = pr,
        r = Co;
    return n.source = function (e) {
      return arguments.length ? (t = bt(e), n) : t;
    }, n.target = function (t) {
      return arguments.length ? (e = bt(t), n) : e;
    }, n.projection = function (t) {
      return arguments.length ? (r = t, n) : r;
    }, n;
  }, Zo.svg.diagonal.radial = function () {
    var n = Zo.svg.diagonal(),
        t = Co,
        e = n.projection;
    return n.projection = function (n) {
      return arguments.length ? e(No(t = n)) : t;
    }, n;
  }, Zo.svg.symbol = function () {
    function n(n, r) {
      return (ws.get(t.call(this, n, r)) || To)(e.call(this, n, r));
    }

    var t = Lo,
        e = zo;
    return n.type = function (e) {
      return arguments.length ? (t = bt(e), n) : t;
    }, n.size = function (t) {
      return arguments.length ? (e = bt(t), n) : e;
    }, n;
  };
  var ws = Zo.map({
    circle: To,
    cross: function cross(n) {
      var t = Math.sqrt(n / 5) / 2;
      return "M" + -3 * t + "," + -t + "H" + -t + "V" + -3 * t + "H" + t + "V" + -t + "H" + 3 * t + "V" + t + "H" + t + "V" + 3 * t + "H" + -t + "V" + t + "H" + -3 * t + "Z";
    },
    diamond: function diamond(n) {
      var t = Math.sqrt(n / (2 * As)),
          e = t * As;
      return "M0," + -t + "L" + e + ",0" + " 0," + t + " " + -e + ",0" + "Z";
    },
    square: function square(n) {
      var t = Math.sqrt(n) / 2;
      return "M" + -t + "," + -t + "L" + t + "," + -t + " " + t + "," + t + " " + -t + "," + t + "Z";
    },
    "triangle-down": function triangleDown(n) {
      var t = Math.sqrt(n / Es),
          e = t * Es / 2;
      return "M0," + e + "L" + t + "," + -e + " " + -t + "," + -e + "Z";
    },
    "triangle-up": function triangleUp(n) {
      var t = Math.sqrt(n / Es),
          e = t * Es / 2;
      return "M0," + -e + "L" + t + "," + e + " " + -t + "," + e + "Z";
    }
  });
  Zo.svg.symbolTypes = ws.keys();
  var Ss,
      ks,
      Es = Math.sqrt(3),
      As = Math.tan(30 * Aa),
      Cs = [],
      Ns = 0;
  Cs.call = pa.call, Cs.empty = pa.empty, Cs.node = pa.node, Cs.size = pa.size, Zo.transition = function (n) {
    return arguments.length ? Ss ? n.transition() : n : ma.transition();
  }, Zo.transition.prototype = Cs, Cs.select = function (n) {
    var t,
        e,
        r,
        u = this.id,
        i = [];
    n = b(n);

    for (var o = -1, a = this.length; ++o < a;) {
      i.push(t = []);

      for (var c = this[o], s = -1, l = c.length; ++s < l;) {
        (r = c[s]) && (e = n.call(r, r.__data__, s, o)) ? ("__data__" in r && (e.__data__ = r.__data__), Po(e, s, u, r.__transition__[u]), t.push(e)) : t.push(null);
      }
    }

    return qo(i, u);
  }, Cs.selectAll = function (n) {
    var t,
        e,
        r,
        u,
        i,
        o = this.id,
        a = [];
    n = w(n);

    for (var c = -1, s = this.length; ++c < s;) {
      for (var l = this[c], f = -1, h = l.length; ++f < h;) {
        if (r = l[f]) {
          i = r.__transition__[o], e = n.call(r, r.__data__, f, c), a.push(t = []);

          for (var g = -1, p = e.length; ++g < p;) {
            (u = e[g]) && Po(u, g, o, i), t.push(u);
          }
        }
      }
    }

    return qo(a, o);
  }, Cs.filter = function (n) {
    var t,
        e,
        r,
        u = [];
    "function" != typeof n && (n = R(n));

    for (var i = 0, o = this.length; o > i; i++) {
      u.push(t = []);

      for (var e = this[i], a = 0, c = e.length; c > a; a++) {
        (r = e[a]) && n.call(r, r.__data__, a, i) && t.push(r);
      }
    }

    return qo(u, this.id);
  }, Cs.tween = function (n, t) {
    var e = this.id;
    return arguments.length < 2 ? this.node().__transition__[e].tween.get(n) : P(this, null == t ? function (t) {
      t.__transition__[e].tween.remove(n);
    } : function (r) {
      r.__transition__[e].tween.set(n, t);
    });
  }, Cs.attr = function (n, t) {
    function e() {
      this.removeAttribute(a);
    }

    function r() {
      this.removeAttributeNS(a.space, a.local);
    }

    function u(n) {
      return null == n ? e : (n += "", function () {
        var t,
            e = this.getAttribute(a);
        return e !== n && (t = o(e, n), function (n) {
          this.setAttribute(a, t(n));
        });
      });
    }

    function i(n) {
      return null == n ? r : (n += "", function () {
        var t,
            e = this.getAttributeNS(a.space, a.local);
        return e !== n && (t = o(e, n), function (n) {
          this.setAttributeNS(a.space, a.local, t(n));
        });
      });
    }

    if (arguments.length < 2) {
      for (t in n) {
        this.attr(t, n[t]);
      }

      return this;
    }

    var o = "transform" == n ? Du : hu,
        a = Zo.ns.qualify(n);
    return Ro(this, "attr." + n, t, a.local ? i : u);
  }, Cs.attrTween = function (n, t) {
    function e(n, e) {
      var r = t.call(this, n, e, this.getAttribute(u));
      return r && function (n) {
        this.setAttribute(u, r(n));
      };
    }

    function r(n, e) {
      var r = t.call(this, n, e, this.getAttributeNS(u.space, u.local));
      return r && function (n) {
        this.setAttributeNS(u.space, u.local, r(n));
      };
    }

    var u = Zo.ns.qualify(n);
    return this.tween("attr." + n, u.local ? r : e);
  }, Cs.style = function (n, t, e) {
    function r() {
      this.style.removeProperty(n);
    }

    function u(t) {
      return null == t ? r : (t += "", function () {
        var r,
            u = Wo.getComputedStyle(this, null).getPropertyValue(n);
        return u !== t && (r = hu(u, t), function (t) {
          this.style.setProperty(n, r(t), e);
        });
      });
    }

    var i = arguments.length;

    if (3 > i) {
      if ("string" != typeof n) {
        2 > i && (t = "");

        for (e in n) {
          this.style(e, n[e], t);
        }

        return this;
      }

      e = "";
    }

    return Ro(this, "style." + n, t, u);
  }, Cs.styleTween = function (n, t, e) {
    function r(r, u) {
      var i = t.call(this, r, u, Wo.getComputedStyle(this, null).getPropertyValue(n));
      return i && function (t) {
        this.style.setProperty(n, i(t), e);
      };
    }

    return arguments.length < 3 && (e = ""), this.tween("style." + n, r);
  }, Cs.text = function (n) {
    return Ro(this, "text", n, Do);
  }, Cs.remove = function () {
    return this.each("end.transition", function () {
      var n;
      this.__transition__.count < 2 && (n = this.parentNode) && n.removeChild(this);
    });
  }, Cs.ease = function (n) {
    var t = this.id;
    return arguments.length < 1 ? this.node().__transition__[t].ease : ("function" != typeof n && (n = Zo.ease.apply(Zo, arguments)), P(this, function (e) {
      e.__transition__[t].ease = n;
    }));
  }, Cs.delay = function (n) {
    var t = this.id;
    return arguments.length < 1 ? this.node().__transition__[t].delay : P(this, "function" == typeof n ? function (e, r, u) {
      e.__transition__[t].delay = +n.call(e, e.__data__, r, u);
    } : (n = +n, function (e) {
      e.__transition__[t].delay = n;
    }));
  }, Cs.duration = function (n) {
    var t = this.id;
    return arguments.length < 1 ? this.node().__transition__[t].duration : P(this, "function" == typeof n ? function (e, r, u) {
      e.__transition__[t].duration = Math.max(1, n.call(e, e.__data__, r, u));
    } : (n = Math.max(1, n), function (e) {
      e.__transition__[t].duration = n;
    }));
  }, Cs.each = function (n, t) {
    var e = this.id;

    if (arguments.length < 2) {
      var r = ks,
          u = Ss;
      Ss = e, P(this, function (t, r, u) {
        ks = t.__transition__[e], n.call(t, t.__data__, r, u);
      }), ks = r, Ss = u;
    } else P(this, function (r) {
      var u = r.__transition__[e];
      (u.event || (u.event = Zo.dispatch("start", "end"))).on(n, t);
    });

    return this;
  }, Cs.transition = function () {
    for (var n, t, e, r, u = this.id, i = ++Ns, o = [], a = 0, c = this.length; c > a; a++) {
      o.push(n = []);

      for (var t = this[a], s = 0, l = t.length; l > s; s++) {
        (e = t[s]) && (r = Object.create(e.__transition__[u]), r.delay += r.duration, Po(e, s, i, r)), n.push(e);
      }
    }

    return qo(o, i);
  }, Zo.svg.axis = function () {
    function n(n) {
      n.each(function () {
        var n,
            s = Zo.select(this),
            l = this.__chart__ || e,
            f = this.__chart__ = e.copy(),
            h = null == c ? f.ticks ? f.ticks.apply(f, a) : f.domain() : c,
            g = null == t ? f.tickFormat ? f.tickFormat.apply(f, a) : wt : t,
            p = s.selectAll(".tick").data(h, f),
            v = p.enter().insert("g", ".domain").attr("class", "tick").style("opacity", ka),
            d = Zo.transition(p.exit()).style("opacity", ka).remove(),
            m = Zo.transition(p.order()).style("opacity", 1),
            y = Ti(f),
            x = s.selectAll(".domain").data([0]),
            M = (x.enter().append("path").attr("class", "domain"), Zo.transition(x));
        v.append("line"), v.append("text");

        var _ = v.select("line"),
            b = m.select("line"),
            w = p.select("text").text(g),
            S = v.select("text"),
            k = m.select("text");

        switch (r) {
          case "bottom":
            n = Uo, _.attr("y2", u), S.attr("y", Math.max(u, 0) + o), b.attr("x2", 0).attr("y2", u), k.attr("x", 0).attr("y", Math.max(u, 0) + o), w.attr("dy", ".71em").style("text-anchor", "middle"), M.attr("d", "M" + y[0] + "," + i + "V0H" + y[1] + "V" + i);
            break;

          case "top":
            n = Uo, _.attr("y2", -u), S.attr("y", -(Math.max(u, 0) + o)), b.attr("x2", 0).attr("y2", -u), k.attr("x", 0).attr("y", -(Math.max(u, 0) + o)), w.attr("dy", "0em").style("text-anchor", "middle"), M.attr("d", "M" + y[0] + "," + -i + "V0H" + y[1] + "V" + -i);
            break;

          case "left":
            n = jo, _.attr("x2", -u), S.attr("x", -(Math.max(u, 0) + o)), b.attr("x2", -u).attr("y2", 0), k.attr("x", -(Math.max(u, 0) + o)).attr("y", 0), w.attr("dy", ".32em").style("text-anchor", "end"), M.attr("d", "M" + -i + "," + y[0] + "H0V" + y[1] + "H" + -i);
            break;

          case "right":
            n = jo, _.attr("x2", u), S.attr("x", Math.max(u, 0) + o), b.attr("x2", u).attr("y2", 0), k.attr("x", Math.max(u, 0) + o).attr("y", 0), w.attr("dy", ".32em").style("text-anchor", "start"), M.attr("d", "M" + i + "," + y[0] + "H0V" + y[1] + "H" + i);
        }

        if (f.rangeBand) {
          var E = f,
              A = E.rangeBand() / 2;

          l = f = function f(n) {
            return E(n) + A;
          };
        } else l.rangeBand ? l = f : d.call(n, f);

        v.call(n, l), m.call(n, f);
      });
    }

    var t,
        e = Zo.scale.linear(),
        r = zs,
        u = 6,
        i = 6,
        o = 3,
        a = [10],
        c = null;
    return n.scale = function (t) {
      return arguments.length ? (e = t, n) : e;
    }, n.orient = function (t) {
      return arguments.length ? (r = t in Ls ? t + "" : zs, n) : r;
    }, n.ticks = function () {
      return arguments.length ? (a = arguments, n) : a;
    }, n.tickValues = function (t) {
      return arguments.length ? (c = t, n) : c;
    }, n.tickFormat = function (e) {
      return arguments.length ? (t = e, n) : t;
    }, n.tickSize = function (t) {
      var e = arguments.length;
      return e ? (u = +t, i = +arguments[e - 1], n) : u;
    }, n.innerTickSize = function (t) {
      return arguments.length ? (u = +t, n) : u;
    }, n.outerTickSize = function (t) {
      return arguments.length ? (i = +t, n) : i;
    }, n.tickPadding = function (t) {
      return arguments.length ? (o = +t, n) : o;
    }, n.tickSubdivide = function () {
      return arguments.length && n;
    }, n;
  };
  var zs = "bottom",
      Ls = {
    top: 1,
    right: 1,
    bottom: 1,
    left: 1
  };

  Zo.svg.brush = function () {
    function n(i) {
      i.each(function () {
        var i = Zo.select(this).style("pointer-events", "all").style("-webkit-tap-highlight-color", "rgba(0,0,0,0)").on("mousedown.brush", u).on("touchstart.brush", u),
            o = i.selectAll(".background").data([0]);
        o.enter().append("rect").attr("class", "background").style("visibility", "hidden").style("cursor", "crosshair"), i.selectAll(".extent").data([0]).enter().append("rect").attr("class", "extent").style("cursor", "move");
        var a = i.selectAll(".resize").data(p, wt);
        a.exit().remove(), a.enter().append("g").attr("class", function (n) {
          return "resize " + n;
        }).style("cursor", function (n) {
          return Ts[n];
        }).append("rect").attr("x", function (n) {
          return /[ew]$/.test(n) ? -3 : null;
        }).attr("y", function (n) {
          return /^[ns]/.test(n) ? -3 : null;
        }).attr("width", 6).attr("height", 6).style("visibility", "hidden"), a.style("display", n.empty() ? "none" : null);
        var l,
            f = Zo.transition(i),
            h = Zo.transition(o);
        c && (l = Ti(c), h.attr("x", l[0]).attr("width", l[1] - l[0]), e(f)), s && (l = Ti(s), h.attr("y", l[0]).attr("height", l[1] - l[0]), r(f)), t(f);
      });
    }

    function t(n) {
      n.selectAll(".resize").attr("transform", function (n) {
        return "translate(" + l[+/e$/.test(n)] + "," + f[+/^s/.test(n)] + ")";
      });
    }

    function e(n) {
      n.select(".extent").attr("x", l[0]), n.selectAll(".extent,.n>rect,.s>rect").attr("width", l[1] - l[0]);
    }

    function r(n) {
      n.select(".extent").attr("y", f[0]), n.selectAll(".extent,.e>rect,.w>rect").attr("height", f[1] - f[0]);
    }

    function u() {
      function u() {
        32 == Zo.event.keyCode && (C || (x = null, z[0] -= l[1], z[1] -= f[1], C = 2), y());
      }

      function p() {
        32 == Zo.event.keyCode && 2 == C && (z[0] += l[1], z[1] += f[1], C = 0, y());
      }

      function v() {
        var n = Zo.mouse(_),
            u = !1;
        M && (n[0] += M[0], n[1] += M[1]), C || (Zo.event.altKey ? (x || (x = [(l[0] + l[1]) / 2, (f[0] + f[1]) / 2]), z[0] = l[+(n[0] < x[0])], z[1] = f[+(n[1] < x[1])]) : x = null), E && d(n, c, 0) && (e(S), u = !0), A && d(n, s, 1) && (r(S), u = !0), u && (t(S), w({
          type: "brush",
          mode: C ? "move" : "resize"
        }));
      }

      function d(n, t, e) {
        var r,
            u,
            a = Ti(t),
            c = a[0],
            s = a[1],
            p = z[e],
            v = e ? f : l,
            d = v[1] - v[0];
        return C && (c -= p, s -= d + p), r = (e ? g : h) ? Math.max(c, Math.min(s, n[e])) : n[e], C ? u = (r += p) + d : (x && (p = Math.max(c, Math.min(s, 2 * x[e] - r))), r > p ? (u = r, r = p) : u = p), v[0] != r || v[1] != u ? (e ? o = null : i = null, v[0] = r, v[1] = u, !0) : void 0;
      }

      function m() {
        v(), S.style("pointer-events", "all").selectAll(".resize").style("display", n.empty() ? "none" : null), Zo.select("body").style("cursor", null), L.on("mousemove.brush", null).on("mouseup.brush", null).on("touchmove.brush", null).on("touchend.brush", null).on("keydown.brush", null).on("keyup.brush", null), N(), w({
          type: "brushend"
        });
      }

      var x,
          M,
          _ = this,
          b = Zo.select(Zo.event.target),
          w = a.of(_, arguments),
          S = Zo.select(_),
          k = b.datum(),
          E = !/^(n|s)$/.test(k) && c,
          A = !/^(e|w)$/.test(k) && s,
          C = b.classed("extent"),
          N = I(),
          z = Zo.mouse(_),
          L = Zo.select(Wo).on("keydown.brush", u).on("keyup.brush", p);

      if (Zo.event.changedTouches ? L.on("touchmove.brush", v).on("touchend.brush", m) : L.on("mousemove.brush", v).on("mouseup.brush", m), S.interrupt().selectAll("*").interrupt(), C) z[0] = l[0] - z[0], z[1] = f[0] - z[1];else if (k) {
        var T = +/w$/.test(k),
            q = +/^n/.test(k);
        M = [l[1 - T] - z[0], f[1 - q] - z[1]], z[0] = l[T], z[1] = f[q];
      } else Zo.event.altKey && (x = z.slice());
      S.style("pointer-events", "none").selectAll(".resize").style("display", null), Zo.select("body").style("cursor", b.style("cursor")), w({
        type: "brushstart"
      }), v();
    }

    var i,
        o,
        a = M(n, "brushstart", "brush", "brushend"),
        c = null,
        s = null,
        l = [0, 0],
        f = [0, 0],
        h = !0,
        g = !0,
        p = qs[0];
    return n.event = function (n) {
      n.each(function () {
        var n = a.of(this, arguments),
            t = {
          x: l,
          y: f,
          i: i,
          j: o
        },
            e = this.__chart__ || t;
        this.__chart__ = t, Ss ? Zo.select(this).transition().each("start.brush", function () {
          i = e.i, o = e.j, l = e.x, f = e.y, n({
            type: "brushstart"
          });
        }).tween("brush:brush", function () {
          var e = gu(l, t.x),
              r = gu(f, t.y);
          return i = o = null, function (u) {
            l = t.x = e(u), f = t.y = r(u), n({
              type: "brush",
              mode: "resize"
            });
          };
        }).each("end.brush", function () {
          i = t.i, o = t.j, n({
            type: "brush",
            mode: "resize"
          }), n({
            type: "brushend"
          });
        }) : (n({
          type: "brushstart"
        }), n({
          type: "brush",
          mode: "resize"
        }), n({
          type: "brushend"
        }));
      });
    }, n.x = function (t) {
      return arguments.length ? (c = t, p = qs[!c << 1 | !s], n) : c;
    }, n.y = function (t) {
      return arguments.length ? (s = t, p = qs[!c << 1 | !s], n) : s;
    }, n.clamp = function (t) {
      return arguments.length ? (c && s ? (h = !!t[0], g = !!t[1]) : c ? h = !!t : s && (g = !!t), n) : c && s ? [h, g] : c ? h : s ? g : null;
    }, n.extent = function (t) {
      var e, r, u, a, h;
      return arguments.length ? (c && (e = t[0], r = t[1], s && (e = e[0], r = r[0]), i = [e, r], c.invert && (e = c(e), r = c(r)), e > r && (h = e, e = r, r = h), (e != l[0] || r != l[1]) && (l = [e, r])), s && (u = t[0], a = t[1], c && (u = u[1], a = a[1]), o = [u, a], s.invert && (u = s(u), a = s(a)), u > a && (h = u, u = a, a = h), (u != f[0] || a != f[1]) && (f = [u, a])), n) : (c && (i ? (e = i[0], r = i[1]) : (e = l[0], r = l[1], c.invert && (e = c.invert(e), r = c.invert(r)), e > r && (h = e, e = r, r = h))), s && (o ? (u = o[0], a = o[1]) : (u = f[0], a = f[1], s.invert && (u = s.invert(u), a = s.invert(a)), u > a && (h = u, u = a, a = h))), c && s ? [[e, u], [r, a]] : c ? [e, r] : s && [u, a]);
    }, n.clear = function () {
      return n.empty() || (l = [0, 0], f = [0, 0], i = o = null), n;
    }, n.empty = function () {
      return !!c && l[0] == l[1] || !!s && f[0] == f[1];
    }, Zo.rebind(n, a, "on");
  };

  var Ts = {
    n: "ns-resize",
    e: "ew-resize",
    s: "ns-resize",
    w: "ew-resize",
    nw: "nwse-resize",
    ne: "nesw-resize",
    se: "nwse-resize",
    sw: "nesw-resize"
  },
      qs = [["n", "e", "s", "w", "nw", "ne", "se", "sw"], ["e", "w"], ["n", "s"], []],
      Rs = Qa.format = ic.timeFormat,
      Ds = Rs.utc,
      Ps = Ds("%Y-%m-%dT%H:%M:%S.%LZ");
  Rs.iso = Date.prototype.toISOString && +new Date("2000-01-01T00:00:00.000Z") ? Ho : Ps, Ho.parse = function (n) {
    var t = new Date(n);
    return isNaN(t) ? null : t;
  }, Ho.toString = Ps.toString, Qa.second = Dt(function (n) {
    return new nc(1e3 * Math.floor(n / 1e3));
  }, function (n, t) {
    n.setTime(n.getTime() + 1e3 * Math.floor(t));
  }, function (n) {
    return n.getSeconds();
  }), Qa.seconds = Qa.second.range, Qa.seconds.utc = Qa.second.utc.range, Qa.minute = Dt(function (n) {
    return new nc(6e4 * Math.floor(n / 6e4));
  }, function (n, t) {
    n.setTime(n.getTime() + 6e4 * Math.floor(t));
  }, function (n) {
    return n.getMinutes();
  }), Qa.minutes = Qa.minute.range, Qa.minutes.utc = Qa.minute.utc.range, Qa.hour = Dt(function (n) {
    var t = n.getTimezoneOffset() / 60;
    return new nc(36e5 * (Math.floor(n / 36e5 - t) + t));
  }, function (n, t) {
    n.setTime(n.getTime() + 36e5 * Math.floor(t));
  }, function (n) {
    return n.getHours();
  }), Qa.hours = Qa.hour.range, Qa.hours.utc = Qa.hour.utc.range, Qa.month = Dt(function (n) {
    return n = Qa.day(n), n.setDate(1), n;
  }, function (n, t) {
    n.setMonth(n.getMonth() + t);
  }, function (n) {
    return n.getMonth();
  }), Qa.months = Qa.month.range, Qa.months.utc = Qa.month.utc.range;
  var Us = [1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6],
      js = [[Qa.second, 1], [Qa.second, 5], [Qa.second, 15], [Qa.second, 30], [Qa.minute, 1], [Qa.minute, 5], [Qa.minute, 15], [Qa.minute, 30], [Qa.hour, 1], [Qa.hour, 3], [Qa.hour, 6], [Qa.hour, 12], [Qa.day, 1], [Qa.day, 2], [Qa.week, 1], [Qa.month, 1], [Qa.month, 3], [Qa.year, 1]],
      Hs = Rs.multi([[".%L", function (n) {
    return n.getMilliseconds();
  }], [":%S", function (n) {
    return n.getSeconds();
  }], ["%I:%M", function (n) {
    return n.getMinutes();
  }], ["%I %p", function (n) {
    return n.getHours();
  }], ["%a %d", function (n) {
    return n.getDay() && 1 != n.getDate();
  }], ["%b %d", function (n) {
    return 1 != n.getDate();
  }], ["%B", function (n) {
    return n.getMonth();
  }], ["%Y", we]]),
      Fs = {
    range: function range(n, t, e) {
      return Zo.range(Math.ceil(n / e) * e, +t, e).map(Oo);
    },
    floor: wt,
    ceil: wt
  };
  js.year = Qa.year, Qa.scale = function () {
    return Fo(Zo.scale.linear(), js, Hs);
  };
  var Os = js.map(function (n) {
    return [n[0].utc, n[1]];
  }),
      Ys = Ds.multi([[".%L", function (n) {
    return n.getUTCMilliseconds();
  }], [":%S", function (n) {
    return n.getUTCSeconds();
  }], ["%I:%M", function (n) {
    return n.getUTCMinutes();
  }], ["%I %p", function (n) {
    return n.getUTCHours();
  }], ["%a %d", function (n) {
    return n.getUTCDay() && 1 != n.getUTCDate();
  }], ["%b %d", function (n) {
    return 1 != n.getUTCDate();
  }], ["%B", function (n) {
    return n.getUTCMonth();
  }], ["%Y", we]]);
  Os.year = Qa.year.utc, Qa.scale.utc = function () {
    return Fo(Zo.scale.linear(), Os, Ys);
  }, Zo.text = St(function (n) {
    return n.responseText;
  }), Zo.json = function (n, t) {
    return kt(n, "application/json", Yo, t);
  }, Zo.html = function (n, t) {
    return kt(n, "text/html", Io, t);
  }, Zo.xml = St(function (n) {
    return n.responseXML;
  }),  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (Zo),
		__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
		(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
		__WEBPACK_AMD_DEFINE_FACTORY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0, this.d3 = Zo;
}();

/***/ }),

/***/ "./src/scripts/libs/d3pie/d3pie.min.js":
/*!*********************************************!*\
  !*** ./src/scripts/libs/d3pie/d3pie.min.js ***!
  \*********************************************/
/***/ (() => {

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

/*!
* d3pie
* @author Ben Keen
* @version 0.1.3
* @date June 2014
* @repo http://github.com/benkeen/d3pie
*/
!function () {
  "use strict";

  var a = "d3pie",
      b = "0.1.3",
      c = 0,
      d = {
    header: {
      title: {
        text: "",
        color: "#333333",
        fontSize: 18,
        font: "arial"
      },
      subtitle: {
        text: "",
        color: "#666666",
        fontSize: 14,
        font: "arial"
      },
      location: "top-center",
      titleSubtitlePadding: 8
    },
    footer: {
      text: "",
      color: "#666666",
      fontSize: 14,
      font: "arial",
      location: "left"
    },
    size: {
      canvasHeight: 500,
      canvasWidth: 500,
      pieInnerRadius: "0%",
      pieOuterRadius: null
    },
    data: {
      sortOrder: "none",
      smallSegmentGrouping: {
        enabled: !1,
        value: 1,
        valueType: "percentage",
        label: "Other",
        color: "#cccccc"
      },
      content: []
    },
    labels: {
      outer: {
        format: "label",
        hideWhenLessThanPercentage: null,
        pieDistance: 30
      },
      inner: {
        format: "percentage",
        hideWhenLessThanPercentage: null
      },
      mainLabel: {
        color: "#333333",
        font: "arial",
        fontSize: 10
      },
      percentage: {
        color: "#dddddd",
        font: "arial",
        fontSize: 10,
        decimalPlaces: 0
      },
      value: {
        color: "#cccc44",
        font: "arial",
        fontSize: 10
      },
      lines: {
        enabled: !0,
        style: "curved",
        color: "segment"
      },
      truncation: {
        enabled: !1,
        length: 30
      }
    },
    effects: {
      load: {
        effect: "default",
        speed: 1e3
      },
      pullOutSegmentOnClick: {
        effect: "bounce",
        speed: 300,
        size: 10
      },
      highlightSegmentOnMouseover: !0,
      highlightLuminosity: -.2
    },
    misc: {
      colors: {
        background: null,
        segments: ["#2484c1", "#65a620", "#7b6888", "#a05d56", "#961a1a", "#d8d23a", "#e98125", "#d0743c", "#635222", "#6ada6a", "#0c6197", "#7d9058", "#207f33", "#44b9b0", "#bca44a", "#e4a14b", "#a3acb2", "#8cc3e9", "#69a6f9", "#5b388f", "#546e91", "#8bde95", "#d2ab58", "#273c71", "#98bf6e", "#4daa4b", "#98abc5", "#cc1010", "#31383b", "#006391", "#c2643f", "#b0a474", "#a5a39c", "#a9c2bc", "#22af8c", "#7fcecf", "#987ac6", "#3d3b87", "#b77b1c", "#c9c2b6", "#807ece", "#8db27c", "#be66a2", "#9ed3c6", "#00644b", "#005064", "#77979f", "#77e079", "#9c73ab", "#1f79a7"],
        segmentStroke: "#ffffff"
      },
      gradient: {
        enabled: !1,
        percentage: 95,
        color: "#000000"
      },
      canvasPadding: {
        top: 5,
        right: 5,
        bottom: 5,
        left: 5
      },
      pieCenterOffset: {
        x: 0,
        y: 0
      },
      cssPrefix: null
    },
    callbacks: {
      onload: null,
      onMouseoverSegment: null,
      onMouseoutSegment: null,
      onClickSegment: null
    }
  },
      e = {
    initialCheck: function initialCheck(a) {
      var b = a.cssPrefix,
          c = a.element,
          d = a.options;
      if (!window.d3 || !window.d3.hasOwnProperty("version")) return console.error("d3pie error: d3 is not available"), !1;
      if (!(c instanceof HTMLElement)) return console.error("d3pie error: the first d3pie() param must be a valid DOM element (not jQuery) or a ID string."), !1;
      if (!/[a-zA-Z][a-zA-Z0-9_-]*$/.test(b)) return console.error("d3pie error: invalid options.misc.cssPrefix"), !1;
      if (!f.isArray(d.data.content)) return console.error("d3pie error: invalid config structure: missing data.content property."), !1;
      if (0 === d.data.content.length) return console.error("d3pie error: no data supplied."), !1;

      for (var e = [], g = 0; g < d.data.content.length; g++) {
        "number" != typeof d.data.content[g].value || isNaN(d.data.content[g].value) ? console.log("not valid: ", d.data.content[g]) : d.data.content[g].value <= 0 ? console.log("not valid - should have positive value: ", d.data.content[g]) : e.push(d.data.content[g]);
      }

      return a.options.data.content = e, !0;
    }
  },
      f = {
    addSVGSpace: function addSVGSpace(a) {
      var b = a.element,
          c = a.options.size.canvasWidth,
          d = a.options.size.canvasHeight,
          e = a.options.misc.colors.background,
          f = d3.select(b).append("svg:svg").attr("width", c).attr("height", d);
      return "transparent" !== e && f.style("background-color", function () {
        return e;
      }), f;
    },
    whenIdExists: function whenIdExists(a, b) {
      var c = 1,
          d = 1e3,
          e = setInterval(function () {
        document.getElementById(a) && (clearInterval(e), b()), c > d && clearInterval(e), c++;
      }, 1);
    },
    whenElementsExist: function whenElementsExist(a, b) {
      var c = 1,
          d = 1e3,
          e = setInterval(function () {
        for (var f = !0, g = 0; g < a.length; g++) {
          if (!document.getElementById(a[g])) {
            f = !1;
            break;
          }
        }

        f && (clearInterval(e), b()), c > d && clearInterval(e), c++;
      }, 1);
    },
    shuffleArray: function shuffleArray(a) {
      for (var b, c, d = a.length; 0 !== d;) {
        c = Math.floor(Math.random() * d), d -= 1, b = a[d], a[d] = a[c], a[c] = b;
      }

      return a;
    },
    processObj: function processObj(a, b, c) {
      return "string" == typeof b ? f.processObj(a, b.split("."), c) : 1 == b.length && void 0 !== c ? a[b[0]] = c : 0 == b.length ? a : f.processObj(a[b[0]], b.slice(1), c);
    },
    getDimensions: function getDimensions(a) {
      var b = document.getElementById(a),
          c = 0,
          d = 0;

      if (b) {
        var e = b.getBBox();
        c = e.width, d = e.height;
      } else console.log("error: getDimensions() " + a + " not found.");

      return {
        w: c,
        h: d
      };
    },
    rectIntersect: function rectIntersect(a, b) {
      var c = b.x > a.x + a.w || b.x + b.w < a.x || b.y + b.h < a.y || b.y > a.y + a.h;
      return !c;
    },
    getColorShade: function getColorShade(a, b) {
      a = String(a).replace(/[^0-9a-f]/gi, ""), a.length < 6 && (a = a[0] + a[0] + a[1] + a[1] + a[2] + a[2]), b = b || 0;

      for (var c = "#", d = 0; 3 > d; d++) {
        var e = parseInt(a.substr(2 * d, 2), 16);
        e = Math.round(Math.min(Math.max(0, e + e * b), 255)).toString(16), c += ("00" + e).substr(e.length);
      }

      return c;
    },
    initSegmentColors: function initSegmentColors(a) {
      for (var b = a.options.data.content, c = a.options.misc.colors.segments, d = [], e = 0; e < b.length; e++) {
        d.push(b[e].hasOwnProperty("color") ? b[e].color : c[e]);
      }

      return d;
    },
    applySmallSegmentGrouping: function applySmallSegmentGrouping(a, b) {
      var c;
      "percentage" === b.valueType && (c = h.getTotalPieSize(a));

      for (var d = [], e = [], f = 0, g = 0; g < a.length; g++) {
        if ("percentage" === b.valueType) {
          var i = a[g].value / c * 100;

          if (i <= b.value) {
            e.push(a[g]), f += a[g].value;
            continue;
          }

          a[g].isGrouped = !1, d.push(a[g]);
        } else {
          if (a[g].value <= b.value) {
            e.push(a[g]), f += a[g].value;
            continue;
          }

          a[g].isGrouped = !1, d.push(a[g]);
        }
      }

      return e.length && d.push({
        color: b.color,
        label: b.label,
        value: f,
        isGrouped: !0,
        groupedData: e
      }), d;
    },
    showPoint: function showPoint(a, b, c) {
      a.append("circle").attr("cx", b).attr("cy", c).attr("r", 2).style("fill", "black");
    },
    isFunction: function isFunction(a) {
      var b = {};
      return a && "[object Function]" === b.toString.call(a);
    },
    isArray: function isArray(a) {
      return "[object Array]" === Object.prototype.toString.call(a);
    }
  },
      g = function g() {
    var a,
        b,
        c,
        d,
        e,
        f,
        h = arguments[0] || {},
        i = 1,
        j = arguments.length,
        k = !1,
        l = Object.prototype.toString,
        m = Object.prototype.hasOwnProperty,
        n = {
      "[object Boolean]": "boolean",
      "[object Number]": "number",
      "[object String]": "string",
      "[object Function]": "function",
      "[object Array]": "array",
      "[object Date]": "date",
      "[object RegExp]": "regexp",
      "[object Object]": "object"
    },
        o = {
      isFunction: function isFunction(a) {
        return "function" === o.type(a);
      },
      isArray: Array.isArray || function (a) {
        return "array" === o.type(a);
      },
      isWindow: function isWindow(a) {
        return null != a && a == a.window;
      },
      isNumeric: function isNumeric(a) {
        return !isNaN(parseFloat(a)) && isFinite(a);
      },
      type: function type(a) {
        return null == a ? String(a) : n[l.call(a)] || "object";
      },
      isPlainObject: function isPlainObject(a) {
        if (!a || "object" !== o.type(a) || a.nodeType) return !1;

        try {
          if (a.constructor && !m.call(a, "constructor") && !m.call(a.constructor.prototype, "isPrototypeOf")) return !1;
        } catch (b) {
          return !1;
        }

        var c;

        for (c in a) {
          ;
        }

        return void 0 === c || m.call(a, c);
      }
    };

    for ("boolean" == typeof h && (k = h, h = arguments[1] || {}, i = 2), "object" == _typeof(h) || o.isFunction(h) || (h = {}), j === i && (h = this, --i), i; j > i; i++) {
      if (null != (a = arguments[i])) for (b in a) {
        c = h[b], d = a[b], h !== d && (k && d && (o.isPlainObject(d) || (e = o.isArray(d))) ? (e ? (e = !1, f = c && o.isArray(c) ? c : []) : f = c && o.isPlainObject(c) ? c : {}, h[b] = g(k, f, d)) : void 0 !== d && (h[b] = d));
      }
    }

    return h;
  },
      h = {
    toRadians: function toRadians(a) {
      return a * (Math.PI / 180);
    },
    toDegrees: function toDegrees(a) {
      return a * (180 / Math.PI);
    },
    computePieRadius: function computePieRadius(a) {
      var b = a.options.size,
          c = a.options.misc.canvasPadding,
          d = b.canvasWidth - c.left - c.right,
          e = b.canvasHeight - c.top - c.bottom;
      e -= a.textComponents.headerHeight, a.textComponents.footer.exists && (e -= a.textComponents.footer.h), e = 0 > e ? 0 : e;
      var f,
          g,
          h = (e > d ? d : e) / 3;
      if (null !== b.pieOuterRadius) if (/%/.test(b.pieOuterRadius)) {
        g = parseInt(b.pieOuterRadius.replace(/[\D]/, ""), 10), g = g > 99 ? 99 : g, g = 0 > g ? 0 : g;
        var i = e > d ? d : e;

        if ("none" !== a.options.labels.outer.format) {
          var j = 2 * parseInt(a.options.labels.outer.pieDistance, 10);
          i - j > 0 && (i -= j);
        }

        h = Math.floor(i / 100 * g) / 2;
      } else h = parseInt(b.pieOuterRadius, 10);
      /%/.test(b.pieInnerRadius) ? (g = parseInt(b.pieInnerRadius.replace(/[\D]/, ""), 10), g = g > 99 ? 99 : g, g = 0 > g ? 0 : g, f = Math.floor(h / 100 * g)) : f = parseInt(b.pieInnerRadius, 10), a.innerRadius = f, a.outerRadius = h;
    },
    getTotalPieSize: function getTotalPieSize(a) {
      for (var b = 0, c = 0; c < a.length; c++) {
        b += a[c].value;
      }

      return b;
    },
    sortPieData: function sortPieData(a) {
      var b = a.options.data.content,
          c = a.options.data.sortOrder;

      switch (c) {
        case "none":
          break;

        case "random":
          b = f.shuffleArray(b);
          break;

        case "value-asc":
          b.sort(function (a, b) {
            return a.value < b.value ? -1 : 1;
          });
          break;

        case "value-desc":
          b.sort(function (a, b) {
            return a.value < b.value ? 1 : -1;
          });
          break;

        case "label-asc":
          b.sort(function (a, b) {
            return a.label.toLowerCase() > b.label.toLowerCase() ? 1 : -1;
          });
          break;

        case "label-desc":
          b.sort(function (a, b) {
            return a.label.toLowerCase() < b.label.toLowerCase() ? 1 : -1;
          });
      }

      return b;
    },
    getPieTranslateCenter: function getPieTranslateCenter(a) {
      return "translate(" + a.x + "," + a.y + ")";
    },
    calculatePieCenter: function calculatePieCenter(a) {
      var b = a.options.misc.pieCenterOffset,
          c = a.textComponents.title.exists && "pie-center" !== a.options.header.location,
          d = a.textComponents.subtitle.exists && "pie-center" !== a.options.header.location,
          e = a.options.misc.canvasPadding.top;
      c && d ? e += a.textComponents.title.h + a.options.header.titleSubtitlePadding + a.textComponents.subtitle.h : c ? e += a.textComponents.title.h : d && (e += a.textComponents.subtitle.h);
      var f = 0;
      a.textComponents.footer.exists && (f = a.textComponents.footer.h + a.options.misc.canvasPadding.bottom);
      var g = (a.options.size.canvasWidth - a.options.misc.canvasPadding.left - a.options.misc.canvasPadding.right) / 2 + a.options.misc.canvasPadding.left,
          h = (a.options.size.canvasHeight - f - e) / 2 + e;
      g += b.x, h += b.y, a.pieCenter = {
        x: g,
        y: h
      };
    },
    rotate: function rotate(a, b, c, d, e) {
      var f = Math.cos,
          g = Math.sin,
          e = e * Math.PI / 180,
          h = (a - c) * f(e) - (b - d) * g(e) + c,
          i = (a - c) * g(e) + (b - d) * f(e) + d;
      return {
        x: h,
        y: i
      };
    },
    translate: function translate(a, b, c, d) {
      var e = h.toRadians(d);
      return {
        x: a + c * Math.sin(e),
        y: b - c * Math.cos(e)
      };
    },
    pointIsInArc: function pointIsInArc(a, b, c) {
      var d = c.innerRadius()(b),
          e = c.outerRadius()(b),
          f = c.startAngle()(b),
          g = c.endAngle()(b),
          h = a.x * a.x + a.y * a.y,
          i = Math.atan2(a.x, -a.y);
      return i = 0 > i ? i + 2 * Math.PI : i, h >= d * d && e * e >= h && i >= f && g >= i;
    }
  },
      i = {
    add: function add(a, b, c) {
      var d = i.getIncludes(c),
          e = a.options.labels,
          f = a.svg.insert("g", "." + a.cssPrefix + "labels-" + b).attr("class", a.cssPrefix + "labels-" + b),
          g = f.selectAll("." + a.cssPrefix + "labelGroup-" + b).data(a.options.data.content).enter().append("g").attr("id", function (c, d) {
        return a.cssPrefix + "labelGroup" + d + "-" + b;
      }).attr("data-index", function (a, b) {
        return b;
      }).attr("class", a.cssPrefix + "labelGroup-" + b).style("opacity", 0);
      d.mainLabel && g.append("text").attr("id", function (c, d) {
        return a.cssPrefix + "segmentMainLabel" + d + "-" + b;
      }).attr("class", a.cssPrefix + "segmentMainLabel-" + b).text(function (a) {
        var b = a.label;
        return e.truncation.enabled && a.label.length > e.truncation.length && (b = a.label.substring(0, e.truncation.length) + "..."), b;
      }).style("font-size", e.mainLabel.fontSize + "px").style("font-family", e.mainLabel.font).style("fill", e.mainLabel.color), d.percentage && g.append("text").attr("id", function (c, d) {
        return a.cssPrefix + "segmentPercentage" + d + "-" + b;
      }).attr("class", a.cssPrefix + "segmentPercentage-" + b).text(function (b) {
        var c = b.value / a.totalSize * 100;
        return c.toFixed(a.options.labels.percentage.decimalPlaces) + "%";
      }).style("font-size", e.percentage.fontSize + "px").style("font-family", e.percentage.font).style("fill", e.percentage.color), d.value && g.append("text").attr("id", function (c, d) {
        return a.cssPrefix + "segmentValue" + d + "-" + b;
      }).attr("class", a.cssPrefix + "segmentValue-" + b).text(function (a) {
        return a.value;
      }).style("font-size", e.value.fontSize + "px").style("font-family", e.value.font).style("fill", e.value.color);
    },
    positionLabelElements: function positionLabelElements(a, b, c) {
      i["dimensions-" + b] = [];
      var d = d3.selectAll("." + a.cssPrefix + "labelGroup-" + b);
      d.each(function () {
        var c = d3.select(this).selectAll("." + a.cssPrefix + "segmentMainLabel-" + b),
            d = d3.select(this).selectAll("." + a.cssPrefix + "segmentPercentage-" + b),
            e = d3.select(this).selectAll("." + a.cssPrefix + "segmentValue-" + b);
        i["dimensions-" + b].push({
          mainLabel: null !== c.node() ? c.node().getBBox() : null,
          percentage: null !== d.node() ? d.node().getBBox() : null,
          value: null !== e.node() ? e.node().getBBox() : null
        });
      });
      var e = 5,
          f = i["dimensions-" + b];

      switch (c) {
        case "label-value1":
          d3.selectAll("." + a.cssPrefix + "segmentValue-" + b).attr("dx", function (a, b) {
            return f[b].mainLabel.width + e;
          });
          break;

        case "label-value2":
          d3.selectAll("." + a.cssPrefix + "segmentValue-" + b).attr("dy", function (a, b) {
            return f[b].mainLabel.height;
          });
          break;

        case "label-percentage1":
          d3.selectAll("." + a.cssPrefix + "segmentPercentage-" + b).attr("dx", function (a, b) {
            return f[b].mainLabel.width + e;
          });
          break;

        case "label-percentage2":
          d3.selectAll("." + a.cssPrefix + "segmentPercentage-" + b).attr("dx", function (a, b) {
            return f[b].mainLabel.width / 2 - f[b].percentage.width / 2;
          }).attr("dy", function (a, b) {
            return f[b].mainLabel.height;
          });
      }
    },
    computeLabelLinePositions: function computeLabelLinePositions(a) {
      a.lineCoordGroups = [], d3.selectAll("." + a.cssPrefix + "labelGroup-outer").each(function (b, c) {
        return i.computeLinePosition(a, c);
      });
    },
    computeLinePosition: function computeLinePosition(a, b) {
      var c,
          d,
          e,
          f,
          g = j.getSegmentAngle(b, a.options.data.content, a.totalSize, {
        midpoint: !0
      }),
          i = h.rotate(a.pieCenter.x, a.pieCenter.y - a.outerRadius, a.pieCenter.x, a.pieCenter.y, g),
          k = a.outerLabelGroupData[b].h / 5,
          l = 6,
          m = Math.floor(g / 90),
          n = 4;

      switch (2 === m && 180 === g && (m = 1), m) {
        case 0:
          c = a.outerLabelGroupData[b].x - l - (a.outerLabelGroupData[b].x - l - i.x) / 2, d = a.outerLabelGroupData[b].y + (i.y - a.outerLabelGroupData[b].y) / n, e = a.outerLabelGroupData[b].x - l, f = a.outerLabelGroupData[b].y - k;
          break;

        case 1:
          c = i.x + (a.outerLabelGroupData[b].x - i.x) / n, d = i.y + (a.outerLabelGroupData[b].y - i.y) / n, e = a.outerLabelGroupData[b].x - l, f = a.outerLabelGroupData[b].y - k;
          break;

        case 2:
          var o = a.outerLabelGroupData[b].x + a.outerLabelGroupData[b].w + l;
          c = i.x - (i.x - o) / n, d = i.y + (a.outerLabelGroupData[b].y - i.y) / n, e = a.outerLabelGroupData[b].x + a.outerLabelGroupData[b].w + l, f = a.outerLabelGroupData[b].y - k;
          break;

        case 3:
          var p = a.outerLabelGroupData[b].x + a.outerLabelGroupData[b].w + l;
          c = p + (i.x - p) / n, d = a.outerLabelGroupData[b].y + (i.y - a.outerLabelGroupData[b].y) / n, e = a.outerLabelGroupData[b].x + a.outerLabelGroupData[b].w + l, f = a.outerLabelGroupData[b].y - k;
      }

      a.lineCoordGroups[b] = "straight" === a.options.labels.lines.style ? [{
        x: i.x,
        y: i.y
      }, {
        x: e,
        y: f
      }] : [{
        x: i.x,
        y: i.y
      }, {
        x: c,
        y: d
      }, {
        x: e,
        y: f
      }];
    },
    addLabelLines: function addLabelLines(a) {
      var b = a.svg.insert("g", "." + a.cssPrefix + "pieChart").attr("class", a.cssPrefix + "lineGroups").style("opacity", 0),
          c = b.selectAll("." + a.cssPrefix + "lineGroup").data(a.lineCoordGroups).enter().append("g").attr("class", a.cssPrefix + "lineGroup"),
          d = d3.svg.line().interpolate("basis").x(function (a) {
        return a.x;
      }).y(function (a) {
        return a.y;
      });
      c.append("path").attr("d", d).attr("stroke", function (b, c) {
        return "segment" === a.options.labels.lines.color ? a.options.colors[c] : a.options.labels.lines.color;
      }).attr("stroke-width", 1).attr("fill", "none").style("opacity", function (b, c) {
        var d = a.options.labels.outer.hideWhenLessThanPercentage,
            e = j.getPercentage(a, c),
            f = null !== d && d > e || "" === a.options.data.content[c].label;
        return f ? 0 : 1;
      });
    },
    positionLabelGroups: function positionLabelGroups(a, b) {
      d3.selectAll("." + a.cssPrefix + "labelGroup-" + b).style("opacity", 0).attr("transform", function (c, d) {
        var e, i;
        if ("outer" === b) e = a.outerLabelGroupData[d].x, i = a.outerLabelGroupData[d].y;else {
          var k = g(!0, {}, a.pieCenter);

          if (a.innerRadius > 0) {
            var l = j.getSegmentAngle(d, a.options.data.content, a.totalSize, {
              midpoint: !0
            }),
                m = h.translate(a.pieCenter.x, a.pieCenter.y, a.innerRadius, l);
            k.x = m.x, k.y = m.y;
          }

          var n = f.getDimensions(a.cssPrefix + "labelGroup" + d + "-inner"),
              o = n.w / 2,
              p = n.h / 4;
          e = k.x + (a.lineCoordGroups[d][0].x - k.x) / 1.8, i = k.y + (a.lineCoordGroups[d][0].y - k.y) / 1.8, e -= o, i += p;
        }
        return "translate(" + e + "," + i + ")";
      });
    },
    fadeInLabelsAndLines: function fadeInLabelsAndLines(a) {
      var b = "default" === a.options.effects.load.effect ? a.options.effects.load.speed : 1;
      setTimeout(function () {
        var b = "default" === a.options.effects.load.effect ? 400 : 1;
        d3.selectAll("." + a.cssPrefix + "labelGroup-outer").transition().duration(b).style("opacity", function (b, c) {
          var d = a.options.labels.outer.hideWhenLessThanPercentage,
              e = j.getPercentage(a, c);
          return null !== d && d > e ? 0 : 1;
        }), d3.selectAll("." + a.cssPrefix + "labelGroup-inner").transition().duration(b).style("opacity", function (b, c) {
          var d = a.options.labels.inner.hideWhenLessThanPercentage,
              e = j.getPercentage(a, c);
          return null !== d && d > e ? 0 : 1;
        }), d3.selectAll("g." + a.cssPrefix + "lineGroups").transition().duration(b).style("opacity", 1), f.isFunction(a.options.callbacks.onload) && setTimeout(function () {
          try {
            a.options.callbacks.onload();
          } catch (b) {}
        }, b);
      }, b);
    },
    getIncludes: function getIncludes(a) {
      var b = !1,
          c = !1,
          d = !1;

      switch (a) {
        case "label":
          b = !0;
          break;

        case "value":
          c = !0;
          break;

        case "percentage":
          d = !0;
          break;

        case "label-value1":
        case "label-value2":
          b = !0, c = !0;
          break;

        case "label-percentage1":
        case "label-percentage2":
          b = !0, d = !0;
      }

      return {
        mainLabel: b,
        value: c,
        percentage: d
      };
    },
    computeOuterLabelCoords: function computeOuterLabelCoords(a) {
      a.svg.selectAll("." + a.cssPrefix + "labelGroup-outer").each(function (b, c) {
        return i.getIdealOuterLabelPositions(a, c);
      }), i.resolveOuterLabelCollisions(a);
    },
    resolveOuterLabelCollisions: function resolveOuterLabelCollisions(a) {
      var b = a.options.data.content.length;
      i.checkConflict(a, 0, "clockwise", b), i.checkConflict(a, b - 1, "anticlockwise", b);
    },
    checkConflict: function checkConflict(a, b, c, d) {
      if (!(1 >= d)) {
        var e = a.outerLabelGroupData[b].hs;

        if (!("clockwise" === c && "right" != e || "anticlockwise" === c && "left" != e)) {
          var g = "clockwise" === c ? b + 1 : b - 1,
              h = a.outerLabelGroupData[b],
              j = a.outerLabelGroupData[g],
              k = {
            labelHeights: a.outerLabelGroupData[0].h,
            center: a.pieCenter,
            lineLength: a.outerRadius + a.options.labels.outer.pieDistance,
            heightChange: a.outerLabelGroupData[0].h + 1
          };
          if ("clockwise" === c) for (var l = 0; b >= l; l++) {
            var m = a.outerLabelGroupData[l];

            if (f.rectIntersect(m, j)) {
              i.adjustLabelPos(a, g, h, k);
              break;
            }
          } else for (var l = d - 1; l >= b; l--) {
            var m = a.outerLabelGroupData[l];

            if (f.rectIntersect(m, j)) {
              i.adjustLabelPos(a, g, h, k);
              break;
            }
          }
          i.checkConflict(a, g, c, d);
        }
      }
    },
    adjustLabelPos: function adjustLabelPos(a, b, c, d) {
      var e, f, g, h;
      h = c.y + d.heightChange, f = d.center.y - h, e = Math.sqrt(Math.abs(d.lineLength) > Math.abs(f) ? d.lineLength * d.lineLength - f * f : f * f - d.lineLength * d.lineLength), g = "right" === c.hs ? d.center.x + e : d.center.x - e - a.outerLabelGroupData[b].w, g || console.log(c.hs, e), a.outerLabelGroupData[b].x = g, a.outerLabelGroupData[b].y = h;
    },
    getIdealOuterLabelPositions: function getIdealOuterLabelPositions(a, b) {
      var c = d3.select("#" + a.cssPrefix + "labelGroup" + b + "-outer").node().getBBox(),
          d = j.getSegmentAngle(b, a.options.data.content, a.totalSize, {
        midpoint: !0
      }),
          e = a.pieCenter.x,
          f = a.pieCenter.y - (a.outerRadius + a.options.labels.outer.pieDistance),
          g = h.rotate(e, f, a.pieCenter.x, a.pieCenter.y, d),
          i = "right";
      d > 180 ? (g.x -= c.width + 8, i = "left") : g.x += 8, a.outerLabelGroupData[b] = {
        x: g.x,
        y: g.y,
        w: c.width,
        h: c.height,
        hs: i
      };
    }
  },
      j = {
    create: function create(a) {
      var b = a.pieCenter,
          c = a.options.colors,
          d = a.options.effects.load,
          e = a.options.misc.colors.segmentStroke,
          f = a.svg.insert("g", "#" + a.cssPrefix + "title").attr("transform", function () {
        return h.getPieTranslateCenter(b);
      }).attr("class", a.cssPrefix + "pieChart"),
          g = d3.svg.arc().innerRadius(a.innerRadius).outerRadius(a.outerRadius).startAngle(0).endAngle(function (b) {
        return b.value / a.totalSize * 2 * Math.PI;
      }),
          i = f.selectAll("." + a.cssPrefix + "arc").data(a.options.data.content).enter().append("g").attr("class", a.cssPrefix + "arc"),
          k = d.speed;
      "none" === d.effect && (k = 0), i.append("path").attr("id", function (b, c) {
        return a.cssPrefix + "segment" + c;
      }).attr("fill", function (b, d) {
        var e = c[d];
        return a.options.misc.gradient.enabled && (e = "url(#" + a.cssPrefix + "grad" + d + ")"), e;
      }).style("stroke", e).style("stroke-width", 1).transition().ease("cubic-in-out").duration(k).attr("data-index", function (a, b) {
        return b;
      }).attrTween("d", function (b) {
        var c = d3.interpolate({
          value: 0
        }, b);
        return function (b) {
          return a.arc(c(b));
        };
      }), a.svg.selectAll("g." + a.cssPrefix + "arc").attr("transform", function (b, c) {
        var d = 0;
        return c > 0 && (d = j.getSegmentAngle(c - 1, a.options.data.content, a.totalSize)), "rotate(" + d + ")";
      }), a.arc = g;
    },
    addGradients: function addGradients(a) {
      var b = a.svg.append("defs").selectAll("radialGradient").data(a.options.data.content).enter().append("radialGradient").attr("gradientUnits", "userSpaceOnUse").attr("cx", 0).attr("cy", 0).attr("r", "120%").attr("id", function (b, c) {
        return a.cssPrefix + "grad" + c;
      });
      b.append("stop").attr("offset", "0%").style("stop-color", function (b, c) {
        return a.options.colors[c];
      }), b.append("stop").attr("offset", a.options.misc.gradient.percentage + "%").style("stop-color", a.options.misc.gradient.color);
    },
    addSegmentEventHandlers: function addSegmentEventHandlers(a) {
      var b = d3.selectAll("." + a.cssPrefix + "arc,." + a.cssPrefix + "labelGroup-inner,." + a.cssPrefix + "labelGroup-outer");
      b.on("click", function () {
        var b,
            c = d3.select(this);
        if (c.attr("class") === a.cssPrefix + "arc") b = c.select("path");else {
          var d = c.attr("data-index");
          b = d3.select("#" + a.cssPrefix + "segment" + d);
        }
        var e = b.attr("class") === a.cssPrefix + "expanded";
        j.onSegmentEvent(a, a.options.callbacks.onClickSegment, b, e), "none" !== a.options.effects.pullOutSegmentOnClick.effect && (e ? j.closeSegment(a, b.node()) : j.openSegment(a, b.node()));
      }), b.on("mouseover", function () {
        var b,
            c,
            d = d3.select(this);

        if (d.attr("class") === a.cssPrefix + "arc" ? b = d.select("path") : (c = d.attr("data-index"), b = d3.select("#" + a.cssPrefix + "segment" + c)), a.options.effects.highlightSegmentOnMouseover) {
          c = b.attr("data-index");
          var e = a.options.colors[c];
          b.style("fill", f.getColorShade(e, a.options.effects.highlightLuminosity));
        }

        var g = b.attr("class") === a.cssPrefix + "expanded";
        j.onSegmentEvent(a, a.options.callbacks.onMouseoverSegment, b, g);
      }), b.on("mouseout", function () {
        var b,
            c,
            d = d3.select(this);

        if (d.attr("class") === a.cssPrefix + "arc" ? b = d.select("path") : (c = d.attr("data-index"), b = d3.select("#" + a.cssPrefix + "segment" + c)), a.options.effects.highlightSegmentOnMouseover) {
          c = b.attr("data-index");
          var e = a.options.colors[c];
          a.options.misc.gradient.enabled && (e = "url(#" + a.cssPrefix + "grad" + c + ")"), b.style("fill", e);
        }

        var f = b.attr("class") === a.cssPrefix + "expanded";
        j.onSegmentEvent(a, a.options.callbacks.onMouseoutSegment, b, f);
      });
    },
    onSegmentEvent: function onSegmentEvent(a, b, c, d) {
      if (f.isFunction(b)) {
        var e = parseInt(c.attr("data-index"), 10);
        b({
          segment: c.node(),
          index: e,
          expanded: d,
          data: a.options.data.content[e]
        });
      }
    },
    openSegment: function openSegment(a, b) {
      a.isOpeningSegment || (a.isOpeningSegment = !0, d3.selectAll("." + a.cssPrefix + "expanded").length > 0 && j.closeSegment(a, d3.select("." + a.cssPrefix + "expanded").node()), d3.select(b).transition().ease(a.options.effects.pullOutSegmentOnClick.effect).duration(a.options.effects.pullOutSegmentOnClick.speed).attr("transform", function (b) {
        var c = a.arc.centroid(b),
            d = c[0],
            e = c[1],
            f = Math.sqrt(d * d + e * e),
            g = parseInt(a.options.effects.pullOutSegmentOnClick.size, 10);
        return "translate(" + d / f * g + "," + e / f * g + ")";
      }).each("end", function () {
        a.currentlyOpenSegment = b, a.isOpeningSegment = !1, d3.select(this).attr("class", a.cssPrefix + "expanded");
      }));
    },
    closeSegment: function closeSegment(a, b) {
      d3.select(b).transition().duration(400).attr("transform", "translate(0,0)").each("end", function () {
        d3.select(this).attr("class", ""), a.currentlyOpenSegment = null;
      });
    },
    getCentroid: function getCentroid(a) {
      var b = a.getBBox();
      return {
        x: b.x + b.width / 2,
        y: b.y + b.height / 2
      };
    },
    getSegmentAngle: function getSegmentAngle(a, b, c, d) {
      var e,
          f = g({
        compounded: !0,
        midpoint: !1
      }, d),
          h = b[a].value;

      if (f.compounded) {
        e = 0;

        for (var i = 0; a >= i; i++) {
          e += b[i].value;
        }
      }

      "undefined" == typeof e && (e = h);
      var j = e / c * 360;

      if (f.midpoint) {
        var k = h / c * 360;
        j -= k / 2;
      }

      return j;
    },
    getPercentage: function getPercentage(a, b) {
      return Math.floor(a.options.data.content[b].value / a.totalSize * 100);
    }
  },
      k = {
    offscreenCoord: -1e4,
    addTitle: function addTitle(a) {
      a.svg.selectAll("." + a.cssPrefix + "title").data([a.options.header.title]).enter().append("text").text(function (a) {
        return a.text;
      }).attr("id", a.cssPrefix + "title").attr("class", a.cssPrefix + "title").attr("x", k.offscreenCoord).attr("y", k.offscreenCoord).attr("text-anchor", function () {
        var b;
        return b = "top-center" === a.options.header.location || "pie-center" === a.options.header.location ? "middle" : "left";
      }).attr("fill", function (a) {
        return a.color;
      }).style("font-size", function (a) {
        return a.fontSize + "px";
      }).style("font-family", function (a) {
        return a.font;
      });
    },
    positionTitle: function positionTitle(a) {
      var b,
          c = a.textComponents,
          d = a.options.header.location,
          e = a.options.misc.canvasPadding,
          f = a.options.size.canvasWidth,
          g = a.options.header.titleSubtitlePadding;
      b = "top-left" === d ? e.left : (f - e.right) / 2 + e.left;
      var h = e.top + c.title.h;
      if ("pie-center" === d) if (h = a.pieCenter.y, c.subtitle.exists) {
        var i = c.title.h + g + c.subtitle.h;
        h = h - i / 2 + c.title.h;
      } else h += c.title.h / 4;
      a.svg.select("#" + a.cssPrefix + "title").attr("x", b).attr("y", h);
    },
    addSubtitle: function addSubtitle(a) {
      var b = a.options.header.location;
      a.svg.selectAll("." + a.cssPrefix + "subtitle").data([a.options.header.subtitle]).enter().append("text").text(function (a) {
        return a.text;
      }).attr("x", k.offscreenCoord).attr("y", k.offscreenCoord).attr("id", a.cssPrefix + "subtitle").attr("class", a.cssPrefix + "subtitle").attr("text-anchor", function () {
        var a;
        return a = "top-center" === b || "pie-center" === b ? "middle" : "left";
      }).attr("fill", function (a) {
        return a.color;
      }).style("font-size", function (a) {
        return a.fontSize + "px";
      }).style("font-family", function (a) {
        return a.font;
      });
    },
    positionSubtitle: function positionSubtitle(a) {
      var b,
          c = a.options.misc.canvasPadding,
          d = a.options.size.canvasWidth;
      b = "top-left" === a.options.header.location ? c.left : (d - c.right) / 2 + c.left;
      var e = k.getHeaderHeight(a);
      a.svg.select("#" + a.cssPrefix + "subtitle").attr("x", b).attr("y", e);
    },
    addFooter: function addFooter(a) {
      a.svg.selectAll("." + a.cssPrefix + "footer").data([a.options.footer]).enter().append("text").text(function (a) {
        return a.text;
      }).attr("x", k.offscreenCoord).attr("y", k.offscreenCoord).attr("id", a.cssPrefix + "footer").attr("class", a.cssPrefix + "footer").attr("text-anchor", function () {
        var b = "left";
        return "bottom-center" === a.options.footer.location ? b = "middle" : "bottom-right" === a.options.footer.location && (b = "left"), b;
      }).attr("fill", function (a) {
        return a.color;
      }).style("font-size", function (a) {
        return a.fontSize + "px";
      }).style("font-family", function (a) {
        return a.font;
      });
    },
    positionFooter: function positionFooter(a) {
      var b,
          c = a.options.footer.location,
          d = a.textComponents.footer.w,
          e = a.options.size.canvasWidth,
          f = a.options.size.canvasHeight,
          g = a.options.misc.canvasPadding;
      b = "bottom-left" === c ? g.left : "bottom-right" === c ? e - d - g.right : e / 2, a.svg.select("#" + a.cssPrefix + "footer").attr("x", b).attr("y", f - g.bottom);
    },
    getHeaderHeight: function getHeaderHeight(a) {
      var b;

      if (a.textComponents.title.exists) {
        var c = a.textComponents.title.h + a.options.header.titleSubtitlePadding + a.textComponents.subtitle.h;
        b = "pie-center" === a.options.header.location ? a.pieCenter.y - c / 2 + c : c + a.options.misc.canvasPadding.top;
      } else if ("pie-center" === a.options.header.location) {
        var d = a.options.misc.canvasPadding.bottom + a.textComponents.footer.h;
        b = (a.options.size.canvasHeight - d) / 2 + a.options.misc.canvasPadding.top + a.textComponents.subtitle.h / 2;
      } else b = a.options.misc.canvasPadding.top + a.textComponents.subtitle.h;

      return b;
    }
  },
      l = function l(i, j) {
    if (this.element = i, "string" == typeof i) {
      var k = i.replace(/^#/, "");
      this.element = document.getElementById(k);
    }

    var l = {};
    g(!0, l, d, j), this.options = l, null !== this.options.misc.cssPrefix ? this.cssPrefix = this.options.misc.cssPrefix : (this.cssPrefix = "p" + c + "_", c++), e.initialCheck(this) && (d3.select(this.element).attr(a, b), this.options.data.content = h.sortPieData(this), this.options.data.smallSegmentGrouping.enabled && (this.options.data.content = f.applySmallSegmentGrouping(this.options.data.content, this.options.data.smallSegmentGrouping)), this.options.colors = f.initSegmentColors(this), this.totalSize = h.getTotalPieSize(this.options.data.content), m.call(this));
  };

  l.prototype.redraw = function () {
    this.element.innerHTML = "", m.call(this);
  }, l.prototype.destroy = function () {
    this.element.innerHTML = "", d3.select(this.element).attr(a, null);
  }, l.prototype.getOpenSegment = function () {
    var a = this.currentlyOpenSegment;

    if (null !== a && "undefined" != typeof a) {
      var b = parseInt(d3.select(a).attr("data-index"), 10);
      return {
        element: a,
        index: b,
        data: this.options.data.content[b]
      };
    }

    return null;
  }, l.prototype.openSegment = function (a) {
    var a = parseInt(a, 10);
    0 > a || a > this.options.data.content.length - 1 || j.openSegment(this, d3.select("#" + this.cssPrefix + "segment" + a).node());
  }, l.prototype.closeSegment = function () {
    var a = this.currentlyOpenSegment;
    a && j.closeSegment(this, a);
  }, l.prototype.updateProp = function (a, b) {
    switch (a) {
      case "header.title.text":
        var c = f.processObj(this.options, a);
        f.processObj(this.options, a, b), d3.select("#" + this.cssPrefix + "title").html(b), ("" === c && "" !== b || "" !== c && "" === b) && this.redraw();
        break;

      case "header.subtitle.text":
        var d = f.processObj(this.options, a);
        f.processObj(this.options, a, b), d3.select("#" + this.cssPrefix + "subtitle").html(b), ("" === d && "" !== b || "" !== d && "" === b) && this.redraw();
        break;

      case "callbacks.onload":
      case "callbacks.onMouseoverSegment":
      case "callbacks.onMouseoutSegment":
      case "callbacks.onClickSegment":
      case "effects.pullOutSegmentOnClick.effect":
      case "effects.pullOutSegmentOnClick.speed":
      case "effects.pullOutSegmentOnClick.size":
      case "effects.highlightSegmentOnMouseover":
      case "effects.highlightLuminosity":
        f.processObj(this.options, a, b);
    }
  };

  var m = function m() {
    this.svg = f.addSVGSpace(this), this.textComponents = {
      headerHeight: 0,
      title: {
        exists: "" !== this.options.header.title.text,
        h: 0,
        w: 0
      },
      subtitle: {
        exists: "" !== this.options.header.subtitle.text,
        h: 0,
        w: 0
      },
      footer: {
        exists: "" !== this.options.footer.text,
        h: 0,
        w: 0
      }
    }, this.outerLabelGroupData = [], this.textComponents.title.exists && k.addTitle(this), this.textComponents.subtitle.exists && k.addSubtitle(this), k.addFooter(this);
    var a = this;
    f.whenIdExists(this.cssPrefix + "footer", function () {
      k.positionFooter(a);
      var b = f.getDimensions(a.cssPrefix + "footer");
      a.textComponents.footer.h = b.h, a.textComponents.footer.w = b.w;
    });
    var b = [];
    this.textComponents.title.exists && b.push(this.cssPrefix + "title"), this.textComponents.subtitle.exists && b.push(this.cssPrefix + "subtitle"), this.textComponents.footer.exists && b.push(this.cssPrefix + "footer"), f.whenElementsExist(b, function () {
      if (a.textComponents.title.exists) {
        var b = f.getDimensions(a.cssPrefix + "title");
        a.textComponents.title.h = b.h, a.textComponents.title.w = b.w;
      }

      if (a.textComponents.subtitle.exists) {
        var c = f.getDimensions(a.cssPrefix + "subtitle");
        a.textComponents.subtitle.h = c.h, a.textComponents.subtitle.w = c.w;
      }

      if (a.textComponents.title.exists || a.textComponents.subtitle.exists) {
        var d = 0;
        a.textComponents.title.exists && (d += a.textComponents.title.h, a.textComponents.subtitle.exists && (d += a.options.header.titleSubtitlePadding)), a.textComponents.subtitle.exists && (d += a.textComponents.subtitle.h), a.textComponents.headerHeight = d;
      }

      h.computePieRadius(a), h.calculatePieCenter(a), k.positionTitle(a), k.positionSubtitle(a), a.options.misc.gradient.enabled && j.addGradients(a), j.create(a), i.add(a, "inner", a.options.labels.inner.format), i.add(a, "outer", a.options.labels.outer.format), i.positionLabelElements(a, "inner", a.options.labels.inner.format), i.positionLabelElements(a, "outer", a.options.labels.outer.format), i.computeOuterLabelCoords(a), i.positionLabelGroups(a, "outer"), i.computeLabelLinePositions(a), a.options.labels.lines.enabled && "none" !== a.options.labels.outer.format && i.addLabelLines(a), i.positionLabelGroups(a, "inner"), i.fadeInLabelsAndLines(a), j.addSegmentEventHandlers(a);
    });
  };

  window.d3pie = l;
}();

/***/ }),

/***/ "./src/scripts/libs/nvd3/nv.d3.min.js":
/*!********************************************!*\
  !*** ./src/scripts/libs/nvd3/nv.d3.min.js ***!
  \********************************************/
/***/ (() => {

function _typeof(obj) { "@babel/helpers - typeof"; if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

(function () {
  function t(e, t) {
    return new Date(t, e + 1, 0).getDate();
  }

  function n(e, t, n) {
    return function (r, i, s) {
      var o = e(r),
          u = [];
      o < r && t(o);
      if (s > 1) while (o < i) {
        var a = new Date(+o);
        n(a) % s === 0 && u.push(a), t(o);
      } else while (o < i) {
        u.push(new Date(+o)), t(o);
      }
      return u;
    };
  }

  var e = window.nv || {};
  e.version = "1.1.15b", e.dev = !0, window.nv = e, e.tooltip = e.tooltip || {}, e.utils = e.utils || {}, e.models = e.models || {}, e.charts = {}, e.graphs = [], e.logs = {}, e.dispatch = d3.dispatch("render_start", "render_end"), e.dev && (e.dispatch.on("render_start", function (t) {
    e.logs.startTime = +new Date();
  }), e.dispatch.on("render_end", function (t) {
    e.logs.endTime = +new Date(), e.logs.totalTime = e.logs.endTime - e.logs.startTime, e.log("total", e.logs.totalTime);
  })), e.log = function () {
    if (e.dev && console.log && console.log.apply) console.log.apply(console, arguments);else if (e.dev && typeof console.log == "function" && Function.prototype.bind) {
      var t = Function.prototype.bind.call(console.log, console);
      t.apply(console, arguments);
    }
    return arguments[arguments.length - 1];
  }, e.render = function (n) {
    n = n || 1, e.render.active = !0, e.dispatch.render_start(), setTimeout(function () {
      var t, r;

      for (var i = 0; i < n && (r = e.render.queue[i]); i++) {
        t = r.generate(), _typeof(r.callback) == (typeof Function === "undefined" ? "undefined" : _typeof(Function)) && r.callback(t), e.graphs.push(t);
      }

      e.render.queue.splice(0, i), e.render.queue.length ? setTimeout(arguments.callee, 0) : (e.dispatch.render_end(), e.render.active = !1);
    }, 0);
  }, e.render.active = !1, e.render.queue = [], e.addGraph = function (t) {
    _typeof(arguments[0]) == (typeof Function === "undefined" ? "undefined" : _typeof(Function)) && (t = {
      generate: arguments[0],
      callback: arguments[1]
    }), e.render.queue.push(t), e.render.active || e.render();
  }, e.identity = function (e) {
    return e;
  }, e.strip = function (e) {
    return e.replace(/(\s|&)/g, "");
  }, d3.time.monthEnd = function (e) {
    return new Date(e.getFullYear(), e.getMonth(), 0);
  }, d3.time.monthEnds = n(d3.time.monthEnd, function (e) {
    e.setUTCDate(e.getUTCDate() + 1), e.setDate(t(e.getMonth() + 1, e.getFullYear()));
  }, function (e) {
    return e.getMonth();
  }), e.interactiveGuideline = function () {
    "use strict";

    function c(o) {
      o.each(function (o) {
        function g() {
          var e = d3.mouse(this),
              n = e[0],
              r = e[1],
              o = !0,
              a = !1;
          l && (n = d3.event.offsetX, r = d3.event.offsetY, d3.event.target.tagName !== "svg" && (o = !1), d3.event.target.className.baseVal.match("nv-legend") && (a = !0)), o && (n -= i.left, r -= i.top);

          if (n < 0 || r < 0 || n > p || r > d || d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined || a) {
            if (l && d3.event.relatedTarget && d3.event.relatedTarget.ownerSVGElement === undefined && d3.event.relatedTarget.className.match(t.nvPointerEventsClass)) return;
            u.elementMouseout({
              mouseX: n,
              mouseY: r
            }), c.renderGuideLine(null);
            return;
          }

          var f = s.invert(n);
          u.elementMousemove({
            mouseX: n,
            mouseY: r,
            pointXValue: f
          }), d3.event.type === "dblclick" && u.elementDblclick({
            mouseX: n,
            mouseY: r,
            pointXValue: f
          });
        }

        var h = d3.select(this),
            p = n || 960,
            d = r || 400,
            v = h.selectAll("g.nv-wrap.nv-interactiveLineLayer").data([o]),
            m = v.enter().append("g").attr("class", " nv-wrap nv-interactiveLineLayer");
        m.append("g").attr("class", "nv-interactiveGuideLine");
        if (!f) return;
        f.on("mousemove", g, !0).on("mouseout", g, !0).on("dblclick", g), c.renderGuideLine = function (t) {
          if (!a) return;
          var n = v.select(".nv-interactiveGuideLine").selectAll("line").data(t != null ? [e.utils.NaNtoZero(t)] : [], String);
          n.enter().append("line").attr("class", "nv-guideline").attr("x1", function (e) {
            return e;
          }).attr("x2", function (e) {
            return e;
          }).attr("y1", d).attr("y2", 0), n.exit().remove();
        };
      });
    }

    var t = e.models.tooltip(),
        n = null,
        r = null,
        i = {
      left: 0,
      top: 0
    },
        s = d3.scale.linear(),
        o = d3.scale.linear(),
        u = d3.dispatch("elementMousemove", "elementMouseout", "elementDblclick"),
        a = !0,
        f = null,
        l = navigator.userAgent.indexOf("MSIE") !== -1;
    return c.dispatch = u, c.tooltip = t, c.margin = function (e) {
      return arguments.length ? (i.top = typeof e.top != "undefined" ? e.top : i.top, i.left = typeof e.left != "undefined" ? e.left : i.left, c) : i;
    }, c.width = function (e) {
      return arguments.length ? (n = e, c) : n;
    }, c.height = function (e) {
      return arguments.length ? (r = e, c) : r;
    }, c.xScale = function (e) {
      return arguments.length ? (s = e, c) : s;
    }, c.showGuideLine = function (e) {
      return arguments.length ? (a = e, c) : a;
    }, c.svgContainer = function (e) {
      return arguments.length ? (f = e, c) : f;
    }, c;
  }, e.interactiveBisect = function (e, t, n) {
    "use strict";

    if (!e instanceof Array) return null;
    typeof n != "function" && (n = function n(e, t) {
      return e.x;
    });
    var r = d3.bisector(n).left,
        i = d3.max([0, r(e, t) - 1]),
        s = n(e[i], i);
    typeof s == "undefined" && (s = i);
    if (s === t) return i;
    var o = d3.min([i + 1, e.length - 1]),
        u = n(e[o], o);
    return typeof u == "undefined" && (u = o), Math.abs(u - t) >= Math.abs(s - t) ? i : o;
  }, e.nearestValueIndex = function (e, t, n) {
    "use strict";

    var r = Infinity,
        i = null;
    return e.forEach(function (e, s) {
      var o = Math.abs(t - e);
      o <= r && o < n && (r = o, i = s);
    }), i;
  }, function () {
    "use strict";

    window.nv.tooltip = {}, window.nv.models.tooltip = function () {
      function y() {
        if (a) {
          var e = d3.select(a);
          e.node().tagName !== "svg" && (e = e.select("svg"));
          var t = e.node() ? e.attr("viewBox") : null;

          if (t) {
            t = t.split(" ");
            var n = parseInt(e.style("width")) / t[2];
            l.left = l.left * n, l.top = l.top * n;
          }
        }
      }

      function b(e) {
        var t;
        a ? t = d3.select(a) : t = d3.select("body");
        var n = t.select(".nvtooltip");
        return n.node() === null && (n = t.append("div").attr("class", "nvtooltip " + (u ? u : "xy-tooltip")).attr("id", h)), n.node().innerHTML = e, n.style("top", 0).style("left", 0).style("opacity", 0), n.selectAll("div, table, td, tr").classed(p, !0), n.classed(p, !0), n.node();
      }

      function w() {
        if (!c) return;
        if (!g(n)) return;
        y();
        var t = l.left,
            u = o != null ? o : l.top,
            h = b(m(n));
        f = h;

        if (a) {
          var p = a.getElementsByTagName("svg")[0],
              d = p ? p.getBoundingClientRect() : a.getBoundingClientRect(),
              v = {
            left: 0,
            top: 0
          };

          if (p) {
            var E = p.getBoundingClientRect(),
                S = a.getBoundingClientRect(),
                x = E.top;

            if (x < 0) {
              var T = a.getBoundingClientRect();
              x = Math.abs(x) > T.height ? 0 : x;
            }

            v.top = Math.abs(x - S.top), v.left = Math.abs(E.left - S.left);
          }

          t += a.offsetLeft + v.left - 2 * a.scrollLeft, u += a.offsetTop + v.top - 2 * a.scrollTop;
        }

        return s && s > 0 && (u = Math.floor(u / s) * s), e.tooltip.calcTooltipPosition([t, u], r, i, h), w;
      }

      var t = null,
          n = null,
          r = "w",
          i = 50,
          s = 25,
          o = null,
          u = null,
          a = null,
          f = null,
          l = {
        left: null,
        top: null
      },
          c = !0,
          h = "nvtooltip-" + Math.floor(Math.random() * 1e5),
          p = "nv-pointer-events-none",
          d = function d(e, t) {
        return e;
      },
          v = function v(e) {
        return e;
      },
          m = function m(e) {
        if (t != null) return t;
        if (e == null) return "";
        var n = d3.select(document.createElement("table")),
            r = n.selectAll("thead").data([e]).enter().append("thead");
        r.append("tr").append("td").attr("colspan", 3).append("strong").classed("x-value", !0).html(v(e.value));
        var i = n.selectAll("tbody").data([e]).enter().append("tbody"),
            s = i.selectAll("tr").data(function (e) {
          return e.series;
        }).enter().append("tr").classed("highlight", function (e) {
          return e.highlight;
        });
        s.append("td").classed("legend-color-guide", !0).append("div").style("background-color", function (e) {
          return e.color;
        }), s.append("td").classed("key", !0).html(function (e) {
          return e.key;
        }), s.append("td").classed("value", !0).html(function (e, t) {
          return d(e.value, t);
        }), s.selectAll("td").each(function (e) {
          if (e.highlight) {
            var t = d3.scale.linear().domain([0, 1]).range(["#fff", e.color]),
                n = .6;
            d3.select(this).style("border-bottom-color", t(n)).style("border-top-color", t(n));
          }
        });
        var o = n.node().outerHTML;
        return e.footer !== undefined && (o += "<div class='footer'>" + e.footer + "</div>"), o;
      },
          g = function g(e) {
        return e && e.series && e.series.length > 0 ? !0 : !1;
      };

      return w.nvPointerEventsClass = p, w.content = function (e) {
        return arguments.length ? (t = e, w) : t;
      }, w.tooltipElem = function () {
        return f;
      }, w.contentGenerator = function (e) {
        return arguments.length ? (typeof e == "function" && (m = e), w) : m;
      }, w.data = function (e) {
        return arguments.length ? (n = e, w) : n;
      }, w.gravity = function (e) {
        return arguments.length ? (r = e, w) : r;
      }, w.distance = function (e) {
        return arguments.length ? (i = e, w) : i;
      }, w.snapDistance = function (e) {
        return arguments.length ? (s = e, w) : s;
      }, w.classes = function (e) {
        return arguments.length ? (u = e, w) : u;
      }, w.chartContainer = function (e) {
        return arguments.length ? (a = e, w) : a;
      }, w.position = function (e) {
        return arguments.length ? (l.left = typeof e.left != "undefined" ? e.left : l.left, l.top = typeof e.top != "undefined" ? e.top : l.top, w) : l;
      }, w.fixedTop = function (e) {
        return arguments.length ? (o = e, w) : o;
      }, w.enabled = function (e) {
        return arguments.length ? (c = e, w) : c;
      }, w.valueFormatter = function (e) {
        return arguments.length ? (typeof e == "function" && (d = e), w) : d;
      }, w.headerFormatter = function (e) {
        return arguments.length ? (typeof e == "function" && (v = e), w) : v;
      }, w.id = function () {
        return h;
      }, w;
    }, e.tooltip.show = function (t, n, r, i, s, o) {
      var u = document.createElement("div");
      u.className = "nvtooltip " + (o ? o : "xy-tooltip");
      var a = s;
      if (!s || s.tagName.match(/g|svg/i)) a = document.getElementsByTagName("body")[0];
      u.style.left = 0, u.style.top = 0, u.style.opacity = 0, u.innerHTML = n, a.appendChild(u), s && (t[0] = t[0] - s.scrollLeft, t[1] = t[1] - s.scrollTop), e.tooltip.calcTooltipPosition(t, r, i, u);
    }, e.tooltip.findFirstNonSVGParent = function (e) {
      while (e.tagName.match(/^g|svg$/i) !== null) {
        e = e.parentNode;
      }

      return e;
    }, e.tooltip.findTotalOffsetTop = function (e, t) {
      var n = t;

      do {
        isNaN(e.offsetTop) || (n += e.offsetTop);
      } while (e = e.offsetParent);

      return n;
    }, e.tooltip.findTotalOffsetLeft = function (e, t) {
      var n = t;

      do {
        isNaN(e.offsetLeft) || (n += e.offsetLeft);
      } while (e = e.offsetParent);

      return n;
    }, e.tooltip.calcTooltipPosition = function (t, n, r, i) {
      var s = parseInt(i.offsetHeight),
          o = parseInt(i.offsetWidth),
          u = e.utils.windowSize().width,
          a = e.utils.windowSize().height,
          f = window.pageYOffset,
          l = window.pageXOffset,
          c,
          h;
      a = window.innerWidth >= document.body.scrollWidth ? a : a - 16, u = window.innerHeight >= document.body.scrollHeight ? u : u - 16, n = n || "s", r = r || 20;

      var p = function p(t) {
        return e.tooltip.findTotalOffsetTop(t, h);
      },
          d = function d(t) {
        return e.tooltip.findTotalOffsetLeft(t, c);
      };

      switch (n) {
        case "e":
          c = t[0] - o - r, h = t[1] - s / 2;
          var v = d(i),
              m = p(i);
          v < l && (c = t[0] + r > l ? t[0] + r : l - v + c), m < f && (h = f - m + h), m + s > f + a && (h = f + a - m + h - s);
          break;

        case "w":
          c = t[0] + r, h = t[1] - s / 2;
          var v = d(i),
              m = p(i);
          v + o > u && (c = t[0] - o - r), m < f && (h = f + 5), m + s > f + a && (h = f + a - m + h - s);
          break;

        case "n":
          c = t[0] - o / 2 - 5, h = t[1] + r;
          var v = d(i),
              m = p(i);
          v < l && (c = l + 5), v + o > u && (c = c - o / 2 + 5), m + s > f + a && (h = f + a - m + h - s);
          break;

        case "s":
          c = t[0] - o / 2, h = t[1] - s - r;
          var v = d(i),
              m = p(i);
          v < l && (c = l + 5), v + o > u && (c = c - o / 2 + 5), f > m && (h = f);
          break;

        case "none":
          c = t[0], h = t[1] - r;
          var v = d(i),
              m = p(i);
      }

      return i.style.left = c + "px", i.style.top = h + "px", i.style.opacity = 1, i.style.position = "absolute", i;
    }, e.tooltip.cleanup = function () {
      var e = document.getElementsByClassName("nvtooltip"),
          t = [];

      while (e.length) {
        t.push(e[0]), e[0].style.transitionDelay = "0 !important", e[0].style.opacity = 0, e[0].className = "nvtooltip-pending-removal";
      }

      setTimeout(function () {
        while (t.length) {
          var e = t.pop();
          e.parentNode.removeChild(e);
        }
      }, 500);
    };
  }(), e.utils.windowSize = function () {
    var e = {
      width: 640,
      height: 480
    };
    return document.body && document.body.offsetWidth && (e.width = document.body.offsetWidth, e.height = document.body.offsetHeight), document.compatMode == "CSS1Compat" && document.documentElement && document.documentElement.offsetWidth && (e.width = document.documentElement.offsetWidth, e.height = document.documentElement.offsetHeight), window.innerWidth && window.innerHeight && (e.width = window.innerWidth, e.height = window.innerHeight), e;
  }, e.utils.windowResize = function (e) {
    if (e === undefined) return;
    var t = window.onresize;

    window.onresize = function (n) {
      typeof t == "function" && t(n), e(n);
    };
  }, e.utils.getColor = function (t) {
    return arguments.length ? Object.prototype.toString.call(t) === "[object Array]" ? function (e, n) {
      return e.color || t[n % t.length];
    } : t : e.utils.defaultColor();
  }, e.utils.defaultColor = function () {
    var e = d3.scale.category20().range();
    return function (t, n) {
      return t.color || e[n % e.length];
    };
  }, e.utils.customTheme = function (e, t, n) {
    t = t || function (e) {
      return e.key;
    }, n = n || d3.scale.category20().range();
    var r = n.length;
    return function (i, s) {
      var o = t(i);
      return r || (r = n.length), typeof e[o] != "undefined" ? typeof e[o] == "function" ? e[o]() : e[o] : n[--r];
    };
  }, e.utils.pjax = function (t, n) {
    function r(r) {
      d3.html(r, function (r) {
        var i = d3.select(n).node();
        i.parentNode.replaceChild(d3.select(r).select(n).node(), i), e.utils.pjax(t, n);
      });
    }

    d3.selectAll(t).on("click", function () {
      history.pushState(this.href, this.textContent, this.href), r(this.href), d3.event.preventDefault();
    }), d3.select(window).on("popstate", function () {
      d3.event.state && r(d3.event.state);
    });
  }, e.utils.calcApproxTextWidth = function (e) {
    if (typeof e.style == "function" && typeof e.text == "function") {
      var t = parseInt(e.style("font-size").replace("px", "")),
          n = e.text().length;
      return n * t * .5;
    }

    return 0;
  }, e.utils.NaNtoZero = function (e) {
    return typeof e != "number" || isNaN(e) || e === null || e === Infinity ? 0 : e;
  }, e.utils.optionsFunc = function (e) {
    return e && d3.map(e).forEach(function (e, t) {
      typeof this[e] == "function" && this[e](t);
    }.bind(this)), this;
  }, e.models.axis = function () {
    "use strict";

    function m(e) {
      return e.each(function (e) {
        var i = d3.select(this),
            m = i.selectAll("g.nv-wrap.nv-axis").data([e]),
            g = m.enter().append("g").attr("class", "nvd3 nv-wrap nv-axis"),
            y = g.append("g"),
            b = m.select("g");
        p !== null ? t.ticks(p) : (t.orient() == "top" || t.orient() == "bottom") && t.ticks(Math.abs(s.range()[1] - s.range()[0]) / 100), b.transition().call(t), v = v || t.scale();
        var w = t.tickFormat();
        w == null && (w = v.tickFormat());
        var E = b.selectAll("text.nv-axislabel").data([o || null]);
        E.exit().remove();

        switch (t.orient()) {
          case "top":
            E.enter().append("text").attr("class", "nv-axislabel");
            var S = s.range().length == 2 ? s.range()[1] : s.range()[s.range().length - 1] + (s.range()[1] - s.range()[0]);
            E.attr("text-anchor", "middle").attr("y", 0).attr("x", S / 2);

            if (u) {
              var x = m.selectAll("g.nv-axisMaxMin").data(s.domain());
              x.enter().append("g").attr("class", "nv-axisMaxMin").append("text"), x.exit().remove(), x.attr("transform", function (e, t) {
                return "translate(" + s(e) + ",0)";
              }).select("text").attr("dy", "-0.5em").attr("y", -t.tickPadding()).attr("text-anchor", "middle").text(function (e, t) {
                var n = w(e);
                return ("" + n).match("NaN") ? "" : n;
              }), x.transition().attr("transform", function (e, t) {
                return "translate(" + s.range()[t] + ",0)";
              });
            }

            break;

          case "bottom":
            var T = 36,
                N = 30,
                C = b.selectAll("g").select("text");

            if (f % 360) {
              C.each(function (e, t) {
                var n = this.getBBox().width;
                n > N && (N = n);
              });
              var k = Math.abs(Math.sin(f * Math.PI / 180)),
                  T = (k ? k * N : N) + 30;
              C.attr("transform", function (e, t, n) {
                return "rotate(" + f + " 0,0)";
              }).style("text-anchor", f % 360 > 0 ? "start" : "end");
            }

            E.enter().append("text").attr("class", "nv-axislabel");
            var S = s.range().length == 2 ? s.range()[1] : s.range()[s.range().length - 1] + (s.range()[1] - s.range()[0]);
            E.attr("text-anchor", "middle").attr("y", T).attr("x", S / 2);

            if (u) {
              var x = m.selectAll("g.nv-axisMaxMin").data([s.domain()[0], s.domain()[s.domain().length - 1]]);
              x.enter().append("g").attr("class", "nv-axisMaxMin").append("text"), x.exit().remove(), x.attr("transform", function (e, t) {
                return "translate(" + (s(e) + (h ? s.rangeBand() / 2 : 0)) + ",0)";
              }).select("text").attr("dy", ".71em").attr("y", t.tickPadding()).attr("transform", function (e, t, n) {
                return "rotate(" + f + " 0,0)";
              }).style("text-anchor", f ? f % 360 > 0 ? "start" : "end" : "middle").text(function (e, t) {
                var n = w(e);
                return ("" + n).match("NaN") ? "" : n;
              }), x.transition().attr("transform", function (e, t) {
                return "translate(" + (s(e) + (h ? s.rangeBand() / 2 : 0)) + ",0)";
              });
            }

            c && C.attr("transform", function (e, t) {
              return "translate(0," + (t % 2 == 0 ? "0" : "12") + ")";
            });
            break;

          case "right":
            E.enter().append("text").attr("class", "nv-axislabel"), E.style("text-anchor", l ? "middle" : "begin").attr("transform", l ? "rotate(90)" : "").attr("y", l ? -Math.max(n.right, r) + 12 : -10).attr("x", l ? s.range()[0] / 2 : t.tickPadding());

            if (u) {
              var x = m.selectAll("g.nv-axisMaxMin").data(s.domain());
              x.enter().append("g").attr("class", "nv-axisMaxMin").append("text").style("opacity", 0), x.exit().remove(), x.attr("transform", function (e, t) {
                return "translate(0," + s(e) + ")";
              }).select("text").attr("dy", ".32em").attr("y", 0).attr("x", t.tickPadding()).style("text-anchor", "start").text(function (e, t) {
                var n = w(e);
                return ("" + n).match("NaN") ? "" : n;
              }), x.transition().attr("transform", function (e, t) {
                return "translate(0," + s.range()[t] + ")";
              }).select("text").style("opacity", 1);
            }

            break;

          case "left":
            E.enter().append("text").attr("class", "nv-axislabel"), E.style("text-anchor", l ? "middle" : "end").attr("transform", l ? "rotate(-90)" : "").attr("y", l ? -Math.max(n.left, r) + d : -10).attr("x", l ? -s.range()[0] / 2 : -t.tickPadding());

            if (u) {
              var x = m.selectAll("g.nv-axisMaxMin").data(s.domain());
              x.enter().append("g").attr("class", "nv-axisMaxMin").append("text").style("opacity", 0), x.exit().remove(), x.attr("transform", function (e, t) {
                return "translate(0," + v(e) + ")";
              }).select("text").attr("dy", ".32em").attr("y", 0).attr("x", -t.tickPadding()).attr("text-anchor", "end").text(function (e, t) {
                var n = w(e);
                return ("" + n).match("NaN") ? "" : n;
              }), x.transition().attr("transform", function (e, t) {
                return "translate(0," + s.range()[t] + ")";
              }).select("text").style("opacity", 1);
            }

        }

        E.text(function (e) {
          return e;
        }), u && (t.orient() === "left" || t.orient() === "right") && (b.selectAll("g").each(function (e, t) {
          d3.select(this).select("text").attr("opacity", 1);
          if (s(e) < s.range()[1] + 10 || s(e) > s.range()[0] - 10) (e > 1e-10 || e < -1e-10) && d3.select(this).attr("opacity", 0), d3.select(this).select("text").attr("opacity", 0);
        }), s.domain()[0] == s.domain()[1] && s.domain()[0] == 0 && m.selectAll("g.nv-axisMaxMin").style("opacity", function (e, t) {
          return t ? 0 : 1;
        }));

        if (u && (t.orient() === "top" || t.orient() === "bottom")) {
          var L = [];
          m.selectAll("g.nv-axisMaxMin").each(function (e, t) {
            try {
              t ? L.push(s(e) - this.getBBox().width - 4) : L.push(s(e) + this.getBBox().width + 4);
            } catch (n) {
              t ? L.push(s(e) - 4) : L.push(s(e) + 4);
            }
          }), b.selectAll("g").each(function (e, t) {
            if (s(e) < L[0] || s(e) > L[1]) e > 1e-10 || e < -1e-10 ? d3.select(this).remove() : d3.select(this).select("text").remove();
          });
        }

        a && b.selectAll(".tick").filter(function (e) {
          return !parseFloat(Math.round(e.__data__ * 1e5) / 1e6) && e.__data__ !== undefined;
        }).classed("zero", !0), v = s.copy();
      }), m;
    }

    var t = d3.svg.axis(),
        n = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        r = 75,
        i = 60,
        s = d3.scale.linear(),
        o = null,
        u = !0,
        a = !0,
        f = 0,
        l = !0,
        c = !1,
        h = !1,
        p = null,
        d = 12;
    t.scale(s).orient("bottom").tickFormat(function (e) {
      return e;
    });
    var v;
    return m.axis = t, d3.rebind(m, t, "orient", "tickValues", "tickSubdivide", "tickSize", "tickPadding", "tickFormat"), d3.rebind(m, s, "domain", "range", "rangeBand", "rangeBands"), m.options = e.utils.optionsFunc.bind(m), m.margin = function (e) {
      return arguments.length ? (n.top = typeof e.top != "undefined" ? e.top : n.top, n.right = typeof e.right != "undefined" ? e.right : n.right, n.bottom = typeof e.bottom != "undefined" ? e.bottom : n.bottom, n.left = typeof e.left != "undefined" ? e.left : n.left, m) : n;
    }, m.width = function (e) {
      return arguments.length ? (r = e, m) : r;
    }, m.ticks = function (e) {
      return arguments.length ? (p = e, m) : p;
    }, m.height = function (e) {
      return arguments.length ? (i = e, m) : i;
    }, m.axisLabel = function (e) {
      return arguments.length ? (o = e, m) : o;
    }, m.showMaxMin = function (e) {
      return arguments.length ? (u = e, m) : u;
    }, m.highlightZero = function (e) {
      return arguments.length ? (a = e, m) : a;
    }, m.scale = function (e) {
      return arguments.length ? (s = e, t.scale(s), h = typeof s.rangeBands == "function", d3.rebind(m, s, "domain", "range", "rangeBand", "rangeBands"), m) : s;
    }, m.rotateYLabel = function (e) {
      return arguments.length ? (l = e, m) : l;
    }, m.rotateLabels = function (e) {
      return arguments.length ? (f = e, m) : f;
    }, m.staggerLabels = function (e) {
      return arguments.length ? (c = e, m) : c;
    }, m.axisLabelDistance = function (e) {
      return arguments.length ? (d = e, m) : d;
    }, m;
  }, e.models.bullet = function () {
    "use strict";

    function m(e) {
      return e.each(function (e, n) {
        var p = c - t.left - t.right,
            m = h - t.top - t.bottom,
            g = d3.select(this),
            y = i.call(this, e, n).slice().sort(d3.descending),
            b = s.call(this, e, n).slice().sort(d3.descending),
            w = o.call(this, e, n).slice().sort(d3.descending),
            E = u.call(this, e, n).slice(),
            S = a.call(this, e, n).slice(),
            x = f.call(this, e, n).slice(),
            T = d3.scale.linear().domain(d3.extent(d3.merge([l, y]))).range(r ? [p, 0] : [0, p]),
            N = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(T.range());
        this.__chart__ = T;

        var C = d3.min(y),
            k = d3.max(y),
            L = y[1],
            A = g.selectAll("g.nv-wrap.nv-bullet").data([e]),
            O = A.enter().append("g").attr("class", "nvd3 nv-wrap nv-bullet"),
            M = O.append("g"),
            _ = A.select("g");

        M.append("rect").attr("class", "nv-range nv-rangeMax"), M.append("rect").attr("class", "nv-range nv-rangeAvg"), M.append("rect").attr("class", "nv-range nv-rangeMin"), M.append("rect").attr("class", "nv-measure"), M.append("path").attr("class", "nv-markerTriangle"), A.attr("transform", "translate(" + t.left + "," + t.top + ")");

        var D = function D(e) {
          return Math.abs(N(e) - N(0));
        },
            P = function P(e) {
          return Math.abs(T(e) - T(0));
        },
            H = function H(e) {
          return e < 0 ? N(e) : N(0);
        },
            B = function B(e) {
          return e < 0 ? T(e) : T(0);
        };

        _.select("rect.nv-rangeMax").attr("height", m).attr("width", P(k > 0 ? k : C)).attr("x", B(k > 0 ? k : C)).datum(k > 0 ? k : C), _.select("rect.nv-rangeAvg").attr("height", m).attr("width", P(L)).attr("x", B(L)).datum(L), _.select("rect.nv-rangeMin").attr("height", m).attr("width", P(k)).attr("x", B(k)).attr("width", P(k > 0 ? C : k)).attr("x", B(k > 0 ? C : k)).datum(k > 0 ? C : k), _.select("rect.nv-measure").style("fill", d).attr("height", m / 3).attr("y", m / 3).attr("width", w < 0 ? T(0) - T(w[0]) : T(w[0]) - T(0)).attr("x", B(w)).on("mouseover", function () {
          v.elementMouseover({
            value: w[0],
            label: x[0] || "Current",
            pos: [T(w[0]), m / 2]
          });
        }).on("mouseout", function () {
          v.elementMouseout({
            value: w[0],
            label: x[0] || "Current"
          });
        });
        var j = m / 6;
        b[0] ? _.selectAll("path.nv-markerTriangle").attr("transform", function (e) {
          return "translate(" + T(b[0]) + "," + m / 2 + ")";
        }).attr("d", "M0," + j + "L" + j + "," + -j + " " + -j + "," + -j + "Z").on("mouseover", function () {
          v.elementMouseover({
            value: b[0],
            label: S[0] || "Previous",
            pos: [T(b[0]), m / 2]
          });
        }).on("mouseout", function () {
          v.elementMouseout({
            value: b[0],
            label: S[0] || "Previous"
          });
        }) : _.selectAll("path.nv-markerTriangle").remove(), A.selectAll(".nv-range").on("mouseover", function (e, t) {
          var n = E[t] || (t ? t == 1 ? "Mean" : "Minimum" : "Maximum");
          v.elementMouseover({
            value: e,
            label: n,
            pos: [T(e), m / 2]
          });
        }).on("mouseout", function (e, t) {
          var n = E[t] || (t ? t == 1 ? "Mean" : "Minimum" : "Maximum");
          v.elementMouseout({
            value: e,
            label: n
          });
        });
      }), m;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = "left",
        r = !1,
        i = function i(e) {
      return e.ranges;
    },
        s = function s(e) {
      return e.markers;
    },
        o = function o(e) {
      return e.measures;
    },
        u = function u(e) {
      return e.rangeLabels ? e.rangeLabels : [];
    },
        a = function a(e) {
      return e.markerLabels ? e.markerLabels : [];
    },
        f = function f(e) {
      return e.measureLabels ? e.measureLabels : [];
    },
        l = [0],
        c = 380,
        h = 30,
        p = null,
        d = e.utils.getColor(["#1f77b4"]),
        v = d3.dispatch("elementMouseover", "elementMouseout");

    return m.dispatch = v, m.options = e.utils.optionsFunc.bind(m), m.orient = function (e) {
      return arguments.length ? (n = e, r = n == "right" || n == "bottom", m) : n;
    }, m.ranges = function (e) {
      return arguments.length ? (i = e, m) : i;
    }, m.markers = function (e) {
      return arguments.length ? (s = e, m) : s;
    }, m.measures = function (e) {
      return arguments.length ? (o = e, m) : o;
    }, m.forceX = function (e) {
      return arguments.length ? (l = e, m) : l;
    }, m.width = function (e) {
      return arguments.length ? (c = e, m) : c;
    }, m.height = function (e) {
      return arguments.length ? (h = e, m) : h;
    }, m.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, m) : t;
    }, m.tickFormat = function (e) {
      return arguments.length ? (p = e, m) : p;
    }, m.color = function (t) {
      return arguments.length ? (d = e.utils.getColor(t), m) : d;
    }, m;
  }, e.models.bulletChart = function () {
    "use strict";

    function m(e) {
      return e.each(function (n, h) {
        var g = d3.select(this),
            y = (a || parseInt(g.style("width")) || 960) - i.left - i.right,
            b = f - i.top - i.bottom,
            w = this;
        m.update = function () {
          m(e);
        }, m.container = this;

        if (!n || !s.call(this, n, h)) {
          var E = g.selectAll(".nv-noData").data([p]);
          return E.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), E.attr("x", i.left + y / 2).attr("y", 18 + i.top + b / 2).text(function (e) {
            return e;
          }), m;
        }

        g.selectAll(".nv-noData").remove();
        var S = s.call(this, n, h).slice().sort(d3.descending),
            x = o.call(this, n, h).slice().sort(d3.descending),
            T = u.call(this, n, h).slice().sort(d3.descending),
            N = g.selectAll("g.nv-wrap.nv-bulletChart").data([n]),
            C = N.enter().append("g").attr("class", "nvd3 nv-wrap nv-bulletChart"),
            k = C.append("g"),
            L = N.select("g");
        k.append("g").attr("class", "nv-bulletWrap"), k.append("g").attr("class", "nv-titles"), N.attr("transform", "translate(" + i.left + "," + i.top + ")");
        var A = d3.scale.linear().domain([0, Math.max(S[0], x[0], T[0])]).range(r ? [y, 0] : [0, y]),
            O = this.__chart__ || d3.scale.linear().domain([0, Infinity]).range(A.range());
        this.__chart__ = A;

        var M = function M(e) {
          return Math.abs(O(e) - O(0));
        },
            _ = function _(e) {
          return Math.abs(A(e) - A(0));
        },
            D = k.select(".nv-titles").append("g").attr("text-anchor", "end").attr("transform", "translate(-6," + (f - i.top - i.bottom) / 2 + ")");

        D.append("text").attr("class", "nv-title").text(function (e) {
          return e.title;
        }), D.append("text").attr("class", "nv-subtitle").attr("dy", "1em").text(function (e) {
          return e.subtitle;
        }), t.width(y).height(b);
        var P = L.select(".nv-bulletWrap");
        d3.transition(P).call(t);
        var H = l || A.tickFormat(y / 100),
            B = L.selectAll("g.nv-tick").data(A.ticks(y / 50), function (e) {
          return this.textContent || H(e);
        }),
            j = B.enter().append("g").attr("class", "nv-tick").attr("transform", function (e) {
          return "translate(" + O(e) + ",0)";
        }).style("opacity", 1e-6);
        j.append("line").attr("y1", b).attr("y2", b * 7 / 6), j.append("text").attr("text-anchor", "middle").attr("dy", "1em").attr("y", b * 7 / 6).text(H);
        var F = d3.transition(B).attr("transform", function (e) {
          return "translate(" + A(e) + ",0)";
        }).style("opacity", 1);
        F.select("line").attr("y1", b).attr("y2", b * 7 / 6), F.select("text").attr("y", b * 7 / 6), d3.transition(B.exit()).attr("transform", function (e) {
          return "translate(" + A(e) + ",0)";
        }).style("opacity", 1e-6).remove(), d.on("tooltipShow", function (e) {
          e.key = n.title, c && v(e, w.parentNode);
        });
      }), d3.timer.flush(), m;
    }

    var t = e.models.bullet(),
        n = "left",
        r = !1,
        i = {
      top: 5,
      right: 40,
      bottom: 20,
      left: 120
    },
        s = function s(e) {
      return e.ranges;
    },
        o = function o(e) {
      return e.markers;
    },
        u = function u(e) {
      return e.measures;
    },
        a = null,
        f = 55,
        l = null,
        c = !0,
        h = function h(e, t, n, r, i) {
      return "<h3>" + t + "</h3>" + "<p>" + n + "</p>";
    },
        p = "No Data Available.",
        d = d3.dispatch("tooltipShow", "tooltipHide"),
        v = function v(t, n) {
      var r = t.pos[0] + (n.offsetLeft || 0) + i.left,
          s = t.pos[1] + (n.offsetTop || 0) + i.top,
          o = h(t.key, t.label, t.value, t, m);
      e.tooltip.show([r, s], o, t.value < 0 ? "e" : "w", null, n);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      d.tooltipShow(e);
    }), t.dispatch.on("elementMouseout.tooltip", function (e) {
      d.tooltipHide(e);
    }), d.on("tooltipHide", function () {
      c && e.tooltip.cleanup();
    }), m.dispatch = d, m.bullet = t, d3.rebind(m, t, "color"), m.options = e.utils.optionsFunc.bind(m), m.orient = function (e) {
      return arguments.length ? (n = e, r = n == "right" || n == "bottom", m) : n;
    }, m.ranges = function (e) {
      return arguments.length ? (s = e, m) : s;
    }, m.markers = function (e) {
      return arguments.length ? (o = e, m) : o;
    }, m.measures = function (e) {
      return arguments.length ? (u = e, m) : u;
    }, m.width = function (e) {
      return arguments.length ? (a = e, m) : a;
    }, m.height = function (e) {
      return arguments.length ? (f = e, m) : f;
    }, m.margin = function (e) {
      return arguments.length ? (i.top = typeof e.top != "undefined" ? e.top : i.top, i.right = typeof e.right != "undefined" ? e.right : i.right, i.bottom = typeof e.bottom != "undefined" ? e.bottom : i.bottom, i.left = typeof e.left != "undefined" ? e.left : i.left, m) : i;
    }, m.tickFormat = function (e) {
      return arguments.length ? (l = e, m) : l;
    }, m.tooltips = function (e) {
      return arguments.length ? (c = e, m) : c;
    }, m.tooltipContent = function (e) {
      return arguments.length ? (h = e, m) : h;
    }, m.noData = function (e) {
      return arguments.length ? (p = e, m) : p;
    }, m;
  }, e.models.cumulativeLineChart = function () {
    "use strict";

    function D(b) {
      return b.each(function (b) {
        function q(e, t) {
          d3.select(D.container).style("cursor", "ew-resize");
        }

        function R(e, t) {
          M.x = d3.event.x, M.i = Math.round(O.invert(M.x)), rt();
        }

        function U(e, t) {
          d3.select(D.container).style("cursor", "auto"), x.index = M.i, k.stateChange(x);
        }

        function rt() {
          nt.data([M]);
          var e = D.transitionDuration();
          D.transitionDuration(0), D.update(), D.transitionDuration(e);
        }

        var A = d3.select(this).classed("nv-chart-" + S, !0),
            H = this,
            B = (f || parseInt(A.style("width")) || 960) - u.left - u.right,
            j = (l || parseInt(A.style("height")) || 400) - u.top - u.bottom;
        D.update = function () {
          A.transition().duration(L).call(D);
        }, D.container = this, x.disabled = b.map(function (e) {
          return !!e.disabled;
        });

        if (!T) {
          var F;
          T = {};

          for (F in x) {
            x[F] instanceof Array ? T[F] = x[F].slice(0) : T[F] = x[F];
          }
        }

        var I = d3.behavior.drag().on("dragstart", q).on("drag", R).on("dragend", U);

        if (!b || !b.length || !b.filter(function (e) {
          return e.values.length;
        }).length) {
          var z = A.selectAll(".nv-noData").data([N]);
          return z.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), z.attr("x", u.left + B / 2).attr("y", u.top + j / 2).text(function (e) {
            return e;
          }), D;
        }

        A.selectAll(".nv-noData").remove(), w = t.xScale(), E = t.yScale();

        if (!y) {
          var W = b.filter(function (e) {
            return !e.disabled;
          }).map(function (e, n) {
            var r = d3.extent(e.values, t.y());
            return r[0] < -0.95 && (r[0] = -0.95), [(r[0] - r[1]) / (1 + r[1]), (r[1] - r[0]) / (1 + r[0])];
          }),
              X = [d3.min(W, function (e) {
            return e[0];
          }), d3.max(W, function (e) {
            return e[1];
          })];
          t.yDomain(X);
        } else t.yDomain(null);

        O.domain([0, b[0].values.length - 1]).range([0, B]).clamp(!0);
        var b = P(M.i, b),
            V = g ? "none" : "all",
            $ = A.selectAll("g.nv-wrap.nv-cumulativeLine").data([b]),
            J = $.enter().append("g").attr("class", "nvd3 nv-wrap nv-cumulativeLine").append("g"),
            K = $.select("g");
        J.append("g").attr("class", "nv-interactive"), J.append("g").attr("class", "nv-x nv-axis").style("pointer-events", "none"), J.append("g").attr("class", "nv-y nv-axis"), J.append("g").attr("class", "nv-background"), J.append("g").attr("class", "nv-linesWrap").style("pointer-events", V), J.append("g").attr("class", "nv-avgLinesWrap").style("pointer-events", "none"), J.append("g").attr("class", "nv-legendWrap"), J.append("g").attr("class", "nv-controlsWrap"), c && (i.width(B), K.select(".nv-legendWrap").datum(b).call(i), u.top != i.height() && (u.top = i.height(), j = (l || parseInt(A.style("height")) || 400) - u.top - u.bottom), K.select(".nv-legendWrap").attr("transform", "translate(0," + -u.top + ")"));

        if (m) {
          var Q = [{
            key: "Re-scale y-axis",
            disabled: !y
          }];
          s.width(140).color(["#444", "#444", "#444"]).rightAlign(!1).margin({
            top: 5,
            right: 0,
            bottom: 5,
            left: 20
          }), K.select(".nv-controlsWrap").datum(Q).attr("transform", "translate(0," + -u.top + ")").call(s);
        }

        $.attr("transform", "translate(" + u.left + "," + u.top + ")"), d && K.select(".nv-y.nv-axis").attr("transform", "translate(" + B + ",0)");
        var G = b.filter(function (e) {
          return e.tempDisabled;
        });
        $.select(".tempDisabled").remove(), G.length && $.append("text").attr("class", "tempDisabled").attr("x", B / 2).attr("y", "-.71em").style("text-anchor", "end").text(G.map(function (e) {
          return e.key;
        }).join(", ") + " values cannot be calculated for this time period."), g && (o.width(B).height(j).margin({
          left: u.left,
          top: u.top
        }).svgContainer(A).xScale(w), $.select(".nv-interactive").call(o)), J.select(".nv-background").append("rect"), K.select(".nv-background rect").attr("width", B).attr("height", j), t.y(function (e) {
          return e.display.y;
        }).width(B).height(j).color(b.map(function (e, t) {
          return e.color || a(e, t);
        }).filter(function (e, t) {
          return !b[t].disabled && !b[t].tempDisabled;
        }));
        var Y = K.select(".nv-linesWrap").datum(b.filter(function (e) {
          return !e.disabled && !e.tempDisabled;
        }));
        Y.call(t), b.forEach(function (e, t) {
          e.seriesIndex = t;
        });

        var Z = b.filter(function (e) {
          return !e.disabled && !!C(e);
        }),
            et = K.select(".nv-avgLinesWrap").selectAll("line").data(Z, function (e) {
          return e.key;
        }),
            tt = function tt(e) {
          var t = E(C(e));
          return t < 0 ? 0 : t > j ? j : t;
        };

        et.enter().append("line").style("stroke-width", 2).style("stroke-dasharray", "10,10").style("stroke", function (e, n) {
          return t.color()(e, e.seriesIndex);
        }).attr("x1", 0).attr("x2", B).attr("y1", tt).attr("y2", tt), et.style("stroke-opacity", function (e) {
          var t = E(C(e));
          return t < 0 || t > j ? 0 : 1;
        }).attr("x1", 0).attr("x2", B).attr("y1", tt).attr("y2", tt), et.exit().remove();
        var nt = Y.selectAll(".nv-indexLine").data([M]);
        nt.enter().append("rect").attr("class", "nv-indexLine").attr("width", 3).attr("x", -2).attr("fill", "red").attr("fill-opacity", .5).style("pointer-events", "all").call(I), nt.attr("transform", function (e) {
          return "translate(" + O(e.i) + ",0)";
        }).attr("height", j), h && (n.scale(w).ticks(Math.min(b[0].values.length, B / 70)).tickSize(-j, 0), K.select(".nv-x.nv-axis").attr("transform", "translate(0," + E.range()[0] + ")"), d3.transition(K.select(".nv-x.nv-axis")).call(n)), p && (r.scale(E).ticks(j / 36).tickSize(-B, 0), d3.transition(K.select(".nv-y.nv-axis")).call(r)), K.select(".nv-background rect").on("click", function () {
          M.x = d3.mouse(this)[0], M.i = Math.round(O.invert(M.x)), x.index = M.i, k.stateChange(x), rt();
        }), t.dispatch.on("elementClick", function (e) {
          M.i = e.pointIndex, M.x = O(M.i), x.index = M.i, k.stateChange(x), rt();
        }), s.dispatch.on("legendClick", function (e, t) {
          e.disabled = !e.disabled, y = !e.disabled, x.rescaleY = y, k.stateChange(x), D.update();
        }), i.dispatch.on("stateChange", function (e) {
          x.disabled = e.disabled, k.stateChange(x), D.update();
        }), o.dispatch.on("elementMousemove", function (i) {
          t.clearHighlights();
          var s,
              f,
              l,
              c = [];
          b.filter(function (e, t) {
            return e.seriesIndex = t, !e.disabled;
          }).forEach(function (n, r) {
            f = e.interactiveBisect(n.values, i.pointXValue, D.x()), t.highlightPoint(r, f, !0);
            var o = n.values[f];
            if (typeof o == "undefined") return;
            typeof s == "undefined" && (s = o), typeof l == "undefined" && (l = D.xScale()(D.x()(o, f))), c.push({
              key: n.key,
              value: D.y()(o, f),
              color: a(n, n.seriesIndex)
            });
          });

          if (c.length > 2) {
            var h = D.yScale().invert(i.mouseY),
                p = Math.abs(D.yScale().domain()[0] - D.yScale().domain()[1]),
                d = .03 * p,
                m = e.nearestValueIndex(c.map(function (e) {
              return e.value;
            }), h, d);
            m !== null && (c[m].highlight = !0);
          }

          var g = n.tickFormat()(D.x()(s, f), f);
          o.tooltip.position({
            left: l + u.left,
            top: i.mouseY + u.top
          }).chartContainer(H.parentNode).enabled(v).valueFormatter(function (e, t) {
            return r.tickFormat()(e);
          }).data({
            value: g,
            series: c
          })(), o.renderGuideLine(l);
        }), o.dispatch.on("elementMouseout", function (e) {
          k.tooltipHide(), t.clearHighlights();
        }), k.on("tooltipShow", function (e) {
          v && _(e, H.parentNode);
        }), k.on("changeState", function (e) {
          typeof e.disabled != "undefined" && (b.forEach(function (t, n) {
            t.disabled = e.disabled[n];
          }), x.disabled = e.disabled), typeof e.index != "undefined" && (M.i = e.index, M.x = O(M.i), x.index = e.index, nt.data([M])), typeof e.rescaleY != "undefined" && (y = e.rescaleY), D.update();
        });
      }), D;
    }

    function P(e, n) {
      return n.map(function (n, r) {
        if (!n.values) return n;
        var i = t.y()(n.values[e], e);
        return i < -0.95 && !A ? (n.tempDisabled = !0, n) : (n.tempDisabled = !1, n.values = n.values.map(function (e, n) {
          return e.display = {
            y: (t.y()(e, n) - i) / (1 + i)
          }, e;
        }), n);
      });
    }

    var t = e.models.line(),
        n = e.models.axis(),
        r = e.models.axis(),
        i = e.models.legend(),
        s = e.models.legend(),
        o = e.interactiveGuideline(),
        u = {
      top: 30,
      right: 30,
      bottom: 50,
      left: 60
    },
        a = e.utils.defaultColor(),
        f = null,
        l = null,
        c = !0,
        h = !0,
        p = !0,
        d = !1,
        v = !0,
        m = !0,
        g = !1,
        y = !0,
        b = function b(e, t, n, r, i) {
      return "<h3>" + e + "</h3>" + "<p>" + n + " at " + t + "</p>";
    },
        w,
        E,
        S = t.id(),
        x = {
      index: 0,
      rescaleY: y
    },
        T = null,
        N = "No Data Available.",
        C = function C(e) {
      return e.average;
    },
        k = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"),
        L = 250,
        A = !1;

    n.orient("bottom").tickPadding(7), r.orient(d ? "right" : "left"), s.updateState(!1);

    var O = d3.scale.linear(),
        M = {
      i: 0,
      x: 0
    },
        _ = function _(i, s) {
      var o = i.pos[0] + (s.offsetLeft || 0),
          u = i.pos[1] + (s.offsetTop || 0),
          a = n.tickFormat()(t.x()(i.point, i.pointIndex)),
          f = r.tickFormat()(t.y()(i.point, i.pointIndex)),
          l = b(i.series.key, a, f, i, D);
      e.tooltip.show([o, u], l, null, null, s);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + u.left, e.pos[1] + u.top], k.tooltipShow(e);
    }), t.dispatch.on("elementMouseout.tooltip", function (e) {
      k.tooltipHide(e);
    }), k.on("tooltipHide", function () {
      v && e.tooltip.cleanup();
    }), D.dispatch = k, D.lines = t, D.legend = i, D.xAxis = n, D.yAxis = r, D.interactiveLayer = o, d3.rebind(D, t, "defined", "isArea", "x", "y", "xScale", "yScale", "size", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "useVoronoi", "id"), D.options = e.utils.optionsFunc.bind(D), D.margin = function (e) {
      return arguments.length ? (u.top = typeof e.top != "undefined" ? e.top : u.top, u.right = typeof e.right != "undefined" ? e.right : u.right, u.bottom = typeof e.bottom != "undefined" ? e.bottom : u.bottom, u.left = typeof e.left != "undefined" ? e.left : u.left, D) : u;
    }, D.width = function (e) {
      return arguments.length ? (f = e, D) : f;
    }, D.height = function (e) {
      return arguments.length ? (l = e, D) : l;
    }, D.color = function (t) {
      return arguments.length ? (a = e.utils.getColor(t), i.color(a), D) : a;
    }, D.rescaleY = function (e) {
      return arguments.length ? (y = e, D) : y;
    }, D.showControls = function (e) {
      return arguments.length ? (m = e, D) : m;
    }, D.useInteractiveGuideline = function (e) {
      return arguments.length ? (g = e, e === !0 && (D.interactive(!1), D.useVoronoi(!1)), D) : g;
    }, D.showLegend = function (e) {
      return arguments.length ? (c = e, D) : c;
    }, D.showXAxis = function (e) {
      return arguments.length ? (h = e, D) : h;
    }, D.showYAxis = function (e) {
      return arguments.length ? (p = e, D) : p;
    }, D.rightAlignYAxis = function (e) {
      return arguments.length ? (d = e, r.orient(e ? "right" : "left"), D) : d;
    }, D.tooltips = function (e) {
      return arguments.length ? (v = e, D) : v;
    }, D.tooltipContent = function (e) {
      return arguments.length ? (b = e, D) : b;
    }, D.state = function (e) {
      return arguments.length ? (x = e, D) : x;
    }, D.defaultState = function (e) {
      return arguments.length ? (T = e, D) : T;
    }, D.noData = function (e) {
      return arguments.length ? (N = e, D) : N;
    }, D.average = function (e) {
      return arguments.length ? (C = e, D) : C;
    }, D.transitionDuration = function (e) {
      return arguments.length ? (L = e, D) : L;
    }, D.noErrorCheck = function (e) {
      return arguments.length ? (A = e, D) : A;
    }, D;
  }, e.models.discreteBar = function () {
    "use strict";

    function E(e) {
      return e.each(function (e) {
        var i = n - t.left - t.right,
            E = r - t.top - t.bottom,
            S = d3.select(this);
        e.forEach(function (e, t) {
          e.values.forEach(function (e) {
            e.series = t;
          });
        });
        var T = p && d ? [] : e.map(function (e) {
          return e.values.map(function (e, t) {
            return {
              x: u(e, t),
              y: a(e, t),
              y0: e.y0
            };
          });
        });
        s.domain(p || d3.merge(T).map(function (e) {
          return e.x;
        })).rangeBands(v || [0, i], .1), o.domain(d || d3.extent(d3.merge(T).map(function (e) {
          return e.y;
        }).concat(f))), c ? o.range(m || [E - (o.domain()[0] < 0 ? 12 : 0), o.domain()[1] > 0 ? 12 : 0]) : o.range(m || [E, 0]), b = b || s, w = w || o.copy().range([o(0), o(0)]);
        var N = S.selectAll("g.nv-wrap.nv-discretebar").data([e]),
            C = N.enter().append("g").attr("class", "nvd3 nv-wrap nv-discretebar"),
            k = C.append("g"),
            L = N.select("g");
        k.append("g").attr("class", "nv-groups"), N.attr("transform", "translate(" + t.left + "," + t.top + ")");
        var A = N.select(".nv-groups").selectAll(".nv-group").data(function (e) {
          return e;
        }, function (e) {
          return e.key;
        });
        A.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6), A.exit().transition().style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6).remove(), A.attr("class", function (e, t) {
          return "nv-group nv-series-" + t;
        }).classed("hover", function (e) {
          return e.hover;
        }), A.transition().style("stroke-opacity", 1).style("fill-opacity", .75);
        var O = A.selectAll("g.nv-bar").data(function (e) {
          return e.values;
        });
        O.exit().remove();
        var M = O.enter().append("g").attr("transform", function (e, t, n) {
          return "translate(" + (s(u(e, t)) + s.rangeBand() * .05) + ", " + o(0) + ")";
        }).on("mouseover", function (t, n) {
          d3.select(this).classed("hover", !0), g.elementMouseover({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pos: [s(u(t, n)) + s.rangeBand() * (t.series + .5) / e.length, o(a(t, n))],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          });
        }).on("mouseout", function (t, n) {
          d3.select(this).classed("hover", !1), g.elementMouseout({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          });
        }).on("click", function (t, n) {
          g.elementClick({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pos: [s(u(t, n)) + s.rangeBand() * (t.series + .5) / e.length, o(a(t, n))],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          }), d3.event.stopPropagation();
        }).on("dblclick", function (t, n) {
          g.elementDblClick({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pos: [s(u(t, n)) + s.rangeBand() * (t.series + .5) / e.length, o(a(t, n))],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          }), d3.event.stopPropagation();
        });
        M.append("rect").attr("height", 0).attr("width", s.rangeBand() * .9 / e.length), c ? (M.append("text").attr("text-anchor", "middle"), O.select("text").text(function (e, t) {
          return h(a(e, t));
        }).transition().attr("x", s.rangeBand() * .9 / 2).attr("y", function (e, t) {
          return a(e, t) < 0 ? o(a(e, t)) - o(0) + 12 : -4;
        })) : O.selectAll("text").remove(), O.attr("class", function (e, t) {
          return a(e, t) < 0 ? "nv-bar negative" : "nv-bar positive";
        }).style("fill", function (e, t) {
          return e.color || l(e, t);
        }).style("stroke", function (e, t) {
          return e.color || l(e, t);
        }).select("rect").attr("class", y).transition().attr("width", s.rangeBand() * .9 / e.length), O.transition().attr("transform", function (e, t) {
          var n = s(u(e, t)) + s.rangeBand() * .05,
              r = a(e, t) < 0 ? o(0) : o(0) - o(a(e, t)) < 1 ? o(0) - 1 : o(a(e, t));
          return "translate(" + n + ", " + r + ")";
        }).select("rect").attr("height", function (e, t) {
          return Math.max(Math.abs(o(a(e, t)) - o(d && d[0] || 0)) || 1);
        }), b = s.copy(), w = o.copy();
      }), E;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = 960,
        r = 500,
        i = Math.floor(Math.random() * 1e4),
        s = d3.scale.ordinal(),
        o = d3.scale.linear(),
        u = function u(e) {
      return e.x;
    },
        a = function a(e) {
      return e.y;
    },
        f = [0],
        l = e.utils.defaultColor(),
        c = !1,
        h = d3.format(",.2f"),
        p,
        d,
        v,
        m,
        g = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"),
        y = "discreteBar",
        b,
        w;

    return E.dispatch = g, E.options = e.utils.optionsFunc.bind(E), E.x = function (e) {
      return arguments.length ? (u = e, E) : u;
    }, E.y = function (e) {
      return arguments.length ? (a = e, E) : a;
    }, E.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, E) : t;
    }, E.width = function (e) {
      return arguments.length ? (n = e, E) : n;
    }, E.height = function (e) {
      return arguments.length ? (r = e, E) : r;
    }, E.xScale = function (e) {
      return arguments.length ? (s = e, E) : s;
    }, E.yScale = function (e) {
      return arguments.length ? (o = e, E) : o;
    }, E.xDomain = function (e) {
      return arguments.length ? (p = e, E) : p;
    }, E.yDomain = function (e) {
      return arguments.length ? (d = e, E) : d;
    }, E.xRange = function (e) {
      return arguments.length ? (v = e, E) : v;
    }, E.yRange = function (e) {
      return arguments.length ? (m = e, E) : m;
    }, E.forceY = function (e) {
      return arguments.length ? (f = e, E) : f;
    }, E.color = function (t) {
      return arguments.length ? (l = e.utils.getColor(t), E) : l;
    }, E.id = function (e) {
      return arguments.length ? (i = e, E) : i;
    }, E.showValues = function (e) {
      return arguments.length ? (c = e, E) : c;
    }, E.valueFormat = function (e) {
      return arguments.length ? (h = e, E) : h;
    }, E.rectClass = function (e) {
      return arguments.length ? (y = e, E) : y;
    }, E;
  }, e.models.discreteBarChart = function () {
    "use strict";

    function w(e) {
      return e.each(function (e) {
        var u = d3.select(this),
            p = this,
            E = (s || parseInt(u.style("width")) || 960) - i.left - i.right,
            S = (o || parseInt(u.style("height")) || 400) - i.top - i.bottom;
        w.update = function () {
          g.beforeUpdate(), u.transition().duration(y).call(w);
        }, w.container = this;

        if (!e || !e.length || !e.filter(function (e) {
          return e.values.length;
        }).length) {
          var T = u.selectAll(".nv-noData").data([m]);
          return T.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), T.attr("x", i.left + E / 2).attr("y", i.top + S / 2).text(function (e) {
            return e;
          }), w;
        }

        u.selectAll(".nv-noData").remove(), d = t.xScale(), v = t.yScale().clamp(!0);
        var N = u.selectAll("g.nv-wrap.nv-discreteBarWithAxes").data([e]),
            C = N.enter().append("g").attr("class", "nvd3 nv-wrap nv-discreteBarWithAxes").append("g"),
            k = C.append("defs"),
            L = N.select("g");
        C.append("g").attr("class", "nv-x nv-axis"), C.append("g").attr("class", "nv-y nv-axis").append("g").attr("class", "nv-zeroLine").append("line"), C.append("g").attr("class", "nv-barsWrap"), L.attr("transform", "translate(" + i.left + "," + i.top + ")"), l && L.select(".nv-y.nv-axis").attr("transform", "translate(" + E + ",0)"), t.width(E).height(S);
        var A = L.select(".nv-barsWrap").datum(e.filter(function (e) {
          return !e.disabled;
        }));
        A.transition().call(t), k.append("clipPath").attr("id", "nv-x-label-clip-" + t.id()).append("rect"), L.select("#nv-x-label-clip-" + t.id() + " rect").attr("width", d.rangeBand() * (c ? 2 : 1)).attr("height", 16).attr("x", -d.rangeBand() / (c ? 1 : 2));

        if (a) {
          n.scale(d).ticks(E / 100).tickSize(-S, 0), L.select(".nv-x.nv-axis").attr("transform", "translate(0," + (v.range()[0] + (t.showValues() && v.domain()[0] < 0 ? 16 : 0)) + ")"), L.select(".nv-x.nv-axis").transition().call(n);
          var O = L.select(".nv-x.nv-axis").selectAll("g");
          c && O.selectAll("text").attr("transform", function (e, t, n) {
            return "translate(0," + (n % 2 == 0 ? "5" : "17") + ")";
          });
        }

        f && (r.scale(v).ticks(S / 36).tickSize(-E, 0), L.select(".nv-y.nv-axis").transition().call(r)), L.select(".nv-zeroLine line").attr("x1", 0).attr("x2", E).attr("y1", v(0)).attr("y2", v(0)), g.on("tooltipShow", function (e) {
          h && b(e, p.parentNode);
        });
      }), w;
    }

    var t = e.models.discreteBar(),
        n = e.models.axis(),
        r = e.models.axis(),
        i = {
      top: 15,
      right: 10,
      bottom: 50,
      left: 60
    },
        s = null,
        o = null,
        u = e.utils.getColor(),
        a = !0,
        f = !0,
        l = !1,
        c = !1,
        h = !0,
        p = function p(e, t, n, r, i) {
      return "<h3>" + t + "</h3>" + "<p>" + n + "</p>";
    },
        d,
        v,
        m = "No Data Available.",
        g = d3.dispatch("tooltipShow", "tooltipHide", "beforeUpdate"),
        y = 250;

    n.orient("bottom").highlightZero(!1).showMaxMin(!1).tickFormat(function (e) {
      return e;
    }), r.orient(l ? "right" : "left").tickFormat(d3.format(",.1f"));

    var b = function b(i, s) {
      var o = i.pos[0] + (s.offsetLeft || 0),
          u = i.pos[1] + (s.offsetTop || 0),
          a = n.tickFormat()(t.x()(i.point, i.pointIndex)),
          f = r.tickFormat()(t.y()(i.point, i.pointIndex)),
          l = p(i.series.key, a, f, i, w);
      e.tooltip.show([o, u], l, i.value < 0 ? "n" : "s", null, s);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + i.left, e.pos[1] + i.top], g.tooltipShow(e);
    }), t.dispatch.on("elementMouseout.tooltip", function (e) {
      g.tooltipHide(e);
    }), g.on("tooltipHide", function () {
      h && e.tooltip.cleanup();
    }), w.dispatch = g, w.discretebar = t, w.xAxis = n, w.yAxis = r, d3.rebind(w, t, "x", "y", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "id", "showValues", "valueFormat"), w.options = e.utils.optionsFunc.bind(w), w.margin = function (e) {
      return arguments.length ? (i.top = typeof e.top != "undefined" ? e.top : i.top, i.right = typeof e.right != "undefined" ? e.right : i.right, i.bottom = typeof e.bottom != "undefined" ? e.bottom : i.bottom, i.left = typeof e.left != "undefined" ? e.left : i.left, w) : i;
    }, w.width = function (e) {
      return arguments.length ? (s = e, w) : s;
    }, w.height = function (e) {
      return arguments.length ? (o = e, w) : o;
    }, w.color = function (n) {
      return arguments.length ? (u = e.utils.getColor(n), t.color(u), w) : u;
    }, w.showXAxis = function (e) {
      return arguments.length ? (a = e, w) : a;
    }, w.showYAxis = function (e) {
      return arguments.length ? (f = e, w) : f;
    }, w.rightAlignYAxis = function (e) {
      return arguments.length ? (l = e, r.orient(e ? "right" : "left"), w) : l;
    }, w.staggerLabels = function (e) {
      return arguments.length ? (c = e, w) : c;
    }, w.tooltips = function (e) {
      return arguments.length ? (h = e, w) : h;
    }, w.tooltipContent = function (e) {
      return arguments.length ? (p = e, w) : p;
    }, w.noData = function (e) {
      return arguments.length ? (m = e, w) : m;
    }, w.transitionDuration = function (e) {
      return arguments.length ? (y = e, w) : y;
    }, w;
  }, e.models.distribution = function () {
    "use strict";

    function l(e) {
      return e.each(function (e) {
        var a = n - (i === "x" ? t.left + t.right : t.top + t.bottom),
            l = i == "x" ? "y" : "x",
            c = d3.select(this);
        f = f || u;
        var h = c.selectAll("g.nv-distribution").data([e]),
            p = h.enter().append("g").attr("class", "nvd3 nv-distribution"),
            d = p.append("g"),
            v = h.select("g");
        h.attr("transform", "translate(" + t.left + "," + t.top + ")");
        var m = v.selectAll("g.nv-dist").data(function (e) {
          return e;
        }, function (e) {
          return e.key;
        });
        m.enter().append("g"), m.attr("class", function (e, t) {
          return "nv-dist nv-series-" + t;
        }).style("stroke", function (e, t) {
          return o(e, t);
        });
        var g = m.selectAll("line.nv-dist" + i).data(function (e) {
          return e.values;
        });
        g.enter().append("line").attr(i + "1", function (e, t) {
          return f(s(e, t));
        }).attr(i + "2", function (e, t) {
          return f(s(e, t));
        }), m.exit().selectAll("line.nv-dist" + i).transition().attr(i + "1", function (e, t) {
          return u(s(e, t));
        }).attr(i + "2", function (e, t) {
          return u(s(e, t));
        }).style("stroke-opacity", 0).remove(), g.attr("class", function (e, t) {
          return "nv-dist" + i + " nv-dist" + i + "-" + t;
        }).attr(l + "1", 0).attr(l + "2", r), g.transition().attr(i + "1", function (e, t) {
          return u(s(e, t));
        }).attr(i + "2", function (e, t) {
          return u(s(e, t));
        }), f = u.copy();
      }), l;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = 400,
        r = 8,
        i = "x",
        s = function s(e) {
      return e[i];
    },
        o = e.utils.defaultColor(),
        u = d3.scale.linear(),
        a,
        f;

    return l.options = e.utils.optionsFunc.bind(l), l.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, l) : t;
    }, l.width = function (e) {
      return arguments.length ? (n = e, l) : n;
    }, l.axis = function (e) {
      return arguments.length ? (i = e, l) : i;
    }, l.size = function (e) {
      return arguments.length ? (r = e, l) : r;
    }, l.getData = function (e) {
      return arguments.length ? (s = d3.functor(e), l) : s;
    }, l.scale = function (e) {
      return arguments.length ? (u = e, l) : u;
    }, l.color = function (t) {
      return arguments.length ? (o = e.utils.getColor(t), l) : o;
    }, l;
  }, e.models.historicalBar = function () {
    "use strict";

    function w(E) {
      return E.each(function (w) {
        var E = n - t.left - t.right,
            S = r - t.top - t.bottom,
            T = d3.select(this);
        s.domain(d || d3.extent(w[0].values.map(u).concat(f))), c ? s.range(m || [E * .5 / w[0].values.length, E * (w[0].values.length - .5) / w[0].values.length]) : s.range(m || [0, E]), o.domain(v || d3.extent(w[0].values.map(a).concat(l))).range(g || [S, 0]), s.domain()[0] === s.domain()[1] && (s.domain()[0] ? s.domain([s.domain()[0] - s.domain()[0] * .01, s.domain()[1] + s.domain()[1] * .01]) : s.domain([-1, 1])), o.domain()[0] === o.domain()[1] && (o.domain()[0] ? o.domain([o.domain()[0] + o.domain()[0] * .01, o.domain()[1] - o.domain()[1] * .01]) : o.domain([-1, 1]));
        var N = T.selectAll("g.nv-wrap.nv-historicalBar-" + i).data([w[0].values]),
            C = N.enter().append("g").attr("class", "nvd3 nv-wrap nv-historicalBar-" + i),
            k = C.append("defs"),
            L = C.append("g"),
            A = N.select("g");
        L.append("g").attr("class", "nv-bars"), N.attr("transform", "translate(" + t.left + "," + t.top + ")"), T.on("click", function (e, t) {
          y.chartClick({
            data: e,
            index: t,
            pos: d3.event,
            id: i
          });
        }), k.append("clipPath").attr("id", "nv-chart-clip-path-" + i).append("rect"), N.select("#nv-chart-clip-path-" + i + " rect").attr("width", E).attr("height", S), A.attr("clip-path", h ? "url(#nv-chart-clip-path-" + i + ")" : "");
        var O = N.select(".nv-bars").selectAll(".nv-bar").data(function (e) {
          return e;
        }, function (e, t) {
          return u(e, t);
        });
        O.exit().remove();
        var M = O.enter().append("rect").attr("x", 0).attr("y", function (t, n) {
          return e.utils.NaNtoZero(o(Math.max(0, a(t, n))));
        }).attr("height", function (t, n) {
          return e.utils.NaNtoZero(Math.abs(o(a(t, n)) - o(0)));
        }).attr("transform", function (e, t) {
          return "translate(" + (s(u(e, t)) - E / w[0].values.length * .45) + ",0)";
        }).on("mouseover", function (e, t) {
          if (!b) return;
          d3.select(this).classed("hover", !0), y.elementMouseover({
            point: e,
            series: w[0],
            pos: [s(u(e, t)), o(a(e, t))],
            pointIndex: t,
            seriesIndex: 0,
            e: d3.event
          });
        }).on("mouseout", function (e, t) {
          if (!b) return;
          d3.select(this).classed("hover", !1), y.elementMouseout({
            point: e,
            series: w[0],
            pointIndex: t,
            seriesIndex: 0,
            e: d3.event
          });
        }).on("click", function (e, t) {
          if (!b) return;
          y.elementClick({
            value: a(e, t),
            data: e,
            index: t,
            pos: [s(u(e, t)), o(a(e, t))],
            e: d3.event,
            id: i
          }), d3.event.stopPropagation();
        }).on("dblclick", function (e, t) {
          if (!b) return;
          y.elementDblClick({
            value: a(e, t),
            data: e,
            index: t,
            pos: [s(u(e, t)), o(a(e, t))],
            e: d3.event,
            id: i
          }), d3.event.stopPropagation();
        });
        O.attr("fill", function (e, t) {
          return p(e, t);
        }).attr("class", function (e, t, n) {
          return (a(e, t) < 0 ? "nv-bar negative" : "nv-bar positive") + " nv-bar-" + n + "-" + t;
        }).transition().attr("transform", function (e, t) {
          return "translate(" + (s(u(e, t)) - E / w[0].values.length * .45) + ",0)";
        }).attr("width", E / w[0].values.length * .9), O.transition().attr("y", function (t, n) {
          var r = a(t, n) < 0 ? o(0) : o(0) - o(a(t, n)) < 1 ? o(0) - 1 : o(a(t, n));
          return e.utils.NaNtoZero(r);
        }).attr("height", function (t, n) {
          return e.utils.NaNtoZero(Math.max(Math.abs(o(a(t, n)) - o(0)), 1));
        });
      }), w;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = 960,
        r = 500,
        i = Math.floor(Math.random() * 1e4),
        s = d3.scale.linear(),
        o = d3.scale.linear(),
        u = function u(e) {
      return e.x;
    },
        a = function a(e) {
      return e.y;
    },
        f = [],
        l = [0],
        c = !1,
        h = !0,
        p = e.utils.defaultColor(),
        d,
        v,
        m,
        g,
        y = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"),
        b = !0;

    return w.highlightPoint = function (e, t) {
      d3.select(".nv-historicalBar-" + i).select(".nv-bars .nv-bar-0-" + e).classed("hover", t);
    }, w.clearHighlights = function () {
      d3.select(".nv-historicalBar-" + i).select(".nv-bars .nv-bar.hover").classed("hover", !1);
    }, w.dispatch = y, w.options = e.utils.optionsFunc.bind(w), w.x = function (e) {
      return arguments.length ? (u = e, w) : u;
    }, w.y = function (e) {
      return arguments.length ? (a = e, w) : a;
    }, w.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, w) : t;
    }, w.width = function (e) {
      return arguments.length ? (n = e, w) : n;
    }, w.height = function (e) {
      return arguments.length ? (r = e, w) : r;
    }, w.xScale = function (e) {
      return arguments.length ? (s = e, w) : s;
    }, w.yScale = function (e) {
      return arguments.length ? (o = e, w) : o;
    }, w.xDomain = function (e) {
      return arguments.length ? (d = e, w) : d;
    }, w.yDomain = function (e) {
      return arguments.length ? (v = e, w) : v;
    }, w.xRange = function (e) {
      return arguments.length ? (m = e, w) : m;
    }, w.yRange = function (e) {
      return arguments.length ? (g = e, w) : g;
    }, w.forceX = function (e) {
      return arguments.length ? (f = e, w) : f;
    }, w.forceY = function (e) {
      return arguments.length ? (l = e, w) : l;
    }, w.padData = function (e) {
      return arguments.length ? (c = e, w) : c;
    }, w.clipEdge = function (e) {
      return arguments.length ? (h = e, w) : h;
    }, w.color = function (t) {
      return arguments.length ? (p = e.utils.getColor(t), w) : p;
    }, w.id = function (e) {
      return arguments.length ? (i = e, w) : i;
    }, w.interactive = function (e) {
      return arguments.length ? (b = !1, w) : b;
    }, w;
  }, e.models.historicalBarChart = function () {
    "use strict";

    function x(e) {
      return e.each(function (d) {
        var T = d3.select(this),
            N = this,
            C = (u || parseInt(T.style("width")) || 960) - s.left - s.right,
            k = (a || parseInt(T.style("height")) || 400) - s.top - s.bottom;
        x.update = function () {
          T.transition().duration(E).call(x);
        }, x.container = this, g.disabled = d.map(function (e) {
          return !!e.disabled;
        });

        if (!y) {
          var L;
          y = {};

          for (L in g) {
            g[L] instanceof Array ? y[L] = g[L].slice(0) : y[L] = g[L];
          }
        }

        if (!d || !d.length || !d.filter(function (e) {
          return e.values.length;
        }).length) {
          var A = T.selectAll(".nv-noData").data([b]);
          return A.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), A.attr("x", s.left + C / 2).attr("y", s.top + k / 2).text(function (e) {
            return e;
          }), x;
        }

        T.selectAll(".nv-noData").remove(), v = t.xScale(), m = t.yScale();

        var O = T.selectAll("g.nv-wrap.nv-historicalBarChart").data([d]),
            M = O.enter().append("g").attr("class", "nvd3 nv-wrap nv-historicalBarChart").append("g"),
            _ = O.select("g");

        M.append("g").attr("class", "nv-x nv-axis"), M.append("g").attr("class", "nv-y nv-axis"), M.append("g").attr("class", "nv-barsWrap"), M.append("g").attr("class", "nv-legendWrap"), f && (i.width(C), _.select(".nv-legendWrap").datum(d).call(i), s.top != i.height() && (s.top = i.height(), k = (a || parseInt(T.style("height")) || 400) - s.top - s.bottom), O.select(".nv-legendWrap").attr("transform", "translate(0," + -s.top + ")")), O.attr("transform", "translate(" + s.left + "," + s.top + ")"), h && _.select(".nv-y.nv-axis").attr("transform", "translate(" + C + ",0)"), t.width(C).height(k).color(d.map(function (e, t) {
          return e.color || o(e, t);
        }).filter(function (e, t) {
          return !d[t].disabled;
        }));

        var D = _.select(".nv-barsWrap").datum(d.filter(function (e) {
          return !e.disabled;
        }));

        D.transition().call(t), l && (n.scale(v).tickSize(-k, 0), _.select(".nv-x.nv-axis").attr("transform", "translate(0," + m.range()[0] + ")"), _.select(".nv-x.nv-axis").transition().call(n)), c && (r.scale(m).ticks(k / 36).tickSize(-C, 0), _.select(".nv-y.nv-axis").transition().call(r)), i.dispatch.on("legendClick", function (t, n) {
          t.disabled = !t.disabled, d.filter(function (e) {
            return !e.disabled;
          }).length || d.map(function (e) {
            return e.disabled = !1, O.selectAll(".nv-series").classed("disabled", !1), e;
          }), g.disabled = d.map(function (e) {
            return !!e.disabled;
          }), w.stateChange(g), e.transition().call(x);
        }), i.dispatch.on("legendDblclick", function (e) {
          d.forEach(function (e) {
            e.disabled = !0;
          }), e.disabled = !1, g.disabled = d.map(function (e) {
            return !!e.disabled;
          }), w.stateChange(g), x.update();
        }), w.on("tooltipShow", function (e) {
          p && S(e, N.parentNode);
        }), w.on("changeState", function (e) {
          typeof e.disabled != "undefined" && (d.forEach(function (t, n) {
            t.disabled = e.disabled[n];
          }), g.disabled = e.disabled), x.update();
        });
      }), x;
    }

    var t = e.models.historicalBar(),
        n = e.models.axis(),
        r = e.models.axis(),
        i = e.models.legend(),
        s = {
      top: 30,
      right: 90,
      bottom: 50,
      left: 90
    },
        o = e.utils.defaultColor(),
        u = null,
        a = null,
        f = !1,
        l = !0,
        c = !0,
        h = !1,
        p = !0,
        d = function d(e, t, n, r, i) {
      return "<h3>" + e + "</h3>" + "<p>" + n + " at " + t + "</p>";
    },
        v,
        m,
        g = {},
        y = null,
        b = "No Data Available.",
        w = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"),
        E = 250;

    n.orient("bottom").tickPadding(7), r.orient(h ? "right" : "left");

    var S = function S(i, s) {
      if (s) {
        var o = d3.select(s).select("svg"),
            u = o.node() ? o.attr("viewBox") : null;

        if (u) {
          u = u.split(" ");
          var a = parseInt(o.style("width")) / u[2];
          i.pos[0] = i.pos[0] * a, i.pos[1] = i.pos[1] * a;
        }
      }

      var f = i.pos[0] + (s.offsetLeft || 0),
          l = i.pos[1] + (s.offsetTop || 0),
          c = n.tickFormat()(t.x()(i.point, i.pointIndex)),
          h = r.tickFormat()(t.y()(i.point, i.pointIndex)),
          p = d(i.series.key, c, h, i, x);
      e.tooltip.show([f, l], p, null, null, s);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + s.left, e.pos[1] + s.top], w.tooltipShow(e);
    }), t.dispatch.on("elementMouseout.tooltip", function (e) {
      w.tooltipHide(e);
    }), w.on("tooltipHide", function () {
      p && e.tooltip.cleanup();
    }), x.dispatch = w, x.bars = t, x.legend = i, x.xAxis = n, x.yAxis = r, d3.rebind(x, t, "defined", "isArea", "x", "y", "size", "xScale", "yScale", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "id", "interpolate", "highlightPoint", "clearHighlights", "interactive"), x.options = e.utils.optionsFunc.bind(x), x.margin = function (e) {
      return arguments.length ? (s.top = typeof e.top != "undefined" ? e.top : s.top, s.right = typeof e.right != "undefined" ? e.right : s.right, s.bottom = typeof e.bottom != "undefined" ? e.bottom : s.bottom, s.left = typeof e.left != "undefined" ? e.left : s.left, x) : s;
    }, x.width = function (e) {
      return arguments.length ? (u = e, x) : u;
    }, x.height = function (e) {
      return arguments.length ? (a = e, x) : a;
    }, x.color = function (t) {
      return arguments.length ? (o = e.utils.getColor(t), i.color(o), x) : o;
    }, x.showLegend = function (e) {
      return arguments.length ? (f = e, x) : f;
    }, x.showXAxis = function (e) {
      return arguments.length ? (l = e, x) : l;
    }, x.showYAxis = function (e) {
      return arguments.length ? (c = e, x) : c;
    }, x.rightAlignYAxis = function (e) {
      return arguments.length ? (h = e, r.orient(e ? "right" : "left"), x) : h;
    }, x.tooltips = function (e) {
      return arguments.length ? (p = e, x) : p;
    }, x.tooltipContent = function (e) {
      return arguments.length ? (d = e, x) : d;
    }, x.state = function (e) {
      return arguments.length ? (g = e, x) : g;
    }, x.defaultState = function (e) {
      return arguments.length ? (y = e, x) : y;
    }, x.noData = function (e) {
      return arguments.length ? (b = e, x) : b;
    }, x.transitionDuration = function (e) {
      return arguments.length ? (E = e, x) : E;
    }, x;
  }, e.models.indentedTree = function () {
    "use strict";

    function g(e) {
      return e.each(function (e) {
        function k(e, t, n) {
          d3.event.stopPropagation();
          if (d3.event.shiftKey && !n) return d3.event.shiftKey = !1, e.values && e.values.forEach(function (e) {
            (e.values || e._values) && k(e, 0, !0);
          }), !0;
          if (!O(e)) return !0;
          e.values ? (e._values = e.values, e.values = null) : (e.values = e._values, e._values = null), g.update();
        }

        function L(e) {
          return e._values && e._values.length ? h : e.values && e.values.length ? p : "";
        }

        function A(e) {
          return e._values && e._values.length;
        }

        function O(e) {
          var t = e.values || e._values;
          return t && t.length;
        }

        var t = 1,
            n = d3.select(this),
            i = d3.layout.tree().children(function (e) {
          return e.values;
        }).size([r, f]);
        g.update = function () {
          n.transition().duration(600).call(g);
        }, e[0] || (e[0] = {
          key: a
        });
        var s = i.nodes(e[0]),
            y = d3.select(this).selectAll("div").data([[s]]),
            b = y.enter().append("div").attr("class", "nvd3 nv-wrap nv-indentedtree"),
            w = b.append("table"),
            E = y.select("table").attr("width", "100%").attr("class", c);

        if (o) {
          var S = w.append("thead"),
              x = S.append("tr");
          l.forEach(function (e) {
            x.append("th").attr("width", e.width ? e.width : "10%").style("text-align", e.type == "numeric" ? "right" : "left").append("span").text(e.label);
          });
        }

        var T = E.selectAll("tbody").data(function (e) {
          return e;
        });
        T.enter().append("tbody"), t = d3.max(s, function (e) {
          return e.depth;
        }), i.size([r, t * f]);
        var N = T.selectAll("tr").data(function (e) {
          return e.filter(function (e) {
            return u && !e.children ? u(e) : !0;
          });
        }, function (e, t) {
          return e.id || e.id || ++m;
        });
        N.exit().remove(), N.select("img.nv-treeicon").attr("src", L).classed("folded", A);
        var C = N.enter().append("tr");
        l.forEach(function (e, t) {
          var n = C.append("td").style("padding-left", function (e) {
            return (t ? 0 : e.depth * f + 12 + (L(e) ? 0 : 16)) + "px";
          }, "important").style("text-align", e.type == "numeric" ? "right" : "left");
          t == 0 && n.append("img").classed("nv-treeicon", !0).classed("nv-folded", A).attr("src", L).style("width", "14px").style("height", "14px").style("padding", "0 1px").style("display", function (e) {
            return L(e) ? "inline-block" : "none";
          }).on("click", k), n.each(function (n) {
            !t && v(n) ? d3.select(this).append("a").attr("href", v).attr("class", d3.functor(e.classes)).append("span") : d3.select(this).append("span"), d3.select(this).select("span").attr("class", d3.functor(e.classes)).text(function (t) {
              return e.format ? e.format(t) : t[e.key] || "-";
            });
          }), e.showCount && (n.append("span").attr("class", "nv-childrenCount"), N.selectAll("span.nv-childrenCount").text(function (e) {
            return e.values && e.values.length || e._values && e._values.length ? "(" + (e.values && e.values.filter(function (e) {
              return u ? u(e) : !0;
            }).length || e._values && e._values.filter(function (e) {
              return u ? u(e) : !0;
            }).length || 0) + ")" : "";
          }));
        }), N.order().on("click", function (e) {
          d.elementClick({
            row: this,
            data: e,
            pos: [e.x, e.y]
          });
        }).on("dblclick", function (e) {
          d.elementDblclick({
            row: this,
            data: e,
            pos: [e.x, e.y]
          });
        }).on("mouseover", function (e) {
          d.elementMouseover({
            row: this,
            data: e,
            pos: [e.x, e.y]
          });
        }).on("mouseout", function (e) {
          d.elementMouseout({
            row: this,
            data: e,
            pos: [e.x, e.y]
          });
        });
      }), g;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = 960,
        r = 500,
        i = e.utils.defaultColor(),
        s = Math.floor(Math.random() * 1e4),
        o = !0,
        u = !1,
        a = "No Data Available.",
        f = 20,
        l = [{
      key: "key",
      label: "Name",
      type: "text"
    }],
        c = null,
        h = "images/grey-plus.png",
        p = "images/grey-minus.png",
        d = d3.dispatch("elementClick", "elementDblclick", "elementMouseover", "elementMouseout"),
        v = function v(e) {
      return e.url;
    },
        m = 0;

    return g.options = e.utils.optionsFunc.bind(g), g.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, g) : t;
    }, g.width = function (e) {
      return arguments.length ? (n = e, g) : n;
    }, g.height = function (e) {
      return arguments.length ? (r = e, g) : r;
    }, g.color = function (t) {
      return arguments.length ? (i = e.utils.getColor(t), scatter.color(i), g) : i;
    }, g.id = function (e) {
      return arguments.length ? (s = e, g) : s;
    }, g.header = function (e) {
      return arguments.length ? (o = e, g) : o;
    }, g.noData = function (e) {
      return arguments.length ? (a = e, g) : a;
    }, g.filterZero = function (e) {
      return arguments.length ? (u = e, g) : u;
    }, g.columns = function (e) {
      return arguments.length ? (l = e, g) : l;
    }, g.tableClass = function (e) {
      return arguments.length ? (c = e, g) : c;
    }, g.iconOpen = function (e) {
      return arguments.length ? (h = e, g) : h;
    }, g.iconClose = function (e) {
      return arguments.length ? (p = e, g) : p;
    }, g.getUrl = function (e) {
      return arguments.length ? (v = e, g) : v;
    }, g;
  }, e.models.legend = function () {
    "use strict";

    function c(h) {
      return h.each(function (c) {
        var h = n - t.left - t.right,
            p = d3.select(this),
            d = p.selectAll("g.nv-legend").data([c]),
            v = d.enter().append("g").attr("class", "nvd3 nv-legend").append("g"),
            m = d.select("g");
        d.attr("transform", "translate(" + t.left + "," + t.top + ")");
        var g = m.selectAll(".nv-series").data(function (e) {
          return e;
        }),
            y = g.enter().append("g").attr("class", "nv-series").on("mouseover", function (e, t) {
          l.legendMouseover(e, t);
        }).on("mouseout", function (e, t) {
          l.legendMouseout(e, t);
        }).on("click", function (e, t) {
          l.legendClick(e, t), a && (f ? (c.forEach(function (e) {
            e.disabled = !0;
          }), e.disabled = !1) : (e.disabled = !e.disabled, c.every(function (e) {
            return e.disabled;
          }) && c.forEach(function (e) {
            e.disabled = !1;
          })), l.stateChange({
            disabled: c.map(function (e) {
              return !!e.disabled;
            })
          }));
        }).on("dblclick", function (e, t) {
          l.legendDblclick(e, t), a && (c.forEach(function (e) {
            e.disabled = !0;
          }), e.disabled = !1, l.stateChange({
            disabled: c.map(function (e) {
              return !!e.disabled;
            })
          }));
        });
        y.append("circle").style("stroke-width", 2).attr("class", "nv-legend-symbol").attr("r", 5), y.append("text").attr("text-anchor", "start").attr("class", "nv-legend-text").attr("dy", ".32em").attr("dx", "8"), g.classed("disabled", function (e) {
          return e.disabled;
        }), g.exit().remove(), g.select("circle").style("fill", function (e, t) {
          return e.color || s(e, t);
        }).style("stroke", function (e, t) {
          return e.color || s(e, t);
        }), g.select("text").text(i);

        if (o) {
          var b = [];
          g.each(function (t, n) {
            var r = d3.select(this).select("text"),
                i;

            try {
              i = r.getComputedTextLength();
              if (i <= 0) throw Error();
            } catch (s) {
              i = e.utils.calcApproxTextWidth(r);
            }

            b.push(i + 28);
          });
          var w = 0,
              E = 0,
              S = [];

          while (E < h && w < b.length) {
            S[w] = b[w], E += b[w++];
          }

          w === 0 && (w = 1);

          while (E > h && w > 1) {
            S = [], w--;

            for (var x = 0; x < b.length; x++) {
              b[x] > (S[x % w] || 0) && (S[x % w] = b[x]);
            }

            E = S.reduce(function (e, t, n, r) {
              return e + t;
            });
          }

          var T = [];

          for (var N = 0, C = 0; N < w; N++) {
            T[N] = C, C += S[N];
          }

          g.attr("transform", function (e, t) {
            return "translate(" + T[t % w] + "," + (5 + Math.floor(t / w) * 20) + ")";
          }), u ? m.attr("transform", "translate(" + (n - t.right - E) + "," + t.top + ")") : m.attr("transform", "translate(0," + t.top + ")"), r = t.top + t.bottom + Math.ceil(b.length / w) * 20;
        } else {
          var k = 5,
              L = 5,
              A = 0,
              O;
          g.attr("transform", function (e, r) {
            var i = d3.select(this).select("text").node().getComputedTextLength() + 28;
            return O = L, n < t.left + t.right + O + i && (L = O = 5, k += 20), L += i, L > A && (A = L), "translate(" + O + "," + k + ")";
          }), m.attr("transform", "translate(" + (n - t.right - A) + "," + t.top + ")"), r = t.top + t.bottom + k + 15;
        }
      }), c;
    }

    var t = {
      top: 5,
      right: 0,
      bottom: 5,
      left: 0
    },
        n = 400,
        r = 20,
        i = function i(e) {
      return e.key;
    },
        s = e.utils.defaultColor(),
        o = !0,
        u = !0,
        a = !0,
        f = !1,
        l = d3.dispatch("legendClick", "legendDblclick", "legendMouseover", "legendMouseout", "stateChange");

    return c.dispatch = l, c.options = e.utils.optionsFunc.bind(c), c.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, c) : t;
    }, c.width = function (e) {
      return arguments.length ? (n = e, c) : n;
    }, c.height = function (e) {
      return arguments.length ? (r = e, c) : r;
    }, c.key = function (e) {
      return arguments.length ? (i = e, c) : i;
    }, c.color = function (t) {
      return arguments.length ? (s = e.utils.getColor(t), c) : s;
    }, c.align = function (e) {
      return arguments.length ? (o = e, c) : o;
    }, c.rightAlign = function (e) {
      return arguments.length ? (u = e, c) : u;
    }, c.updateState = function (e) {
      return arguments.length ? (a = e, c) : a;
    }, c.radioButtonMode = function (e) {
      return arguments.length ? (f = e, c) : f;
    }, c;
  }, e.models.line = function () {
    "use strict";

    function m(g) {
      return g.each(function (m) {
        var g = r - n.left - n.right,
            b = i - n.top - n.bottom,
            w = d3.select(this);
        c = t.xScale(), h = t.yScale(), d = d || c, v = v || h;
        var E = w.selectAll("g.nv-wrap.nv-line").data([m]),
            S = E.enter().append("g").attr("class", "nvd3 nv-wrap nv-line"),
            T = S.append("defs"),
            N = S.append("g"),
            C = E.select("g");
        N.append("g").attr("class", "nv-groups"), N.append("g").attr("class", "nv-scatterWrap"), E.attr("transform", "translate(" + n.left + "," + n.top + ")"), t.width(g).height(b);
        var k = E.select(".nv-scatterWrap");
        k.transition().call(t), T.append("clipPath").attr("id", "nv-edge-clip-" + t.id()).append("rect"), E.select("#nv-edge-clip-" + t.id() + " rect").attr("width", g).attr("height", b), C.attr("clip-path", l ? "url(#nv-edge-clip-" + t.id() + ")" : ""), k.attr("clip-path", l ? "url(#nv-edge-clip-" + t.id() + ")" : "");
        var L = E.select(".nv-groups").selectAll(".nv-group").data(function (e) {
          return e;
        }, function (e) {
          return e.key;
        });
        L.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6), L.exit().remove(), L.attr("class", function (e, t) {
          return "nv-group nv-series-" + t;
        }).classed("hover", function (e) {
          return e.hover;
        }).style("fill", function (e, t) {
          return s(e, t);
        }).style("stroke", function (e, t) {
          return s(e, t);
        }), L.transition().style("stroke-opacity", 1).style("fill-opacity", .5);
        var A = L.selectAll("path.nv-area").data(function (e) {
          return f(e) ? [e] : [];
        });
        A.enter().append("path").attr("class", "nv-area").attr("d", function (t) {
          return d3.svg.area().interpolate(p).defined(a).x(function (t, n) {
            return e.utils.NaNtoZero(d(o(t, n)));
          }).y0(function (t, n) {
            return e.utils.NaNtoZero(v(u(t, n)));
          }).y1(function (e, t) {
            return v(h.domain()[0] <= 0 ? h.domain()[1] >= 0 ? 0 : h.domain()[1] : h.domain()[0]);
          }).apply(this, [t.values]);
        }), L.exit().selectAll("path.nv-area").remove(), A.transition().attr("d", function (t) {
          return d3.svg.area().interpolate(p).defined(a).x(function (t, n) {
            return e.utils.NaNtoZero(c(o(t, n)));
          }).y0(function (t, n) {
            return e.utils.NaNtoZero(h(u(t, n)));
          }).y1(function (e, t) {
            return h(h.domain()[0] <= 0 ? h.domain()[1] >= 0 ? 0 : h.domain()[1] : h.domain()[0]);
          }).apply(this, [t.values]);
        });
        var O = L.selectAll("path.nv-line").data(function (e) {
          return [e.values];
        });
        O.enter().append("path").attr("class", "nv-line").attr("d", d3.svg.line().interpolate(p).defined(a).x(function (t, n) {
          return e.utils.NaNtoZero(d(o(t, n)));
        }).y(function (t, n) {
          return e.utils.NaNtoZero(v(u(t, n)));
        })), O.transition().attr("d", d3.svg.line().interpolate(p).defined(a).x(function (t, n) {
          return e.utils.NaNtoZero(c(o(t, n)));
        }).y(function (t, n) {
          return e.utils.NaNtoZero(h(u(t, n)));
        })), d = c.copy(), v = h.copy();
      }), m;
    }

    var t = e.models.scatter(),
        n = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        r = 960,
        i = 500,
        s = e.utils.defaultColor(),
        o = function o(e) {
      return e.x;
    },
        u = function u(e) {
      return e.y;
    },
        a = function a(e, t) {
      return !isNaN(u(e, t)) && u(e, t) !== null;
    },
        f = function f(e) {
      return e.area;
    },
        l = !1,
        c,
        h,
        p = "linear";

    t.size(16).sizeDomain([16, 256]);
    var d, v;
    return m.dispatch = t.dispatch, m.scatter = t, d3.rebind(m, t, "id", "interactive", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "forceX", "forceY", "forceSize", "clipVoronoi", "useVoronoi", "clipRadius", "padData", "highlightPoint", "clearHighlights"), m.options = e.utils.optionsFunc.bind(m), m.margin = function (e) {
      return arguments.length ? (n.top = typeof e.top != "undefined" ? e.top : n.top, n.right = typeof e.right != "undefined" ? e.right : n.right, n.bottom = typeof e.bottom != "undefined" ? e.bottom : n.bottom, n.left = typeof e.left != "undefined" ? e.left : n.left, m) : n;
    }, m.width = function (e) {
      return arguments.length ? (r = e, m) : r;
    }, m.height = function (e) {
      return arguments.length ? (i = e, m) : i;
    }, m.x = function (e) {
      return arguments.length ? (o = e, t.x(e), m) : o;
    }, m.y = function (e) {
      return arguments.length ? (u = e, t.y(e), m) : u;
    }, m.clipEdge = function (e) {
      return arguments.length ? (l = e, m) : l;
    }, m.color = function (n) {
      return arguments.length ? (s = e.utils.getColor(n), t.color(s), m) : s;
    }, m.interpolate = function (e) {
      return arguments.length ? (p = e, m) : p;
    }, m.defined = function (e) {
      return arguments.length ? (a = e, m) : a;
    }, m.isArea = function (e) {
      return arguments.length ? (f = d3.functor(e), m) : f;
    }, m;
  }, e.models.lineChart = function () {
    "use strict";

    function N(m) {
      return m.each(function (m) {
        var C = d3.select(this),
            k = this,
            L = (a || parseInt(C.style("width")) || 960) - o.left - o.right,
            A = (f || parseInt(C.style("height")) || 400) - o.top - o.bottom;
        N.update = function () {
          C.transition().duration(x).call(N);
        }, N.container = this, b.disabled = m.map(function (e) {
          return !!e.disabled;
        });

        if (!w) {
          var O;
          w = {};

          for (O in b) {
            b[O] instanceof Array ? w[O] = b[O].slice(0) : w[O] = b[O];
          }
        }

        if (!m || !m.length || !m.filter(function (e) {
          return e.values.length;
        }).length) {
          var M = C.selectAll(".nv-noData").data([E]);
          return M.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), M.attr("x", o.left + L / 2).attr("y", o.top + A / 2).text(function (e) {
            return e;
          }), N;
        }

        C.selectAll(".nv-noData").remove(), g = t.xScale(), y = t.yScale();

        var _ = C.selectAll("g.nv-wrap.nv-lineChart").data([m]),
            D = _.enter().append("g").attr("class", "nvd3 nv-wrap nv-lineChart").append("g"),
            P = _.select("g");

        D.append("rect").style("opacity", 0), D.append("g").attr("class", "nv-x nv-axis"), D.append("g").attr("class", "nv-y nv-axis"), D.append("g").attr("class", "nv-linesWrap"), D.append("g").attr("class", "nv-legendWrap"), D.append("g").attr("class", "nv-interactive"), P.select("rect").attr("width", L).attr("height", A > 0 ? A : 0), l && (i.width(L), P.select(".nv-legendWrap").datum(m).call(i), o.top != i.height() && (o.top = i.height(), A = (f || parseInt(C.style("height")) || 400) - o.top - o.bottom), _.select(".nv-legendWrap").attr("transform", "translate(0," + -o.top + ")")), _.attr("transform", "translate(" + o.left + "," + o.top + ")"), p && P.select(".nv-y.nv-axis").attr("transform", "translate(" + L + ",0)"), d && (s.width(L).height(A).margin({
          left: o.left,
          top: o.top
        }).svgContainer(C).xScale(g), _.select(".nv-interactive").call(s)), t.width(L).height(A).color(m.map(function (e, t) {
          return e.color || u(e, t);
        }).filter(function (e, t) {
          return !m[t].disabled;
        }));
        var H = P.select(".nv-linesWrap").datum(m.filter(function (e) {
          return !e.disabled;
        }));
        H.transition().call(t), c && (n.scale(g).ticks(L / 100).tickSize(-A, 0), P.select(".nv-x.nv-axis").attr("transform", "translate(0," + y.range()[0] + ")"), P.select(".nv-x.nv-axis").transition().call(n)), h && (r.scale(y).ticks(A / 36).tickSize(-L, 0), P.select(".nv-y.nv-axis").transition().call(r)), i.dispatch.on("stateChange", function (e) {
          b = e, S.stateChange(b), N.update();
        }), s.dispatch.on("elementMousemove", function (i) {
          t.clearHighlights();
          var a,
              f,
              l,
              c = [];
          m.filter(function (e, t) {
            return e.seriesIndex = t, !e.disabled;
          }).forEach(function (n, r) {
            f = e.interactiveBisect(n.values, i.pointXValue, N.x()), t.highlightPoint(r, f, !0);
            var s = n.values[f];
            if (typeof s == "undefined") return;
            typeof a == "undefined" && (a = s), typeof l == "undefined" && (l = N.xScale()(N.x()(s, f))), c.push({
              key: n.key,
              value: N.y()(s, f),
              color: u(n, n.seriesIndex)
            });
          });

          if (c.length > 2) {
            var h = N.yScale().invert(i.mouseY),
                p = Math.abs(N.yScale().domain()[0] - N.yScale().domain()[1]),
                d = .03 * p,
                g = e.nearestValueIndex(c.map(function (e) {
              return e.value;
            }), h, d);
            g !== null && (c[g].highlight = !0);
          }

          var y = n.tickFormat()(N.x()(a, f));
          s.tooltip.position({
            left: l + o.left,
            top: i.mouseY + o.top
          }).chartContainer(k.parentNode).enabled(v).valueFormatter(function (e, t) {
            return r.tickFormat()(e);
          }).data({
            value: y,
            series: c
          })(), s.renderGuideLine(l);
        }), s.dispatch.on("elementMouseout", function (e) {
          S.tooltipHide(), t.clearHighlights();
        }), S.on("tooltipShow", function (e) {
          v && T(e, k.parentNode);
        }), S.on("changeState", function (e) {
          typeof e.disabled != "undefined" && m.length === e.disabled.length && (m.forEach(function (t, n) {
            t.disabled = e.disabled[n];
          }), b.disabled = e.disabled), N.update();
        });
      }), N;
    }

    var t = e.models.line(),
        n = e.models.axis(),
        r = e.models.axis(),
        i = e.models.legend(),
        s = e.interactiveGuideline(),
        o = {
      top: 30,
      right: 20,
      bottom: 50,
      left: 60
    },
        u = e.utils.defaultColor(),
        a = null,
        f = null,
        l = !0,
        c = !0,
        h = !0,
        p = !1,
        d = !1,
        v = !0,
        m = function m(e, t, n, r, i) {
      return "<h3>" + e + "</h3>" + "<p>" + n + " at " + t + "</p>";
    },
        g,
        y,
        b = {},
        w = null,
        E = "No Data Available.",
        S = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"),
        x = 250;

    n.orient("bottom").tickPadding(7), r.orient(p ? "right" : "left");

    var T = function T(i, s) {
      var o = i.pos[0] + (s.offsetLeft || 0),
          u = i.pos[1] + (s.offsetTop || 0),
          a = n.tickFormat()(t.x()(i.point, i.pointIndex)),
          f = r.tickFormat()(t.y()(i.point, i.pointIndex)),
          l = m(i.series.key, a, f, i, N);
      e.tooltip.show([o, u], l, null, null, s);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + o.left, e.pos[1] + o.top], S.tooltipShow(e);
    }), t.dispatch.on("elementMouseout.tooltip", function (e) {
      S.tooltipHide(e);
    }), S.on("tooltipHide", function () {
      v && e.tooltip.cleanup();
    }), N.dispatch = S, N.lines = t, N.legend = i, N.xAxis = n, N.yAxis = r, N.interactiveLayer = s, d3.rebind(N, t, "defined", "isArea", "x", "y", "size", "xScale", "yScale", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "useVoronoi", "id", "interpolate"), N.options = e.utils.optionsFunc.bind(N), N.margin = function (e) {
      return arguments.length ? (o.top = typeof e.top != "undefined" ? e.top : o.top, o.right = typeof e.right != "undefined" ? e.right : o.right, o.bottom = typeof e.bottom != "undefined" ? e.bottom : o.bottom, o.left = typeof e.left != "undefined" ? e.left : o.left, N) : o;
    }, N.width = function (e) {
      return arguments.length ? (a = e, N) : a;
    }, N.height = function (e) {
      return arguments.length ? (f = e, N) : f;
    }, N.color = function (t) {
      return arguments.length ? (u = e.utils.getColor(t), i.color(u), N) : u;
    }, N.showLegend = function (e) {
      return arguments.length ? (l = e, N) : l;
    }, N.showXAxis = function (e) {
      return arguments.length ? (c = e, N) : c;
    }, N.showYAxis = function (e) {
      return arguments.length ? (h = e, N) : h;
    }, N.rightAlignYAxis = function (e) {
      return arguments.length ? (p = e, r.orient(e ? "right" : "left"), N) : p;
    }, N.useInteractiveGuideline = function (e) {
      return arguments.length ? (d = e, e === !0 && (N.interactive(!1), N.useVoronoi(!1)), N) : d;
    }, N.tooltips = function (e) {
      return arguments.length ? (v = e, N) : v;
    }, N.tooltipContent = function (e) {
      return arguments.length ? (m = e, N) : m;
    }, N.state = function (e) {
      return arguments.length ? (b = e, N) : b;
    }, N.defaultState = function (e) {
      return arguments.length ? (w = e, N) : w;
    }, N.noData = function (e) {
      return arguments.length ? (E = e, N) : E;
    }, N.transitionDuration = function (e) {
      return arguments.length ? (x = e, N) : x;
    }, N;
  }, e.models.linePlusBarChart = function () {
    "use strict";

    function T(e) {
      return e.each(function (e) {
        var l = d3.select(this),
            c = this,
            v = (a || parseInt(l.style("width")) || 960) - u.left - u.right,
            N = (f || parseInt(l.style("height")) || 400) - u.top - u.bottom;
        T.update = function () {
          l.transition().call(T);
        }, b.disabled = e.map(function (e) {
          return !!e.disabled;
        });

        if (!w) {
          var C;
          w = {};

          for (C in b) {
            b[C] instanceof Array ? w[C] = b[C].slice(0) : w[C] = b[C];
          }
        }

        if (!e || !e.length || !e.filter(function (e) {
          return e.values.length;
        }).length) {
          var k = l.selectAll(".nv-noData").data([E]);
          return k.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), k.attr("x", u.left + v / 2).attr("y", u.top + N / 2).text(function (e) {
            return e;
          }), T;
        }

        l.selectAll(".nv-noData").remove();
        var L = e.filter(function (e) {
          return !e.disabled && e.bar;
        }),
            A = e.filter(function (e) {
          return !e.bar;
        });
        m = A.filter(function (e) {
          return !e.disabled;
        }).length && A.filter(function (e) {
          return !e.disabled;
        })[0].values.length ? t.xScale() : n.xScale(), g = n.yScale(), y = t.yScale();

        var O = d3.select(this).selectAll("g.nv-wrap.nv-linePlusBar").data([e]),
            M = O.enter().append("g").attr("class", "nvd3 nv-wrap nv-linePlusBar").append("g"),
            _ = O.select("g");

        M.append("g").attr("class", "nv-x nv-axis"), M.append("g").attr("class", "nv-y1 nv-axis"), M.append("g").attr("class", "nv-y2 nv-axis"), M.append("g").attr("class", "nv-barsWrap"), M.append("g").attr("class", "nv-linesWrap"), M.append("g").attr("class", "nv-legendWrap"), p && (o.width(v / 2), _.select(".nv-legendWrap").datum(e.map(function (e) {
          return e.originalKey = e.originalKey === undefined ? e.key : e.originalKey, e.key = e.originalKey + (e.bar ? " (left axis)" : " (right axis)"), e;
        })).call(o), u.top != o.height() && (u.top = o.height(), N = (f || parseInt(l.style("height")) || 400) - u.top - u.bottom), _.select(".nv-legendWrap").attr("transform", "translate(" + v / 2 + "," + -u.top + ")")), O.attr("transform", "translate(" + u.left + "," + u.top + ")"), t.width(v).height(N).color(e.map(function (e, t) {
          return e.color || h(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled && !e[n].bar;
        })), n.width(v).height(N).color(e.map(function (e, t) {
          return e.color || h(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled && e[n].bar;
        }));

        var D = _.select(".nv-barsWrap").datum(L.length ? L : [{
          values: []
        }]),
            P = _.select(".nv-linesWrap").datum(A[0] && !A[0].disabled ? A : [{
          values: []
        }]);

        d3.transition(D).call(n), d3.transition(P).call(t), r.scale(m).ticks(v / 100).tickSize(-N, 0), _.select(".nv-x.nv-axis").attr("transform", "translate(0," + g.range()[0] + ")"), d3.transition(_.select(".nv-x.nv-axis")).call(r), i.scale(g).ticks(N / 36).tickSize(-v, 0), d3.transition(_.select(".nv-y1.nv-axis")).style("opacity", L.length ? 1 : 0).call(i), s.scale(y).ticks(N / 36).tickSize(L.length ? 0 : -v, 0), _.select(".nv-y2.nv-axis").style("opacity", A.length ? 1 : 0).attr("transform", "translate(" + v + ",0)"), d3.transition(_.select(".nv-y2.nv-axis")).call(s), o.dispatch.on("stateChange", function (e) {
          b = e, S.stateChange(b), T.update();
        }), S.on("tooltipShow", function (e) {
          d && x(e, c.parentNode);
        }), S.on("changeState", function (t) {
          typeof t.disabled != "undefined" && (e.forEach(function (e, n) {
            e.disabled = t.disabled[n];
          }), b.disabled = t.disabled), T.update();
        });
      }), T;
    }

    var t = e.models.line(),
        n = e.models.historicalBar(),
        r = e.models.axis(),
        i = e.models.axis(),
        s = e.models.axis(),
        o = e.models.legend(),
        u = {
      top: 30,
      right: 60,
      bottom: 50,
      left: 60
    },
        a = null,
        f = null,
        l = function l(e) {
      return e.x;
    },
        c = function c(e) {
      return e.y;
    },
        h = e.utils.defaultColor(),
        p = !0,
        d = !0,
        v = function v(e, t, n, r, i) {
      return "<h3>" + e + "</h3>" + "<p>" + n + " at " + t + "</p>";
    },
        m,
        g,
        y,
        b = {},
        w = null,
        E = "No Data Available.",
        S = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState");

    n.padData(!0), t.clipEdge(!1).padData(!0), r.orient("bottom").tickPadding(7).highlightZero(!1), i.orient("left"), s.orient("right");

    var x = function x(n, o) {
      var u = n.pos[0] + (o.offsetLeft || 0),
          a = n.pos[1] + (o.offsetTop || 0),
          f = r.tickFormat()(t.x()(n.point, n.pointIndex)),
          l = (n.series.bar ? i : s).tickFormat()(t.y()(n.point, n.pointIndex)),
          c = v(n.series.key, f, l, n, T);
      e.tooltip.show([u, a], c, n.value < 0 ? "n" : "s", null, o);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + u.left, e.pos[1] + u.top], S.tooltipShow(e);
    }), t.dispatch.on("elementMouseout.tooltip", function (e) {
      S.tooltipHide(e);
    }), n.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + u.left, e.pos[1] + u.top], S.tooltipShow(e);
    }), n.dispatch.on("elementMouseout.tooltip", function (e) {
      S.tooltipHide(e);
    }), S.on("tooltipHide", function () {
      d && e.tooltip.cleanup();
    }), T.dispatch = S, T.legend = o, T.lines = t, T.bars = n, T.xAxis = r, T.y1Axis = i, T.y2Axis = s, d3.rebind(T, t, "defined", "size", "clipVoronoi", "interpolate"), T.options = e.utils.optionsFunc.bind(T), T.x = function (e) {
      return arguments.length ? (l = e, t.x(e), n.x(e), T) : l;
    }, T.y = function (e) {
      return arguments.length ? (c = e, t.y(e), n.y(e), T) : c;
    }, T.margin = function (e) {
      return arguments.length ? (u.top = typeof e.top != "undefined" ? e.top : u.top, u.right = typeof e.right != "undefined" ? e.right : u.right, u.bottom = typeof e.bottom != "undefined" ? e.bottom : u.bottom, u.left = typeof e.left != "undefined" ? e.left : u.left, T) : u;
    }, T.width = function (e) {
      return arguments.length ? (a = e, T) : a;
    }, T.height = function (e) {
      return arguments.length ? (f = e, T) : f;
    }, T.color = function (t) {
      return arguments.length ? (h = e.utils.getColor(t), o.color(h), T) : h;
    }, T.showLegend = function (e) {
      return arguments.length ? (p = e, T) : p;
    }, T.tooltips = function (e) {
      return arguments.length ? (d = e, T) : d;
    }, T.tooltipContent = function (e) {
      return arguments.length ? (v = e, T) : v;
    }, T.state = function (e) {
      return arguments.length ? (b = e, T) : b;
    }, T.defaultState = function (e) {
      return arguments.length ? (w = e, T) : w;
    }, T.noData = function (e) {
      return arguments.length ? (E = e, T) : E;
    }, T;
  }, e.models.lineWithFocusChart = function () {
    "use strict";

    function k(e) {
      return e.each(function (e) {
        function U(e) {
          var t = +(e == "e"),
              n = t ? 1 : -1,
              r = M / 3;
          return "M" + .5 * n + "," + r + "A6,6 0 0 " + t + " " + 6.5 * n + "," + (r + 6) + "V" + (2 * r - 6) + "A6,6 0 0 " + t + " " + .5 * n + "," + 2 * r + "Z" + "M" + 2.5 * n + "," + (r + 8) + "V" + (2 * r - 8) + "M" + 4.5 * n + "," + (r + 8) + "V" + (2 * r - 8);
        }

        function z() {
          a.empty() || a.extent(w), I.data([a.empty() ? g.domain() : w]).each(function (e, t) {
            var n = g(e[0]) - v.range()[0],
                r = v.range()[1] - g(e[1]);
            d3.select(this).select(".left").attr("width", n < 0 ? 0 : n), d3.select(this).select(".right").attr("x", g(e[1])).attr("width", r < 0 ? 0 : r);
          });
        }

        function W() {
          w = a.empty() ? null : a.extent();
          var n = a.empty() ? g.domain() : a.extent();
          if (Math.abs(n[0] - n[1]) <= 1) return;
          T.brush({
            extent: n,
            brush: a
          }), z();
          var s = H.select(".nv-focus .nv-linesWrap").datum(e.filter(function (e) {
            return !e.disabled;
          }).map(function (e, r) {
            return {
              key: e.key,
              values: e.values.filter(function (e, r) {
                return t.x()(e, r) >= n[0] && t.x()(e, r) <= n[1];
              })
            };
          }));
          s.transition().duration(N).call(t), H.select(".nv-focus .nv-x.nv-axis").transition().duration(N).call(r), H.select(".nv-focus .nv-y.nv-axis").transition().duration(N).call(i);
        }

        var S = d3.select(this),
            L = this,
            A = (h || parseInt(S.style("width")) || 960) - f.left - f.right,
            O = (p || parseInt(S.style("height")) || 400) - f.top - f.bottom - d,
            M = d - l.top - l.bottom;
        k.update = function () {
          S.transition().duration(N).call(k);
        }, k.container = this;

        if (!e || !e.length || !e.filter(function (e) {
          return e.values.length;
        }).length) {
          var _ = S.selectAll(".nv-noData").data([x]);

          return _.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), _.attr("x", f.left + A / 2).attr("y", f.top + O / 2).text(function (e) {
            return e;
          }), k;
        }

        S.selectAll(".nv-noData").remove(), v = t.xScale(), m = t.yScale(), g = n.xScale(), y = n.yScale();
        var D = S.selectAll("g.nv-wrap.nv-lineWithFocusChart").data([e]),
            P = D.enter().append("g").attr("class", "nvd3 nv-wrap nv-lineWithFocusChart").append("g"),
            H = D.select("g");
        P.append("g").attr("class", "nv-legendWrap");
        var B = P.append("g").attr("class", "nv-focus");
        B.append("g").attr("class", "nv-x nv-axis"), B.append("g").attr("class", "nv-y nv-axis"), B.append("g").attr("class", "nv-linesWrap");
        var j = P.append("g").attr("class", "nv-context");
        j.append("g").attr("class", "nv-x nv-axis"), j.append("g").attr("class", "nv-y nv-axis"), j.append("g").attr("class", "nv-linesWrap"), j.append("g").attr("class", "nv-brushBackground"), j.append("g").attr("class", "nv-x nv-brush"), b && (u.width(A), H.select(".nv-legendWrap").datum(e).call(u), f.top != u.height() && (f.top = u.height(), O = (p || parseInt(S.style("height")) || 400) - f.top - f.bottom - d), H.select(".nv-legendWrap").attr("transform", "translate(0," + -f.top + ")")), D.attr("transform", "translate(" + f.left + "," + f.top + ")"), t.width(A).height(O).color(e.map(function (e, t) {
          return e.color || c(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled;
        })), n.defined(t.defined()).width(A).height(M).color(e.map(function (e, t) {
          return e.color || c(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled;
        })), H.select(".nv-context").attr("transform", "translate(0," + (O + f.bottom + l.top) + ")");
        var F = H.select(".nv-context .nv-linesWrap").datum(e.filter(function (e) {
          return !e.disabled;
        }));
        d3.transition(F).call(n), r.scale(v).ticks(A / 100).tickSize(-O, 0), i.scale(m).ticks(O / 36).tickSize(-A, 0), H.select(".nv-focus .nv-x.nv-axis").attr("transform", "translate(0," + O + ")"), a.x(g).on("brush", function () {
          var e = k.transitionDuration();
          k.transitionDuration(0), W(), k.transitionDuration(e);
        }), w && a.extent(w);
        var I = H.select(".nv-brushBackground").selectAll("g").data([w || a.extent()]),
            q = I.enter().append("g");
        q.append("rect").attr("class", "left").attr("x", 0).attr("y", 0).attr("height", M), q.append("rect").attr("class", "right").attr("x", 0).attr("y", 0).attr("height", M);
        var R = H.select(".nv-x.nv-brush").call(a);
        R.selectAll("rect").attr("height", M), R.selectAll(".resize").append("path").attr("d", U), W(), s.scale(g).ticks(A / 100).tickSize(-M, 0), H.select(".nv-context .nv-x.nv-axis").attr("transform", "translate(0," + y.range()[0] + ")"), d3.transition(H.select(".nv-context .nv-x.nv-axis")).call(s), o.scale(y).ticks(M / 36).tickSize(-A, 0), d3.transition(H.select(".nv-context .nv-y.nv-axis")).call(o), H.select(".nv-context .nv-x.nv-axis").attr("transform", "translate(0," + y.range()[0] + ")"), u.dispatch.on("stateChange", function (e) {
          k.update();
        }), T.on("tooltipShow", function (e) {
          E && C(e, L.parentNode);
        });
      }), k;
    }

    var t = e.models.line(),
        n = e.models.line(),
        r = e.models.axis(),
        i = e.models.axis(),
        s = e.models.axis(),
        o = e.models.axis(),
        u = e.models.legend(),
        a = d3.svg.brush(),
        f = {
      top: 30,
      right: 30,
      bottom: 30,
      left: 60
    },
        l = {
      top: 0,
      right: 30,
      bottom: 20,
      left: 60
    },
        c = e.utils.defaultColor(),
        h = null,
        p = null,
        d = 100,
        v,
        m,
        g,
        y,
        b = !0,
        w = null,
        E = !0,
        S = function S(e, t, n, r, i) {
      return "<h3>" + e + "</h3>" + "<p>" + n + " at " + t + "</p>";
    },
        x = "No Data Available.",
        T = d3.dispatch("tooltipShow", "tooltipHide", "brush"),
        N = 250;

    t.clipEdge(!0), n.interactive(!1), r.orient("bottom").tickPadding(5), i.orient("left"), s.orient("bottom").tickPadding(5), o.orient("left");

    var C = function C(n, s) {
      var o = n.pos[0] + (s.offsetLeft || 0),
          u = n.pos[1] + (s.offsetTop || 0),
          a = r.tickFormat()(t.x()(n.point, n.pointIndex)),
          f = i.tickFormat()(t.y()(n.point, n.pointIndex)),
          l = S(n.series.key, a, f, n, k);
      e.tooltip.show([o, u], l, null, null, s);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + f.left, e.pos[1] + f.top], T.tooltipShow(e);
    }), t.dispatch.on("elementMouseout.tooltip", function (e) {
      T.tooltipHide(e);
    }), T.on("tooltipHide", function () {
      E && e.tooltip.cleanup();
    }), k.dispatch = T, k.legend = u, k.lines = t, k.lines2 = n, k.xAxis = r, k.yAxis = i, k.x2Axis = s, k.y2Axis = o, d3.rebind(k, t, "defined", "isArea", "size", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "interactive", "clipEdge", "clipVoronoi", "id"), k.options = e.utils.optionsFunc.bind(k), k.x = function (e) {
      return arguments.length ? (t.x(e), n.x(e), k) : t.x;
    }, k.y = function (e) {
      return arguments.length ? (t.y(e), n.y(e), k) : t.y;
    }, k.margin = function (e) {
      return arguments.length ? (f.top = typeof e.top != "undefined" ? e.top : f.top, f.right = typeof e.right != "undefined" ? e.right : f.right, f.bottom = typeof e.bottom != "undefined" ? e.bottom : f.bottom, f.left = typeof e.left != "undefined" ? e.left : f.left, k) : f;
    }, k.margin2 = function (e) {
      return arguments.length ? (l = e, k) : l;
    }, k.width = function (e) {
      return arguments.length ? (h = e, k) : h;
    }, k.height = function (e) {
      return arguments.length ? (p = e, k) : p;
    }, k.height2 = function (e) {
      return arguments.length ? (d = e, k) : d;
    }, k.color = function (t) {
      return arguments.length ? (c = e.utils.getColor(t), u.color(c), k) : c;
    }, k.showLegend = function (e) {
      return arguments.length ? (b = e, k) : b;
    }, k.tooltips = function (e) {
      return arguments.length ? (E = e, k) : E;
    }, k.tooltipContent = function (e) {
      return arguments.length ? (S = e, k) : S;
    }, k.interpolate = function (e) {
      return arguments.length ? (t.interpolate(e), n.interpolate(e), k) : t.interpolate();
    }, k.noData = function (e) {
      return arguments.length ? (x = e, k) : x;
    }, k.xTickFormat = function (e) {
      return arguments.length ? (r.tickFormat(e), s.tickFormat(e), k) : r.tickFormat();
    }, k.yTickFormat = function (e) {
      return arguments.length ? (i.tickFormat(e), o.tickFormat(e), k) : i.tickFormat();
    }, k.brushExtent = function (e) {
      return arguments.length ? (w = e, k) : w;
    }, k.transitionDuration = function (e) {
      return arguments.length ? (N = e, k) : N;
    }, k;
  }, e.models.linePlusBarWithFocusChart = function () {
    "use strict";

    function B(e) {
      return e.each(function (e) {
        function nt(e) {
          var t = +(e == "e"),
              n = t ? 1 : -1,
              r = q / 3;
          return "M" + .5 * n + "," + r + "A6,6 0 0 " + t + " " + 6.5 * n + "," + (r + 6) + "V" + (2 * r - 6) + "A6,6 0 0 " + t + " " + .5 * n + "," + 2 * r + "Z" + "M" + 2.5 * n + "," + (r + 8) + "V" + (2 * r - 8) + "M" + 4.5 * n + "," + (r + 8) + "V" + (2 * r - 8);
        }

        function rt() {
          h.empty() || h.extent(x), Z.data([h.empty() ? k.domain() : x]).each(function (e, t) {
            var n = k(e[0]) - k.range()[0],
                r = k.range()[1] - k(e[1]);
            d3.select(this).select(".left").attr("width", n < 0 ? 0 : n), d3.select(this).select(".right").attr("x", k(e[1])).attr("width", r < 0 ? 0 : r);
          });
        }

        function it() {
          x = h.empty() ? null : h.extent(), S = h.empty() ? k.domain() : h.extent(), D.brush({
            extent: S,
            brush: h
          }), rt(), r.width(F).height(I).color(e.map(function (e, t) {
            return e.color || w(e, t);
          }).filter(function (t, n) {
            return !e[n].disabled && e[n].bar;
          })), t.width(F).height(I).color(e.map(function (e, t) {
            return e.color || w(e, t);
          }).filter(function (t, n) {
            return !e[n].disabled && !e[n].bar;
          }));
          var n = J.select(".nv-focus .nv-barsWrap").datum(U.length ? U.map(function (e, t) {
            return {
              key: e.key,
              values: e.values.filter(function (e, t) {
                return r.x()(e, t) >= S[0] && r.x()(e, t) <= S[1];
              })
            };
          }) : [{
            values: []
          }]),
              i = J.select(".nv-focus .nv-linesWrap").datum(z[0].disabled ? [{
            values: []
          }] : z.map(function (e, n) {
            return {
              key: e.key,
              values: e.values.filter(function (e, n) {
                return t.x()(e, n) >= S[0] && t.x()(e, n) <= S[1];
              })
            };
          }));
          U.length ? C = r.xScale() : C = t.xScale(), s.scale(C).ticks(F / 100).tickSize(-I, 0), s.domain([Math.ceil(S[0]), Math.floor(S[1])]), J.select(".nv-x.nv-axis").transition().duration(P).call(s), n.transition().duration(P).call(r), i.transition().duration(P).call(t), J.select(".nv-focus .nv-x.nv-axis").attr("transform", "translate(0," + L.range()[0] + ")"), u.scale(L).ticks(I / 36).tickSize(-F, 0), J.select(".nv-focus .nv-y1.nv-axis").style("opacity", U.length ? 1 : 0), a.scale(A).ticks(I / 36).tickSize(U.length ? 0 : -F, 0), J.select(".nv-focus .nv-y2.nv-axis").style("opacity", z.length ? 1 : 0).attr("transform", "translate(" + C.range()[1] + ",0)"), J.select(".nv-focus .nv-y1.nv-axis").transition().duration(P).call(u), J.select(".nv-focus .nv-y2.nv-axis").transition().duration(P).call(a);
        }

        var N = d3.select(this),
            j = this,
            F = (v || parseInt(N.style("width")) || 960) - p.left - p.right,
            I = (m || parseInt(N.style("height")) || 400) - p.top - p.bottom - g,
            q = g - d.top - d.bottom;
        B.update = function () {
          N.transition().duration(P).call(B);
        }, B.container = this;

        if (!e || !e.length || !e.filter(function (e) {
          return e.values.length;
        }).length) {
          var R = N.selectAll(".nv-noData").data([_]);
          return R.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), R.attr("x", p.left + F / 2).attr("y", p.top + I / 2).text(function (e) {
            return e;
          }), B;
        }

        N.selectAll(".nv-noData").remove();
        var U = e.filter(function (e) {
          return !e.disabled && e.bar;
        }),
            z = e.filter(function (e) {
          return !e.bar;
        });
        C = r.xScale(), k = o.scale(), L = r.yScale(), A = t.yScale(), O = i.yScale(), M = n.yScale();
        var W = e.filter(function (e) {
          return !e.disabled && e.bar;
        }).map(function (e) {
          return e.values.map(function (e, t) {
            return {
              x: y(e, t),
              y: b(e, t)
            };
          });
        }),
            X = e.filter(function (e) {
          return !e.disabled && !e.bar;
        }).map(function (e) {
          return e.values.map(function (e, t) {
            return {
              x: y(e, t),
              y: b(e, t)
            };
          });
        });
        C.range([0, F]), k.domain(d3.extent(d3.merge(W.concat(X)), function (e) {
          return e.x;
        })).range([0, F]);
        var V = N.selectAll("g.nv-wrap.nv-linePlusBar").data([e]),
            $ = V.enter().append("g").attr("class", "nvd3 nv-wrap nv-linePlusBar").append("g"),
            J = V.select("g");
        $.append("g").attr("class", "nv-legendWrap");
        var K = $.append("g").attr("class", "nv-focus");
        K.append("g").attr("class", "nv-x nv-axis"), K.append("g").attr("class", "nv-y1 nv-axis"), K.append("g").attr("class", "nv-y2 nv-axis"), K.append("g").attr("class", "nv-barsWrap"), K.append("g").attr("class", "nv-linesWrap");
        var Q = $.append("g").attr("class", "nv-context");
        Q.append("g").attr("class", "nv-x nv-axis"), Q.append("g").attr("class", "nv-y1 nv-axis"), Q.append("g").attr("class", "nv-y2 nv-axis"), Q.append("g").attr("class", "nv-barsWrap"), Q.append("g").attr("class", "nv-linesWrap"), Q.append("g").attr("class", "nv-brushBackground"), Q.append("g").attr("class", "nv-x nv-brush"), E && (c.width(F / 2), J.select(".nv-legendWrap").datum(e.map(function (e) {
          return e.originalKey = e.originalKey === undefined ? e.key : e.originalKey, e.key = e.originalKey + (e.bar ? " (left axis)" : " (right axis)"), e;
        })).call(c), p.top != c.height() && (p.top = c.height(), I = (m || parseInt(N.style("height")) || 400) - p.top - p.bottom - g), J.select(".nv-legendWrap").attr("transform", "translate(" + F / 2 + "," + -p.top + ")")), V.attr("transform", "translate(" + p.left + "," + p.top + ")"), i.width(F).height(q).color(e.map(function (e, t) {
          return e.color || w(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled && e[n].bar;
        })), n.width(F).height(q).color(e.map(function (e, t) {
          return e.color || w(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled && !e[n].bar;
        }));
        var G = J.select(".nv-context .nv-barsWrap").datum(U.length ? U : [{
          values: []
        }]),
            Y = J.select(".nv-context .nv-linesWrap").datum(z[0].disabled ? [{
          values: []
        }] : z);
        J.select(".nv-context").attr("transform", "translate(0," + (I + p.bottom + d.top) + ")"), G.transition().call(i), Y.transition().call(n), h.x(k).on("brush", it), x && h.extent(x);
        var Z = J.select(".nv-brushBackground").selectAll("g").data([x || h.extent()]),
            et = Z.enter().append("g");
        et.append("rect").attr("class", "left").attr("x", 0).attr("y", 0).attr("height", q), et.append("rect").attr("class", "right").attr("x", 0).attr("y", 0).attr("height", q);
        var tt = J.select(".nv-x.nv-brush").call(h);
        tt.selectAll("rect").attr("height", q), tt.selectAll(".resize").append("path").attr("d", nt), o.ticks(F / 100).tickSize(-q, 0), J.select(".nv-context .nv-x.nv-axis").attr("transform", "translate(0," + O.range()[0] + ")"), J.select(".nv-context .nv-x.nv-axis").transition().call(o), f.scale(O).ticks(q / 36).tickSize(-F, 0), J.select(".nv-context .nv-y1.nv-axis").style("opacity", U.length ? 1 : 0).attr("transform", "translate(0," + k.range()[0] + ")"), J.select(".nv-context .nv-y1.nv-axis").transition().call(f), l.scale(M).ticks(q / 36).tickSize(U.length ? 0 : -F, 0), J.select(".nv-context .nv-y2.nv-axis").style("opacity", z.length ? 1 : 0).attr("transform", "translate(" + k.range()[1] + ",0)"), J.select(".nv-context .nv-y2.nv-axis").transition().call(l), c.dispatch.on("stateChange", function (e) {
          B.update();
        }), D.on("tooltipShow", function (e) {
          T && H(e, j.parentNode);
        }), it();
      }), B;
    }

    var t = e.models.line(),
        n = e.models.line(),
        r = e.models.historicalBar(),
        i = e.models.historicalBar(),
        s = e.models.axis(),
        o = e.models.axis(),
        u = e.models.axis(),
        a = e.models.axis(),
        f = e.models.axis(),
        l = e.models.axis(),
        c = e.models.legend(),
        h = d3.svg.brush(),
        p = {
      top: 30,
      right: 30,
      bottom: 30,
      left: 60
    },
        d = {
      top: 0,
      right: 30,
      bottom: 20,
      left: 60
    },
        v = null,
        m = null,
        g = 100,
        y = function y(e) {
      return e.x;
    },
        b = function b(e) {
      return e.y;
    },
        w = e.utils.defaultColor(),
        E = !0,
        S,
        x = null,
        T = !0,
        N = function N(e, t, n, r, i) {
      return "<h3>" + e + "</h3>" + "<p>" + n + " at " + t + "</p>";
    },
        C,
        k,
        L,
        A,
        O,
        M,
        _ = "No Data Available.",
        D = d3.dispatch("tooltipShow", "tooltipHide", "brush"),
        P = 0;

    t.clipEdge(!0), n.interactive(!1), s.orient("bottom").tickPadding(5), u.orient("left"), a.orient("right"), o.orient("bottom").tickPadding(5), f.orient("left"), l.orient("right");

    var H = function H(n, r) {
      S && (n.pointIndex += Math.ceil(S[0]));
      var i = n.pos[0] + (r.offsetLeft || 0),
          o = n.pos[1] + (r.offsetTop || 0),
          f = s.tickFormat()(t.x()(n.point, n.pointIndex)),
          l = (n.series.bar ? u : a).tickFormat()(t.y()(n.point, n.pointIndex)),
          c = N(n.series.key, f, l, n, B);
      e.tooltip.show([i, o], c, n.value < 0 ? "n" : "s", null, r);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + p.left, e.pos[1] + p.top], D.tooltipShow(e);
    }), t.dispatch.on("elementMouseout.tooltip", function (e) {
      D.tooltipHide(e);
    }), r.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + p.left, e.pos[1] + p.top], D.tooltipShow(e);
    }), r.dispatch.on("elementMouseout.tooltip", function (e) {
      D.tooltipHide(e);
    }), D.on("tooltipHide", function () {
      T && e.tooltip.cleanup();
    }), B.dispatch = D, B.legend = c, B.lines = t, B.lines2 = n, B.bars = r, B.bars2 = i, B.xAxis = s, B.x2Axis = o, B.y1Axis = u, B.y2Axis = a, B.y3Axis = f, B.y4Axis = l, d3.rebind(B, t, "defined", "size", "clipVoronoi", "interpolate"), B.options = e.utils.optionsFunc.bind(B), B.x = function (e) {
      return arguments.length ? (y = e, t.x(e), r.x(e), B) : y;
    }, B.y = function (e) {
      return arguments.length ? (b = e, t.y(e), r.y(e), B) : b;
    }, B.margin = function (e) {
      return arguments.length ? (p.top = typeof e.top != "undefined" ? e.top : p.top, p.right = typeof e.right != "undefined" ? e.right : p.right, p.bottom = typeof e.bottom != "undefined" ? e.bottom : p.bottom, p.left = typeof e.left != "undefined" ? e.left : p.left, B) : p;
    }, B.width = function (e) {
      return arguments.length ? (v = e, B) : v;
    }, B.height = function (e) {
      return arguments.length ? (m = e, B) : m;
    }, B.color = function (t) {
      return arguments.length ? (w = e.utils.getColor(t), c.color(w), B) : w;
    }, B.showLegend = function (e) {
      return arguments.length ? (E = e, B) : E;
    }, B.tooltips = function (e) {
      return arguments.length ? (T = e, B) : T;
    }, B.tooltipContent = function (e) {
      return arguments.length ? (N = e, B) : N;
    }, B.noData = function (e) {
      return arguments.length ? (_ = e, B) : _;
    }, B.brushExtent = function (e) {
      return arguments.length ? (x = e, B) : x;
    }, B;
  }, e.models.multiBar = function () {
    "use strict";

    function C(e) {
      return e.each(function (e) {
        var C = n - t.left - t.right,
            k = r - t.top - t.bottom,
            L = d3.select(this);
        d && e.length && (d = [{
          values: e[0].values.map(function (e) {
            return {
              x: e.x,
              y: 0,
              series: e.series,
              size: .01
            };
          })
        }]), c && (e = d3.layout.stack().offset(h).values(function (e) {
          return e.values;
        }).y(a)(!e.length && d ? d : e)), e.forEach(function (e, t) {
          e.values.forEach(function (e) {
            e.series = t;
          });
        }), c && e[0].values.map(function (t, n) {
          var r = 0,
              i = 0;
          e.map(function (e) {
            var t = e.values[n];
            t.size = Math.abs(t.y), t.y < 0 ? (t.y1 = i, i -= t.size) : (t.y1 = t.size + r, r += t.size);
          });
        });
        var A = y && b ? [] : e.map(function (e) {
          return e.values.map(function (e, t) {
            return {
              x: u(e, t),
              y: a(e, t),
              y0: e.y0,
              y1: e.y1
            };
          });
        });
        i.domain(y || d3.merge(A).map(function (e) {
          return e.x;
        })).rangeBands(w || [0, C], S), s.domain(b || d3.extent(d3.merge(A).map(function (e) {
          return c ? e.y > 0 ? e.y1 : e.y1 + e.y : e.y;
        }).concat(f))).range(E || [k, 0]), i.domain()[0] === i.domain()[1] && (i.domain()[0] ? i.domain([i.domain()[0] - i.domain()[0] * .01, i.domain()[1] + i.domain()[1] * .01]) : i.domain([-1, 1])), s.domain()[0] === s.domain()[1] && (s.domain()[0] ? s.domain([s.domain()[0] + s.domain()[0] * .01, s.domain()[1] - s.domain()[1] * .01]) : s.domain([-1, 1])), T = T || i, N = N || s;

        var O = L.selectAll("g.nv-wrap.nv-multibar").data([e]),
            M = O.enter().append("g").attr("class", "nvd3 nv-wrap nv-multibar"),
            _ = M.append("defs"),
            D = M.append("g"),
            P = O.select("g");

        D.append("g").attr("class", "nv-groups"), O.attr("transform", "translate(" + t.left + "," + t.top + ")"), _.append("clipPath").attr("id", "nv-edge-clip-" + o).append("rect"), O.select("#nv-edge-clip-" + o + " rect").attr("width", C).attr("height", k), P.attr("clip-path", l ? "url(#nv-edge-clip-" + o + ")" : "");
        var H = O.select(".nv-groups").selectAll(".nv-group").data(function (e) {
          return e;
        }, function (e, t) {
          return t;
        });
        H.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6), H.exit().transition().selectAll("rect.nv-bar").delay(function (t, n) {
          return n * g / e[0].values.length;
        }).attr("y", function (e) {
          return c ? N(e.y0) : N(0);
        }).attr("height", 0).remove(), H.attr("class", function (e, t) {
          return "nv-group nv-series-" + t;
        }).classed("hover", function (e) {
          return e.hover;
        }).style("fill", function (e, t) {
          return p(e, t);
        }).style("stroke", function (e, t) {
          return p(e, t);
        }), H.transition().style("stroke-opacity", 1).style("fill-opacity", .75);
        var B = H.selectAll("rect.nv-bar").data(function (t) {
          return d && !e.length ? d.values : t.values;
        });
        B.exit().remove();
        var j = B.enter().append("rect").attr("class", function (e, t) {
          return a(e, t) < 0 ? "nv-bar negative" : "nv-bar positive";
        }).attr("x", function (t, n, r) {
          return c ? 0 : r * i.rangeBand() / e.length;
        }).attr("y", function (e) {
          return N(c ? e.y0 : 0);
        }).attr("height", 0).attr("width", i.rangeBand() / (c ? 1 : e.length)).attr("transform", function (e, t) {
          return "translate(" + i(u(e, t)) + ",0)";
        });
        B.style("fill", function (e, t, n) {
          return p(e, n, t);
        }).style("stroke", function (e, t, n) {
          return p(e, n, t);
        }).on("mouseover", function (t, n) {
          d3.select(this).classed("hover", !0), x.elementMouseover({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pos: [i(u(t, n)) + i.rangeBand() * (c ? e.length / 2 : t.series + .5) / e.length, s(a(t, n) + (c ? t.y0 : 0))],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          });
        }).on("mouseout", function (t, n) {
          d3.select(this).classed("hover", !1), x.elementMouseout({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          });
        }).on("click", function (t, n) {
          x.elementClick({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pos: [i(u(t, n)) + i.rangeBand() * (c ? e.length / 2 : t.series + .5) / e.length, s(a(t, n) + (c ? t.y0 : 0))],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          }), d3.event.stopPropagation();
        }).on("dblclick", function (t, n) {
          x.elementDblClick({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pos: [i(u(t, n)) + i.rangeBand() * (c ? e.length / 2 : t.series + .5) / e.length, s(a(t, n) + (c ? t.y0 : 0))],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          }), d3.event.stopPropagation();
        }), B.attr("class", function (e, t) {
          return a(e, t) < 0 ? "nv-bar negative" : "nv-bar positive";
        }).transition().attr("transform", function (e, t) {
          return "translate(" + i(u(e, t)) + ",0)";
        }), v && (m || (m = e.map(function () {
          return !0;
        })), B.style("fill", function (e, t, n) {
          return d3.rgb(v(e, t)).darker(m.map(function (e, t) {
            return t;
          }).filter(function (e, t) {
            return !m[t];
          })[n]).toString();
        }).style("stroke", function (e, t, n) {
          return d3.rgb(v(e, t)).darker(m.map(function (e, t) {
            return t;
          }).filter(function (e, t) {
            return !m[t];
          })[n]).toString();
        })), c ? B.transition().delay(function (t, n) {
          return n * g / e[0].values.length;
        }).attr("y", function (e, t) {
          return s(c ? e.y1 : 0);
        }).attr("height", function (e, t) {
          return Math.max(Math.abs(s(e.y + (c ? e.y0 : 0)) - s(c ? e.y0 : 0)), 1);
        }).attr("x", function (t, n) {
          return c ? 0 : t.series * i.rangeBand() / e.length;
        }).attr("width", i.rangeBand() / (c ? 1 : e.length)) : B.transition().delay(function (t, n) {
          return n * g / e[0].values.length;
        }).attr("x", function (t, n) {
          return t.series * i.rangeBand() / e.length;
        }).attr("width", i.rangeBand() / e.length).attr("y", function (e, t) {
          return a(e, t) < 0 ? s(0) : s(0) - s(a(e, t)) < 1 ? s(0) - 1 : s(a(e, t)) || 0;
        }).attr("height", function (e, t) {
          return Math.max(Math.abs(s(a(e, t)) - s(0)), 1) || 0;
        }), T = i.copy(), N = s.copy();
      }), C;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = 960,
        r = 500,
        i = d3.scale.ordinal(),
        s = d3.scale.linear(),
        o = Math.floor(Math.random() * 1e4),
        u = function u(e) {
      return e.x;
    },
        a = function a(e) {
      return e.y;
    },
        f = [0],
        l = !0,
        c = !1,
        h = "zero",
        p = e.utils.defaultColor(),
        d = !1,
        v = null,
        m,
        g = 1200,
        y,
        b,
        w,
        E,
        S = .1,
        x = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"),
        T,
        N;

    return C.dispatch = x, C.options = e.utils.optionsFunc.bind(C), C.x = function (e) {
      return arguments.length ? (u = e, C) : u;
    }, C.y = function (e) {
      return arguments.length ? (a = e, C) : a;
    }, C.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, C) : t;
    }, C.width = function (e) {
      return arguments.length ? (n = e, C) : n;
    }, C.height = function (e) {
      return arguments.length ? (r = e, C) : r;
    }, C.xScale = function (e) {
      return arguments.length ? (i = e, C) : i;
    }, C.yScale = function (e) {
      return arguments.length ? (s = e, C) : s;
    }, C.xDomain = function (e) {
      return arguments.length ? (y = e, C) : y;
    }, C.yDomain = function (e) {
      return arguments.length ? (b = e, C) : b;
    }, C.xRange = function (e) {
      return arguments.length ? (w = e, C) : w;
    }, C.yRange = function (e) {
      return arguments.length ? (E = e, C) : E;
    }, C.forceY = function (e) {
      return arguments.length ? (f = e, C) : f;
    }, C.stacked = function (e) {
      return arguments.length ? (c = e, C) : c;
    }, C.stackOffset = function (e) {
      return arguments.length ? (h = e, C) : h;
    }, C.clipEdge = function (e) {
      return arguments.length ? (l = e, C) : l;
    }, C.color = function (t) {
      return arguments.length ? (p = e.utils.getColor(t), C) : p;
    }, C.barColor = function (t) {
      return arguments.length ? (v = e.utils.getColor(t), C) : v;
    }, C.disabled = function (e) {
      return arguments.length ? (m = e, C) : m;
    }, C.id = function (e) {
      return arguments.length ? (o = e, C) : o;
    }, C.hideable = function (e) {
      return arguments.length ? (d = e, C) : d;
    }, C.delay = function (e) {
      return arguments.length ? (g = e, C) : g;
    }, C.groupSpacing = function (e) {
      return arguments.length ? (S = e, C) : S;
    }, C;
  }, e.models.multiBarChart = function () {
    "use strict";

    function A(e) {
      return e.each(function (e) {
        var b = d3.select(this),
            O = this,
            M = (u || parseInt(b.style("width")) || 960) - o.left - o.right,
            _ = (a || parseInt(b.style("height")) || 400) - o.top - o.bottom;

        A.update = function () {
          b.transition().duration(k).call(A);
        }, A.container = this, S.disabled = e.map(function (e) {
          return !!e.disabled;
        });

        if (!x) {
          var D;
          x = {};

          for (D in S) {
            S[D] instanceof Array ? x[D] = S[D].slice(0) : x[D] = S[D];
          }
        }

        if (!e || !e.length || !e.filter(function (e) {
          return e.values.length;
        }).length) {
          var P = b.selectAll(".nv-noData").data([T]);
          return P.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), P.attr("x", o.left + M / 2).attr("y", o.top + _ / 2).text(function (e) {
            return e;
          }), A;
        }

        b.selectAll(".nv-noData").remove(), w = t.xScale(), E = t.yScale();
        var H = b.selectAll("g.nv-wrap.nv-multiBarWithLegend").data([e]),
            B = H.enter().append("g").attr("class", "nvd3 nv-wrap nv-multiBarWithLegend").append("g"),
            j = H.select("g");
        B.append("g").attr("class", "nv-x nv-axis"), B.append("g").attr("class", "nv-y nv-axis"), B.append("g").attr("class", "nv-barsWrap"), B.append("g").attr("class", "nv-legendWrap"), B.append("g").attr("class", "nv-controlsWrap"), c && (i.width(M - C()), t.barColor() && e.forEach(function (e, t) {
          e.color = d3.rgb("#ccc").darker(t * 1.5).toString();
        }), j.select(".nv-legendWrap").datum(e).call(i), o.top != i.height() && (o.top = i.height(), _ = (a || parseInt(b.style("height")) || 400) - o.top - o.bottom), j.select(".nv-legendWrap").attr("transform", "translate(" + C() + "," + -o.top + ")"));

        if (l) {
          var F = [{
            key: "Grouped",
            disabled: t.stacked()
          }, {
            key: "Stacked",
            disabled: !t.stacked()
          }];
          s.width(C()).color(["#444", "#444", "#444"]), j.select(".nv-controlsWrap").datum(F).attr("transform", "translate(0," + -o.top + ")").call(s);
        }

        H.attr("transform", "translate(" + o.left + "," + o.top + ")"), d && j.select(".nv-y.nv-axis").attr("transform", "translate(" + M + ",0)"), t.disabled(e.map(function (e) {
          return e.disabled;
        })).width(M).height(_).color(e.map(function (e, t) {
          return e.color || f(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled;
        }));
        var I = j.select(".nv-barsWrap").datum(e.filter(function (e) {
          return !e.disabled;
        }));
        I.transition().call(t);

        if (h) {
          n.scale(w).ticks(M / 100).tickSize(-_, 0), j.select(".nv-x.nv-axis").attr("transform", "translate(0," + E.range()[0] + ")"), j.select(".nv-x.nv-axis").transition().call(n);
          var q = j.select(".nv-x.nv-axis > g").selectAll("g");
          q.selectAll("line, text").style("opacity", 1);

          if (m) {
            var R = function R(e, t) {
              return "translate(" + e + "," + t + ")";
            },
                U = 5,
                z = 17;

            q.selectAll("text").attr("transform", function (e, t, n) {
              return R(0, n % 2 == 0 ? U : z);
            });
            var W = d3.selectAll(".nv-x.nv-axis .nv-wrap g g text")[0].length;
            j.selectAll(".nv-x.nv-axis .nv-axisMaxMin text").attr("transform", function (e, t) {
              return R(0, t === 0 || W % 2 !== 0 ? z : U);
            });
          }

          v && q.filter(function (t, n) {
            return n % Math.ceil(e[0].values.length / (M / 100)) !== 0;
          }).selectAll("text, line").style("opacity", 0), g && q.selectAll(".tick text").attr("transform", "rotate(" + g + " 0,0)").style("text-anchor", g > 0 ? "start" : "end"), j.select(".nv-x.nv-axis").selectAll("g.nv-axisMaxMin text").style("opacity", 1);
        }

        p && (r.scale(E).ticks(_ / 36).tickSize(-M, 0), j.select(".nv-y.nv-axis").transition().call(r)), i.dispatch.on("stateChange", function (e) {
          S = e, N.stateChange(S), A.update();
        }), s.dispatch.on("legendClick", function (e, n) {
          if (!e.disabled) return;
          F = F.map(function (e) {
            return e.disabled = !0, e;
          }), e.disabled = !1;

          switch (e.key) {
            case "Grouped":
              t.stacked(!1);
              break;

            case "Stacked":
              t.stacked(!0);
          }

          S.stacked = t.stacked(), N.stateChange(S), A.update();
        }), N.on("tooltipShow", function (e) {
          y && L(e, O.parentNode);
        }), N.on("changeState", function (n) {
          typeof n.disabled != "undefined" && (e.forEach(function (e, t) {
            e.disabled = n.disabled[t];
          }), S.disabled = n.disabled), typeof n.stacked != "undefined" && (t.stacked(n.stacked), S.stacked = n.stacked), A.update();
        });
      }), A;
    }

    var t = e.models.multiBar(),
        n = e.models.axis(),
        r = e.models.axis(),
        i = e.models.legend(),
        s = e.models.legend(),
        o = {
      top: 30,
      right: 20,
      bottom: 50,
      left: 60
    },
        u = null,
        a = null,
        f = e.utils.defaultColor(),
        l = !0,
        c = !0,
        h = !0,
        p = !0,
        d = !1,
        v = !0,
        m = !1,
        g = 0,
        y = !0,
        b = function b(e, t, n, r, i) {
      return "<h3>" + e + "</h3>" + "<p>" + n + " on " + t + "</p>";
    },
        w,
        E,
        S = {
      stacked: !1
    },
        x = null,
        T = "No Data Available.",
        N = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"),
        C = function C() {
      return l ? 180 : 0;
    },
        k = 250;

    t.stacked(!1), n.orient("bottom").tickPadding(7).highlightZero(!0).showMaxMin(!1).tickFormat(function (e) {
      return e;
    }), r.orient(d ? "right" : "left").tickFormat(d3.format(",.1f")), s.updateState(!1);

    var L = function L(i, s) {
      var o = i.pos[0] + (s.offsetLeft || 0),
          u = i.pos[1] + (s.offsetTop || 0),
          a = n.tickFormat()(t.x()(i.point, i.pointIndex)),
          f = r.tickFormat()(t.y()(i.point, i.pointIndex)),
          l = b(i.series.key, a, f, i, A);
      e.tooltip.show([o, u], l, i.value < 0 ? "n" : "s", null, s);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + o.left, e.pos[1] + o.top], N.tooltipShow(e);
    }), t.dispatch.on("elementMouseout.tooltip", function (e) {
      N.tooltipHide(e);
    }), N.on("tooltipHide", function () {
      y && e.tooltip.cleanup();
    }), A.dispatch = N, A.multibar = t, A.legend = i, A.xAxis = n, A.yAxis = r, d3.rebind(A, t, "x", "y", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "clipEdge", "id", "stacked", "stackOffset", "delay", "barColor", "groupSpacing"), A.options = e.utils.optionsFunc.bind(A), A.margin = function (e) {
      return arguments.length ? (o.top = typeof e.top != "undefined" ? e.top : o.top, o.right = typeof e.right != "undefined" ? e.right : o.right, o.bottom = typeof e.bottom != "undefined" ? e.bottom : o.bottom, o.left = typeof e.left != "undefined" ? e.left : o.left, A) : o;
    }, A.width = function (e) {
      return arguments.length ? (u = e, A) : u;
    }, A.height = function (e) {
      return arguments.length ? (a = e, A) : a;
    }, A.color = function (t) {
      return arguments.length ? (f = e.utils.getColor(t), i.color(f), A) : f;
    }, A.showControls = function (e) {
      return arguments.length ? (l = e, A) : l;
    }, A.showLegend = function (e) {
      return arguments.length ? (c = e, A) : c;
    }, A.showXAxis = function (e) {
      return arguments.length ? (h = e, A) : h;
    }, A.showYAxis = function (e) {
      return arguments.length ? (p = e, A) : p;
    }, A.rightAlignYAxis = function (e) {
      return arguments.length ? (d = e, r.orient(e ? "right" : "left"), A) : d;
    }, A.reduceXTicks = function (e) {
      return arguments.length ? (v = e, A) : v;
    }, A.rotateLabels = function (e) {
      return arguments.length ? (g = e, A) : g;
    }, A.staggerLabels = function (e) {
      return arguments.length ? (m = e, A) : m;
    }, A.tooltip = function (e) {
      return arguments.length ? (b = e, A) : b;
    }, A.tooltips = function (e) {
      return arguments.length ? (y = e, A) : y;
    }, A.tooltipContent = function (e) {
      return arguments.length ? (b = e, A) : b;
    }, A.state = function (e) {
      return arguments.length ? (S = e, A) : S;
    }, A.defaultState = function (e) {
      return arguments.length ? (x = e, A) : x;
    }, A.noData = function (e) {
      return arguments.length ? (T = e, A) : T;
    }, A.transitionDuration = function (e) {
      return arguments.length ? (k = e, A) : k;
    }, A;
  }, e.models.multiBarHorizontal = function () {
    "use strict";

    function C(e) {
      return e.each(function (e) {
        var i = n - t.left - t.right,
            y = r - t.top - t.bottom,
            C = d3.select(this);
        p && (e = d3.layout.stack().offset("zero").values(function (e) {
          return e.values;
        }).y(a)(e)), e.forEach(function (e, t) {
          e.values.forEach(function (e) {
            e.series = t;
          });
        }), p && e[0].values.map(function (t, n) {
          var r = 0,
              i = 0;
          e.map(function (e) {
            var t = e.values[n];
            t.size = Math.abs(t.y), t.y < 0 ? (t.y1 = i - t.size, i -= t.size) : (t.y1 = r, r += t.size);
          });
        });
        var k = b && w ? [] : e.map(function (e) {
          return e.values.map(function (e, t) {
            return {
              x: u(e, t),
              y: a(e, t),
              y0: e.y0,
              y1: e.y1
            };
          });
        });
        s.domain(b || d3.merge(k).map(function (e) {
          return e.x;
        })).rangeBands(E || [0, y], .1), o.domain(w || d3.extent(d3.merge(k).map(function (e) {
          return p ? e.y > 0 ? e.y1 + e.y : e.y1 : e.y;
        }).concat(f))), d && !p ? o.range(S || [o.domain()[0] < 0 ? m : 0, i - (o.domain()[1] > 0 ? m : 0)]) : o.range(S || [0, i]), T = T || s, N = N || d3.scale.linear().domain(o.domain()).range([o(0), o(0)]);

        var L = d3.select(this).selectAll("g.nv-wrap.nv-multibarHorizontal").data([e]),
            A = L.enter().append("g").attr("class", "nvd3 nv-wrap nv-multibarHorizontal"),
            O = A.append("defs"),
            M = A.append("g"),
            _ = L.select("g");

        M.append("g").attr("class", "nv-groups"), L.attr("transform", "translate(" + t.left + "," + t.top + ")");
        var D = L.select(".nv-groups").selectAll(".nv-group").data(function (e) {
          return e;
        }, function (e, t) {
          return t;
        });
        D.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6), D.exit().transition().style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6).remove(), D.attr("class", function (e, t) {
          return "nv-group nv-series-" + t;
        }).classed("hover", function (e) {
          return e.hover;
        }).style("fill", function (e, t) {
          return l(e, t);
        }).style("stroke", function (e, t) {
          return l(e, t);
        }), D.transition().style("stroke-opacity", 1).style("fill-opacity", .75);
        var P = D.selectAll("g.nv-bar").data(function (e) {
          return e.values;
        });
        P.exit().remove();
        var H = P.enter().append("g").attr("transform", function (t, n, r) {
          return "translate(" + N(p ? t.y0 : 0) + "," + (p ? 0 : r * s.rangeBand() / e.length + s(u(t, n))) + ")";
        });
        H.append("rect").attr("width", 0).attr("height", s.rangeBand() / (p ? 1 : e.length)), P.on("mouseover", function (t, n) {
          d3.select(this).classed("hover", !0), x.elementMouseover({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pos: [o(a(t, n) + (p ? t.y0 : 0)), s(u(t, n)) + s.rangeBand() * (p ? e.length / 2 : t.series + .5) / e.length],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          });
        }).on("mouseout", function (t, n) {
          d3.select(this).classed("hover", !1), x.elementMouseout({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          });
        }).on("click", function (t, n) {
          x.elementClick({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pos: [s(u(t, n)) + s.rangeBand() * (p ? e.length / 2 : t.series + .5) / e.length, o(a(t, n) + (p ? t.y0 : 0))],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          }), d3.event.stopPropagation();
        }).on("dblclick", function (t, n) {
          x.elementDblClick({
            value: a(t, n),
            point: t,
            series: e[t.series],
            pos: [s(u(t, n)) + s.rangeBand() * (p ? e.length / 2 : t.series + .5) / e.length, o(a(t, n) + (p ? t.y0 : 0))],
            pointIndex: n,
            seriesIndex: t.series,
            e: d3.event
          }), d3.event.stopPropagation();
        }), H.append("text"), d && !p ? (P.select("text").attr("text-anchor", function (e, t) {
          return a(e, t) < 0 ? "end" : "start";
        }).attr("y", s.rangeBand() / (e.length * 2)).attr("dy", ".32em").text(function (e, t) {
          return g(a(e, t));
        }), P.transition().select("text").attr("x", function (e, t) {
          return a(e, t) < 0 ? -4 : o(a(e, t)) - o(0) + 4;
        })) : P.selectAll("text").text(""), v && !p ? (H.append("text").classed("nv-bar-label", !0), P.select("text.nv-bar-label").attr("text-anchor", function (e, t) {
          return a(e, t) < 0 ? "start" : "end";
        }).attr("y", s.rangeBand() / (e.length * 2)).attr("dy", ".32em").text(function (e, t) {
          return u(e, t);
        }), P.transition().select("text.nv-bar-label").attr("x", function (e, t) {
          return a(e, t) < 0 ? o(0) - o(a(e, t)) + 4 : -4;
        })) : P.selectAll("text.nv-bar-label").text(""), P.attr("class", function (e, t) {
          return a(e, t) < 0 ? "nv-bar negative" : "nv-bar positive";
        }), c && (h || (h = e.map(function () {
          return !0;
        })), P.style("fill", function (e, t, n) {
          return d3.rgb(c(e, t)).darker(h.map(function (e, t) {
            return t;
          }).filter(function (e, t) {
            return !h[t];
          })[n]).toString();
        }).style("stroke", function (e, t, n) {
          return d3.rgb(c(e, t)).darker(h.map(function (e, t) {
            return t;
          }).filter(function (e, t) {
            return !h[t];
          })[n]).toString();
        })), p ? P.transition().attr("transform", function (e, t) {
          return "translate(" + o(e.y1) + "," + s(u(e, t)) + ")";
        }).select("rect").attr("width", function (e, t) {
          return Math.abs(o(a(e, t) + e.y0) - o(e.y0));
        }).attr("height", s.rangeBand()) : P.transition().attr("transform", function (t, n) {
          return "translate(" + (a(t, n) < 0 ? o(a(t, n)) : o(0)) + "," + (t.series * s.rangeBand() / e.length + s(u(t, n))) + ")";
        }).select("rect").attr("height", s.rangeBand() / e.length).attr("width", function (e, t) {
          return Math.max(Math.abs(o(a(e, t)) - o(0)), 1);
        }), T = s.copy(), N = o.copy();
      }), C;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = 960,
        r = 500,
        i = Math.floor(Math.random() * 1e4),
        s = d3.scale.ordinal(),
        o = d3.scale.linear(),
        u = function u(e) {
      return e.x;
    },
        a = function a(e) {
      return e.y;
    },
        f = [0],
        l = e.utils.defaultColor(),
        c = null,
        h,
        p = !1,
        d = !1,
        v = !1,
        m = 60,
        g = d3.format(",.2f"),
        y = 1200,
        b,
        w,
        E,
        S,
        x = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout"),
        T,
        N;

    return C.dispatch = x, C.options = e.utils.optionsFunc.bind(C), C.x = function (e) {
      return arguments.length ? (u = e, C) : u;
    }, C.y = function (e) {
      return arguments.length ? (a = e, C) : a;
    }, C.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, C) : t;
    }, C.width = function (e) {
      return arguments.length ? (n = e, C) : n;
    }, C.height = function (e) {
      return arguments.length ? (r = e, C) : r;
    }, C.xScale = function (e) {
      return arguments.length ? (s = e, C) : s;
    }, C.yScale = function (e) {
      return arguments.length ? (o = e, C) : o;
    }, C.xDomain = function (e) {
      return arguments.length ? (b = e, C) : b;
    }, C.yDomain = function (e) {
      return arguments.length ? (w = e, C) : w;
    }, C.xRange = function (e) {
      return arguments.length ? (E = e, C) : E;
    }, C.yRange = function (e) {
      return arguments.length ? (S = e, C) : S;
    }, C.forceY = function (e) {
      return arguments.length ? (f = e, C) : f;
    }, C.stacked = function (e) {
      return arguments.length ? (p = e, C) : p;
    }, C.color = function (t) {
      return arguments.length ? (l = e.utils.getColor(t), C) : l;
    }, C.barColor = function (t) {
      return arguments.length ? (c = e.utils.getColor(t), C) : c;
    }, C.disabled = function (e) {
      return arguments.length ? (h = e, C) : h;
    }, C.id = function (e) {
      return arguments.length ? (i = e, C) : i;
    }, C.delay = function (e) {
      return arguments.length ? (y = e, C) : y;
    }, C.showValues = function (e) {
      return arguments.length ? (d = e, C) : d;
    }, C.showBarLabels = function (e) {
      return arguments.length ? (v = e, C) : v;
    }, C.valueFormat = function (e) {
      return arguments.length ? (g = e, C) : g;
    }, C.valuePadding = function (e) {
      return arguments.length ? (m = e, C) : m;
    }, C;
  }, e.models.multiBarHorizontalChart = function () {
    "use strict";

    function C(e) {
      return e.each(function (e) {
        var d = d3.select(this),
            m = this,
            k = (u || parseInt(d.style("width")) || 960) - o.left - o.right,
            L = (a || parseInt(d.style("height")) || 400) - o.top - o.bottom;
        C.update = function () {
          d.transition().duration(T).call(C);
        }, C.container = this, b.disabled = e.map(function (e) {
          return !!e.disabled;
        });

        if (!w) {
          var A;
          w = {};

          for (A in b) {
            b[A] instanceof Array ? w[A] = b[A].slice(0) : w[A] = b[A];
          }
        }

        if (!e || !e.length || !e.filter(function (e) {
          return e.values.length;
        }).length) {
          var O = d.selectAll(".nv-noData").data([E]);
          return O.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), O.attr("x", o.left + k / 2).attr("y", o.top + L / 2).text(function (e) {
            return e;
          }), C;
        }

        d.selectAll(".nv-noData").remove(), g = t.xScale(), y = t.yScale();

        var M = d.selectAll("g.nv-wrap.nv-multiBarHorizontalChart").data([e]),
            _ = M.enter().append("g").attr("class", "nvd3 nv-wrap nv-multiBarHorizontalChart").append("g"),
            D = M.select("g");

        _.append("g").attr("class", "nv-x nv-axis"), _.append("g").attr("class", "nv-y nv-axis").append("g").attr("class", "nv-zeroLine").append("line"), _.append("g").attr("class", "nv-barsWrap"), _.append("g").attr("class", "nv-legendWrap"), _.append("g").attr("class", "nv-controlsWrap"), c && (i.width(k - x()), t.barColor() && e.forEach(function (e, t) {
          e.color = d3.rgb("#ccc").darker(t * 1.5).toString();
        }), D.select(".nv-legendWrap").datum(e).call(i), o.top != i.height() && (o.top = i.height(), L = (a || parseInt(d.style("height")) || 400) - o.top - o.bottom), D.select(".nv-legendWrap").attr("transform", "translate(" + x() + "," + -o.top + ")"));

        if (l) {
          var P = [{
            key: "Grouped",
            disabled: t.stacked()
          }, {
            key: "Stacked",
            disabled: !t.stacked()
          }];
          s.width(x()).color(["#444", "#444", "#444"]), D.select(".nv-controlsWrap").datum(P).attr("transform", "translate(0," + -o.top + ")").call(s);
        }

        M.attr("transform", "translate(" + o.left + "," + o.top + ")"), t.disabled(e.map(function (e) {
          return e.disabled;
        })).width(k).height(L).color(e.map(function (e, t) {
          return e.color || f(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled;
        }));
        var H = D.select(".nv-barsWrap").datum(e.filter(function (e) {
          return !e.disabled;
        }));
        H.transition().call(t);

        if (h) {
          n.scale(g).ticks(L / 24).tickSize(-k, 0), D.select(".nv-x.nv-axis").transition().call(n);
          var B = D.select(".nv-x.nv-axis").selectAll("g");
          B.selectAll("line, text");
        }

        p && (r.scale(y).ticks(k / 100).tickSize(-L, 0), D.select(".nv-y.nv-axis").attr("transform", "translate(0," + L + ")"), D.select(".nv-y.nv-axis").transition().call(r)), D.select(".nv-zeroLine line").attr("x1", y(0)).attr("x2", y(0)).attr("y1", 0).attr("y2", -L), i.dispatch.on("stateChange", function (e) {
          b = e, S.stateChange(b), C.update();
        }), s.dispatch.on("legendClick", function (e, n) {
          if (!e.disabled) return;
          P = P.map(function (e) {
            return e.disabled = !0, e;
          }), e.disabled = !1;

          switch (e.key) {
            case "Grouped":
              t.stacked(!1);
              break;

            case "Stacked":
              t.stacked(!0);
          }

          b.stacked = t.stacked(), S.stateChange(b), C.update();
        }), S.on("tooltipShow", function (e) {
          v && N(e, m.parentNode);
        }), S.on("changeState", function (n) {
          typeof n.disabled != "undefined" && (e.forEach(function (e, t) {
            e.disabled = n.disabled[t];
          }), b.disabled = n.disabled), typeof n.stacked != "undefined" && (t.stacked(n.stacked), b.stacked = n.stacked), C.update();
        });
      }), C;
    }

    var t = e.models.multiBarHorizontal(),
        n = e.models.axis(),
        r = e.models.axis(),
        i = e.models.legend().height(30),
        s = e.models.legend().height(30),
        o = {
      top: 30,
      right: 20,
      bottom: 50,
      left: 60
    },
        u = null,
        a = null,
        f = e.utils.defaultColor(),
        l = !0,
        c = !0,
        h = !0,
        p = !0,
        d = !1,
        v = !0,
        m = function m(e, t, n, r, i) {
      return "<h3>" + e + " - " + t + "</h3>" + "<p>" + n + "</p>";
    },
        g,
        y,
        b = {
      stacked: d
    },
        w = null,
        E = "No Data Available.",
        S = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"),
        x = function x() {
      return l ? 180 : 0;
    },
        T = 250;

    t.stacked(d), n.orient("left").tickPadding(5).highlightZero(!1).showMaxMin(!1).tickFormat(function (e) {
      return e;
    }), r.orient("bottom").tickFormat(d3.format(",.1f")), s.updateState(!1);

    var N = function N(i, s) {
      var o = i.pos[0] + (s.offsetLeft || 0),
          u = i.pos[1] + (s.offsetTop || 0),
          a = n.tickFormat()(t.x()(i.point, i.pointIndex)),
          f = r.tickFormat()(t.y()(i.point, i.pointIndex)),
          l = m(i.series.key, a, f, i, C);
      e.tooltip.show([o, u], l, i.value < 0 ? "e" : "w", null, s);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + o.left, e.pos[1] + o.top], S.tooltipShow(e);
    }), t.dispatch.on("elementMouseout.tooltip", function (e) {
      S.tooltipHide(e);
    }), S.on("tooltipHide", function () {
      v && e.tooltip.cleanup();
    }), C.dispatch = S, C.multibar = t, C.legend = i, C.xAxis = n, C.yAxis = r, d3.rebind(C, t, "x", "y", "xDomain", "yDomain", "xRange", "yRange", "forceX", "forceY", "clipEdge", "id", "delay", "showValues", "showBarLabels", "valueFormat", "stacked", "barColor"), C.options = e.utils.optionsFunc.bind(C), C.margin = function (e) {
      return arguments.length ? (o.top = typeof e.top != "undefined" ? e.top : o.top, o.right = typeof e.right != "undefined" ? e.right : o.right, o.bottom = typeof e.bottom != "undefined" ? e.bottom : o.bottom, o.left = typeof e.left != "undefined" ? e.left : o.left, C) : o;
    }, C.width = function (e) {
      return arguments.length ? (u = e, C) : u;
    }, C.height = function (e) {
      return arguments.length ? (a = e, C) : a;
    }, C.color = function (t) {
      return arguments.length ? (f = e.utils.getColor(t), i.color(f), C) : f;
    }, C.showControls = function (e) {
      return arguments.length ? (l = e, C) : l;
    }, C.showLegend = function (e) {
      return arguments.length ? (c = e, C) : c;
    }, C.showXAxis = function (e) {
      return arguments.length ? (h = e, C) : h;
    }, C.showYAxis = function (e) {
      return arguments.length ? (p = e, C) : p;
    }, C.tooltip = function (e) {
      return arguments.length ? (m = e, C) : m;
    }, C.tooltips = function (e) {
      return arguments.length ? (v = e, C) : v;
    }, C.tooltipContent = function (e) {
      return arguments.length ? (m = e, C) : m;
    }, C.state = function (e) {
      return arguments.length ? (b = e, C) : b;
    }, C.defaultState = function (e) {
      return arguments.length ? (w = e, C) : w;
    }, C.noData = function (e) {
      return arguments.length ? (E = e, C) : E;
    }, C.transitionDuration = function (e) {
      return arguments.length ? (T = e, C) : T;
    }, C;
  }, e.models.multiChart = function () {
    "use strict";

    function C(e) {
      return e.each(function (e) {
        var u = d3.select(this),
            f = this;
        C.update = function () {
          u.transition().call(C);
        }, C.container = this;

        var k = (r || parseInt(u.style("width")) || 960) - t.left - t.right,
            L = (i || parseInt(u.style("height")) || 400) - t.top - t.bottom,
            A = e.filter(function (e) {
          return !e.disabled && e.type == "line" && e.yAxis == 1;
        }),
            O = e.filter(function (e) {
          return !e.disabled && e.type == "line" && e.yAxis == 2;
        }),
            M = e.filter(function (e) {
          return !e.disabled && e.type == "bar" && e.yAxis == 1;
        }),
            _ = e.filter(function (e) {
          return !e.disabled && e.type == "bar" && e.yAxis == 2;
        }),
            D = e.filter(function (e) {
          return !e.disabled && e.type == "area" && e.yAxis == 1;
        }),
            P = e.filter(function (e) {
          return !e.disabled && e.type == "area" && e.yAxis == 2;
        }),
            H = e.filter(function (e) {
          return !e.disabled && e.yAxis == 1;
        }).map(function (e) {
          return e.values.map(function (e, t) {
            return {
              x: e.x,
              y: e.y
            };
          });
        }),
            B = e.filter(function (e) {
          return !e.disabled && e.yAxis == 2;
        }).map(function (e) {
          return e.values.map(function (e, t) {
            return {
              x: e.x,
              y: e.y
            };
          });
        });

        a.domain(d3.extent(d3.merge(H.concat(B)), function (e) {
          return e.x;
        })).range([0, k]);
        var j = u.selectAll("g.wrap.multiChart").data([e]),
            F = j.enter().append("g").attr("class", "wrap nvd3 multiChart").append("g");
        F.append("g").attr("class", "x axis"), F.append("g").attr("class", "y1 axis"), F.append("g").attr("class", "y2 axis"), F.append("g").attr("class", "lines1Wrap"), F.append("g").attr("class", "lines2Wrap"), F.append("g").attr("class", "bars1Wrap"), F.append("g").attr("class", "bars2Wrap"), F.append("g").attr("class", "stack1Wrap"), F.append("g").attr("class", "stack2Wrap"), F.append("g").attr("class", "legendWrap");
        var I = j.select("g");
        s && (x.width(k / 2), I.select(".legendWrap").datum(e.map(function (e) {
          return e.originalKey = e.originalKey === undefined ? e.key : e.originalKey, e.key = e.originalKey + (e.yAxis == 1 ? "" : " (right axis)"), e;
        })).call(x), t.top != x.height() && (t.top = x.height(), L = (i || parseInt(u.style("height")) || 400) - t.top - t.bottom), I.select(".legendWrap").attr("transform", "translate(" + k / 2 + "," + -t.top + ")")), d.width(k).height(L).interpolate("monotone").color(e.map(function (e, t) {
          return e.color || n[t % n.length];
        }).filter(function (t, n) {
          return !e[n].disabled && e[n].yAxis == 1 && e[n].type == "line";
        })), v.width(k).height(L).interpolate("monotone").color(e.map(function (e, t) {
          return e.color || n[t % n.length];
        }).filter(function (t, n) {
          return !e[n].disabled && e[n].yAxis == 2 && e[n].type == "line";
        })), m.width(k).height(L).color(e.map(function (e, t) {
          return e.color || n[t % n.length];
        }).filter(function (t, n) {
          return !e[n].disabled && e[n].yAxis == 1 && e[n].type == "bar";
        })), g.width(k).height(L).color(e.map(function (e, t) {
          return e.color || n[t % n.length];
        }).filter(function (t, n) {
          return !e[n].disabled && e[n].yAxis == 2 && e[n].type == "bar";
        })), y.width(k).height(L).color(e.map(function (e, t) {
          return e.color || n[t % n.length];
        }).filter(function (t, n) {
          return !e[n].disabled && e[n].yAxis == 1 && e[n].type == "area";
        })), b.width(k).height(L).color(e.map(function (e, t) {
          return e.color || n[t % n.length];
        }).filter(function (t, n) {
          return !e[n].disabled && e[n].yAxis == 2 && e[n].type == "area";
        })), I.attr("transform", "translate(" + t.left + "," + t.top + ")");
        var q = I.select(".lines1Wrap").datum(A),
            R = I.select(".bars1Wrap").datum(M),
            U = I.select(".stack1Wrap").datum(D),
            z = I.select(".lines2Wrap").datum(O),
            W = I.select(".bars2Wrap").datum(_),
            X = I.select(".stack2Wrap").datum(P),
            V = D.length ? D.map(function (e) {
          return e.values;
        }).reduce(function (e, t) {
          return e.map(function (e, n) {
            return {
              x: e.x,
              y: e.y + t[n].y
            };
          });
        }).concat([{
          x: 0,
          y: 0
        }]) : [],
            $ = P.length ? P.map(function (e) {
          return e.values;
        }).reduce(function (e, t) {
          return e.map(function (e, n) {
            return {
              x: e.x,
              y: e.y + t[n].y
            };
          });
        }).concat([{
          x: 0,
          y: 0
        }]) : [];
        h.domain(l || d3.extent(d3.merge(H).concat(V), function (e) {
          return e.y;
        })).range([0, L]), p.domain(c || d3.extent(d3.merge(B).concat($), function (e) {
          return e.y;
        })).range([0, L]), d.yDomain(h.domain()), m.yDomain(h.domain()), y.yDomain(h.domain()), v.yDomain(p.domain()), g.yDomain(p.domain()), b.yDomain(p.domain()), D.length && d3.transition(U).call(y), P.length && d3.transition(X).call(b), M.length && d3.transition(R).call(m), _.length && d3.transition(W).call(g), A.length && d3.transition(q).call(d), O.length && d3.transition(z).call(v), w.ticks(k / 100).tickSize(-L, 0), I.select(".x.axis").attr("transform", "translate(0," + L + ")"), d3.transition(I.select(".x.axis")).call(w), E.ticks(L / 36).tickSize(-k, 0), d3.transition(I.select(".y1.axis")).call(E), S.ticks(L / 36).tickSize(-k, 0), d3.transition(I.select(".y2.axis")).call(S), I.select(".y2.axis").style("opacity", B.length ? 1 : 0).attr("transform", "translate(" + a.range()[1] + ",0)"), x.dispatch.on("stateChange", function (e) {
          C.update();
        }), T.on("tooltipShow", function (e) {
          o && N(e, f.parentNode);
        });
      }), C;
    }

    var t = {
      top: 30,
      right: 20,
      bottom: 50,
      left: 60
    },
        n = d3.scale.category20().range(),
        r = null,
        i = null,
        s = !0,
        o = !0,
        u = function u(e, t, n, r, i) {
      return "<h3>" + e + "</h3>" + "<p>" + n + " at " + t + "</p>";
    },
        a,
        f,
        l,
        c,
        a = d3.scale.linear(),
        h = d3.scale.linear(),
        p = d3.scale.linear(),
        d = e.models.line().yScale(h),
        v = e.models.line().yScale(p),
        m = e.models.multiBar().stacked(!1).yScale(h),
        g = e.models.multiBar().stacked(!1).yScale(p),
        y = e.models.stackedArea().yScale(h),
        b = e.models.stackedArea().yScale(p),
        w = e.models.axis().scale(a).orient("bottom").tickPadding(5),
        E = e.models.axis().scale(h).orient("left"),
        S = e.models.axis().scale(p).orient("right"),
        x = e.models.legend().height(30),
        T = d3.dispatch("tooltipShow", "tooltipHide"),
        N = function N(t, n) {
      var r = t.pos[0] + (n.offsetLeft || 0),
          i = t.pos[1] + (n.offsetTop || 0),
          s = w.tickFormat()(d.x()(t.point, t.pointIndex)),
          o = (t.series.yAxis == 2 ? S : E).tickFormat()(d.y()(t.point, t.pointIndex)),
          a = u(t.series.key, s, o, t, C);
      e.tooltip.show([r, i], a, undefined, undefined, n.offsetParent);
    };

    return d.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + t.left, e.pos[1] + t.top], T.tooltipShow(e);
    }), d.dispatch.on("elementMouseout.tooltip", function (e) {
      T.tooltipHide(e);
    }), v.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + t.left, e.pos[1] + t.top], T.tooltipShow(e);
    }), v.dispatch.on("elementMouseout.tooltip", function (e) {
      T.tooltipHide(e);
    }), m.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + t.left, e.pos[1] + t.top], T.tooltipShow(e);
    }), m.dispatch.on("elementMouseout.tooltip", function (e) {
      T.tooltipHide(e);
    }), g.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + t.left, e.pos[1] + t.top], T.tooltipShow(e);
    }), g.dispatch.on("elementMouseout.tooltip", function (e) {
      T.tooltipHide(e);
    }), y.dispatch.on("tooltipShow", function (e) {
      if (!Math.round(y.y()(e.point) * 100)) return setTimeout(function () {
        d3.selectAll(".point.hover").classed("hover", !1);
      }, 0), !1;
      e.pos = [e.pos[0] + t.left, e.pos[1] + t.top], T.tooltipShow(e);
    }), y.dispatch.on("tooltipHide", function (e) {
      T.tooltipHide(e);
    }), b.dispatch.on("tooltipShow", function (e) {
      if (!Math.round(b.y()(e.point) * 100)) return setTimeout(function () {
        d3.selectAll(".point.hover").classed("hover", !1);
      }, 0), !1;
      e.pos = [e.pos[0] + t.left, e.pos[1] + t.top], T.tooltipShow(e);
    }), b.dispatch.on("tooltipHide", function (e) {
      T.tooltipHide(e);
    }), d.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + t.left, e.pos[1] + t.top], T.tooltipShow(e);
    }), d.dispatch.on("elementMouseout.tooltip", function (e) {
      T.tooltipHide(e);
    }), v.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + t.left, e.pos[1] + t.top], T.tooltipShow(e);
    }), v.dispatch.on("elementMouseout.tooltip", function (e) {
      T.tooltipHide(e);
    }), T.on("tooltipHide", function () {
      o && e.tooltip.cleanup();
    }), C.dispatch = T, C.lines1 = d, C.lines2 = v, C.bars1 = m, C.bars2 = g, C.stack1 = y, C.stack2 = b, C.xAxis = w, C.yAxis1 = E, C.yAxis2 = S, C.options = e.utils.optionsFunc.bind(C), C.x = function (e) {
      return arguments.length ? (getX = e, d.x(e), m.x(e), C) : getX;
    }, C.y = function (e) {
      return arguments.length ? (getY = e, d.y(e), m.y(e), C) : getY;
    }, C.yDomain1 = function (e) {
      return arguments.length ? (l = e, C) : l;
    }, C.yDomain2 = function (e) {
      return arguments.length ? (c = e, C) : c;
    }, C.margin = function (e) {
      return arguments.length ? (t = e, C) : t;
    }, C.width = function (e) {
      return arguments.length ? (r = e, C) : r;
    }, C.height = function (e) {
      return arguments.length ? (i = e, C) : i;
    }, C.color = function (e) {
      return arguments.length ? (n = e, x.color(e), C) : n;
    }, C.showLegend = function (e) {
      return arguments.length ? (s = e, C) : s;
    }, C.tooltips = function (e) {
      return arguments.length ? (o = e, C) : o;
    }, C.tooltipContent = function (e) {
      return arguments.length ? (u = e, C) : u;
    }, C;
  }, e.models.ohlcBar = function () {
    "use strict";

    function x(e) {
      return e.each(function (e) {
        var g = n - t.left - t.right,
            x = r - t.top - t.bottom,
            T = d3.select(this);
        s.domain(y || d3.extent(e[0].values.map(u).concat(p))), v ? s.range(w || [g * .5 / e[0].values.length, g * (e[0].values.length - .5) / e[0].values.length]) : s.range(w || [0, g]), o.domain(b || [d3.min(e[0].values.map(h).concat(d)), d3.max(e[0].values.map(c).concat(d))]).range(E || [x, 0]), s.domain()[0] === s.domain()[1] && (s.domain()[0] ? s.domain([s.domain()[0] - s.domain()[0] * .01, s.domain()[1] + s.domain()[1] * .01]) : s.domain([-1, 1])), o.domain()[0] === o.domain()[1] && (o.domain()[0] ? o.domain([o.domain()[0] + o.domain()[0] * .01, o.domain()[1] - o.domain()[1] * .01]) : o.domain([-1, 1]));
        var N = d3.select(this).selectAll("g.nv-wrap.nv-ohlcBar").data([e[0].values]),
            C = N.enter().append("g").attr("class", "nvd3 nv-wrap nv-ohlcBar"),
            k = C.append("defs"),
            L = C.append("g"),
            A = N.select("g");
        L.append("g").attr("class", "nv-ticks"), N.attr("transform", "translate(" + t.left + "," + t.top + ")"), T.on("click", function (e, t) {
          S.chartClick({
            data: e,
            index: t,
            pos: d3.event,
            id: i
          });
        }), k.append("clipPath").attr("id", "nv-chart-clip-path-" + i).append("rect"), N.select("#nv-chart-clip-path-" + i + " rect").attr("width", g).attr("height", x), A.attr("clip-path", m ? "url(#nv-chart-clip-path-" + i + ")" : "");
        var O = N.select(".nv-ticks").selectAll(".nv-tick").data(function (e) {
          return e;
        });
        O.exit().remove();
        var M = O.enter().append("path").attr("class", function (e, t, n) {
          return (f(e, t) > l(e, t) ? "nv-tick negative" : "nv-tick positive") + " nv-tick-" + n + "-" + t;
        }).attr("d", function (t, n) {
          var r = g / e[0].values.length * .9;
          return "m0,0l0," + (o(f(t, n)) - o(c(t, n))) + "l" + -r / 2 + ",0l" + r / 2 + ",0l0," + (o(h(t, n)) - o(f(t, n))) + "l0," + (o(l(t, n)) - o(h(t, n))) + "l" + r / 2 + ",0l" + -r / 2 + ",0z";
        }).attr("transform", function (e, t) {
          return "translate(" + s(u(e, t)) + "," + o(c(e, t)) + ")";
        }).on("mouseover", function (t, n) {
          d3.select(this).classed("hover", !0), S.elementMouseover({
            point: t,
            series: e[0],
            pos: [s(u(t, n)), o(a(t, n))],
            pointIndex: n,
            seriesIndex: 0,
            e: d3.event
          });
        }).on("mouseout", function (t, n) {
          d3.select(this).classed("hover", !1), S.elementMouseout({
            point: t,
            series: e[0],
            pointIndex: n,
            seriesIndex: 0,
            e: d3.event
          });
        }).on("click", function (e, t) {
          S.elementClick({
            value: a(e, t),
            data: e,
            index: t,
            pos: [s(u(e, t)), o(a(e, t))],
            e: d3.event,
            id: i
          }), d3.event.stopPropagation();
        }).on("dblclick", function (e, t) {
          S.elementDblClick({
            value: a(e, t),
            data: e,
            index: t,
            pos: [s(u(e, t)), o(a(e, t))],
            e: d3.event,
            id: i
          }), d3.event.stopPropagation();
        });
        O.attr("class", function (e, t, n) {
          return (f(e, t) > l(e, t) ? "nv-tick negative" : "nv-tick positive") + " nv-tick-" + n + "-" + t;
        }), d3.transition(O).attr("transform", function (e, t) {
          return "translate(" + s(u(e, t)) + "," + o(c(e, t)) + ")";
        }).attr("d", function (t, n) {
          var r = g / e[0].values.length * .9;
          return "m0,0l0," + (o(f(t, n)) - o(c(t, n))) + "l" + -r / 2 + ",0l" + r / 2 + ",0l0," + (o(h(t, n)) - o(f(t, n))) + "l0," + (o(l(t, n)) - o(h(t, n))) + "l" + r / 2 + ",0l" + -r / 2 + ",0z";
        });
      }), x;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = 960,
        r = 500,
        i = Math.floor(Math.random() * 1e4),
        s = d3.scale.linear(),
        o = d3.scale.linear(),
        u = function u(e) {
      return e.x;
    },
        a = function a(e) {
      return e.y;
    },
        f = function f(e) {
      return e.open;
    },
        l = function l(e) {
      return e.close;
    },
        c = function c(e) {
      return e.high;
    },
        h = function h(e) {
      return e.low;
    },
        p = [],
        d = [],
        v = !1,
        m = !0,
        g = e.utils.defaultColor(),
        y,
        b,
        w,
        E,
        S = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout");

    return x.dispatch = S, x.options = e.utils.optionsFunc.bind(x), x.x = function (e) {
      return arguments.length ? (u = e, x) : u;
    }, x.y = function (e) {
      return arguments.length ? (a = e, x) : a;
    }, x.open = function (e) {
      return arguments.length ? (f = e, x) : f;
    }, x.close = function (e) {
      return arguments.length ? (l = e, x) : l;
    }, x.high = function (e) {
      return arguments.length ? (c = e, x) : c;
    }, x.low = function (e) {
      return arguments.length ? (h = e, x) : h;
    }, x.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, x) : t;
    }, x.width = function (e) {
      return arguments.length ? (n = e, x) : n;
    }, x.height = function (e) {
      return arguments.length ? (r = e, x) : r;
    }, x.xScale = function (e) {
      return arguments.length ? (s = e, x) : s;
    }, x.yScale = function (e) {
      return arguments.length ? (o = e, x) : o;
    }, x.xDomain = function (e) {
      return arguments.length ? (y = e, x) : y;
    }, x.yDomain = function (e) {
      return arguments.length ? (b = e, x) : b;
    }, x.xRange = function (e) {
      return arguments.length ? (w = e, x) : w;
    }, x.yRange = function (e) {
      return arguments.length ? (E = e, x) : E;
    }, x.forceX = function (e) {
      return arguments.length ? (p = e, x) : p;
    }, x.forceY = function (e) {
      return arguments.length ? (d = e, x) : d;
    }, x.padData = function (e) {
      return arguments.length ? (v = e, x) : v;
    }, x.clipEdge = function (e) {
      return arguments.length ? (m = e, x) : m;
    }, x.color = function (t) {
      return arguments.length ? (g = e.utils.getColor(t), x) : g;
    }, x.id = function (e) {
      return arguments.length ? (i = e, x) : i;
    }, x;
  }, e.models.pie = function () {
    "use strict";

    function S(e) {
      return e.each(function (e) {
        function q(e) {
          var t = (e.startAngle + e.endAngle) * 90 / Math.PI - 90;
          return t > 90 ? t - 180 : t;
        }

        function R(e) {
          e.endAngle = isNaN(e.endAngle) ? 0 : e.endAngle, e.startAngle = isNaN(e.startAngle) ? 0 : e.startAngle, m || (e.innerRadius = 0);
          var t = d3.interpolate(this._current, e);
          return this._current = t(0), function (e) {
            return A(t(e));
          };
        }

        function U(e) {
          e.innerRadius = 0;
          var t = d3.interpolate({
            startAngle: 0,
            endAngle: 0
          }, e);
          return function (e) {
            return A(t(e));
          };
        }

        var o = n - t.left - t.right,
            f = r - t.top - t.bottom,
            S = Math.min(o, f) / 2,
            x = S - S / 5,
            T = d3.select(this),
            N = T.selectAll(".nv-wrap.nv-pie").data(e),
            C = N.enter().append("g").attr("class", "nvd3 nv-wrap nv-pie nv-chart-" + u),
            k = C.append("g"),
            L = N.select("g");
        k.append("g").attr("class", "nv-pie"), k.append("g").attr("class", "nv-pieLabels"), N.attr("transform", "translate(" + t.left + "," + t.top + ")"), L.select(".nv-pie").attr("transform", "translate(" + o / 2 + "," + f / 2 + ")"), L.select(".nv-pieLabels").attr("transform", "translate(" + o / 2 + "," + f / 2 + ")"), T.on("click", function (e, t) {
          E.chartClick({
            data: e,
            index: t,
            pos: d3.event,
            id: u
          });
        });
        var A = d3.svg.arc().outerRadius(x);
        y && A.startAngle(y), b && A.endAngle(b), m && A.innerRadius(S * w);

        var O = d3.layout.pie().sort(null).value(function (e) {
          return e.disabled ? 0 : s(e);
        }),
            M = N.select(".nv-pie").selectAll(".nv-slice").data(O),
            _ = N.select(".nv-pieLabels").selectAll(".nv-label").data(O);

        M.exit().remove(), _.exit().remove();
        var D = M.enter().append("g").attr("class", "nv-slice").on("mouseover", function (e, t) {
          d3.select(this).classed("hover", !0), E.elementMouseover({
            label: i(e.data),
            value: s(e.data),
            point: e.data,
            pointIndex: t,
            pos: [d3.event.pageX, d3.event.pageY],
            id: u
          });
        }).on("mouseout", function (e, t) {
          d3.select(this).classed("hover", !1), E.elementMouseout({
            label: i(e.data),
            value: s(e.data),
            point: e.data,
            index: t,
            id: u
          });
        }).on("click", function (e, t) {
          E.elementClick({
            label: i(e.data),
            value: s(e.data),
            point: e.data,
            index: t,
            pos: d3.event,
            id: u
          }), d3.event.stopPropagation();
        }).on("dblclick", function (e, t) {
          E.elementDblClick({
            label: i(e.data),
            value: s(e.data),
            point: e.data,
            index: t,
            pos: d3.event,
            id: u
          }), d3.event.stopPropagation();
        });
        M.attr("fill", function (e, t) {
          return a(e, t);
        }).attr("stroke", function (e, t) {
          return a(e, t);
        });
        var P = D.append("path").each(function (e) {
          this._current = e;
        });
        M.select("path").transition().attr("d", A).attrTween("d", R);

        if (l) {
          var H = d3.svg.arc().innerRadius(0);
          c && (H = A), h && (H = d3.svg.arc().outerRadius(A.outerRadius())), _.enter().append("g").classed("nv-label", !0).each(function (e, t) {
            var n = d3.select(this);
            n.attr("transform", function (e) {
              if (g) {
                e.outerRadius = x + 10, e.innerRadius = x + 15;
                var t = (e.startAngle + e.endAngle) / 2 * (180 / Math.PI);
                return (e.startAngle + e.endAngle) / 2 < Math.PI ? t -= 90 : t += 90, "translate(" + H.centroid(e) + ") rotate(" + t + ")";
              }

              return e.outerRadius = S + 10, e.innerRadius = S + 15, "translate(" + H.centroid(e) + ")";
            }), n.append("rect").style("stroke", "#fff").style("fill", "#fff").attr("rx", 3).attr("ry", 3), n.append("text").style("text-anchor", g ? (e.startAngle + e.endAngle) / 2 < Math.PI ? "start" : "end" : "middle").style("fill", "#000");
          });

          var B = {},
              j = 14,
              F = 140,
              I = function I(e) {
            return Math.floor(e[0] / F) * F + "," + Math.floor(e[1] / j) * j;
          };

          _.transition().attr("transform", function (e) {
            if (g) {
              e.outerRadius = x + 10, e.innerRadius = x + 15;
              var t = (e.startAngle + e.endAngle) / 2 * (180 / Math.PI);
              return (e.startAngle + e.endAngle) / 2 < Math.PI ? t -= 90 : t += 90, "translate(" + H.centroid(e) + ") rotate(" + t + ")";
            }

            e.outerRadius = S + 10, e.innerRadius = S + 15;
            var n = H.centroid(e),
                r = I(n);
            return B[r] && (n[1] -= j), B[I(n)] = !0, "translate(" + n + ")";
          }), _.select(".nv-label text").style("text-anchor", g ? (d.startAngle + d.endAngle) / 2 < Math.PI ? "start" : "end" : "middle").text(function (e, t) {
            var n = (e.endAngle - e.startAngle) / (2 * Math.PI),
                r = {
              key: i(e.data),
              value: s(e.data),
              percent: d3.format("%")(n)
            };
            return e.value && n > v ? r[p] : "";
          });
        }
      }), S;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = 500,
        r = 500,
        i = function i(e) {
      return e.x;
    },
        s = function s(e) {
      return e.y;
    },
        o = function o(e) {
      return e.description;
    },
        u = Math.floor(Math.random() * 1e4),
        a = e.utils.defaultColor(),
        f = d3.format(",.2f"),
        l = !0,
        c = !0,
        h = !1,
        p = "key",
        v = .02,
        m = !1,
        g = !1,
        y = !1,
        b = !1,
        w = .5,
        E = d3.dispatch("chartClick", "elementClick", "elementDblClick", "elementMouseover", "elementMouseout");

    return S.dispatch = E, S.options = e.utils.optionsFunc.bind(S), S.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, S) : t;
    }, S.width = function (e) {
      return arguments.length ? (n = e, S) : n;
    }, S.height = function (e) {
      return arguments.length ? (r = e, S) : r;
    }, S.values = function (t) {
      return e.log("pie.values() is no longer supported."), S;
    }, S.x = function (e) {
      return arguments.length ? (i = e, S) : i;
    }, S.y = function (e) {
      return arguments.length ? (s = d3.functor(e), S) : s;
    }, S.description = function (e) {
      return arguments.length ? (o = e, S) : o;
    }, S.showLabels = function (e) {
      return arguments.length ? (l = e, S) : l;
    }, S.labelSunbeamLayout = function (e) {
      return arguments.length ? (g = e, S) : g;
    }, S.donutLabelsOutside = function (e) {
      return arguments.length ? (h = e, S) : h;
    }, S.pieLabelsOutside = function (e) {
      return arguments.length ? (c = e, S) : c;
    }, S.labelType = function (e) {
      return arguments.length ? (p = e, p = p || "key", S) : p;
    }, S.donut = function (e) {
      return arguments.length ? (m = e, S) : m;
    }, S.donutRatio = function (e) {
      return arguments.length ? (w = e, S) : w;
    }, S.startAngle = function (e) {
      return arguments.length ? (y = e, S) : y;
    }, S.endAngle = function (e) {
      return arguments.length ? (b = e, S) : b;
    }, S.id = function (e) {
      return arguments.length ? (u = e, S) : u;
    }, S.color = function (t) {
      return arguments.length ? (a = e.utils.getColor(t), S) : a;
    }, S.valueFormat = function (e) {
      return arguments.length ? (f = e, S) : f;
    }, S.labelThreshold = function (e) {
      return arguments.length ? (v = e, S) : v;
    }, S;
  }, e.models.pieChart = function () {
    "use strict";

    function v(e) {
      return e.each(function (e) {
        var u = d3.select(this),
            a = this,
            f = (i || parseInt(u.style("width")) || 960) - r.left - r.right,
            d = (s || parseInt(u.style("height")) || 400) - r.top - r.bottom;
        v.update = function () {
          u.transition().call(v);
        }, v.container = this, l.disabled = e.map(function (e) {
          return !!e.disabled;
        });

        if (!c) {
          var m;
          c = {};

          for (m in l) {
            l[m] instanceof Array ? c[m] = l[m].slice(0) : c[m] = l[m];
          }
        }

        if (!e || !e.length) {
          var g = u.selectAll(".nv-noData").data([h]);
          return g.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), g.attr("x", r.left + f / 2).attr("y", r.top + d / 2).text(function (e) {
            return e;
          }), v;
        }

        u.selectAll(".nv-noData").remove();
        var y = u.selectAll("g.nv-wrap.nv-pieChart").data([e]),
            b = y.enter().append("g").attr("class", "nvd3 nv-wrap nv-pieChart").append("g"),
            w = y.select("g");
        b.append("g").attr("class", "nv-pieWrap"), b.append("g").attr("class", "nv-legendWrap"), o && (n.width(f).key(t.x()), y.select(".nv-legendWrap").datum(e).call(n), r.top != n.height() && (r.top = n.height(), d = (s || parseInt(u.style("height")) || 400) - r.top - r.bottom), y.select(".nv-legendWrap").attr("transform", "translate(0," + -r.top + ")")), y.attr("transform", "translate(" + r.left + "," + r.top + ")"), t.width(f).height(d);
        var E = w.select(".nv-pieWrap").datum([e]);
        d3.transition(E).call(t), n.dispatch.on("stateChange", function (e) {
          l = e, p.stateChange(l), v.update();
        }), t.dispatch.on("elementMouseout.tooltip", function (e) {
          p.tooltipHide(e);
        }), p.on("changeState", function (t) {
          typeof t.disabled != "undefined" && (e.forEach(function (e, n) {
            e.disabled = t.disabled[n];
          }), l.disabled = t.disabled), v.update();
        });
      }), v;
    }

    var t = e.models.pie(),
        n = e.models.legend(),
        r = {
      top: 30,
      right: 20,
      bottom: 20,
      left: 20
    },
        i = null,
        s = null,
        o = !0,
        u = e.utils.defaultColor(),
        a = !0,
        f = function f(e, t, n, r) {
      return "<h3>" + e + "</h3>" + "<p>" + t + "</p>";
    },
        l = {},
        c = null,
        h = "No Data Available.",
        p = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"),
        d = function d(n, r) {
      var i = t.description()(n.point) || t.x()(n.point),
          s = n.pos[0] + (r && r.offsetLeft || 0),
          o = n.pos[1] + (r && r.offsetTop || 0),
          u = t.valueFormat()(t.y()(n.point)),
          a = f(i, u, n, v);
      e.tooltip.show([s, o], a, n.value < 0 ? "n" : "s", null, r);
    };

    return t.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + r.left, e.pos[1] + r.top], p.tooltipShow(e);
    }), p.on("tooltipShow", function (e) {
      a && d(e);
    }), p.on("tooltipHide", function () {
      a && e.tooltip.cleanup();
    }), v.legend = n, v.dispatch = p, v.pie = t, d3.rebind(v, t, "valueFormat", "values", "x", "y", "description", "id", "showLabels", "donutLabelsOutside", "pieLabelsOutside", "labelType", "donut", "donutRatio", "labelThreshold"), v.options = e.utils.optionsFunc.bind(v), v.margin = function (e) {
      return arguments.length ? (r.top = typeof e.top != "undefined" ? e.top : r.top, r.right = typeof e.right != "undefined" ? e.right : r.right, r.bottom = typeof e.bottom != "undefined" ? e.bottom : r.bottom, r.left = typeof e.left != "undefined" ? e.left : r.left, v) : r;
    }, v.width = function (e) {
      return arguments.length ? (i = e, v) : i;
    }, v.height = function (e) {
      return arguments.length ? (s = e, v) : s;
    }, v.color = function (r) {
      return arguments.length ? (u = e.utils.getColor(r), n.color(u), t.color(u), v) : u;
    }, v.showLegend = function (e) {
      return arguments.length ? (o = e, v) : o;
    }, v.tooltips = function (e) {
      return arguments.length ? (a = e, v) : a;
    }, v.tooltipContent = function (e) {
      return arguments.length ? (f = e, v) : f;
    }, v.state = function (e) {
      return arguments.length ? (l = e, v) : l;
    }, v.defaultState = function (e) {
      return arguments.length ? (c = e, v) : c;
    }, v.noData = function (e) {
      return arguments.length ? (h = e, v) : h;
    }, v;
  }, e.models.scatter = function () {
    "use strict";

    function I(q) {
      return q.each(function (I) {
        function Q() {
          if (!g) return !1;
          var e,
              i = d3.merge(I.map(function (e, t) {
            return e.values.map(function (e, n) {
              var r = f(e, n),
                  i = l(e, n);
              return [o(r) + Math.random() * 1e-7, u(i) + Math.random() * 1e-7, t, n, e];
            }).filter(function (e, t) {
              return b(e[4], t);
            });
          }));

          if (D === !0) {
            if (x) {
              var a = X.select("defs").selectAll(".nv-point-clips").data([s]).enter();
              a.append("clipPath").attr("class", "nv-point-clips").attr("id", "nv-points-clip-" + s);
              var c = X.select("#nv-points-clip-" + s).selectAll("circle").data(i);
              c.enter().append("circle").attr("r", T), c.exit().remove(), c.attr("cx", function (e) {
                return e[0];
              }).attr("cy", function (e) {
                return e[1];
              }), X.select(".nv-point-paths").attr("clip-path", "url(#nv-points-clip-" + s + ")");
            }

            i.length && (i.push([o.range()[0] - 20, u.range()[0] - 20, null, null]), i.push([o.range()[1] + 20, u.range()[1] + 20, null, null]), i.push([o.range()[0] - 20, u.range()[0] + 20, null, null]), i.push([o.range()[1] + 20, u.range()[1] - 20, null, null]));
            var h = d3.geom.polygon([[-10, -10], [-10, r + 10], [n + 10, r + 10], [n + 10, -10]]),
                p = d3.geom.voronoi(i).map(function (e, t) {
              return {
                data: h.clip(e),
                series: i[t][2],
                point: i[t][3]
              };
            }),
                d = X.select(".nv-point-paths").selectAll("path").data(p);
            d.enter().append("path").attr("class", function (e, t) {
              return "nv-path-" + t;
            }), d.exit().remove(), d.attr("d", function (e) {
              return e.data.length === 0 ? "M 0 0" : "M" + e.data.join("L") + "Z";
            });

            var v = function v(e, n) {
              if (F) return 0;
              var r = I[e.series];
              if (typeof r == "undefined") return;
              var i = r.values[e.point];
              n({
                point: i,
                series: r,
                pos: [o(f(i, e.point)) + t.left, u(l(i, e.point)) + t.top],
                seriesIndex: e.series,
                pointIndex: e.point
              });
            };

            d.on("click", function (e) {
              v(e, _.elementClick);
            }).on("mouseover", function (e) {
              v(e, _.elementMouseover);
            }).on("mouseout", function (e, t) {
              v(e, _.elementMouseout);
            });
          } else X.select(".nv-groups").selectAll(".nv-group").selectAll(".nv-point").on("click", function (e, n) {
            if (F || !I[e.series]) return 0;
            var r = I[e.series],
                i = r.values[n];

            _.elementClick({
              point: i,
              series: r,
              pos: [o(f(i, n)) + t.left, u(l(i, n)) + t.top],
              seriesIndex: e.series,
              pointIndex: n
            });
          }).on("mouseover", function (e, n) {
            if (F || !I[e.series]) return 0;
            var r = I[e.series],
                i = r.values[n];

            _.elementMouseover({
              point: i,
              series: r,
              pos: [o(f(i, n)) + t.left, u(l(i, n)) + t.top],
              seriesIndex: e.series,
              pointIndex: n
            });
          }).on("mouseout", function (e, t) {
            if (F || !I[e.series]) return 0;
            var n = I[e.series],
                r = n.values[t];

            _.elementMouseout({
              point: r,
              series: n,
              seriesIndex: e.series,
              pointIndex: t
            });
          });

          F = !1;
        }

        var q = n - t.left - t.right,
            R = r - t.top - t.bottom,
            U = d3.select(this);
        I.forEach(function (e, t) {
          e.values.forEach(function (e) {
            e.series = t;
          });
        });
        var W = N && C && A ? [] : d3.merge(I.map(function (e) {
          return e.values.map(function (e, t) {
            return {
              x: f(e, t),
              y: l(e, t),
              size: c(e, t)
            };
          });
        }));
        o.domain(N || d3.extent(W.map(function (e) {
          return e.x;
        }).concat(d))), w && I[0] ? o.range(k || [(q * E + q) / (2 * I[0].values.length), q - q * (1 + E) / (2 * I[0].values.length)]) : o.range(k || [0, q]), u.domain(C || d3.extent(W.map(function (e) {
          return e.y;
        }).concat(v))).range(L || [R, 0]), a.domain(A || d3.extent(W.map(function (e) {
          return e.size;
        }).concat(m))).range(O || [16, 256]);
        if (o.domain()[0] === o.domain()[1] || u.domain()[0] === u.domain()[1]) M = !0;
        o.domain()[0] === o.domain()[1] && (o.domain()[0] ? o.domain([o.domain()[0] - o.domain()[0] * .01, o.domain()[1] + o.domain()[1] * .01]) : o.domain([-1, 1])), u.domain()[0] === u.domain()[1] && (u.domain()[0] ? u.domain([u.domain()[0] - u.domain()[0] * .01, u.domain()[1] + u.domain()[1] * .01]) : u.domain([-1, 1])), isNaN(o.domain()[0]) && o.domain([-1, 1]), isNaN(u.domain()[0]) && u.domain([-1, 1]), P = P || o, H = H || u, B = B || a;
        var X = U.selectAll("g.nv-wrap.nv-scatter").data([I]),
            V = X.enter().append("g").attr("class", "nvd3 nv-wrap nv-scatter nv-chart-" + s + (M ? " nv-single-point" : "")),
            $ = V.append("defs"),
            J = V.append("g"),
            K = X.select("g");
        J.append("g").attr("class", "nv-groups"), J.append("g").attr("class", "nv-point-paths"), X.attr("transform", "translate(" + t.left + "," + t.top + ")"), $.append("clipPath").attr("id", "nv-edge-clip-" + s).append("rect"), X.select("#nv-edge-clip-" + s + " rect").attr("width", q).attr("height", R > 0 ? R : 0), K.attr("clip-path", S ? "url(#nv-edge-clip-" + s + ")" : ""), F = !0;
        var G = X.select(".nv-groups").selectAll(".nv-group").data(function (e) {
          return e;
        }, function (e) {
          return e.key;
        });
        G.enter().append("g").style("stroke-opacity", 1e-6).style("fill-opacity", 1e-6), G.exit().remove(), G.attr("class", function (e, t) {
          return "nv-group nv-series-" + t;
        }).classed("hover", function (e) {
          return e.hover;
        }), G.transition().style("fill", function (e, t) {
          return i(e, t);
        }).style("stroke", function (e, t) {
          return i(e, t);
        }).style("stroke-opacity", 1).style("fill-opacity", .5);

        if (p) {
          var Y = G.selectAll("circle.nv-point").data(function (e) {
            return e.values;
          }, y);
          Y.enter().append("circle").style("fill", function (e, t) {
            return e.color;
          }).style("stroke", function (e, t) {
            return e.color;
          }).attr("cx", function (t, n) {
            return e.utils.NaNtoZero(P(f(t, n)));
          }).attr("cy", function (t, n) {
            return e.utils.NaNtoZero(H(l(t, n)));
          }).attr("r", function (e, t) {
            return Math.sqrt(a(c(e, t)) / Math.PI);
          }), Y.exit().remove(), G.exit().selectAll("path.nv-point").transition().attr("cx", function (t, n) {
            return e.utils.NaNtoZero(o(f(t, n)));
          }).attr("cy", function (t, n) {
            return e.utils.NaNtoZero(u(l(t, n)));
          }).remove(), Y.each(function (e, t) {
            d3.select(this).classed("nv-point", !0).classed("nv-point-" + t, !0).classed("hover", !1);
          }), Y.transition().attr("cx", function (t, n) {
            return e.utils.NaNtoZero(o(f(t, n)));
          }).attr("cy", function (t, n) {
            return e.utils.NaNtoZero(u(l(t, n)));
          }).attr("r", function (e, t) {
            return Math.sqrt(a(c(e, t)) / Math.PI);
          });
        } else {
          var Y = G.selectAll("path.nv-point").data(function (e) {
            return e.values;
          });
          Y.enter().append("path").style("fill", function (e, t) {
            return e.color;
          }).style("stroke", function (e, t) {
            return e.color;
          }).attr("transform", function (e, t) {
            return "translate(" + P(f(e, t)) + "," + H(l(e, t)) + ")";
          }).attr("d", d3.svg.symbol().type(h).size(function (e, t) {
            return a(c(e, t));
          })), Y.exit().remove(), G.exit().selectAll("path.nv-point").transition().attr("transform", function (e, t) {
            return "translate(" + o(f(e, t)) + "," + u(l(e, t)) + ")";
          }).remove(), Y.each(function (e, t) {
            d3.select(this).classed("nv-point", !0).classed("nv-point-" + t, !0).classed("hover", !1);
          }), Y.transition().attr("transform", function (e, t) {
            return "translate(" + o(f(e, t)) + "," + u(l(e, t)) + ")";
          }).attr("d", d3.svg.symbol().type(h).size(function (e, t) {
            return a(c(e, t));
          }));
        }

        clearTimeout(j), j = setTimeout(Q, 300), P = o.copy(), H = u.copy(), B = a.copy();
      }), I;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = 960,
        r = 500,
        i = e.utils.defaultColor(),
        s = Math.floor(Math.random() * 1e5),
        o = d3.scale.linear(),
        u = d3.scale.linear(),
        a = d3.scale.linear(),
        f = function f(e) {
      return e.x;
    },
        l = function l(e) {
      return e.y;
    },
        c = function c(e) {
      return e.size || 1;
    },
        h = function h(e) {
      return e.shape || "circle";
    },
        p = !0,
        d = [],
        v = [],
        m = [],
        g = !0,
        y = null,
        b = function b(e) {
      return !e.notActive;
    },
        w = !1,
        E = .1,
        S = !1,
        x = !0,
        T = function T() {
      return 25;
    },
        N = null,
        C = null,
        k = null,
        L = null,
        A = null,
        O = null,
        M = !1,
        _ = d3.dispatch("elementClick", "elementMouseover", "elementMouseout"),
        D = !0,
        P,
        H,
        B,
        j,
        F = !1;

    return I.clearHighlights = function () {
      d3.selectAll(".nv-chart-" + s + " .nv-point.hover").classed("hover", !1);
    }, I.highlightPoint = function (e, t, n) {
      d3.select(".nv-chart-" + s + " .nv-series-" + e + " .nv-point-" + t).classed("hover", n);
    }, _.on("elementMouseover.point", function (e) {
      g && I.highlightPoint(e.seriesIndex, e.pointIndex, !0);
    }), _.on("elementMouseout.point", function (e) {
      g && I.highlightPoint(e.seriesIndex, e.pointIndex, !1);
    }), I.dispatch = _, I.options = e.utils.optionsFunc.bind(I), I.x = function (e) {
      return arguments.length ? (f = d3.functor(e), I) : f;
    }, I.y = function (e) {
      return arguments.length ? (l = d3.functor(e), I) : l;
    }, I.size = function (e) {
      return arguments.length ? (c = d3.functor(e), I) : c;
    }, I.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, I) : t;
    }, I.width = function (e) {
      return arguments.length ? (n = e, I) : n;
    }, I.height = function (e) {
      return arguments.length ? (r = e, I) : r;
    }, I.xScale = function (e) {
      return arguments.length ? (o = e, I) : o;
    }, I.yScale = function (e) {
      return arguments.length ? (u = e, I) : u;
    }, I.zScale = function (e) {
      return arguments.length ? (a = e, I) : a;
    }, I.xDomain = function (e) {
      return arguments.length ? (N = e, I) : N;
    }, I.yDomain = function (e) {
      return arguments.length ? (C = e, I) : C;
    }, I.sizeDomain = function (e) {
      return arguments.length ? (A = e, I) : A;
    }, I.xRange = function (e) {
      return arguments.length ? (k = e, I) : k;
    }, I.yRange = function (e) {
      return arguments.length ? (L = e, I) : L;
    }, I.sizeRange = function (e) {
      return arguments.length ? (O = e, I) : O;
    }, I.forceX = function (e) {
      return arguments.length ? (d = e, I) : d;
    }, I.forceY = function (e) {
      return arguments.length ? (v = e, I) : v;
    }, I.forceSize = function (e) {
      return arguments.length ? (m = e, I) : m;
    }, I.interactive = function (e) {
      return arguments.length ? (g = e, I) : g;
    }, I.pointKey = function (e) {
      return arguments.length ? (y = e, I) : y;
    }, I.pointActive = function (e) {
      return arguments.length ? (b = e, I) : b;
    }, I.padData = function (e) {
      return arguments.length ? (w = e, I) : w;
    }, I.padDataOuter = function (e) {
      return arguments.length ? (E = e, I) : E;
    }, I.clipEdge = function (e) {
      return arguments.length ? (S = e, I) : S;
    }, I.clipVoronoi = function (e) {
      return arguments.length ? (x = e, I) : x;
    }, I.useVoronoi = function (e) {
      return arguments.length ? (D = e, D === !1 && (x = !1), I) : D;
    }, I.clipRadius = function (e) {
      return arguments.length ? (T = e, I) : T;
    }, I.color = function (t) {
      return arguments.length ? (i = e.utils.getColor(t), I) : i;
    }, I.shape = function (e) {
      return arguments.length ? (h = e, I) : h;
    }, I.onlyCircles = function (e) {
      return arguments.length ? (p = e, I) : p;
    }, I.id = function (e) {
      return arguments.length ? (s = e, I) : s;
    }, I.singlePoint = function (e) {
      return arguments.length ? (M = e, I) : M;
    }, I;
  }, e.models.scatterChart = function () {
    "use strict";

    function F(e) {
      return e.each(function (e) {
        function K() {
          if (T) return X.select(".nv-point-paths").style("pointer-events", "all"), !1;
          X.select(".nv-point-paths").style("pointer-events", "none");
          var i = d3.mouse(this);
          h.distortion(x).focus(i[0]), p.distortion(x).focus(i[1]), X.select(".nv-scatterWrap").call(t), b && X.select(".nv-x.nv-axis").call(n), w && X.select(".nv-y.nv-axis").call(r), X.select(".nv-distributionX").datum(e.filter(function (e) {
            return !e.disabled;
          })).call(o), X.select(".nv-distributionY").datum(e.filter(function (e) {
            return !e.disabled;
          })).call(u);
        }

        var C = d3.select(this),
            k = this,
            L = (f || parseInt(C.style("width")) || 960) - a.left - a.right,
            I = (l || parseInt(C.style("height")) || 400) - a.top - a.bottom;
        F.update = function () {
          C.transition().duration(D).call(F);
        }, F.container = this, A.disabled = e.map(function (e) {
          return !!e.disabled;
        });

        if (!O) {
          var q;
          O = {};

          for (q in A) {
            A[q] instanceof Array ? O[q] = A[q].slice(0) : O[q] = A[q];
          }
        }

        if (!e || !e.length || !e.filter(function (e) {
          return e.values.length;
        }).length) {
          var R = C.selectAll(".nv-noData").data([_]);
          return R.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), R.attr("x", a.left + L / 2).attr("y", a.top + I / 2).text(function (e) {
            return e;
          }), F;
        }

        C.selectAll(".nv-noData").remove(), P = P || h, H = H || p;
        var U = C.selectAll("g.nv-wrap.nv-scatterChart").data([e]),
            z = U.enter().append("g").attr("class", "nvd3 nv-wrap nv-scatterChart nv-chart-" + t.id()),
            W = z.append("g"),
            X = U.select("g");
        W.append("rect").attr("class", "nvd3 nv-background"), W.append("g").attr("class", "nv-x nv-axis"), W.append("g").attr("class", "nv-y nv-axis"), W.append("g").attr("class", "nv-scatterWrap"), W.append("g").attr("class", "nv-distWrap"), W.append("g").attr("class", "nv-legendWrap"), W.append("g").attr("class", "nv-controlsWrap");

        if (y) {
          var V = S ? L / 2 : L;
          i.width(V), U.select(".nv-legendWrap").datum(e).call(i), a.top != i.height() && (a.top = i.height(), I = (l || parseInt(C.style("height")) || 400) - a.top - a.bottom), U.select(".nv-legendWrap").attr("transform", "translate(" + (L - V) + "," + -a.top + ")");
        }

        S && (s.width(180).color(["#444"]), X.select(".nv-controlsWrap").datum(j).attr("transform", "translate(0," + -a.top + ")").call(s)), U.attr("transform", "translate(" + a.left + "," + a.top + ")"), E && X.select(".nv-y.nv-axis").attr("transform", "translate(" + L + ",0)"), t.width(L).height(I).color(e.map(function (e, t) {
          return e.color || c(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled;
        })), d !== 0 && t.xDomain(null), v !== 0 && t.yDomain(null), U.select(".nv-scatterWrap").datum(e.filter(function (e) {
          return !e.disabled;
        })).call(t);

        if (d !== 0) {
          var $ = h.domain()[1] - h.domain()[0];
          t.xDomain([h.domain()[0] - d * $, h.domain()[1] + d * $]);
        }

        if (v !== 0) {
          var J = p.domain()[1] - p.domain()[0];
          t.yDomain([p.domain()[0] - v * J, p.domain()[1] + v * J]);
        }

        (v !== 0 || d !== 0) && U.select(".nv-scatterWrap").datum(e.filter(function (e) {
          return !e.disabled;
        })).call(t), b && (n.scale(h).ticks(n.ticks() && n.ticks().length ? n.ticks() : L / 100).tickSize(-I, 0), X.select(".nv-x.nv-axis").attr("transform", "translate(0," + p.range()[0] + ")").call(n)), w && (r.scale(p).ticks(r.ticks() && r.ticks().length ? r.ticks() : I / 36).tickSize(-L, 0), X.select(".nv-y.nv-axis").call(r)), m && (o.getData(t.x()).scale(h).width(L).color(e.map(function (e, t) {
          return e.color || c(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled;
        })), W.select(".nv-distWrap").append("g").attr("class", "nv-distributionX"), X.select(".nv-distributionX").attr("transform", "translate(0," + p.range()[0] + ")").datum(e.filter(function (e) {
          return !e.disabled;
        })).call(o)), g && (u.getData(t.y()).scale(p).width(I).color(e.map(function (e, t) {
          return e.color || c(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled;
        })), W.select(".nv-distWrap").append("g").attr("class", "nv-distributionY"), X.select(".nv-distributionY").attr("transform", "translate(" + (E ? L : -u.size()) + ",0)").datum(e.filter(function (e) {
          return !e.disabled;
        })).call(u)), d3.fisheye && (X.select(".nv-background").attr("width", L).attr("height", I), X.select(".nv-background").on("mousemove", K), X.select(".nv-background").on("click", function () {
          T = !T;
        }), t.dispatch.on("elementClick.freezeFisheye", function () {
          T = !T;
        })), s.dispatch.on("legendClick", function (e, i) {
          e.disabled = !e.disabled, x = e.disabled ? 0 : 2.5, X.select(".nv-background").style("pointer-events", e.disabled ? "none" : "all"), X.select(".nv-point-paths").style("pointer-events", e.disabled ? "all" : "none"), e.disabled ? (h.distortion(x).focus(0), p.distortion(x).focus(0), X.select(".nv-scatterWrap").call(t), X.select(".nv-x.nv-axis").call(n), X.select(".nv-y.nv-axis").call(r)) : T = !1, F.update();
        }), i.dispatch.on("stateChange", function (e) {
          A.disabled = e.disabled, M.stateChange(A), F.update();
        }), t.dispatch.on("elementMouseover.tooltip", function (e) {
          d3.select(".nv-chart-" + t.id() + " .nv-series-" + e.seriesIndex + " .nv-distx-" + e.pointIndex).attr("y1", function (t, n) {
            return e.pos[1] - I;
          }), d3.select(".nv-chart-" + t.id() + " .nv-series-" + e.seriesIndex + " .nv-disty-" + e.pointIndex).attr("x2", e.pos[0] + o.size()), e.pos = [e.pos[0] + a.left, e.pos[1] + a.top], M.tooltipShow(e);
        }), M.on("tooltipShow", function (e) {
          N && B(e, k.parentNode);
        }), M.on("changeState", function (t) {
          typeof t.disabled != "undefined" && (e.forEach(function (e, n) {
            e.disabled = t.disabled[n];
          }), A.disabled = t.disabled), F.update();
        }), P = h.copy(), H = p.copy();
      }), F;
    }

    var t = e.models.scatter(),
        n = e.models.axis(),
        r = e.models.axis(),
        i = e.models.legend(),
        s = e.models.legend(),
        o = e.models.distribution(),
        u = e.models.distribution(),
        a = {
      top: 30,
      right: 20,
      bottom: 50,
      left: 75
    },
        f = null,
        l = null,
        c = e.utils.defaultColor(),
        h = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : t.xScale(),
        p = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : t.yScale(),
        d = 0,
        v = 0,
        m = !1,
        g = !1,
        y = !0,
        b = !0,
        w = !0,
        E = !1,
        S = !!d3.fisheye,
        x = 0,
        T = !1,
        N = !0,
        C = function C(e, t, n) {
      return "<strong>" + t + "</strong>";
    },
        k = function k(e, t, n) {
      return "<strong>" + n + "</strong>";
    },
        L = null,
        A = {},
        O = null,
        M = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"),
        _ = "No Data Available.",
        D = 250;

    t.xScale(h).yScale(p), n.orient("bottom").tickPadding(10), r.orient(E ? "right" : "left").tickPadding(10), o.axis("x"), u.axis("y"), s.updateState(!1);

    var P,
        H,
        B = function B(i, s) {
      var o = i.pos[0] + (s.offsetLeft || 0),
          u = i.pos[1] + (s.offsetTop || 0),
          f = i.pos[0] + (s.offsetLeft || 0),
          l = p.range()[0] + a.top + (s.offsetTop || 0),
          c = h.range()[0] + a.left + (s.offsetLeft || 0),
          d = i.pos[1] + (s.offsetTop || 0),
          v = n.tickFormat()(t.x()(i.point, i.pointIndex)),
          m = r.tickFormat()(t.y()(i.point, i.pointIndex));
      C != null && e.tooltip.show([f, l], C(i.series.key, v, m, i, F), "n", 1, s, "x-nvtooltip"), k != null && e.tooltip.show([c, d], k(i.series.key, v, m, i, F), "e", 1, s, "y-nvtooltip"), L != null && e.tooltip.show([o, u], L(i.series.key, v, m, i, F), i.value < 0 ? "n" : "s", null, s);
    },
        j = [{
      key: "Magnify",
      disabled: !0
    }];

    return t.dispatch.on("elementMouseout.tooltip", function (e) {
      M.tooltipHide(e), d3.select(".nv-chart-" + t.id() + " .nv-series-" + e.seriesIndex + " .nv-distx-" + e.pointIndex).attr("y1", 0), d3.select(".nv-chart-" + t.id() + " .nv-series-" + e.seriesIndex + " .nv-disty-" + e.pointIndex).attr("x2", u.size());
    }), M.on("tooltipHide", function () {
      N && e.tooltip.cleanup();
    }), F.dispatch = M, F.scatter = t, F.legend = i, F.controls = s, F.xAxis = n, F.yAxis = r, F.distX = o, F.distY = u, d3.rebind(F, t, "id", "interactive", "pointActive", "x", "y", "shape", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "sizeRange", "forceX", "forceY", "forceSize", "clipVoronoi", "clipRadius", "useVoronoi"), F.options = e.utils.optionsFunc.bind(F), F.margin = function (e) {
      return arguments.length ? (a.top = typeof e.top != "undefined" ? e.top : a.top, a.right = typeof e.right != "undefined" ? e.right : a.right, a.bottom = typeof e.bottom != "undefined" ? e.bottom : a.bottom, a.left = typeof e.left != "undefined" ? e.left : a.left, F) : a;
    }, F.width = function (e) {
      return arguments.length ? (f = e, F) : f;
    }, F.height = function (e) {
      return arguments.length ? (l = e, F) : l;
    }, F.color = function (t) {
      return arguments.length ? (c = e.utils.getColor(t), i.color(c), o.color(c), u.color(c), F) : c;
    }, F.showDistX = function (e) {
      return arguments.length ? (m = e, F) : m;
    }, F.showDistY = function (e) {
      return arguments.length ? (g = e, F) : g;
    }, F.showControls = function (e) {
      return arguments.length ? (S = e, F) : S;
    }, F.showLegend = function (e) {
      return arguments.length ? (y = e, F) : y;
    }, F.showXAxis = function (e) {
      return arguments.length ? (b = e, F) : b;
    }, F.showYAxis = function (e) {
      return arguments.length ? (w = e, F) : w;
    }, F.rightAlignYAxis = function (e) {
      return arguments.length ? (E = e, r.orient(e ? "right" : "left"), F) : E;
    }, F.fisheye = function (e) {
      return arguments.length ? (x = e, F) : x;
    }, F.xPadding = function (e) {
      return arguments.length ? (d = e, F) : d;
    }, F.yPadding = function (e) {
      return arguments.length ? (v = e, F) : v;
    }, F.tooltips = function (e) {
      return arguments.length ? (N = e, F) : N;
    }, F.tooltipContent = function (e) {
      return arguments.length ? (L = e, F) : L;
    }, F.tooltipXContent = function (e) {
      return arguments.length ? (C = e, F) : C;
    }, F.tooltipYContent = function (e) {
      return arguments.length ? (k = e, F) : k;
    }, F.state = function (e) {
      return arguments.length ? (A = e, F) : A;
    }, F.defaultState = function (e) {
      return arguments.length ? (O = e, F) : O;
    }, F.noData = function (e) {
      return arguments.length ? (_ = e, F) : _;
    }, F.transitionDuration = function (e) {
      return arguments.length ? (D = e, F) : D;
    }, F;
  }, e.models.scatterPlusLineChart = function () {
    "use strict";

    function B(e) {
      return e.each(function (e) {
        function $() {
          if (S) return z.select(".nv-point-paths").style("pointer-events", "all"), !1;
          z.select(".nv-point-paths").style("pointer-events", "none");
          var i = d3.mouse(this);
          h.distortion(E).focus(i[0]), p.distortion(E).focus(i[1]), z.select(".nv-scatterWrap").datum(e.filter(function (e) {
            return !e.disabled;
          })).call(t), g && z.select(".nv-x.nv-axis").call(n), y && z.select(".nv-y.nv-axis").call(r), z.select(".nv-distributionX").datum(e.filter(function (e) {
            return !e.disabled;
          })).call(o), z.select(".nv-distributionY").datum(e.filter(function (e) {
            return !e.disabled;
          })).call(u);
        }

        var T = d3.select(this),
            N = this,
            C = (f || parseInt(T.style("width")) || 960) - a.left - a.right,
            j = (l || parseInt(T.style("height")) || 400) - a.top - a.bottom;
        B.update = function () {
          T.transition().duration(M).call(B);
        }, B.container = this, k.disabled = e.map(function (e) {
          return !!e.disabled;
        });

        if (!L) {
          var F;
          L = {};

          for (F in k) {
            k[F] instanceof Array ? L[F] = k[F].slice(0) : L[F] = k[F];
          }
        }

        if (!e || !e.length || !e.filter(function (e) {
          return e.values.length;
        }).length) {
          var I = T.selectAll(".nv-noData").data([O]);
          return I.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), I.attr("x", a.left + C / 2).attr("y", a.top + j / 2).text(function (e) {
            return e;
          }), B;
        }

        T.selectAll(".nv-noData").remove(), h = t.xScale(), p = t.yScale(), _ = _ || h, D = D || p;
        var q = T.selectAll("g.nv-wrap.nv-scatterChart").data([e]),
            R = q.enter().append("g").attr("class", "nvd3 nv-wrap nv-scatterChart nv-chart-" + t.id()),
            U = R.append("g"),
            z = q.select("g");
        U.append("rect").attr("class", "nvd3 nv-background").style("pointer-events", "none"), U.append("g").attr("class", "nv-x nv-axis"), U.append("g").attr("class", "nv-y nv-axis"), U.append("g").attr("class", "nv-scatterWrap"), U.append("g").attr("class", "nv-regressionLinesWrap"), U.append("g").attr("class", "nv-distWrap"), U.append("g").attr("class", "nv-legendWrap"), U.append("g").attr("class", "nv-controlsWrap"), q.attr("transform", "translate(" + a.left + "," + a.top + ")"), b && z.select(".nv-y.nv-axis").attr("transform", "translate(" + C + ",0)"), m && (i.width(C / 2), q.select(".nv-legendWrap").datum(e).call(i), a.top != i.height() && (a.top = i.height(), j = (l || parseInt(T.style("height")) || 400) - a.top - a.bottom), q.select(".nv-legendWrap").attr("transform", "translate(" + C / 2 + "," + -a.top + ")")), w && (s.width(180).color(["#444"]), z.select(".nv-controlsWrap").datum(H).attr("transform", "translate(0," + -a.top + ")").call(s)), t.width(C).height(j).color(e.map(function (e, t) {
          return e.color || c(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled;
        })), q.select(".nv-scatterWrap").datum(e.filter(function (e) {
          return !e.disabled;
        })).call(t), q.select(".nv-regressionLinesWrap").attr("clip-path", "url(#nv-edge-clip-" + t.id() + ")");
        var W = q.select(".nv-regressionLinesWrap").selectAll(".nv-regLines").data(function (e) {
          return e;
        });
        W.enter().append("g").attr("class", "nv-regLines");
        var X = W.selectAll(".nv-regLine").data(function (e) {
          return [e];
        }),
            V = X.enter().append("line").attr("class", "nv-regLine").style("stroke-opacity", 0);
        X.transition().attr("x1", h.range()[0]).attr("x2", h.range()[1]).attr("y1", function (e, t) {
          return p(h.domain()[0] * e.slope + e.intercept);
        }).attr("y2", function (e, t) {
          return p(h.domain()[1] * e.slope + e.intercept);
        }).style("stroke", function (e, t, n) {
          return c(e, n);
        }).style("stroke-opacity", function (e, t) {
          return e.disabled || typeof e.slope == "undefined" || typeof e.intercept == "undefined" ? 0 : 1;
        }), g && (n.scale(h).ticks(n.ticks() ? n.ticks() : C / 100).tickSize(-j, 0), z.select(".nv-x.nv-axis").attr("transform", "translate(0," + p.range()[0] + ")").call(n)), y && (r.scale(p).ticks(r.ticks() ? r.ticks() : j / 36).tickSize(-C, 0), z.select(".nv-y.nv-axis").call(r)), d && (o.getData(t.x()).scale(h).width(C).color(e.map(function (e, t) {
          return e.color || c(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled;
        })), U.select(".nv-distWrap").append("g").attr("class", "nv-distributionX"), z.select(".nv-distributionX").attr("transform", "translate(0," + p.range()[0] + ")").datum(e.filter(function (e) {
          return !e.disabled;
        })).call(o)), v && (u.getData(t.y()).scale(p).width(j).color(e.map(function (e, t) {
          return e.color || c(e, t);
        }).filter(function (t, n) {
          return !e[n].disabled;
        })), U.select(".nv-distWrap").append("g").attr("class", "nv-distributionY"), z.select(".nv-distributionY").attr("transform", "translate(" + (b ? C : -u.size()) + ",0)").datum(e.filter(function (e) {
          return !e.disabled;
        })).call(u)), d3.fisheye && (z.select(".nv-background").attr("width", C).attr("height", j), z.select(".nv-background").on("mousemove", $), z.select(".nv-background").on("click", function () {
          S = !S;
        }), t.dispatch.on("elementClick.freezeFisheye", function () {
          S = !S;
        })), s.dispatch.on("legendClick", function (e, i) {
          e.disabled = !e.disabled, E = e.disabled ? 0 : 2.5, z.select(".nv-background").style("pointer-events", e.disabled ? "none" : "all"), z.select(".nv-point-paths").style("pointer-events", e.disabled ? "all" : "none"), e.disabled ? (h.distortion(E).focus(0), p.distortion(E).focus(0), z.select(".nv-scatterWrap").call(t), z.select(".nv-x.nv-axis").call(n), z.select(".nv-y.nv-axis").call(r)) : S = !1, B.update();
        }), i.dispatch.on("stateChange", function (e) {
          k = e, A.stateChange(k), B.update();
        }), t.dispatch.on("elementMouseover.tooltip", function (e) {
          d3.select(".nv-chart-" + t.id() + " .nv-series-" + e.seriesIndex + " .nv-distx-" + e.pointIndex).attr("y1", e.pos[1] - j), d3.select(".nv-chart-" + t.id() + " .nv-series-" + e.seriesIndex + " .nv-disty-" + e.pointIndex).attr("x2", e.pos[0] + o.size()), e.pos = [e.pos[0] + a.left, e.pos[1] + a.top], A.tooltipShow(e);
        }), A.on("tooltipShow", function (e) {
          x && P(e, N.parentNode);
        }), A.on("changeState", function (t) {
          typeof t.disabled != "undefined" && (e.forEach(function (e, n) {
            e.disabled = t.disabled[n];
          }), k.disabled = t.disabled), B.update();
        }), _ = h.copy(), D = p.copy();
      }), B;
    }

    var t = e.models.scatter(),
        n = e.models.axis(),
        r = e.models.axis(),
        i = e.models.legend(),
        s = e.models.legend(),
        o = e.models.distribution(),
        u = e.models.distribution(),
        a = {
      top: 30,
      right: 20,
      bottom: 50,
      left: 75
    },
        f = null,
        l = null,
        c = e.utils.defaultColor(),
        h = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : t.xScale(),
        p = d3.fisheye ? d3.fisheye.scale(d3.scale.linear).distortion(0) : t.yScale(),
        d = !1,
        v = !1,
        m = !0,
        g = !0,
        y = !0,
        b = !1,
        w = !!d3.fisheye,
        E = 0,
        S = !1,
        x = !0,
        T = function T(e, t, n) {
      return "<strong>" + t + "</strong>";
    },
        N = function N(e, t, n) {
      return "<strong>" + n + "</strong>";
    },
        C = function C(e, t, n, r) {
      return "<h3>" + e + "</h3>" + "<p>" + r + "</p>";
    },
        k = {},
        L = null,
        A = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"),
        O = "No Data Available.",
        M = 250;

    t.xScale(h).yScale(p), n.orient("bottom").tickPadding(10), r.orient(b ? "right" : "left").tickPadding(10), o.axis("x"), u.axis("y"), s.updateState(!1);

    var _,
        D,
        P = function P(i, s) {
      var o = i.pos[0] + (s.offsetLeft || 0),
          u = i.pos[1] + (s.offsetTop || 0),
          f = i.pos[0] + (s.offsetLeft || 0),
          l = p.range()[0] + a.top + (s.offsetTop || 0),
          c = h.range()[0] + a.left + (s.offsetLeft || 0),
          d = i.pos[1] + (s.offsetTop || 0),
          v = n.tickFormat()(t.x()(i.point, i.pointIndex)),
          m = r.tickFormat()(t.y()(i.point, i.pointIndex));
      T != null && e.tooltip.show([f, l], T(i.series.key, v, m, i, B), "n", 1, s, "x-nvtooltip"), N != null && e.tooltip.show([c, d], N(i.series.key, v, m, i, B), "e", 1, s, "y-nvtooltip"), C != null && e.tooltip.show([o, u], C(i.series.key, v, m, i.point.tooltip, i, B), i.value < 0 ? "n" : "s", null, s);
    },
        H = [{
      key: "Magnify",
      disabled: !0
    }];

    return t.dispatch.on("elementMouseout.tooltip", function (e) {
      A.tooltipHide(e), d3.select(".nv-chart-" + t.id() + " .nv-series-" + e.seriesIndex + " .nv-distx-" + e.pointIndex).attr("y1", 0), d3.select(".nv-chart-" + t.id() + " .nv-series-" + e.seriesIndex + " .nv-disty-" + e.pointIndex).attr("x2", u.size());
    }), A.on("tooltipHide", function () {
      x && e.tooltip.cleanup();
    }), B.dispatch = A, B.scatter = t, B.legend = i, B.controls = s, B.xAxis = n, B.yAxis = r, B.distX = o, B.distY = u, d3.rebind(B, t, "id", "interactive", "pointActive", "x", "y", "shape", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "sizeRange", "forceX", "forceY", "forceSize", "clipVoronoi", "clipRadius", "useVoronoi"), B.options = e.utils.optionsFunc.bind(B), B.margin = function (e) {
      return arguments.length ? (a.top = typeof e.top != "undefined" ? e.top : a.top, a.right = typeof e.right != "undefined" ? e.right : a.right, a.bottom = typeof e.bottom != "undefined" ? e.bottom : a.bottom, a.left = typeof e.left != "undefined" ? e.left : a.left, B) : a;
    }, B.width = function (e) {
      return arguments.length ? (f = e, B) : f;
    }, B.height = function (e) {
      return arguments.length ? (l = e, B) : l;
    }, B.color = function (t) {
      return arguments.length ? (c = e.utils.getColor(t), i.color(c), o.color(c), u.color(c), B) : c;
    }, B.showDistX = function (e) {
      return arguments.length ? (d = e, B) : d;
    }, B.showDistY = function (e) {
      return arguments.length ? (v = e, B) : v;
    }, B.showControls = function (e) {
      return arguments.length ? (w = e, B) : w;
    }, B.showLegend = function (e) {
      return arguments.length ? (m = e, B) : m;
    }, B.showXAxis = function (e) {
      return arguments.length ? (g = e, B) : g;
    }, B.showYAxis = function (e) {
      return arguments.length ? (y = e, B) : y;
    }, B.rightAlignYAxis = function (e) {
      return arguments.length ? (b = e, r.orient(e ? "right" : "left"), B) : b;
    }, B.fisheye = function (e) {
      return arguments.length ? (E = e, B) : E;
    }, B.tooltips = function (e) {
      return arguments.length ? (x = e, B) : x;
    }, B.tooltipContent = function (e) {
      return arguments.length ? (C = e, B) : C;
    }, B.tooltipXContent = function (e) {
      return arguments.length ? (T = e, B) : T;
    }, B.tooltipYContent = function (e) {
      return arguments.length ? (N = e, B) : N;
    }, B.state = function (e) {
      return arguments.length ? (k = e, B) : k;
    }, B.defaultState = function (e) {
      return arguments.length ? (L = e, B) : L;
    }, B.noData = function (e) {
      return arguments.length ? (O = e, B) : O;
    }, B.transitionDuration = function (e) {
      return arguments.length ? (M = e, B) : M;
    }, B;
  }, e.models.sparkline = function () {
    "use strict";

    function d(e) {
      return e.each(function (e) {
        var i = n - t.left - t.right,
            d = r - t.top - t.bottom,
            v = d3.select(this);
        s.domain(l || d3.extent(e, u)).range(h || [0, i]), o.domain(c || d3.extent(e, a)).range(p || [d, 0]);
        var m = v.selectAll("g.nv-wrap.nv-sparkline").data([e]),
            g = m.enter().append("g").attr("class", "nvd3 nv-wrap nv-sparkline"),
            b = g.append("g"),
            w = m.select("g");
        m.attr("transform", "translate(" + t.left + "," + t.top + ")");
        var E = m.selectAll("path").data(function (e) {
          return [e];
        });
        E.enter().append("path"), E.exit().remove(), E.style("stroke", function (e, t) {
          return e.color || f(e, t);
        }).attr("d", d3.svg.line().x(function (e, t) {
          return s(u(e, t));
        }).y(function (e, t) {
          return o(a(e, t));
        }));
        var S = m.selectAll("circle.nv-point").data(function (e) {
          function n(t) {
            if (t != -1) {
              var n = e[t];
              return n.pointIndex = t, n;
            }

            return null;
          }

          var t = e.map(function (e, t) {
            return a(e, t);
          }),
              r = n(t.lastIndexOf(o.domain()[1])),
              i = n(t.indexOf(o.domain()[0])),
              s = n(t.length - 1);
          return [i, r, s].filter(function (e) {
            return e != null;
          });
        });
        S.enter().append("circle"), S.exit().remove(), S.attr("cx", function (e, t) {
          return s(u(e, e.pointIndex));
        }).attr("cy", function (e, t) {
          return o(a(e, e.pointIndex));
        }).attr("r", 2).attr("class", function (e, t) {
          return u(e, e.pointIndex) == s.domain()[1] ? "nv-point nv-currentValue" : a(e, e.pointIndex) == o.domain()[0] ? "nv-point nv-minValue" : "nv-point nv-maxValue";
        });
      }), d;
    }

    var t = {
      top: 2,
      right: 0,
      bottom: 2,
      left: 0
    },
        n = 400,
        r = 32,
        i = !0,
        s = d3.scale.linear(),
        o = d3.scale.linear(),
        u = function u(e) {
      return e.x;
    },
        a = function a(e) {
      return e.y;
    },
        f = e.utils.getColor(["#000"]),
        l,
        c,
        h,
        p;

    return d.options = e.utils.optionsFunc.bind(d), d.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, d) : t;
    }, d.width = function (e) {
      return arguments.length ? (n = e, d) : n;
    }, d.height = function (e) {
      return arguments.length ? (r = e, d) : r;
    }, d.x = function (e) {
      return arguments.length ? (u = d3.functor(e), d) : u;
    }, d.y = function (e) {
      return arguments.length ? (a = d3.functor(e), d) : a;
    }, d.xScale = function (e) {
      return arguments.length ? (s = e, d) : s;
    }, d.yScale = function (e) {
      return arguments.length ? (o = e, d) : o;
    }, d.xDomain = function (e) {
      return arguments.length ? (l = e, d) : l;
    }, d.yDomain = function (e) {
      return arguments.length ? (c = e, d) : c;
    }, d.xRange = function (e) {
      return arguments.length ? (h = e, d) : h;
    }, d.yRange = function (e) {
      return arguments.length ? (p = e, d) : p;
    }, d.animate = function (e) {
      return arguments.length ? (i = e, d) : i;
    }, d.color = function (t) {
      return arguments.length ? (f = e.utils.getColor(t), d) : f;
    }, d;
  }, e.models.sparklinePlus = function () {
    "use strict";

    function v(e) {
      return e.each(function (c) {
        function O() {
          if (a) return;
          var e = C.selectAll(".nv-hoverValue").data(u),
              r = e.enter().append("g").attr("class", "nv-hoverValue").style("stroke-opacity", 0).style("fill-opacity", 0);
          e.exit().transition().duration(250).style("stroke-opacity", 0).style("fill-opacity", 0).remove(), e.attr("transform", function (e) {
            return "translate(" + s(t.x()(c[e], e)) + ",0)";
          }).transition().duration(250).style("stroke-opacity", 1).style("fill-opacity", 1);
          if (!u.length) return;
          r.append("line").attr("x1", 0).attr("y1", -n.top).attr("x2", 0).attr("y2", b), r.append("text").attr("class", "nv-xValue").attr("x", -6).attr("y", -n.top).attr("text-anchor", "end").attr("dy", ".9em"), C.select(".nv-hoverValue .nv-xValue").text(f(t.x()(c[u[0]], u[0]))), r.append("text").attr("class", "nv-yValue").attr("x", 6).attr("y", -n.top).attr("text-anchor", "start").attr("dy", ".9em"), C.select(".nv-hoverValue .nv-yValue").text(l(t.y()(c[u[0]], u[0])));
        }

        function M() {
          function r(e, n) {
            var r = Math.abs(t.x()(e[0], 0) - n),
                i = 0;

            for (var s = 0; s < e.length; s++) {
              Math.abs(t.x()(e[s], s) - n) < r && (r = Math.abs(t.x()(e[s], s) - n), i = s);
            }

            return i;
          }

          if (a) return;
          var e = d3.mouse(this)[0] - n.left;
          u = [r(c, Math.round(s.invert(e)))], O();
        }

        var m = d3.select(this),
            g = (r || parseInt(m.style("width")) || 960) - n.left - n.right,
            b = (i || parseInt(m.style("height")) || 400) - n.top - n.bottom;
        v.update = function () {
          v(e);
        }, v.container = this;

        if (!c || !c.length) {
          var w = m.selectAll(".nv-noData").data([d]);
          return w.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), w.attr("x", n.left + g / 2).attr("y", n.top + b / 2).text(function (e) {
            return e;
          }), v;
        }

        m.selectAll(".nv-noData").remove();
        var E = t.y()(c[c.length - 1], c.length - 1);
        s = t.xScale(), o = t.yScale();
        var S = m.selectAll("g.nv-wrap.nv-sparklineplus").data([c]),
            T = S.enter().append("g").attr("class", "nvd3 nv-wrap nv-sparklineplus"),
            N = T.append("g"),
            C = S.select("g");
        N.append("g").attr("class", "nv-sparklineWrap"), N.append("g").attr("class", "nv-valueWrap"), N.append("g").attr("class", "nv-hoverArea"), S.attr("transform", "translate(" + n.left + "," + n.top + ")");
        var k = C.select(".nv-sparklineWrap");
        t.width(g).height(b), k.call(t);
        var L = C.select(".nv-valueWrap"),
            A = L.selectAll(".nv-currentValue").data([E]);
        A.enter().append("text").attr("class", "nv-currentValue").attr("dx", p ? -8 : 8).attr("dy", ".9em").style("text-anchor", p ? "end" : "start"), A.attr("x", g + (p ? n.right : 0)).attr("y", h ? function (e) {
          return o(e);
        } : 0).style("fill", t.color()(c[c.length - 1], c.length - 1)).text(l(E)), N.select(".nv-hoverArea").append("rect").on("mousemove", M).on("click", function () {
          a = !a;
        }).on("mouseout", function () {
          u = [], O();
        }), C.select(".nv-hoverArea rect").attr("transform", function (e) {
          return "translate(" + -n.left + "," + -n.top + ")";
        }).attr("width", g + n.left + n.right).attr("height", b + n.top);
      }), v;
    }

    var t = e.models.sparkline(),
        n = {
      top: 15,
      right: 100,
      bottom: 10,
      left: 50
    },
        r = null,
        i = null,
        s,
        o,
        u = [],
        a = !1,
        f = d3.format(",r"),
        l = d3.format(",.2f"),
        c = !0,
        h = !0,
        p = !1,
        d = "No Data Available.";
    return v.sparkline = t, d3.rebind(v, t, "x", "y", "xScale", "yScale", "color"), v.options = e.utils.optionsFunc.bind(v), v.margin = function (e) {
      return arguments.length ? (n.top = typeof e.top != "undefined" ? e.top : n.top, n.right = typeof e.right != "undefined" ? e.right : n.right, n.bottom = typeof e.bottom != "undefined" ? e.bottom : n.bottom, n.left = typeof e.left != "undefined" ? e.left : n.left, v) : n;
    }, v.width = function (e) {
      return arguments.length ? (r = e, v) : r;
    }, v.height = function (e) {
      return arguments.length ? (i = e, v) : i;
    }, v.xTickFormat = function (e) {
      return arguments.length ? (f = e, v) : f;
    }, v.yTickFormat = function (e) {
      return arguments.length ? (l = e, v) : l;
    }, v.showValue = function (e) {
      return arguments.length ? (c = e, v) : c;
    }, v.alignValue = function (e) {
      return arguments.length ? (h = e, v) : h;
    }, v.rightAlignValue = function (e) {
      return arguments.length ? (p = e, v) : p;
    }, v.noData = function (e) {
      return arguments.length ? (d = e, v) : d;
    }, v;
  }, e.models.stackedArea = function () {
    "use strict";

    function g(e) {
      return e.each(function (e) {
        var a = n - t.left - t.right,
            b = r - t.top - t.bottom,
            w = d3.select(this);
        p = v.xScale(), d = v.yScale();
        var E = e;
        e.forEach(function (e, t) {
          e.seriesIndex = t, e.values = e.values.map(function (e, n) {
            return e.index = n, e.seriesIndex = t, e;
          });
        });
        var S = e.filter(function (e) {
          return !e.disabled;
        });
        e = d3.layout.stack().order(l).offset(f).values(function (e) {
          return e.values;
        }).x(o).y(u).out(function (e, t, n) {
          var r = u(e) === 0 ? 0 : n;
          e.display = {
            y: r,
            y0: t
          };
        })(S);
        var T = w.selectAll("g.nv-wrap.nv-stackedarea").data([e]),
            N = T.enter().append("g").attr("class", "nvd3 nv-wrap nv-stackedarea"),
            C = N.append("defs"),
            k = N.append("g"),
            L = T.select("g");
        k.append("g").attr("class", "nv-areaWrap"), k.append("g").attr("class", "nv-scatterWrap"), T.attr("transform", "translate(" + t.left + "," + t.top + ")"), v.width(a).height(b).x(o).y(function (e) {
          return e.display.y + e.display.y0;
        }).forceY([0]).color(e.map(function (e, t) {
          return e.color || i(e, e.seriesIndex);
        }));
        var A = L.select(".nv-scatterWrap").datum(e);
        A.call(v), C.append("clipPath").attr("id", "nv-edge-clip-" + s).append("rect"), T.select("#nv-edge-clip-" + s + " rect").attr("width", a).attr("height", b), L.attr("clip-path", h ? "url(#nv-edge-clip-" + s + ")" : "");

        var O = d3.svg.area().x(function (e, t) {
          return p(o(e, t));
        }).y0(function (e) {
          return d(e.display.y0);
        }).y1(function (e) {
          return d(e.display.y + e.display.y0);
        }).interpolate(c),
            M = d3.svg.area().x(function (e, t) {
          return p(o(e, t));
        }).y0(function (e) {
          return d(e.display.y0);
        }).y1(function (e) {
          return d(e.display.y0);
        }),
            _ = L.select(".nv-areaWrap").selectAll("path.nv-area").data(function (e) {
          return e;
        });

        _.enter().append("path").attr("class", function (e, t) {
          return "nv-area nv-area-" + t;
        }).attr("d", function (e, t) {
          return M(e.values, e.seriesIndex);
        }).on("mouseover", function (e, t) {
          d3.select(this).classed("hover", !0), m.areaMouseover({
            point: e,
            series: e.key,
            pos: [d3.event.pageX, d3.event.pageY],
            seriesIndex: e.seriesIndex
          });
        }).on("mouseout", function (e, t) {
          d3.select(this).classed("hover", !1), m.areaMouseout({
            point: e,
            series: e.key,
            pos: [d3.event.pageX, d3.event.pageY],
            seriesIndex: e.seriesIndex
          });
        }).on("click", function (e, t) {
          d3.select(this).classed("hover", !1), m.areaClick({
            point: e,
            series: e.key,
            pos: [d3.event.pageX, d3.event.pageY],
            seriesIndex: e.seriesIndex
          });
        }), _.exit().remove(), _.style("fill", function (e, t) {
          return e.color || i(e, e.seriesIndex);
        }).style("stroke", function (e, t) {
          return e.color || i(e, e.seriesIndex);
        }), _.transition().attr("d", function (e, t) {
          return O(e.values, t);
        }), v.dispatch.on("elementMouseover.area", function (e) {
          L.select(".nv-chart-" + s + " .nv-area-" + e.seriesIndex).classed("hover", !0);
        }), v.dispatch.on("elementMouseout.area", function (e) {
          L.select(".nv-chart-" + s + " .nv-area-" + e.seriesIndex).classed("hover", !1);
        }), g.d3_stackedOffset_stackPercent = function (e) {
          var t = e.length,
              n = e[0].length,
              r = 1 / t,
              i,
              s,
              o,
              a = [];

          for (s = 0; s < n; ++s) {
            for (i = 0, o = 0; i < E.length; i++) {
              o += u(E[i].values[s]);
            }

            if (o) for (i = 0; i < t; i++) {
              e[i][s][1] /= o;
            } else for (i = 0; i < t; i++) {
              e[i][s][1] = r;
            }
          }

          for (s = 0; s < n; ++s) {
            a[s] = 0;
          }

          return a;
        };
      }), g;
    }

    var t = {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    },
        n = 960,
        r = 500,
        i = e.utils.defaultColor(),
        s = Math.floor(Math.random() * 1e5),
        o = function o(e) {
      return e.x;
    },
        u = function u(e) {
      return e.y;
    },
        a = "stack",
        f = "zero",
        l = "default",
        c = "linear",
        h = !1,
        p,
        d,
        v = e.models.scatter(),
        m = d3.dispatch("tooltipShow", "tooltipHide", "areaClick", "areaMouseover", "areaMouseout");

    return v.size(2.2).sizeDomain([2.2, 2.2]), v.dispatch.on("elementClick.area", function (e) {
      m.areaClick(e);
    }), v.dispatch.on("elementMouseover.tooltip", function (e) {
      e.pos = [e.pos[0] + t.left, e.pos[1] + t.top], m.tooltipShow(e);
    }), v.dispatch.on("elementMouseout.tooltip", function (e) {
      m.tooltipHide(e);
    }), g.dispatch = m, g.scatter = v, d3.rebind(g, v, "interactive", "size", "xScale", "yScale", "zScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "forceX", "forceY", "forceSize", "clipVoronoi", "useVoronoi", "clipRadius", "highlightPoint", "clearHighlights"), g.options = e.utils.optionsFunc.bind(g), g.x = function (e) {
      return arguments.length ? (o = d3.functor(e), g) : o;
    }, g.y = function (e) {
      return arguments.length ? (u = d3.functor(e), g) : u;
    }, g.margin = function (e) {
      return arguments.length ? (t.top = typeof e.top != "undefined" ? e.top : t.top, t.right = typeof e.right != "undefined" ? e.right : t.right, t.bottom = typeof e.bottom != "undefined" ? e.bottom : t.bottom, t.left = typeof e.left != "undefined" ? e.left : t.left, g) : t;
    }, g.width = function (e) {
      return arguments.length ? (n = e, g) : n;
    }, g.height = function (e) {
      return arguments.length ? (r = e, g) : r;
    }, g.clipEdge = function (e) {
      return arguments.length ? (h = e, g) : h;
    }, g.color = function (t) {
      return arguments.length ? (i = e.utils.getColor(t), g) : i;
    }, g.offset = function (e) {
      return arguments.length ? (f = e, g) : f;
    }, g.order = function (e) {
      return arguments.length ? (l = e, g) : l;
    }, g.style = function (e) {
      if (!arguments.length) return a;
      a = e;

      switch (a) {
        case "stack":
          g.offset("zero"), g.order("default");
          break;

        case "stream":
          g.offset("wiggle"), g.order("inside-out");
          break;

        case "stream-center":
          g.offset("silhouette"), g.order("inside-out");
          break;

        case "expand":
          g.offset("expand"), g.order("default");
          break;

        case "stack_percent":
          g.offset(g.d3_stackedOffset_stackPercent), g.order("default");
      }

      return g;
    }, g.interpolate = function (e) {
      return arguments.length ? (c = e, g) : c;
    }, g;
  }, e.models.stackedAreaChart = function () {
    "use strict";

    function M(y) {
      return y.each(function (y) {
        var _ = d3.select(this),
            D = this,
            P = (a || parseInt(_.style("width")) || 960) - u.left - u.right,
            H = (f || parseInt(_.style("height")) || 400) - u.top - u.bottom;

        M.update = function () {
          _.transition().duration(A).call(M);
        }, M.container = this, S.disabled = y.map(function (e) {
          return !!e.disabled;
        });

        if (!x) {
          var B;
          x = {};

          for (B in S) {
            S[B] instanceof Array ? x[B] = S[B].slice(0) : x[B] = S[B];
          }
        }

        if (!y || !y.length || !y.filter(function (e) {
          return e.values.length;
        }).length) {
          var j = _.selectAll(".nv-noData").data([T]);

          return j.enter().append("text").attr("class", "nvd3 nv-noData").attr("dy", "-.7em").style("text-anchor", "middle"), j.attr("x", u.left + P / 2).attr("y", u.top + H / 2).text(function (e) {
            return e;
          }), M;
        }

        _.selectAll(".nv-noData").remove(), b = t.xScale(), w = t.yScale();

        var F = _.selectAll("g.nv-wrap.nv-stackedAreaChart").data([y]),
            I = F.enter().append("g").attr("class", "nvd3 nv-wrap nv-stackedAreaChart").append("g"),
            q = F.select("g");

        I.append("rect").style("opacity", 0), I.append("g").attr("class", "nv-x nv-axis"), I.append("g").attr("class", "nv-y nv-axis"), I.append("g").attr("class", "nv-stackedWrap"), I.append("g").attr("class", "nv-legendWrap"), I.append("g").attr("class", "nv-controlsWrap"), I.append("g").attr("class", "nv-interactive"), q.select("rect").attr("width", P).attr("height", H);

        if (h) {
          var R = c ? P - C : P;
          i.width(R), q.select(".nv-legendWrap").datum(y).call(i), u.top != i.height() && (u.top = i.height(), H = (f || parseInt(_.style("height")) || 400) - u.top - u.bottom), q.select(".nv-legendWrap").attr("transform", "translate(" + (P - R) + "," + -u.top + ")");
        }

        if (c) {
          var U = [{
            key: L.stacked || "Stacked",
            metaKey: "Stacked",
            disabled: t.style() != "stack",
            style: "stack"
          }, {
            key: L.stream || "Stream",
            metaKey: "Stream",
            disabled: t.style() != "stream",
            style: "stream"
          }, {
            key: L.expanded || "Expanded",
            metaKey: "Expanded",
            disabled: t.style() != "expand",
            style: "expand"
          }, {
            key: L.stack_percent || "Stack %",
            metaKey: "Stack_Percent",
            disabled: t.style() != "stack_percent",
            style: "stack_percent"
          }];
          C = k.length / 3 * 260, U = U.filter(function (e) {
            return k.indexOf(e.metaKey) !== -1;
          }), s.width(C).color(["#444", "#444", "#444"]), q.select(".nv-controlsWrap").datum(U).call(s), u.top != Math.max(s.height(), i.height()) && (u.top = Math.max(s.height(), i.height()), H = (f || parseInt(_.style("height")) || 400) - u.top - u.bottom), q.select(".nv-controlsWrap").attr("transform", "translate(0," + -u.top + ")");
        }

        F.attr("transform", "translate(" + u.left + "," + u.top + ")"), v && q.select(".nv-y.nv-axis").attr("transform", "translate(" + P + ",0)"), m && (o.width(P).height(H).margin({
          left: u.left,
          top: u.top
        }).svgContainer(_).xScale(b), F.select(".nv-interactive").call(o)), t.width(P).height(H);
        var z = q.select(".nv-stackedWrap").datum(y);
        z.transition().call(t), p && (n.scale(b).ticks(P / 100).tickSize(-H, 0), q.select(".nv-x.nv-axis").attr("transform", "translate(0," + H + ")"), q.select(".nv-x.nv-axis").transition().duration(0).call(n)), d && (r.scale(w).ticks(t.offset() == "wiggle" ? 0 : H / 36).tickSize(-P, 0).setTickFormat(t.style() == "expand" || t.style() == "stack_percent" ? d3.format("%") : E), q.select(".nv-y.nv-axis").transition().duration(0).call(r)), t.dispatch.on("areaClick.toggle", function (e) {
          y.filter(function (e) {
            return !e.disabled;
          }).length === 1 ? y.forEach(function (e) {
            e.disabled = !1;
          }) : y.forEach(function (t, n) {
            t.disabled = n != e.seriesIndex;
          }), S.disabled = y.map(function (e) {
            return !!e.disabled;
          }), N.stateChange(S), M.update();
        }), i.dispatch.on("stateChange", function (e) {
          S.disabled = e.disabled, N.stateChange(S), M.update();
        }), s.dispatch.on("legendClick", function (e, n) {
          if (!e.disabled) return;
          U = U.map(function (e) {
            return e.disabled = !0, e;
          }), e.disabled = !1, t.style(e.style), S.style = t.style(), N.stateChange(S), M.update();
        }), o.dispatch.on("elementMousemove", function (i) {
          t.clearHighlights();
          var s,
              a,
              f,
              c = [];
          y.filter(function (e, t) {
            return e.seriesIndex = t, !e.disabled;
          }).forEach(function (n, r) {
            a = e.interactiveBisect(n.values, i.pointXValue, M.x()), t.highlightPoint(r, a, !0);
            var o = n.values[a];
            if (typeof o == "undefined") return;
            typeof s == "undefined" && (s = o), typeof f == "undefined" && (f = M.xScale()(M.x()(o, a)));
            var u = t.style() == "expand" ? o.display.y : M.y()(o, a);
            c.push({
              key: n.key,
              value: u,
              color: l(n, n.seriesIndex),
              stackedValue: o.display
            });
          }), c.reverse();

          if (c.length > 2) {
            var h = M.yScale().invert(i.mouseY),
                p = Infinity,
                d = null;
            c.forEach(function (e, t) {
              h = Math.abs(h);
              var n = Math.abs(e.stackedValue.y0),
                  r = Math.abs(e.stackedValue.y);

              if (h >= n && h <= r + n) {
                d = t;
                return;
              }
            }), d != null && (c[d].highlight = !0);
          }

          var v = n.tickFormat()(M.x()(s, a)),
              m = t.style() == "expand" ? function (e, t) {
            return d3.format(".1%")(e);
          } : function (e, t) {
            return r.tickFormat()(e);
          };
          o.tooltip.position({
            left: f + u.left,
            top: i.mouseY + u.top
          }).chartContainer(D.parentNode).enabled(g).valueFormatter(m).data({
            value: v,
            series: c
          })(), o.renderGuideLine(f);
        }), o.dispatch.on("elementMouseout", function (e) {
          N.tooltipHide(), t.clearHighlights();
        }), N.on("tooltipShow", function (e) {
          g && O(e, D.parentNode);
        }), N.on("changeState", function (e) {
          typeof e.disabled != "undefined" && y.length === e.disabled.length && (y.forEach(function (t, n) {
            t.disabled = e.disabled[n];
          }), S.disabled = e.disabled), typeof e.style != "undefined" && t.style(e.style), M.update();
        });
      }), M;
    }

    var t = e.models.stackedArea(),
        n = e.models.axis(),
        r = e.models.axis(),
        i = e.models.legend(),
        s = e.models.legend(),
        o = e.interactiveGuideline(),
        u = {
      top: 30,
      right: 25,
      bottom: 50,
      left: 60
    },
        a = null,
        f = null,
        l = e.utils.defaultColor(),
        c = !0,
        h = !0,
        p = !0,
        d = !0,
        v = !1,
        m = !1,
        g = !0,
        y = function y(e, t, n, r, i) {
      return "<h3>" + e + "</h3>" + "<p>" + n + " on " + t + "</p>";
    },
        b,
        w,
        E = d3.format(",.2f"),
        S = {
      style: t.style()
    },
        x = null,
        T = "No Data Available.",
        N = d3.dispatch("tooltipShow", "tooltipHide", "stateChange", "changeState"),
        C = 250,
        k = ["Stacked", "Stream", "Expanded"],
        L = {},
        A = 250;

    n.orient("bottom").tickPadding(7), r.orient(v ? "right" : "left"), s.updateState(!1);

    var O = function O(i, s) {
      var o = i.pos[0] + (s.offsetLeft || 0),
          u = i.pos[1] + (s.offsetTop || 0),
          a = n.tickFormat()(t.x()(i.point, i.pointIndex)),
          f = r.tickFormat()(t.y()(i.point, i.pointIndex)),
          l = y(i.series.key, a, f, i, M);
      e.tooltip.show([o, u], l, i.value < 0 ? "n" : "s", null, s);
    };

    return t.dispatch.on("tooltipShow", function (e) {
      e.pos = [e.pos[0] + u.left, e.pos[1] + u.top], N.tooltipShow(e);
    }), t.dispatch.on("tooltipHide", function (e) {
      N.tooltipHide(e);
    }), N.on("tooltipHide", function () {
      g && e.tooltip.cleanup();
    }), M.dispatch = N, M.stacked = t, M.legend = i, M.controls = s, M.xAxis = n, M.yAxis = r, M.interactiveLayer = o, d3.rebind(M, t, "x", "y", "size", "xScale", "yScale", "xDomain", "yDomain", "xRange", "yRange", "sizeDomain", "interactive", "useVoronoi", "offset", "order", "style", "clipEdge", "forceX", "forceY", "forceSize", "interpolate"), M.options = e.utils.optionsFunc.bind(M), M.margin = function (e) {
      return arguments.length ? (u.top = typeof e.top != "undefined" ? e.top : u.top, u.right = typeof e.right != "undefined" ? e.right : u.right, u.bottom = typeof e.bottom != "undefined" ? e.bottom : u.bottom, u.left = typeof e.left != "undefined" ? e.left : u.left, M) : u;
    }, M.width = function (e) {
      return arguments.length ? (a = e, M) : a;
    }, M.height = function (e) {
      return arguments.length ? (f = e, M) : f;
    }, M.color = function (n) {
      return arguments.length ? (l = e.utils.getColor(n), i.color(l), t.color(l), M) : l;
    }, M.showControls = function (e) {
      return arguments.length ? (c = e, M) : c;
    }, M.showLegend = function (e) {
      return arguments.length ? (h = e, M) : h;
    }, M.showXAxis = function (e) {
      return arguments.length ? (p = e, M) : p;
    }, M.showYAxis = function (e) {
      return arguments.length ? (d = e, M) : d;
    }, M.rightAlignYAxis = function (e) {
      return arguments.length ? (v = e, r.orient(e ? "right" : "left"), M) : v;
    }, M.useInteractiveGuideline = function (e) {
      return arguments.length ? (m = e, e === !0 && (M.interactive(!1), M.useVoronoi(!1)), M) : m;
    }, M.tooltip = function (e) {
      return arguments.length ? (y = e, M) : y;
    }, M.tooltips = function (e) {
      return arguments.length ? (g = e, M) : g;
    }, M.tooltipContent = function (e) {
      return arguments.length ? (y = e, M) : y;
    }, M.state = function (e) {
      return arguments.length ? (S = e, M) : S;
    }, M.defaultState = function (e) {
      return arguments.length ? (x = e, M) : x;
    }, M.noData = function (e) {
      return arguments.length ? (T = e, M) : T;
    }, M.transitionDuration = function (e) {
      return arguments.length ? (A = e, M) : A;
    }, M.controlsData = function (e) {
      return arguments.length ? (k = e, M) : k;
    }, M.controlLabels = function (e) {
      return arguments.length ? _typeof(e) != "object" ? L : (L = e, M) : L;
    }, r.setTickFormat = r.tickFormat, r.tickFormat = function (e) {
      return arguments.length ? (E = e, r) : E;
    }, M;
  };
})();

/***/ }),

/***/ "./src/scripts/models.js":
/*!*******************************!*\
  !*** ./src/scripts/models.js ***!
  \*******************************/
/***/ ((module) => {

var url_string = window.location.href; //window.location.href

var url = new URL(url_string);
var title = url.searchParams.get("title");
var urn = url.searchParams.get("urn");
var models = [{
  label: title,
  urn: urn
}];
module.exports = {
  models: models
};

/***/ }),

/***/ "./node_modules/firebase/app/dist/index.esm.js":
/*!*****************************************************!*\
  !*** ./node_modules/firebase/app/dist/index.esm.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* reexport safe */ _firebase_app__WEBPACK_IMPORTED_MODULE_0__.default)
/* harmony export */ });
/* harmony import */ var _firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/app */ "./node_modules/@firebase/app/dist/index.esm.js");



var name = "firebase";
var version = "8.6.5";

/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
_firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.registerVersion(name, version, 'app');
_firebase_app__WEBPACK_IMPORTED_MODULE_0__.default.SDK_VERSION = version;
//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/firebase/firestore/dist/index.esm.js":
/*!***********************************************************!*\
  !*** ./node_modules/firebase/firestore/dist/index.esm.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _firebase_firestore__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @firebase/firestore */ "./node_modules/@firebase/firestore/dist/esm5/index.js");

//# sourceMappingURL=index.esm.js.map


/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/***/ (function(module, exports) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
( function( global, factory ) {

	"use strict";

	if (  true && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.6.0",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem && elem.namespaceURI,
		docElem = elem && ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						// Support: Chrome 86+
						// In Chrome, if an element having a focusout handler is blurred by
						// clicking outside of it, it invokes the handler synchronously. If
						// that handler calls `.remove()` on the element, the data is cleared,
						// leaving `result` undefined. We need to guard against this.
						return result && result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		// Suppress native focus or blur as it's already being fired
		// in leverageNative.
		_default: function() {
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is display: block
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
		__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ "./node_modules/tslib/tslib.es6.js":
/*!*****************************************!*\
  !*** ./node_modules/tslib/tslib.es6.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "__extends": () => (/* binding */ __extends),
/* harmony export */   "__assign": () => (/* binding */ __assign),
/* harmony export */   "__rest": () => (/* binding */ __rest),
/* harmony export */   "__decorate": () => (/* binding */ __decorate),
/* harmony export */   "__param": () => (/* binding */ __param),
/* harmony export */   "__metadata": () => (/* binding */ __metadata),
/* harmony export */   "__awaiter": () => (/* binding */ __awaiter),
/* harmony export */   "__generator": () => (/* binding */ __generator),
/* harmony export */   "__createBinding": () => (/* binding */ __createBinding),
/* harmony export */   "__exportStar": () => (/* binding */ __exportStar),
/* harmony export */   "__values": () => (/* binding */ __values),
/* harmony export */   "__read": () => (/* binding */ __read),
/* harmony export */   "__spread": () => (/* binding */ __spread),
/* harmony export */   "__spreadArrays": () => (/* binding */ __spreadArrays),
/* harmony export */   "__spreadArray": () => (/* binding */ __spreadArray),
/* harmony export */   "__await": () => (/* binding */ __await),
/* harmony export */   "__asyncGenerator": () => (/* binding */ __asyncGenerator),
/* harmony export */   "__asyncDelegator": () => (/* binding */ __asyncDelegator),
/* harmony export */   "__asyncValues": () => (/* binding */ __asyncValues),
/* harmony export */   "__makeTemplateObject": () => (/* binding */ __makeTemplateObject),
/* harmony export */   "__importStar": () => (/* binding */ __importStar),
/* harmony export */   "__importDefault": () => (/* binding */ __importDefault),
/* harmony export */   "__classPrivateFieldGet": () => (/* binding */ __classPrivateFieldGet),
/* harmony export */   "__classPrivateFieldSet": () => (/* binding */ __classPrivateFieldSet)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

var __createBinding = Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
});

function __exportStar(m, o) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
}

function __values(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

/** @deprecated */
function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

/** @deprecated */
function __spreadArrays() {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
}

function __spreadArray(to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

var __setModuleDefault = Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}

function __classPrivateFieldGet(receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
}

function __classPrivateFieldSet(receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
}


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!****************************!*\
  !*** ./src/scripts/app.js ***!
  \****************************/
//webpack imports
window.$ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");

__webpack_require__(/*! ./MyAuthToken.js */ "./src/scripts/MyAuthToken.js");

__webpack_require__(/*! ./libs/d3/d3.min.js */ "./src/scripts/libs/d3/d3.min.js");

__webpack_require__(/*! ./libs/d3pie/d3pie.min.js */ "./src/scripts/libs/d3pie/d3pie.min.js");

__webpack_require__(/*! ./libs/nvd3/nv.d3.min.js */ "./src/scripts/libs/nvd3/nv.d3.min.js");

__webpack_require__(/*! ./Report_PieChart.js */ "./src/scripts/Report_PieChart.js");

__webpack_require__(/*! ./firebaseData.js */ "./src/scripts/firebaseData.js");

__webpack_require__(/*! ./LoadModel.js */ "./src/scripts/LoadModel.js");

__webpack_require__(/*! ./ReportData.js */ "./src/scripts/ReportData.js");

__webpack_require__(/*! ./Report_BarChart.js */ "./src/scripts/Report_BarChart.js");

__webpack_require__(/*! ./Relationships.js */ "./src/scripts/Relationships.js");

__webpack_require__(/*! ./CameraPin.js */ "./src/scripts/CameraPin.js");

__webpack_require__(/*! ./PinData.js */ "./src/scripts/PinData.js");

__webpack_require__(/*! ./PinUI.js */ "./src/scripts/PinUI.js");

__webpack_require__(/*! ./AppSetup.js */ "./src/scripts/AppSetup.js");

__webpack_require__(/*! ./extensions.js */ "./src/scripts/extensions.js");

__webpack_require__(/*! ./dataClass.js */ "./src/scripts/dataClass.js");
})();

/******/ })()
;
//# sourceMappingURL=app.bundle.js.map